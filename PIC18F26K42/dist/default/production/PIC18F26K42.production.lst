

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 08 00:30:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=2
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=2
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=2
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=2
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=2
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=4,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=4,class=CODE,delta=1
   245                           	psect	text220,global,reloc=4,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=4,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   255                           	psect	text228,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   257  0000                     
   258                           ; Version 2.10
   259                           ; Generated 31/07/2019 GMT
   260                           ; 
   261                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   262                           ; All rights reserved.
   263                           ; 
   264                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   265                           ; 
   266                           ; Redistribution and use in source and binary forms, with or without modification, are
   267                           ; permitted provided that the following conditions are met:
   268                           ; 
   269                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   270                           ;        conditions and the following disclaimer.
   271                           ; 
   272                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   273                           ;        of conditions and the following disclaimer in the documentation and/or other
   274                           ;        materials provided with the distribution.
   275                           ; 
   276                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   277                           ;        software without specific prior written permission.
   278                           ; 
   279                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   280                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   281                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   282                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   283                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   284                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   285                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   286                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   287                           ; 
   288                           ; 
   289                           ; Code-generator required, PIC18F26K42 Definitions
   290                           ; 
   291                           ; SFR Addresses
   292  0000                     
   293                           	psect	idataBANK0
   294  0084EC                     __pidataBANK0:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for _RSSITarget
   298  0084EC  B0                 	db	176
   299                           
   300                           ;initializer for _currentNetID
   301  0084ED  55                 	db	85
   302                           
   303                           ;initializer for _currentAddr1
   304  0084EE  34                 	db	52
   305                           
   306                           ;initializer for _currentAddr0
   307  0084EF  12                 	db	18
   308                           
   309                           ;initializer for _ATTimeoutTimer
   310  0084F0  03E8               	dw	1000
   311                           
   312                           	psect	idataBANK1
   313  0083DA                     __pidataBANK1:
   314                           	opt callstack 0
   315                           
   316                           ;initializer for stoa@F1139
   317  0083DA  28                 	db	40
   318  0083DB  6E                 	db	110
   319  0083DC  75                 	db	117
   320  0083DD  6C                 	db	108
   321  0083DE  6C                 	db	108
   322  0083DF  29                 	db	41
   323  0083E0  00                 	db	0
   324                           
   325                           ;initializer for sendOKMessage@F16640
   326  0083E1  4F                 	db	79
   327  0083E2  4B                 	db	75
   328  0083E3  0D                 	db	13
   329  0083E4  0A                 	db	10
   330  0083E5  00                 	db	0
   331                           
   332                           ;initializer for _test_timer
   333  0083E6  1388               	dw	5000
   334                           
   335                           	psect	idataBANK2
   336  0084D0                     __pidataBANK2:
   337                           	opt callstack 0
   338                           
   339                           ;initializer for _syncList
   340  0084D0  12                 	db	18
   341  0084D1  23                 	db	35
   342  0084D2  45                 	db	69
   343  0084D3  56                 	db	86
   344  0084D4  67                 	db	103
   345  0084D5  78                 	db	120
   346  0084D6  89                 	db	137
   347  0084D7  9A                 	db	154
   348  0084D8  AB                 	db	171
   349  0084D9  BC                 	db	188
   350                           
   351                           	psect	mediumconst
   352  00FCC8                     __pmediumconst:
   353                           	opt callstack 0
   354  00FCC8  00                 	db	0
   355  00FCC9                     _fhssList:
   356                           	opt callstack 0
   357  00FCC9  7680               	dw	30336
   358  00FCCB  3600               	dw	13824
   359  00FCCD  FB00               	dw	64256
   360  00FCCF  361E               	dw	13854
   361  00FCD1  7F80               	dw	32640
   362  00FCD3  363D               	dw	13885
   363  00FCD5  0400               	dw	1024
   364  00FCD7  365C               	dw	13916
   365  00FCD9  8880               	dw	34944
   366  00FCDB  367A               	dw	13946
   367  00FCDD  0D00               	dw	3328
   368  00FCDF  3699               	dw	13977
   369  00FCE1  9180               	dw	37248
   370  00FCE3  36B7               	dw	14007
   371  00FCE5  1600               	dw	5632
   372  00FCE7  36D6               	dw	14038
   373  00FCE9  9A80               	dw	39552
   374  00FCEB  36F4               	dw	14068
   375  00FCED  1F00               	dw	7936
   376  00FCEF  3713               	dw	14099
   377  00FCF1  DCC0               	dw	56512
   378  00FCF3  3703               	dw	14083
   379  00FCF5  5840               	dw	22592
   380  00FCF7  36E5               	dw	14053
   381  00FCF9  D3C0               	dw	54208
   382  00FCFB  36C6               	dw	14022
   383  00FCFD  4F40               	dw	20288
   384  00FCFF  36A8               	dw	13992
   385  00FD01  CAC0               	dw	51904
   386  00FD03  3689               	dw	13961
   387  00FD05  4640               	dw	17984
   388  00FD07  366B               	dw	13931
   389  00FD09  C1C0               	dw	49600
   390  00FD0B  364C               	dw	13900
   391  00FD0D  3D40               	dw	15680
   392  00FD0F  362E               	dw	13870
   393  00FD11  B8C0               	dw	47296
   394  00FD13  360F               	dw	13839
   395  00FD15  3440               	dw	13376
   396  00FD17  35F1               	dw	13809
   397  00FD19  AFC0               	dw	44992
   398  00FD1B  35D2               	dw	13778
   399  00FD1D  D560               	dw	54624
   400  00FD1F  35F8               	dw	13816
   401  00FD21  59E0               	dw	23008
   402  00FD23  3617               	dw	13847
   403  00FD25  DE60               	dw	56928
   404  00FD27  3635               	dw	13877
   405  00FD29  6BE0               	dw	27616
   406  00FD2B  3691               	dw	13969
   407  00FD2D  F060               	dw	61536
   408  00FD2F  36AF               	dw	13999
   409  00FD31  74E0               	dw	29920
   410  00FD33  36CE               	dw	14030
   411  00FD35  F960               	dw	63840
   412  00FD37  36EC               	dw	14060
   413  00FD39  7DE0               	dw	32224
   414  00FD3B  370B               	dw	14091
   415  00FD3D  C020               	dw	49184
   416  00FD3F  371A               	dw	14106
   417  00FD41  4710               	dw	18192
   418  00FD43  3604               	dw	13828
   419  00FD45  6CB0               	dw	27824
   420  00FD47  362A               	dw	13866
   421  00FD49  5010               	dw	20496
   422  00FD4B  3641               	dw	13889
   423  00FD4D  75B0               	dw	30128
   424  00FD4F  3667               	dw	13927
   425  00FD51  5910               	dw	22800
   426  00FD53  367E               	dw	13950
   427  00FD55  7EB0               	dw	32432
   428  00FD57  36A4               	dw	13988
   429  00FD59  6210               	dw	25104
   430  00FD5B  36BB               	dw	14011
   431  00FD5D  87B0               	dw	34736
   432  00FD5F  36E1               	dw	14049
   433  00FD61  6B10               	dw	27408
   434  00FD63  36F8               	dw	14072
   435  00FD65  90B0               	dw	37040
   436  00FD67  371E               	dw	14110
   437  00FD69  AD50               	dw	44368
   438  00FD6B  3707               	dw	14087
   439  00FD6D  28D0               	dw	10448
   440  00FD6F  36E9               	dw	14057
   441  00FD71  A450               	dw	42064
   442  00FD73  36CA               	dw	14026
   443  00FD75  C0F0               	dw	49392
   444  00FD77  36B3               	dw	14003
   445  00FD79  9B50               	dw	39760
   446  00FD7B  368D               	dw	13965
   447  00FD7D  B7F0               	dw	47088
   448  00FD7F  3676               	dw	13942
   449  00FD81  9250               	dw	37456
   450  00FD83  3650               	dw	13904
   451  00FD85  AEF0               	dw	44784
   452  00FD87  3639               	dw	13881
   453  00FD89  8950               	dw	35152
   454  00FD8B  3613               	dw	13843
   455  00FD8D  A5F0               	dw	42480
   456  00FD8F  35FC               	dw	13820
   457  00FD91  50E0               	dw	20704
   458  00FD93  35DA               	dw	13786
   459  00FD95  04D0               	dw	1232
   460  00FD97  35F5               	dw	13813
   461  00FD99  2A70               	dw	10864
   462  00FD9B  361B               	dw	13851
   463  00FD9D  0DD0               	dw	3536
   464  00FD9F  3632               	dw	13874
   465  00FDA1  3C70               	dw	15472
   466  00FDA3  3695               	dw	13973
   467  00FDA5  1FD0               	dw	8144
   468  00FDA7  36AC               	dw	13996
   469  00FDA9  4570               	dw	17776
   470  00FDAB  36D2               	dw	14034
   471  00FDAD  28D0               	dw	10448
   472  00FDAF  36E9               	dw	14057
   473  00FDB1  4E70               	dw	20080
   474  00FDB3  370F               	dw	14095
   475  00FDB5  0E40               	dw	3648
   476  00FDB7  371B               	dw	14107
   477  00FDB9  A5F0               	dw	42480
   478  00FDBB  35FC               	dw	13820
   479  00FDBD  F130               	dw	61744
   480  00FDBF  3648               	dw	13896
   481  00FDC1  75B0               	dw	30128
   482  00FDC3  3667               	dw	13927
   483  00FDC5                     __end_of_fhssList:
   484                           	opt callstack 0
   485  00FDC5  03                 	db	3
   486  00FDC6  08                 	db	8
   487  00FDC7  1A                 	db	26
   488  00FDC8  40                 	db	64
   489  00FDC9  80                 	db	128
   490  00FDCA  BE                 	db	190
   491  00FDCB  E6                 	db	230
   492  00FDCC  F7                 	db	247
   493  00FDCD  FC                 	db	252
   494  00FDCE                     __end_ofNWK_LinearizeLqi@val:
   495                           	opt callstack 0
   496  00FDCE  82                 	db	130
   497  00FDCF  C0                 	db	192
   498  00FDD0  03                 	db	3
   499  00FDD1  03                 	db	3
   500  00FDD2  00                 	db	0
   501  00FDD3                     __end_of_spi1_configuration:
   502                           	opt callstack 0
   503  00FDD3  01                 	db	1
   504  00FDD4                     __end_of_FirmwareVersionMinor:
   505                           	opt callstack 0
   506  00FDD4  02                 	db	2
   507  00FDD5                     __end_of_FirmwareVersionMajor:
   508                           	opt callstack 0
   509  00FDD5  00                 	db	0
   510  00FDD6                     __end_of_ATVersionMinor:
   511                           	opt callstack 0
   512  00FDD6  01                 	db	1
   513  00FDD7                     __end_of_ATVersionMajor:
   514                           	opt callstack 0
   515  00FDD7                     STR_133:
   516                           
   517                           ; BSR set to: 0
   518  00FDD7  46                 	db	70	;'F'
   519  00FDD8  69                 	db	105	;'i'
   520  00FDD9  72                 	db	114	;'r'
   521  00FDDA  6D                 	db	109	;'m'
   522  00FDDB  77                 	db	119	;'w'
   523  00FDDC  61                 	db	97	;'a'
   524  00FDDD  72                 	db	114	;'r'
   525  00FDDE  65                 	db	101	;'e'
   526  00FDDF  20                 	db	32
   527  00FDE0  56                 	db	86	;'V'
   528  00FDE1  65                 	db	101	;'e'
   529  00FDE2  72                 	db	114	;'r'
   530  00FDE3  73                 	db	115	;'s'
   531  00FDE4  69                 	db	105	;'i'
   532  00FDE5  6F                 	db	111	;'o'
   533  00FDE6  6E                 	db	110	;'n'
   534  00FDE7  20                 	db	32
   535  00FDE8  25                 	db	37
   536  00FDE9  31                 	db	49	;'1'
   537  00FDEA  75                 	db	117	;'u'
   538  00FDEB  2E                 	db	46
   539  00FDEC  25                 	db	37
   540  00FDED  30                 	db	48	;'0'
   541  00FDEE  32                 	db	50	;'2'
   542  00FDEF  75                 	db	117	;'u'
   543  00FDF0  0D                 	db	13
   544  00FDF1  0A                 	db	10
   545  00FDF2  00                 	db	0
   546  00FDF3                     STR_132:
   547                           
   548                           ; BSR set to: 0
   549  00FDF3  41                 	db	65	;'A'
   550  00FDF4  54                 	db	84	;'T'
   551  00FDF5  20                 	db	32
   552  00FDF6  43                 	db	67	;'C'
   553  00FDF7  6F                 	db	111	;'o'
   554  00FDF8  6D                 	db	109	;'m'
   555  00FDF9  6D                 	db	109	;'m'
   556  00FDFA  61                 	db	97	;'a'
   557  00FDFB  6E                 	db	110	;'n'
   558  00FDFC  64                 	db	100	;'d'
   559  00FDFD  20                 	db	32
   560  00FDFE  53                 	db	83	;'S'
   561  00FDFF  65                 	db	101	;'e'
   562  00FE00  74                 	db	116	;'t'
   563  00FE01  20                 	db	32
   564  00FE02  25                 	db	37
   565  00FE03  31                 	db	49	;'1'
   566  00FE04  75                 	db	117	;'u'
   567  00FE05  2E                 	db	46
   568  00FE06  25                 	db	37
   569  00FE07  30                 	db	48	;'0'
   570  00FE08  32                 	db	50	;'2'
   571  00FE09  75                 	db	117	;'u'
   572  00FE0A  0D                 	db	13
   573  00FE0B  0A                 	db	10
   574  00FE0C  00                 	db	0
   575  00FE0D                     STR_29:
   576                           
   577                           ; BSR set to: 0
   578  00FE0D  43                 	db	67	;'C'
   579  00FE0E  41                 	db	65	;'A'
   580  00FE0F  44                 	db	68	;'D'
   581  00FE10  20                 	db	32
   582  00FE11  43                 	db	67	;'C'
   583  00FE12  4F                 	db	79	;'O'
   584  00FE13  55                 	db	85	;'U'
   585  00FE14  4E                 	db	78	;'N'
   586  00FE15  54                 	db	84	;'T'
   587  00FE16  45                 	db	69	;'E'
   588  00FE17  52                 	db	82	;'R'
   589  00FE18  20                 	db	32
   590  00FE19  3D                 	db	61	;'='
   591  00FE1A  20                 	db	32
   592  00FE1B  25                 	db	37
   593  00FE1C  30                 	db	48	;'0'
   594  00FE1D  32                 	db	50	;'2'
   595  00FE1E  58                 	db	88	;'X'
   596  00FE1F  0D                 	db	13
   597  00FE20  0A                 	db	10
   598  00FE21  00                 	db	0
   599  00FE22                     
   600                           ; BSR set to: 0
   601  00FE22  4D                 	db	77	;'M'
   602  00FE23  4F                 	db	79	;'O'
   603  00FE24  44                 	db	68	;'D'
   604  00FE25  45                 	db	69	;'E'
   605  00FE26  20                 	db	32
   606  00FE27  3D                 	db	61	;'='
   607  00FE28  20                 	db	32
   608  00FE29  45                 	db	69	;'E'
   609  00FE2A  4E                 	db	78	;'N'
   610  00FE2B  44                 	db	68	;'D'
   611  00FE2C  20                 	db	32
   612  00FE2D  4E                 	db	78	;'N'
   613  00FE2E  4F                 	db	79	;'O'
   614  00FE2F  44                 	db	68	;'D'
   615  00FE30  45                 	db	69	;'E'
   616  00FE31  0D                 	db	13
   617  00FE32  0A                 	db	10
   618  00FE33  00                 	db	0
   619  00FE34                     STR_31:
   620                           
   621                           ; BSR set to: 0
   622  00FE34  4D                 	db	77	;'M'
   623  00FE35  4F                 	db	79	;'O'
   624  00FE36  44                 	db	68	;'D'
   625  00FE37  45                 	db	69	;'E'
   626  00FE38  20                 	db	32
   627  00FE39  3D                 	db	61	;'='
   628  00FE3A  20                 	db	32
   629  00FE3B  52                 	db	82	;'R'
   630  00FE3C  45                 	db	69	;'E'
   631  00FE3D  50                 	db	80	;'P'
   632  00FE3E  45                 	db	69	;'E'
   633  00FE3F  41                 	db	65	;'A'
   634  00FE40  54                 	db	84	;'T'
   635  00FE41  45                 	db	69	;'E'
   636  00FE42  52                 	db	82	;'R'
   637  00FE43  0D                 	db	13
   638  00FE44  0A                 	db	10
   639  00FE45  00                 	db	0
   640  00FE46                     STR_11:
   641                           
   642                           ; BSR set to: 0
   643  00FE46  41                 	db	65	;'A'
   644  00FE47  44                 	db	68	;'D'
   645  00FE48  44                 	db	68	;'D'
   646  00FE49  52                 	db	82	;'R'
   647  00FE4A  3D                 	db	61	;'='
   648  00FE4B  25                 	db	37
   649  00FE4C  30                 	db	48	;'0'
   650  00FE4D  32                 	db	50	;'2'
   651  00FE4E  58                 	db	88	;'X'
   652  00FE4F  25                 	db	37
   653  00FE50  30                 	db	48	;'0'
   654  00FE51  32                 	db	50	;'2'
   655  00FE52  58                 	db	88	;'X'
   656  00FE53  0D                 	db	13
   657  00FE54  0A                 	db	10
   658  00FE55  00                 	db	0
   659  00FE56                     STR_88:
   660                           
   661                           ; BSR set to: 0
   662  00FE56  2B                 	db	43
   663  00FE57  43                 	db	67	;'C'
   664  00FE58  41                 	db	65	;'A'
   665  00FE59  44                 	db	68	;'D'
   666  00FE5A  43                 	db	67	;'C'
   667  00FE5B  4F                 	db	79	;'O'
   668  00FE5C  55                 	db	85	;'U'
   669  00FE5D  4E                 	db	78	;'N'
   670  00FE5E  54                 	db	84	;'T'
   671  00FE5F  45                 	db	69	;'E'
   672  00FE60  52                 	db	82	;'R'
   673  00FE61  52                 	db	82	;'R'
   674  00FE62  53                 	db	83	;'S'
   675  00FE63  54                 	db	84	;'T'
   676  00FE64  00                 	db	0
   677  00FE65                     STR_37:
   678                           
   679                           ; BSR set to: 0
   680  00FE65  54                 	db	84	;'T'
   681  00FE66  58                 	db	88	;'X'
   682  00FE67  20                 	db	32
   683  00FE68  50                 	db	80	;'P'
   684  00FE69  4F                 	db	79	;'O'
   685  00FE6A  57                 	db	87	;'W'
   686  00FE6B  45                 	db	69	;'E'
   687  00FE6C  52                 	db	82	;'R'
   688  00FE6D  3D                 	db	61	;'='
   689  00FE6E  25                 	db	37
   690  00FE6F  75                 	db	117	;'u'
   691  00FE70  0D                 	db	13
   692  00FE71  0A                 	db	10
   693  00FE72  00                 	db	0
   694  00FE73                     STR_15:
   695                           
   696                           ; BSR set to: 0
   697  00FE73  4E                 	db	78	;'N'
   698  00FE74  41                 	db	65	;'A'
   699  00FE75  44                 	db	68	;'D'
   700  00FE76  44                 	db	68	;'D'
   701  00FE77  52                 	db	82	;'R'
   702  00FE78  3D                 	db	61	;'='
   703  00FE79  25                 	db	37
   704  00FE7A  30                 	db	48	;'0'
   705  00FE7B  32                 	db	50	;'2'
   706  00FE7C  58                 	db	88	;'X'
   707  00FE7D  0D                 	db	13
   708  00FE7E  0A                 	db	10
   709  00FE7F  00                 	db	0
   710  00FE80                     STR_42:
   711                           
   712                           ; BSR set to: 0
   713  00FE80  43                 	db	67	;'C'
   714  00FE81  41                 	db	65	;'A'
   715  00FE82  44                 	db	68	;'D'
   716  00FE83  20                 	db	32
   717  00FE84  52                 	db	82	;'R'
   718  00FE85  53                 	db	83	;'S'
   719  00FE86  53                 	db	83	;'S'
   720  00FE87  3D                 	db	61	;'='
   721  00FE88  25                 	db	37
   722  00FE89  69                 	db	105	;'i'
   723  00FE8A  0D                 	db	13
   724  00FE8B  0A                 	db	10
   725  00FE8C  00                 	db	0
   726  00FE8D                     STR_1:
   727                           
   728                           ; BSR set to: 0
   729  00FE8D  52                 	db	82	;'R'
   730  00FE8E  58                 	db	88	;'X'
   731  00FE8F  3A                 	db	58	;':'
   732  00FE90  25                 	db	37
   733  00FE91  30                 	db	48	;'0'
   734  00FE92  34                 	db	52	;'4'
   735  00FE93  58                 	db	88	;'X'
   736  00FE94  3A                 	db	58	;':'
   737  00FE95  25                 	db	37
   738  00FE96  73                 	db	115	;'s'
   739  00FE97  0D                 	db	13
   740  00FE98  0A                 	db	10
   741  00FE99  00                 	db	0
   742  00FE9A                     STR_33:
   743                           
   744                           ; BSR set to: 0
   745  00FE9A  43                 	db	67	;'C'
   746  00FE9B  48                 	db	72	;'H'
   747  00FE9C  41                 	db	65	;'A'
   748  00FE9D  4E                 	db	78	;'N'
   749  00FE9E  4E                 	db	78	;'N'
   750  00FE9F  45                 	db	69	;'E'
   751  00FEA0  4C                 	db	76	;'L'
   752  00FEA1  3D                 	db	61	;'='
   753  00FEA2  25                 	db	37
   754  00FEA3  75                 	db	117	;'u'
   755  00FEA4  0D                 	db	13
   756  00FEA5  0A                 	db	10
   757  00FEA6  00                 	db	0
   758  00FEA7                     STR_86:
   759                           
   760                           ; BSR set to: 0
   761  00FEA7  2B                 	db	43
   762  00FEA8  43                 	db	67	;'C'
   763  00FEA9  41                 	db	65	;'A'
   764  00FEAA  44                 	db	68	;'D'
   765  00FEAB  43                 	db	67	;'C'
   766  00FEAC  4F                 	db	79	;'O'
   767  00FEAD  55                 	db	85	;'U'
   768  00FEAE  4E                 	db	78	;'N'
   769  00FEAF  54                 	db	84	;'T'
   770  00FEB0  45                 	db	69	;'E'
   771  00FEB1  52                 	db	82	;'R'
   772  00FEB2  3F                 	db	63	;'?'
   773  00FEB3  00                 	db	0
   774  00FEB4                     STR_60:
   775                           
   776                           ; BSR set to: 0
   777  00FEB4  48                 	db	72	;'H'
   778  00FEB5  6F                 	db	111	;'o'
   779  00FEB6  70                 	db	112	;'p'
   780  00FEB7  20                 	db	32
   781  00FEB8  74                 	db	116	;'t'
   782  00FEB9  61                 	db	97	;'a'
   783  00FEBA  62                 	db	98	;'b'
   784  00FEBB  6C                 	db	108	;'l'
   785  00FEBC  65                 	db	101	;'e'
   786  00FEBD  0D                 	db	13
   787  00FEBE  0A                 	db	10
   788  00FEBF  00                 	db	0
   789  00FEC0                     STR_131:
   790                           
   791                           ; BSR set to: 0
   792  00FEC0  4C                 	db	76	;'L'
   793  00FEC1  6F                 	db	111	;'o'
   794  00FEC2  52                 	db	82	;'R'
   795  00FEC3  61                 	db	97	;'a'
   796  00FEC4  20                 	db	32
   797  00FEC5  4D                 	db	77	;'M'
   798  00FEC6  65                 	db	101	;'e'
   799  00FEC7  73                 	db	115	;'s'
   800  00FEC8  68                 	db	104	;'h'
   801  00FEC9  0D                 	db	13
   802  00FECA  0A                 	db	10
   803  00FECB  00                 	db	0
   804  00FECC                     STR_4:
   805                           
   806                           ; BSR set to: 0
   807  00FECC  4E                 	db	78	;'N'
   808  00FECD  4F                 	db	79	;'O'
   809  00FECE  54                 	db	84	;'T'
   810  00FECF  20                 	db	32
   811  00FED0  4F                 	db	79	;'O'
   812  00FED1  4B                 	db	75	;'K'
   813  00FED2  3A                 	db	58	;':'
   814  00FED3  25                 	db	37
   815  00FED4  75                 	db	117	;'u'
   816  00FED5  0D                 	db	13
   817  00FED6  0A                 	db	10
   818  00FED7  00                 	db	0
   819  00FED8                     STR_72:
   820                           
   821                           ; BSR set to: 0
   822  00FED8  2B                 	db	43
   823  00FED9  53                 	db	83	;'S'
   824  00FEDA  48                 	db	72	;'H'
   825  00FEDB  4F                 	db	79	;'O'
   826  00FEDC  57                 	db	87	;'W'
   827  00FEDD  48                 	db	72	;'H'
   828  00FEDE  4F                 	db	79	;'O'
   829  00FEDF  50                 	db	80	;'P'
   830  00FEE0  53                 	db	83	;'S'
   831  00FEE1  3F                 	db	63	;'?'
   832  00FEE2  00                 	db	0
   833  00FEE3                     STR_92:
   834                           
   835                           ; BSR set to: 0
   836  00FEE3  2B                 	db	43
   837  00FEE4  43                 	db	67	;'C'
   838  00FEE5  41                 	db	65	;'A'
   839  00FEE6  44                 	db	68	;'D'
   840  00FEE7  52                 	db	82	;'R'
   841  00FEE8  53                 	db	83	;'S'
   842  00FEE9  53                 	db	83	;'S'
   843  00FEEA  49                 	db	73	;'I'
   844  00FEEB  3D                 	db	61	;'='
   845  00FEEC  00                 	db	0
   846  00FEED                     STR_128:
   847                           
   848                           ; BSR set to: 0
   849  00FEED  2B                 	db	43
   850  00FEEE  54                 	db	84	;'T'
   851  00FEEF  58                 	db	88	;'X'
   852  00FEF0  50                 	db	80	;'P'
   853  00FEF1  4F                 	db	79	;'O'
   854  00FEF2  57                 	db	87	;'W'
   855  00FEF3  45                 	db	69	;'E'
   856  00FEF4  52                 	db	82	;'R'
   857  00FEF5  3D                 	db	61	;'='
   858  00FEF6  00                 	db	0
   859  00FEF7                     STR_90:
   860                           
   861                           ; BSR set to: 0
   862  00FEF7  2B                 	db	43
   863  00FEF8  43                 	db	67	;'C'
   864  00FEF9  41                 	db	65	;'A'
   865  00FEFA  44                 	db	68	;'D'
   866  00FEFB  52                 	db	82	;'R'
   867  00FEFC  53                 	db	83	;'S'
   868  00FEFD  53                 	db	83	;'S'
   869  00FEFE  49                 	db	73	;'I'
   870  00FEFF  3F                 	db	63	;'?'
   871  00FF00  00                 	db	0
   872  00FF01                     STR_126:
   873                           
   874                           ; BSR set to: 0
   875  00FF01  2B                 	db	43
   876  00FF02  54                 	db	84	;'T'
   877  00FF03  58                 	db	88	;'X'
   878  00FF04  50                 	db	80	;'P'
   879  00FF05  4F                 	db	79	;'O'
   880  00FF06  57                 	db	87	;'W'
   881  00FF07  45                 	db	69	;'E'
   882  00FF08  52                 	db	82	;'R'
   883  00FF09  3F                 	db	63	;'?'
   884  00FF0A  00                 	db	0
   885  00FF0B                     STR_78:
   886                           
   887                           ; BSR set to: 0
   888  00FF0B  2B                 	db	43
   889  00FF0C  42                 	db	66	;'B'
   890  00FF0D  4F                 	db	79	;'O'
   891  00FF0E  4F                 	db	79	;'O'
   892  00FF0F  54                 	db	84	;'T'
   893  00FF10  4C                 	db	76	;'L'
   894  00FF11  4F                 	db	79	;'O'
   895  00FF12  41                 	db	65	;'A'
   896  00FF13  44                 	db	68	;'D'
   897  00FF14  00                 	db	0
   898  00FF15                     STR_84:
   899                           
   900                           ; BSR set to: 0
   901  00FF15  2B                 	db	43
   902  00FF16  41                 	db	65	;'A'
   903  00FF17  45                 	db	69	;'E'
   904  00FF18  53                 	db	83	;'S'
   905  00FF19  4B                 	db	75	;'K'
   906  00FF1A  45                 	db	69	;'E'
   907  00FF1B  59                 	db	89	;'Y'
   908  00FF1C  3A                 	db	58	;':'
   909  00FF1D  00                 	db	0
   910  00FF1E                     STR_98:
   911                           
   912                           ; BSR set to: 0
   913  00FF1E  2B                 	db	43
   914  00FF1F  48                 	db	72	;'H'
   915  00FF20  4F                 	db	79	;'O'
   916  00FF21  50                 	db	80	;'P'
   917  00FF22  54                 	db	84	;'T'
   918  00FF23  54                 	db	84	;'T'
   919  00FF24  4C                 	db	76	;'L'
   920  00FF25  3D                 	db	61	;'='
   921  00FF26  00                 	db	0
   922  00FF27                     STR_110:
   923                           
   924                           ; BSR set to: 0
   925  00FF27  2B                 	db	43
   926  00FF28  50                 	db	80	;'P'
   927  00FF29  41                 	db	65	;'A'
   928  00FF2A  52                 	db	82	;'R'
   929  00FF2B  49                 	db	73	;'I'
   930  00FF2C  54                 	db	84	;'T'
   931  00FF2D  59                 	db	89	;'Y'
   932  00FF2E  3D                 	db	61	;'='
   933  00FF2F  00                 	db	0
   934  00FF30                     STR_64:
   935                           
   936                           ; BSR set to: 0
   937  00FF30  2B                 	db	43
   938  00FF31  53                 	db	83	;'S'
   939  00FF32  45                 	db	69	;'E'
   940  00FF33  54                 	db	84	;'T'
   941  00FF34  53                 	db	83	;'S'
   942  00FF35  49                 	db	73	;'I'
   943  00FF36  4E                 	db	78	;'N'
   944  00FF37  4B                 	db	75	;'K'
   945  00FF38  00                 	db	0
   946  00FF39                     STR_56:
   947                           
   948                           ; BSR set to: 0
   949  00FF39  53                 	db	83	;'S'
   950  00FF3A  46                 	db	70	;'F'
   951  00FF3B  3D                 	db	61	;'='
   952  00FF3C  25                 	db	37
   953  00FF3D  75                 	db	117	;'u'
   954  00FF3E  0D                 	db	13
   955  00FF3F  0A                 	db	10
   956  00FF40  00                 	db	0
   957  00FF41                     STR_134:
   958                           
   959                           ; BSR set to: 0
   960  00FF41  52                 	db	82	;'R'
   961  00FF42  65                 	db	101	;'e'
   962  00FF43  67                 	db	103	;'g'
   963  00FF44  69                 	db	105	;'i'
   964  00FF45  6F                 	db	111	;'o'
   965  00FF46  6E                 	db	110	;'n'
   966  00FF47  20                 	db	32
   967  00FF48  00                 	db	0
   968  00FF49                     STR_108:
   969                           
   970                           ; BSR set to: 0
   971  00FF49  2B                 	db	43
   972  00FF4A  4E                 	db	78	;'N'
   973  00FF4B  41                 	db	65	;'A'
   974  00FF4C  44                 	db	68	;'D'
   975  00FF4D  44                 	db	68	;'D'
   976  00FF4E  52                 	db	82	;'R'
   977  00FF4F  3D                 	db	61	;'='
   978  00FF50  00                 	db	0
   979  00FF51                     STR_74:
   980                           
   981                           ; BSR set to: 0
   982  00FF51  2B                 	db	43
   983  00FF52  42                 	db	66	;'B'
   984  00FF53  43                 	db	67	;'C'
   985  00FF54  41                 	db	65	;'A'
   986  00FF55  53                 	db	83	;'S'
   987  00FF56  54                 	db	84	;'T'
   988  00FF57  3D                 	db	61	;'='
   989  00FF58  00                 	db	0
   990  00FF59                     STR_106:
   991                           
   992                           ; BSR set to: 0
   993  00FF59  2B                 	db	43
   994  00FF5A  4E                 	db	78	;'N'
   995  00FF5B  41                 	db	65	;'A'
   996  00FF5C  44                 	db	68	;'D'
   997  00FF5D  44                 	db	68	;'D'
   998  00FF5E  52                 	db	82	;'R'
   999  00FF5F  3F                 	db	63	;'?'
  1000  00FF60  00                 	db	0
  1001  00FF61                     STR_62:
  1002                           
  1003                           ; BSR set to: 0
  1004  00FF61  2B                 	db	43
  1005  00FF62  53                 	db	83	;'S'
  1006  00FF63  45                 	db	69	;'E'
  1007  00FF64  4E                 	db	78	;'N'
  1008  00FF65  44                 	db	68	;'D'
  1009  00FF66  3A                 	db	58	;':'
  1010  00FF67  00                 	db	0
  1011  00FF68                     STR_76:
  1012                           
  1013                           ; BSR set to: 0
  1014  00FF68  2B                 	db	43
  1015  00FF69  42                 	db	66	;'B'
  1016  00FF6A  41                 	db	65	;'A'
  1017  00FF6B  55                 	db	85	;'U'
  1018  00FF6C  44                 	db	68	;'D'
  1019  00FF6D  3D                 	db	61	;'='
  1020  00FF6E  00                 	db	0
  1021  00FF6F                     STR_116:
  1022                           
  1023                           ; BSR set to: 0
  1024  00FF6F  2B                 	db	43
  1025  00FF70  52                 	db	82	;'R'
  1026  00FF71  46                 	db	70	;'F'
  1027  00FF72  43                 	db	67	;'C'
  1028  00FF73  48                 	db	72	;'H'
  1029  00FF74  3D                 	db	61	;'='
  1030  00FF75  00                 	db	0
  1031  00FF76                     STR_82:
  1032                           
  1033                           ; BSR set to: 0
  1034  00FF76  2B                 	db	43
  1035  00FF77  41                 	db	65	;'A'
  1036  00FF78  44                 	db	68	;'D'
  1037  00FF79  44                 	db	68	;'D'
  1038  00FF7A  52                 	db	82	;'R'
  1039  00FF7B  3D                 	db	61	;'='
  1040  00FF7C  00                 	db	0
  1041  00FF7D                     STR_96:
  1042                           
  1043                           ; BSR set to: 0
  1044  00FF7D  2B                 	db	43
  1045  00FF7E  48                 	db	72	;'H'
  1046  00FF7F  4F                 	db	79	;'O'
  1047  00FF80  50                 	db	80	;'P'
  1048  00FF81  53                 	db	83	;'S'
  1049  00FF82  3D                 	db	61	;'='
  1050  00FF83  00                 	db	0
  1051  00FF84                     STR_104:
  1052                           
  1053                           ; BSR set to: 0
  1054  00FF84  2B                 	db	43
  1055  00FF85  4D                 	db	77	;'M'
  1056  00FF86  4F                 	db	79	;'O'
  1057  00FF87  44                 	db	68	;'D'
  1058  00FF88  45                 	db	69	;'E'
  1059  00FF89  3F                 	db	63	;'?'
  1060  00FF8A  00                 	db	0
  1061  00FF8B                     STR_114:
  1062                           
  1063                           ; BSR set to: 0
  1064  00FF8B  2B                 	db	43
  1065  00FF8C  52                 	db	82	;'R'
  1066  00FF8D  46                 	db	70	;'F'
  1067  00FF8E  43                 	db	67	;'C'
  1068  00FF8F  48                 	db	72	;'H'
  1069  00FF90  3F                 	db	63	;'?'
  1070  00FF91  00                 	db	0
  1071  00FF92                     STR_80:
  1072                           
  1073                           ; BSR set to: 0
  1074  00FF92  2B                 	db	43
  1075  00FF93  41                 	db	65	;'A'
  1076  00FF94  44                 	db	68	;'D'
  1077  00FF95  44                 	db	68	;'D'
  1078  00FF96  52                 	db	82	;'R'
  1079  00FF97  3F                 	db	63	;'?'
  1080  00FF98  00                 	db	0
  1081  00FF99                     STR_94:
  1082                           
  1083                           ; BSR set to: 0
  1084  00FF99  2B                 	db	43
  1085  00FF9A  48                 	db	72	;'H'
  1086  00FF9B  4F                 	db	79	;'O'
  1087  00FF9C  50                 	db	80	;'P'
  1088  00FF9D  53                 	db	83	;'S'
  1089  00FF9E  3F                 	db	63	;'?'
  1090  00FF9F  00                 	db	0
  1091  00FFA0                     STR_120:
  1092                           
  1093                           ; BSR set to: 0
  1094  00FFA0  2B                 	db	43
  1095  00FFA1  52                 	db	82	;'R'
  1096  00FFA2  58                 	db	88	;'X'
  1097  00FFA3  43                 	db	67	;'C'
  1098  00FFA4  54                 	db	84	;'T'
  1099  00FFA5  3F                 	db	63	;'?'
  1100  00FFA6  00                 	db	0
  1101  00FFA7                     STR_66:
  1102                           
  1103                           ; BSR set to: 0
  1104  00FFA7  2B                 	db	43
  1105  00FFA8  53                 	db	83	;'S'
  1106  00FFA9  53                 	db	83	;'S'
  1107  00FFAA  49                 	db	73	;'I'
  1108  00FFAB  4E                 	db	78	;'N'
  1109  00FFAC  4B                 	db	75	;'K'
  1110  00FFAD  00                 	db	0
  1111  00FFAE                     STR_124:
  1112                           
  1113                           ; BSR set to: 0
  1114  00FFAE  2B                 	db	43
  1115  00FFAF  54                 	db	84	;'T'
  1116  00FFB0  54                 	db	84	;'T'
  1117  00FFB1  4C                 	db	76	;'L'
  1118  00FFB2  3D                 	db	61	;'='
  1119  00FFB3  00                 	db	0
  1120  00FFB4                     STR_102:
  1121                           
  1122                           ; BSR set to: 0
  1123  00FFB4  2B                 	db	43
  1124  00FFB5  4D                 	db	77	;'M'
  1125  00FFB6  41                 	db	65	;'A'
  1126  00FFB7  43                 	db	67	;'C'
  1127  00FFB8  3F                 	db	63	;'?'
  1128  00FFB9  00                 	db	0
  1129  00FFBA                     STR_122:
  1130                           
  1131                           ; BSR set to: 0
  1132  00FFBA  2B                 	db	43
  1133  00FFBB  54                 	db	84	;'T'
  1134  00FFBC  54                 	db	84	;'T'
  1135  00FFBD  4C                 	db	76	;'L'
  1136  00FFBE  3F                 	db	63	;'?'
  1137  00FFBF  00                 	db	0
  1138  00FFC0                     STR_48:
  1139                           
  1140                           ; BSR set to: 0
  1141  00FFC0  3D                 	db	61	;'='
  1142  00FFC1  4E                 	db	78	;'N'
  1143  00FFC2  4F                 	db	79	;'O'
  1144  00FFC3  4E                 	db	78	;'N'
  1145  00FFC4  45                 	db	69	;'E'
  1146  00FFC5  00                 	db	0
  1147  00FFC6                     STR_50:
  1148                           
  1149                           ; BSR set to: 0
  1150  00FFC6  3D                 	db	61	;'='
  1151  00FFC7  45                 	db	69	;'E'
  1152  00FFC8  56                 	db	86	;'V'
  1153  00FFC9  45                 	db	69	;'E'
  1154  00FFCA  4E                 	db	78	;'N'
  1155  00FFCB  00                 	db	0
  1156  00FFCC                     STR_112:
  1157                           
  1158                           ; BSR set to: 0
  1159  00FFCC  2B                 	db	43
  1160  00FFCD  52                 	db	82	;'R'
  1161  00FFCE  45                 	db	69	;'E'
  1162  00FFCF  43                 	db	67	;'C'
  1163  00FFD0  56                 	db	86	;'V'
  1164  00FFD1  00                 	db	0
  1165  00FFD2                     STR_135:
  1166                           
  1167                           ; BSR set to: 0
  1168  00FFD2  4E                 	db	78	;'N'
  1169  00FFD3  41                 	db	65	;'A'
  1170  00FFD4  0D                 	db	13
  1171  00FFD5  0A                 	db	10
  1172  00FFD6  00                 	db	0
  1173  00FFD7                     STR_13:
  1174                           
  1175                           ; BSR set to: 0
  1176  00FFD7  4F                 	db	79	;'O'
  1177  00FFD8  4B                 	db	75	;'K'
  1178  00FFD9  0D                 	db	13
  1179  00FFDA  0A                 	db	10
  1180  00FFDB  00                 	db	0
  1181  00FFDC                     STR_18:
  1182                           
  1183                           ; BSR set to: 0
  1184  00FFDC  4D                 	db	77	;'M'
  1185  00FFDD  41                 	db	65	;'A'
  1186  00FFDE  43                 	db	67	;'C'
  1187  00FFDF  3D                 	db	61	;'='
  1188  00FFE0  00                 	db	0
  1189  00FFE1                     STR_70:
  1190                           
  1191                           ; BSR set to: 0
  1192  00FFE1  2B                 	db	43
  1193  00FFE2  53                 	db	83	;'S'
  1194  00FFE3  46                 	db	70	;'F'
  1195  00FFE4  3D                 	db	61	;'='
  1196  00FFE5  00                 	db	0
  1197  00FFE6                     STR_68:
  1198                           
  1199                           ; BSR set to: 0
  1200  00FFE6  2B                 	db	43
  1201  00FFE7  53                 	db	83	;'S'
  1202  00FFE8  46                 	db	70	;'F'
  1203  00FFE9  3F                 	db	63	;'?'
  1204  00FFEA  00                 	db	0
  1205  00FFEB                     STR_46:
  1206                           
  1207                           ; BSR set to: 0
  1208  00FFEB  3D                 	db	61	;'='
  1209  00FFEC  4F                 	db	79	;'O'
  1210  00FFED  44                 	db	68	;'D'
  1211  00FFEE  44                 	db	68	;'D'
  1212  00FFEF  00                 	db	0
  1213  00FFF0                     STR_118:
  1214                           
  1215                           ; BSR set to: 0
  1216  00FFF0  2B                 	db	43
  1217  00FFF1  52                 	db	82	;'R'
  1218  00FFF2  53                 	db	83	;'S'
  1219  00FFF3  54                 	db	84	;'T'
  1220  00FFF4  00                 	db	0
  1221  00FFF5                     STR_19:
  1222                           
  1223                           ; BSR set to: 0
  1224  00FFF5  25                 	db	37
  1225  00FFF6  30                 	db	48	;'0'
  1226  00FFF7  32                 	db	50	;'2'
  1227  00FFF8  58                 	db	88	;'X'
  1228  00FFF9  00                 	db	0
  1229  00FFFA                     STR_100:
  1230                           
  1231                           ; BSR set to: 0
  1232  00FFFA  2B                 	db	43
  1233  00FFFB  49                 	db	73	;'I'
  1234  00FFFC  00                 	db	0
  1235  00FFFD                     STR_55:
  1236                           
  1237                           ; BSR set to: 0
  1238  00FFFD  0D                 	db	13
  1239  00FFFE  00                 	db	0
  1240  0000                     
  1241                           ; #config settings
  1242  00FFFF  00                 	db	0	; dummy byte at the end
  1243  0000                     
  1244                           	psect	nvBANK1
  1245  0001DF                     __pnvBANK1:
  1246                           	opt callstack 0
  1247  0001DF                     _UART1_ErrorHandler:
  1248                           	opt callstack 0
  1249  0001DF                     	ds	2
  1250  0001E1                     _UART1_OverrunErrorHandler:
  1251                           	opt callstack 0
  1252  0001E1                     	ds	2
  1253  0001E3                     _UART1_FramingErrorHandler:
  1254                           	opt callstack 0
  1255  0001E3                     	ds	2
  1256  0001E5                     _TMR0_InterruptHandler:
  1257                           	opt callstack 0
  1258  0001E5                     	ds	2
  1259  0001E7                     _timer0ReloadVal16bit:
  1260                           	opt callstack 0
  1261  0001E7                     	ds	2
  1262  0001E9                     _UART1_TxInterruptHandler:
  1263                           	opt callstack 0
  1264  0001E9                     	ds	2
  1265  0001EB                     _UART1_RxInterruptHandler:
  1266                           	opt callstack 0
  1267  0001EB                     	ds	2
  1268  0001ED                     _uart1TxBufferRemaining:
  1269                           	opt callstack 0
  1270  0001ED                     	ds	1
  1271  0000                     _CRCDATH	set	14689
  1272  0000                     _CRCDATL	set	14688
  1273  0000                     _CRCCON1bits	set	14697
  1274  0000                     _CRCXORL	set	14694
  1275  0000                     _CRCXORH	set	14695
  1276  0000                     _SCANTRIG	set	14717
  1277  0000                     _SCANHADRL	set	14713
  1278  0000                     _SCANHADRH	set	14714
  1279  0000                     _SCANHADRU	set	14715
  1280  0000                     _SCANLADRL	set	14710
  1281  0000                     _SCANLADRH	set	14711
  1282  0000                     _SCANLADRU	set	14712
  1283  0000                     _SCANCON0	set	14716
  1284  0000                     _CRCCON1	set	14697
  1285  0000                     _CRCCON0	set	14696
  1286  0000                     _PMD7	set	14791
  1287  0000                     _PMD6	set	14790
  1288  0000                     _PMD5	set	14789
  1289  0000                     _PMD4	set	14788
  1290  0000                     _PMD3	set	14787
  1291  0000                     _PMD2	set	14786
  1292  0000                     _PMD1	set	14785
  1293  0000                     _PMD0	set	14784
  1294  0000                     _OSCTUNE	set	14814
  1295  0000                     _OSCFRQ	set	14815
  1296  0000                     _OSCEN	set	14813
  1297  0000                     _OSCCON3	set	14811
  1298  0000                     _OSCCON1	set	14809
  1299  0000                     _IPR3bits	set	14723
  1300  0000                     _PIR0bits	set	14752
  1301  0000                     _NVMCON2	set	14822
  1302  0000                     _NVMDAT	set	14819
  1303  0000                     _NVMADRL	set	14816
  1304  0000                     _NVMADRH	set	14817
  1305  0000                     _NVMCON1bits	set	14821
  1306  0000                     _PIR3bits	set	14755
  1307  0000                     _PIR2bits	set	14754
  1308  0000                     _PIE3bits	set	14739
  1309  0000                     _CRCCON0bits	set	14696
  1310  0000                     _CRCACCH	set	14691
  1311  0000                     _CRCACCL	set	14690
  1312  0000                     _SPI1SDIPPS	set	15071
  1313  0000                     _RC7PPS	set	14871
  1314  0000                     _U1CTSPPS	set	15078
  1315  0000                     _U1RXPPS	set	15077
  1316  0000                     _RC1PPS	set	14865
  1317  0000                     _RB0PPS	set	14856
  1318  0000                     _SPI1SSPPS	set	15072
  1319  0000                     _SPI1SCKPPS	set	15070
  1320  0000                     _RC0PPS	set	14864
  1321  0000                     _INLVLE	set	14980
  1322  0000                     _INLVLC	set	14948
  1323  0000                     _INLVLB	set	14932
  1324  0000                     _INLVLA	set	14916
  1325  0000                     _SLRCONC	set	14947
  1326  0000                     _SLRCONB	set	14931
  1327  0000                     _SLRCONA	set	14915
  1328  0000                     _ODCONC	set	14946
  1329  0000                     _ODCONB	set	14930
  1330  0000                     _ODCONA	set	14914
  1331  0000                     _RC4I2C	set	14955
  1332  0000                     _RC3I2C	set	14954
  1333  0000                     _RB2I2C	set	14939
  1334  0000                     _RB1I2C	set	14938
  1335  0000                     _WPUC	set	14945
  1336  0000                     _WPUA	set	14913
  1337  0000                     _WPUB	set	14929
  1338  0000                     _WPUE	set	14977
  1339  0000                     _ANSELA	set	14912
  1340  0000                     _ANSELB	set	14928
  1341  0000                     _ANSELC	set	14944
  1342  0000                     _U1TXB	set	15850
  1343  0000                     _U1ERRIE	set	15866
  1344  0000                     _U1UIR	set	15864
  1345  0000                     _U1P3H	set	15857
  1346  0000                     _U1P3L	set	15856
  1347  0000                     _U1P2H	set	15855
  1348  0000                     _U1P2L	set	15854
  1349  0000                     _U1P1H	set	15853
  1350  0000                     _U1P1L	set	15852
  1351  0000                     _SPI1RXB	set	15632
  1352  0000                     _SPI1TXB	set	15633
  1353  0000                     _SPI1TCNTL	set	15634
  1354  0000                     _SPI1BAUD	set	15641
  1355  0000                     _SPI1CLK	set	15644
  1356  0000                     _SPI1CON2	set	15638
  1357  0000                     _SPI1CON1	set	15637
  1358  0000                     _SPI1CON0	set	15636
  1359  0000                     _U1ERRIR	set	15865
  1360  0000                     _U1FIFO	set	15863
  1361  0000                     _U1ERRIRbits	set	15865
  1362  0000                     _U1BRGH	set	15862
  1363  0000                     _U1BRGL	set	15861
  1364  0000                     _U1CON2	set	15860
  1365  0000                     _U1CON0	set	15858
  1366  0000                     _U1CON1	set	15859
  1367  0000                     _U1RXB	set	15848
  1368  0000                     _PORTBbits	set	16331
  1369  0000                     _LATCbits	set	16316
  1370  0000                     _TRISC	set	16324
  1371  0000                     _TRISB	set	16323
  1372  0000                     _TRISA	set	16322
  1373  0000                     _LATC	set	16316
  1374  0000                     _LATB	set	16315
  1375  0000                     _LATA	set	16314
  1376  0000                     _IVTBASEL	set	16341
  1377  0000                     _IVTBASEH	set	16342
  1378  0000                     _IVTBASEU	set	16343
  1379  0000                     _IVTLOCKbits	set	16340
  1380  0000                     _IVTLOCK	set	16340
  1381  0000                     _INTCON0bits	set	16338
  1382  0000                     _TABLAT	set	16373
  1383  0000                     _TBLPTRL	set	16374
  1384  0000                     _TBLPTRH	set	16375
  1385  0000                     _TBLPTRU	set	16376
  1386  0000                     _T0CON0	set	16312
  1387  0000                     _TMR0L	set	16310
  1388  0000                     _TMR0H	set	16311
  1389  0000                     _T0CON1	set	16313
  1390  0000                     _TRISBbits	set	16323
  1391  0000                     _LATAbits	set	16314
  1392  0000                     _GIE	set	130711
  1393                           
  1394                           	psect	cinit
  1395  0055A2                     __pcinit:
  1396                           	opt callstack 0
  1397  0055A2                     start_initialization:
  1398                           	opt callstack 0
  1399  0055A2                     __initialization:
  1400                           	opt callstack 0
  1401                           
  1402                           ; Initialize objects allocated to BANK2 (10 bytes)
  1403                           ; load TBLPTR registers with __pidataBANK2
  1404  0055A2  0ED0               	movlw	low __pidataBANK2
  1405  0055A4  6EF6               	movwf	tblptrl,c
  1406  0055A6  0E84               	movlw	high __pidataBANK2
  1407  0055A8  6EF7               	movwf	tblptrh,c
  1408  0055AA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1409  0055AC  6EF8               	movwf	tblptru,c
  1410  0055AE  EE00  F2CA         	lfsr	0,__pdataBANK2
  1411  0055B2  EE10 F00A          	lfsr	1,10
  1412  0055B6                     copy_data0:
  1413  0055B6  0009               	tblrd		*+
  1414  0055B8  006F FFD7 FFEE     	movff	tablat,postinc0
  1415  0055BE  50E5               	movf	postdec1,w,c
  1416  0055C0  50E1               	movf	fsr1l,w,c
  1417  0055C2  E1F9               	bnz	copy_data0
  1418                           
  1419                           ; Initialize objects allocated to BANK1 (14 bytes)
  1420                           ; load TBLPTR registers with __pidataBANK1
  1421  0055C4  0EDA               	movlw	low __pidataBANK1
  1422  0055C6  6EF6               	movwf	tblptrl,c
  1423  0055C8  0E83               	movlw	high __pidataBANK1
  1424  0055CA  6EF7               	movwf	tblptrh,c
  1425  0055CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1426  0055CE  6EF8               	movwf	tblptru,c
  1427  0055D0  EE00  F1EE         	lfsr	0,__pdataBANK1
  1428  0055D4  EE10 F00E          	lfsr	1,14
  1429  0055D8                     copy_data1:
  1430  0055D8  0009               	tblrd		*+
  1431  0055DA  006F FFD7 FFEE     	movff	tablat,postinc0
  1432  0055E0  50E5               	movf	postdec1,w,c
  1433  0055E2  50E1               	movf	fsr1l,w,c
  1434  0055E4  E1F9               	bnz	copy_data1
  1435                           
  1436                           ; Initialize objects allocated to BANK0 (6 bytes)
  1437                           ; load TBLPTR registers with __pidataBANK0
  1438  0055E6  0EEC               	movlw	low __pidataBANK0
  1439  0055E8  6EF6               	movwf	tblptrl,c
  1440  0055EA  0E84               	movlw	high __pidataBANK0
  1441  0055EC  6EF7               	movwf	tblptrh,c
  1442  0055EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1443  0055F0  6EF8               	movwf	tblptru,c
  1444  0055F2  EE00  F0F9         	lfsr	0,__pdataBANK0
  1445  0055F6  EE10 F006          	lfsr	1,6
  1446  0055FA                     copy_data2:
  1447  0055FA  0009               	tblrd		*+
  1448  0055FC  006F FFD7 FFEE     	movff	tablat,postinc0
  1449  005602  50E5               	movf	postdec1,w,c
  1450  005604  50E1               	movf	fsr1l,w,c
  1451  005606  E1F9               	bnz	copy_data2
  1452                           
  1453                           ; Clear objects allocated to BIGRAM (1209 bytes)
  1454  005608  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1455  00560C  EE11 F0B9          	lfsr	1,1209
  1456  005610                     clear_0:
  1457  005610  6AEE               	clrf	postinc0,c
  1458  005612  50E5               	movf	postdec1,w,c
  1459  005614  50E1               	movf	fsr1l,w,c
  1460  005616  E1FC               	bnz	clear_0
  1461  005618  50E2               	movf	fsr1h,w,c
  1462  00561A  E1FA               	bnz	clear_0
  1463                           
  1464                           ; Clear objects allocated to BANK5 (189 bytes)
  1465  00561C  EE01  F100         	lfsr	0,__pbssBANK5
  1466  005620  0EBD               	movlw	189
  1467  005622                     clear_1:
  1468  005622  6AEE               	clrf	postinc0,c
  1469  005624  06E8               	decf	wreg,f,c
  1470  005626  E1FD               	bnz	clear_1
  1471                           
  1472                           ; Clear objects allocated to BANK4 (96 bytes)
  1473  005628  EE01  F000         	lfsr	0,__pbssBANK4
  1474  00562C  0E60               	movlw	96
  1475  00562E                     clear_2:
  1476  00562E  6AEE               	clrf	postinc0,c
  1477  005630  06E8               	decf	wreg,f,c
  1478  005632  E1FD               	bnz	clear_2
  1479                           
  1480                           ; Clear objects allocated to BANK3 (242 bytes)
  1481  005634  EE00  F300         	lfsr	0,__pbssBANK3
  1482  005638  0EF2               	movlw	242
  1483  00563A                     clear_3:
  1484  00563A  6AEE               	clrf	postinc0,c
  1485  00563C  06E8               	decf	wreg,f,c
  1486  00563E  E1FD               	bnz	clear_3
  1487                           
  1488                           ; Clear objects allocated to BANK2 (202 bytes)
  1489  005640  EE00  F200         	lfsr	0,__pbssBANK2
  1490  005644  0ECA               	movlw	202
  1491  005646                     clear_4:
  1492  005646  6AEE               	clrf	postinc0,c
  1493  005648  06E8               	decf	wreg,f,c
  1494  00564A  E1FD               	bnz	clear_4
  1495                           
  1496                           ; Clear objects allocated to BANK1 (223 bytes)
  1497  00564C  EE00  F100         	lfsr	0,__pbssBANK1
  1498  005650  0EDF               	movlw	223
  1499  005652                     clear_5:
  1500  005652  6AEE               	clrf	postinc0,c
  1501  005654  06E8               	decf	wreg,f,c
  1502  005656  E1FD               	bnz	clear_5
  1503                           
  1504                           ; Clear objects allocated to BANK0 (31 bytes)
  1505  005658  EE00  F0DA         	lfsr	0,__pbssBANK0
  1506  00565C  0E1F               	movlw	31
  1507  00565E                     clear_6:
  1508  00565E  6AEE               	clrf	postinc0,c
  1509  005660  06E8               	decf	wreg,f,c
  1510  005662  E1FD               	bnz	clear_6
  1511                           
  1512                           ; Clear objects allocated to COMRAM (1 bytes)
  1513  005664  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1514                           
  1515                           ;
  1516                           ; Setup IVTBASE
  1517                           ;
  1518  005666  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1519  005668  6ED5               	movwf	213,c
  1520  00566A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1521  00566C  6ED6               	movwf	214,c
  1522  00566E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1523  005670  6ED7               	movwf	215,c
  1524  005672                     end_of_initialization:
  1525                           	opt callstack 0
  1526  005672                     __end_of__initialization:
  1527                           	opt callstack 0
  1528  005672  0100               	movlb	0
  1529  005674  EF79  F03F         	goto	_main	;jump to C main() function
  1530                           
  1531                           	psect	bssCOMRAM
  1532  00005E                     __pbssCOMRAM:
  1533                           	opt callstack 0
  1534  00005E                     _uart1RxHead:
  1535                           	opt callstack 0
  1536  00005E                     	ds	1
  1537                           
  1538                           	psect	bssBANK0
  1539  0000DA                     __pbssBANK0:
  1540                           	opt callstack 0
  1541  0000DA                     _width:
  1542                           	opt callstack 0
  1543  0000DA                     	ds	2
  1544  0000DC                     _prec:
  1545                           	opt callstack 0
  1546  0000DC                     	ds	2
  1547  0000DE                     _flags:
  1548                           	opt callstack 0
  1549  0000DE                     	ds	2
  1550  0000E0                     _timers:
  1551                           	opt callstack 0
  1552  0000E0                     	ds	2
  1553  0000E2                     _nwkDataReqQueue:
  1554                           	opt callstack 0
  1555  0000E2                     	ds	2
  1556  0000E4                     _halTimerIrqCount:
  1557                           	opt callstack 0
  1558  0000E4                     	ds	2
  1559  0000E6                     _uart1RxCount:
  1560                           	opt callstack 0
  1561  0000E6                     	ds	1
  1562  0000E7                     _uart1RxTail:
  1563                           	opt callstack 0
  1564  0000E7                     	ds	1
  1565  0000E8                     _uart1TxTail:
  1566                           	opt callstack 0
  1567  0000E8                     	ds	1
  1568  0000E9                     _uart1TxHead:
  1569                           	opt callstack 0
  1570  0000E9                     	ds	1
  1571  0000EA                     _TXPower:
  1572                           	opt callstack 0
  1573  0000EA                     	ds	1
  1574  0000EB                     _channel:
  1575                           	opt callstack 0
  1576  0000EB                     	ds	1
  1577  0000EC                     _current_sf:
  1578                           	opt callstack 0
  1579  0000EC                     	ds	1
  1580  0000ED                     _cadCounter:
  1581                           	opt callstack 0
  1582  0000ED                     	ds	1
  1583  0000EE                     _cadDone:
  1584                           	opt callstack 0
  1585  0000EE                     	ds	1
  1586  0000EF                     _atStateVar:
  1587                           	opt callstack 0
  1588  0000EF                     	ds	1
  1589  0000F0                     _commandByteCounter:
  1590                           	opt callstack 0
  1591  0000F0                     	ds	1
  1592  0000F1                     _tx_done:
  1593                           	opt callstack 0
  1594  0000F1                     	ds	1
  1595  0000F2                     _msgIDCounter:
  1596                           	opt callstack 0
  1597  0000F2                     	ds	1
  1598  0000F3                     _txTimeOut:
  1599                           	opt callstack 0
  1600  0000F3                     	ds	2
  1601  0000F5                     _cadTimeOut:
  1602                           	opt callstack 0
  1603  0000F5                     	ds	2
  1604  0000F7                     __cadBackoffTimer:
  1605                           	opt callstack 0
  1606  0000F7                     	ds	2
  1607                           
  1608                           	psect	dataBANK0
  1609  0000F9                     __pdataBANK0:
  1610                           	opt callstack 0
  1611  0000F9                     _RSSITarget:
  1612                           	opt callstack 0
  1613  0000F9                     	ds	1
  1614  0000FA                     _currentNetID:
  1615                           	opt callstack 0
  1616  0000FA                     	ds	1
  1617  0000FB                     _currentAddr1:
  1618                           	opt callstack 0
  1619  0000FB                     	ds	1
  1620  0000FC                     _currentAddr0:
  1621                           	opt callstack 0
  1622  0000FC                     	ds	1
  1623  0000FD                     _ATTimeoutTimer:
  1624                           	opt callstack 0
  1625  0000FD                     	ds	2
  1626                           
  1627                           	psect	bssBANK1
  1628  000100                     __pbssBANK1:
  1629                           	opt callstack 0
  1630  000100                     _nwkIb:
  1631                           	opt callstack 0
  1632  000100                     	ds	40
  1633  000128                     _uart1RxStatusBuffer:
  1634                           	opt callstack 0
  1635  000128                     	ds	16
  1636  000138                     _uart1RxBuffer:
  1637                           	opt callstack 0
  1638  000138                     	ds	16
  1639  000148                     _uartmsg:
  1640                           	opt callstack 0
  1641  000148                     	ds	6
  1642  00014E                     _symbolDuration:
  1643                           	opt callstack 0
  1644  00014E                     	ds	4
  1645  000152                     _current_baud_rate:
  1646                           	opt callstack 0
  1647  000152                     	ds	3
  1648  000155                     _errno:
  1649                           	opt callstack 0
  1650  000155                     	ds	2
  1651  000157                     strtok@p:
  1652                           	opt callstack 0
  1653  000157                     	ds	2
  1654  000159                     _nout:
  1655                           	opt callstack 0
  1656  000159                     	ds	2
  1657  00015B                     _nwkTxPhyActiveFrame:
  1658                           	opt callstack 0
  1659  00015B                     	ds	2
  1660  00015D                     _ledTimerVar:
  1661                           	opt callstack 0
  1662  00015D                     	ds	2
  1663  00015F                     _eeprom_write_flags:
  1664                           	opt callstack 0
  1665  00015F                     	ds	2
  1666  000161                     _nwkRxAckControl:
  1667                           	opt callstack 0
  1668  000161                     	ds	1
  1669  000162                     _uart1RxLastError:
  1670                           	opt callstack 0
  1671  000162                     	ds	1
  1672  000163                     _ledStateVar:
  1673                           	opt callstack 0
  1674  000163                     	ds	1
  1675  000164                     _radio_state_var:
  1676                           	opt callstack 0
  1677  000164                     	ds	1
  1678  000165                     _dwellTimer:
  1679                           	opt callstack 0
  1680  000165                     	ds	1
  1681  000166                     _fhssdebug:
  1682                           	opt callstack 0
  1683  000166                     	ds	1
  1684  000167                     _SNR:
  1685                           	opt callstack 0
  1686  000167                     	ds	1
  1687  000168                     _packetRSSI:
  1688                           	opt callstack 0
  1689  000168                     	ds	1
  1690  000169                     _RSSI:
  1691                           	opt callstack 0
  1692  000169                     	ds	1
  1693  00016A                     _need_radio_reset:
  1694                           	opt callstack 0
  1695  00016A                     	ds	1
  1696  00016B                     __packetIndex:
  1697                           	opt callstack 0
  1698  00016B                     	ds	1
  1699  00016C                     __implicitHeaderMode:
  1700                           	opt callstack 0
  1701  00016C                     	ds	1
  1702  00016D                     _currentMode:
  1703                           	opt callstack 0
  1704  00016D                     	ds	1
  1705  00016E                     _sinkAddr1:
  1706                           	opt callstack 0
  1707  00016E                     	ds	1
  1708  00016F                     _sinkAddr0:
  1709                           	opt callstack 0
  1710  00016F                     	ds	1
  1711  000170                     _currentMsgID:
  1712                           	opt callstack 0
  1713  000170                     	ds	1
  1714  000171                     _curent_parity:
  1715                           	opt callstack 0
  1716  000171                     	ds	1
  1717  000172                     _uart_parity:
  1718                           	opt callstack 0
  1719  000172                     	ds	1
  1720  000173                     _uart_baud_rate:
  1721                           	opt callstack 0
  1722  000173                     	ds	1
  1723  000174                     _eeprom_write_flags_enum:
  1724                           	opt callstack 0
  1725  000174                     	ds	1
  1726  000175                     _dbuf:
  1727                           	opt callstack 0
  1728  000175                     	ds	32
  1729  000195                     _nwkTxDelayTimer:
  1730                           	opt callstack 0
  1731  000195                     	ds	13
  1732  0001A2                     _nwkTxAckWaitTimer:
  1733                           	opt callstack 0
  1734  0001A2                     	ds	13
  1735  0001AF                     _nwkRxDuplicateRejectionTimer:
  1736                           	opt callstack 0
  1737  0001AF                     	ds	13
  1738  0001BC                     _EUIDbyte:
  1739                           	opt callstack 0
  1740  0001BC                     	ds	12
  1741  0001C8                     _ledtasksbuf:
  1742                           	opt callstack 0
  1743  0001C8                     	ds	10
  1744  0001D2                     _seed:
  1745                           	opt callstack 0
  1746  0001D2                     	ds	8
  1747  0001DA                     _crcObj:
  1748                           	opt callstack 0
  1749  0001DA                     	ds	3
  1750  0001DD                     _ledtimer:
  1751                           	opt callstack 0
  1752  0001DD                     	ds	2
  1753                           
  1754                           	psect	dataBANK1
  1755  0001EE                     __pdataBANK1:
  1756                           	opt callstack 0
  1757  0001EE                     stoa@F1139:
  1758                           	opt callstack 0
  1759  0001EE                     	ds	7
  1760  0001F5                     	ds	5
  1761  0001FA                     _test_timer:
  1762                           	opt callstack 0
  1763  0001FA                     	ds	2
  1764                           
  1765                           	psect	bssBANK2
  1766  000200                     __pbssBANK2:
  1767                           	opt callstack 0
  1768  000200                     _nwkGroups:
  1769                           	opt callstack 0
  1770  000200                     	ds	20
  1771  000214                     _net_key:
  1772                           	opt callstack 0
  1773  000214                     	ds	16
  1774  000224                     _aes_key:
  1775                           	opt callstack 0
  1776  000224                     	ds	16
  1777  000234                     _atCommand:
  1778                           	opt callstack 0
  1779  000234                     	ds	80
  1780  000284                     _nwkRouteTable:
  1781                           	opt callstack 0
  1782  000284                     	ds	70
  1783                           
  1784                           	psect	dataBANK2
  1785  0002CA                     __pdataBANK2:
  1786                           	opt callstack 0
  1787  0002CA                     _syncList:
  1788                           	opt callstack 0
  1789  0002CA                     	ds	10
  1790                           
  1791                           	psect	bssBANK3
  1792  000300                     __pbssBANK3:
  1793                           	opt callstack 0
  1794  000300                     _uart1TxBuffer:
  1795                           	opt callstack 0
  1796  000300                     	ds	64
  1797  000340                     _phyRxBuffer:
  1798                           	opt callstack 0
  1799  000340                     	ds	128
  1800  0003C0                     _nwkRxDuplicateRejectionTable:
  1801                           	opt callstack 0
  1802  0003C0                     	ds	50
  1803                           
  1804                           	psect	bssBANK4
  1805  000400                     __pbssBANK4:
  1806                           	opt callstack 0
  1807  000400                     _ledqueue:
  1808                           	opt callstack 0
  1809  000400                     	ds	96
  1810                           
  1811                           	psect	bssBANK5
  1812  000500                     __pbssBANK5:
  1813                           	opt callstack 0
  1814  000500                     _fhssReg:
  1815                           	opt callstack 0
  1816  000500                     	ds	189
  1817                           
  1818                           	psect	bssBIGRAM
  1819  0005BD                     __pbssBIGRAM:
  1820                           	opt callstack 0
  1821  0005BD                     _nwkFrameFrames:
  1822                           	opt callstack 0
  1823  0005BD                     	ds	685
  1824  00086A                     _tx_buffer:
  1825                           	opt callstack 0
  1826  00086A                     	ds	524
  1827                           
  1828                           	psect	cstackBANK1
  1829  0001FC                     __pcstackBANK1:
  1830                           	opt callstack 0
  1831  0001FC                     ??_nwkRxTaskHandler:
  1832                           
  1833                           ; 1 bytes @ 0x0
  1834  0001FC                     	ds	2
  1835  0001FE                     nwkRxTaskHandler@frame:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x2
  1839  0001FE                     	ds	2
  1840                           
  1841                           	psect	cstackBANK0
  1842  000060                     __pcstackBANK0:
  1843                           	opt callstack 0
  1844  000060                     vfpfcnvrt@ll:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 8 bytes @ 0x0
  1848  000060                     	ds	8
  1849  000068                     vfpfcnvrt@c:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 1 bytes @ 0x8
  1853  000068                     	ds	1
  1854  000069                     vfpfcnvrt@cp:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 1 bytes @ 0x9
  1858  000069                     	ds	1
  1859  00006A                     vfpfcnvrt@done:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 2 bytes @ 0xA
  1863  00006A                     	ds	2
  1864  00006C                     _vfpfcnvrt$7244:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 2 bytes @ 0xC
  1868  00006C                     	ds	2
  1869  00006E                     vfpfcnvrt@llu:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 8 bytes @ 0xE
  1873  00006E                     	ds	8
  1874  000076                     ??_cmdMac:
  1875  000076                     ??_cmdBootLoad:
  1876  000076                     appDataInd@ind:
  1877                           	opt callstack 0
  1878  000076                     nwkRxServiceDataInd@ind:
  1879                           	opt callstack 0
  1880  000076                     cmdSend@cmd:
  1881                           	opt callstack 0
  1882  000076                     cmdBcast@cmd:
  1883                           	opt callstack 0
  1884  000076                     cmdSetAddr@cmd:
  1885                           	opt callstack 0
  1886  000076                     cmdSetNaddr@cmd:
  1887                           	opt callstack 0
  1888  000076                     cmdSetAES@cmd:
  1889                           	opt callstack 0
  1890  000076                     cmdSetRFCH@cmd:
  1891                           	opt callstack 0
  1892  000076                     cmdSetTX@cmd:
  1893                           	opt callstack 0
  1894  000076                     cmdSetCADRSSI@atCommand:
  1895                           	opt callstack 0
  1896  000076                     cmdSetParity@atCommand:
  1897                           	opt callstack 0
  1898  000076                     cmdSetSF@atCommand:
  1899                           	opt callstack 0
  1900  000076                     print_hop_table@atCommand:
  1901                           	opt callstack 0
  1902  000076                     set_hop_table_ttl@cmd:
  1903                           	opt callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x16
  1906  000076                     	ds	1
  1907  000077                     ??_nwkRxServiceDataInd:
  1908  000077                     cmdMac@i:
  1909                           	opt callstack 0
  1910  000077                     appDataInd@data:
  1911                           	opt callstack 0
  1912                           
  1913                           ; 65 bytes @ 0x17
  1914  000077                     	ds	1
  1915  000078                     ??_cmdSend:
  1916  000078                     ??_cmdBcast:
  1917  000078                     ??_cmdSetAES:
  1918  000078                     cmdSetAddr@p2:
  1919                           	opt callstack 0
  1920  000078                     cmdSetNaddr@p2:
  1921                           	opt callstack 0
  1922  000078                     cmdSetRFCH@p1:
  1923                           	opt callstack 0
  1924  000078                     cmdSetTX@p2:
  1925                           	opt callstack 0
  1926  000078                     cmdSetCADRSSI@p1:
  1927                           	opt callstack 0
  1928  000078                     cmdSetSF@p1:
  1929                           	opt callstack 0
  1930                           
  1931                           ; 2 bytes @ 0x18
  1932  000078                     	ds	2
  1933  00007A                     cmdBcast@p1:
  1934                           	opt callstack 0
  1935  00007A                     cmdSetAddr@p1:
  1936                           	opt callstack 0
  1937  00007A                     cmdSetNaddr@p1:
  1938                           	opt callstack 0
  1939  00007A                     cmdSetTX@p1:
  1940                           	opt callstack 0
  1941  00007A                     cmdSetRFCH@CHstr:
  1942                           	opt callstack 0
  1943  00007A                     cmdSetCADRSSI@CHstr:
  1944                           	opt callstack 0
  1945  00007A                     cmdSetSF@CHstr:
  1946                           	opt callstack 0
  1947  00007A                     cmdSend@destaddr:
  1948                           	opt callstack 0
  1949  00007A                     cmdSetAES@AESstr:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 32 bytes @ 0x1A
  1953  00007A                     	ds	2
  1954  00007C                     cmdBcast@buf_id:
  1955                           	opt callstack 0
  1956  00007C                     cmdSetNaddr@tempaddr:
  1957                           	opt callstack 0
  1958  00007C                     cmdSetTX@temp:
  1959                           	opt callstack 0
  1960  00007C                     cmdSetAddr@tempaddr:
  1961                           	opt callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x1C
  1964  00007C                     	ds	1
  1965  00007D                     cmdSetRFCH@p2:
  1966                           	opt callstack 0
  1967  00007D                     cmdSetCADRSSI@p2:
  1968                           	opt callstack 0
  1969  00007D                     cmdSetSF@p2:
  1970                           	opt callstack 0
  1971  00007D                     cmdSetTX@CHstr:
  1972                           	opt callstack 0
  1973                           
  1974                           ; 3 bytes @ 0x1D
  1975  00007D                     	ds	2
  1976  00007F                     cmdSetRFCH@temp:
  1977                           	opt callstack 0
  1978  00007F                     cmdSetCADRSSI@temp:
  1979                           	opt callstack 0
  1980  00007F                     cmdSetSF@temp:
  1981                           	opt callstack 0
  1982  00007F                     cmdSend@tempaddr:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x1F
  1986  00007F                     	ds	2
  1987  000081                     cmdSend@p2:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x21
  1991  000081                     	ds	2
  1992  000083                     cmdSend@p1:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x23
  1996  000083                     	ds	2
  1997  000085                     cmdSend@buf_id:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 1 bytes @ 0x25
  2001  000085                     	ds	21
  2002  00009A                     cmdSetAES@p2:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x3A
  2006  00009A                     	ds	2
  2007  00009C                     cmdSetAES@temp:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 3 bytes @ 0x3C
  2011  00009C                     	ds	3
  2012  00009F                     cmdSetAES@key_type:
  2013                           	opt callstack 0
  2014                           
  2015                           ; 1 bytes @ 0x3F
  2016  00009F                     	ds	1
  2017  0000A0                     cmdSetAES@byte:
  2018                           	opt callstack 0
  2019                           
  2020                           ; 1 bytes @ 0x40
  2021  0000A0                     	ds	1
  2022  0000A1                     cmdSetAES@p1:
  2023                           	opt callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x41
  2026  0000A1                     	ds	2
  2027  0000A3                     cmdSetAES@i:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 1 bytes @ 0x43
  2031  0000A3                     	ds	1
  2032  0000A4                     executeATCommand@cmd:
  2033                           	opt callstack 0
  2034                           
  2035                           ; 2 bytes @ 0x44
  2036  0000A4                     	ds	2
  2037  0000A6                     ??_executeATCommand:
  2038                           
  2039                           ; 1 bytes @ 0x46
  2040  0000A6                     	ds	3
  2041  0000A9                     ??_processATCommand:
  2042                           
  2043                           ; 1 bytes @ 0x49
  2044  0000A9                     	ds	2
  2045  0000AB                     processATCommand@data_828:
  2046                           	opt callstack 0
  2047                           
  2048                           ; 1 bytes @ 0x4B
  2049  0000AB                     	ds	1
  2050  0000AC                     processATCommand@data:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x4C
  2054  0000AC                     	ds	12
  2055  0000B8                     appDataInd@dataptr:
  2056                           	opt callstack 0
  2057                           
  2058                           ; 2 bytes @ 0x58
  2059  0000B8                     	ds	2
  2060  0000BA                     appDataInd@i:
  2061                           	opt callstack 0
  2062                           
  2063                           ; 1 bytes @ 0x5A
  2064  0000BA                     	ds	1
  2065  0000BB                     nwkRxIndicateFrame@frame:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 2 bytes @ 0x5B
  2069  0000BB                     	ds	2
  2070  0000BD                     ??_nwkRxIndicateFrame:
  2071                           
  2072                           ; 1 bytes @ 0x5D
  2073  0000BD                     	ds	4
  2074  0000C1                     _nwkRxIndicateFrame$5152:
  2075                           	opt callstack 0
  2076                           
  2077                           ; 1 bytes @ 0x61
  2078  0000C1                     	ds	1
  2079  0000C2                     _nwkRxIndicateFrame$5153:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 1 bytes @ 0x62
  2083  0000C2                     	ds	1
  2084  0000C3                     _nwkRxIndicateFrame$5154:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 1 bytes @ 0x63
  2088  0000C3                     	ds	1
  2089  0000C4                     _nwkRxIndicateFrame$5155:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 1 bytes @ 0x64
  2093  0000C4                     	ds	1
  2094  0000C5                     _nwkRxIndicateFrame$5156:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x65
  2098  0000C5                     	ds	1
  2099  0000C6                     _nwkRxIndicateFrame$5157:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x66
  2103  0000C6                     	ds	1
  2104  0000C7                     nwkRxIndicateFrame@header:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 2 bytes @ 0x67
  2108  0000C7                     	ds	2
  2109  0000C9                     nwkRxIndicateFrame@ind:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 12 bytes @ 0x69
  2113  0000C9                     	ds	12
  2114  0000D5                     nwkRxHandleIndication@frame:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x75
  2118  0000D5                     	ds	2
  2119  0000D7                     
  2120                           ; 1 bytes @ 0x77
  2121  0000D7                     	ds	2
  2122  0000D9                     nwkRxHandleIndication@ack:
  2123                           	opt callstack 0
  2124                           
  2125                           ; 1 bytes @ 0x79
  2126  0000D9                     	ds	1
  2127                           
  2128                           	psect	cstackCOMRAM
  2129  000001                     __pcstackCOMRAM:
  2130                           	opt callstack 0
  2131  000001                     ??_TMR0_ISR:
  2132  000001                     
  2133                           ; 1 bytes @ 0x0
  2134  000001                     	ds	1
  2135  000002                     ??_CRC_Initialize:
  2136  000002                     ??_nwkRouteNormalizeRanks:
  2137  000002                     ??_set_parity:
  2138  000002                     ??_set_uart_baud:
  2139  000002                     ??_nwkTxConvertPhyStatus:
  2140  000002                     ?_strlen:
  2141                           	opt callstack 0
  2142  000002                     ?_get_timer0base:
  2143                           	opt callstack 0
  2144  000002                     ?_nwkFrameNext:
  2145                           	opt callstack 0
  2146  000002                     ?_NWK_RouteFindEntry:
  2147                           	opt callstack 0
  2148  000002                     ?_NWK_RouteNewEntry:
  2149                           	opt callstack 0
  2150  000002                     ?_isupper:
  2151                           	opt callstack 0
  2152  000002                     ?_isalpha:
  2153                           	opt callstack 0
  2154  000002                     ?_isdigit:
  2155                           	opt callstack 0
  2156  000002                     ?_isspace:
  2157                           	opt callstack 0
  2158  000002                     ?_strncmp:
  2159                           	opt callstack 0
  2160  000002                     ?_strchr:
  2161                           	opt callstack 0
  2162  000002                     ?_islower:
  2163                           	opt callstack 0
  2164  000002                     ?_CircularBufferSize:
  2165                           	opt callstack 0
  2166  000002                     ?_CRC_ReverseValue:
  2167                           	opt callstack 0
  2168  000002                     ?___wmul:
  2169                           	opt callstack 0
  2170  000002                     ?___lmul:
  2171                           	opt callstack 0
  2172  000002                     ?___llmod:
  2173                           	opt callstack 0
  2174  000002                     ?___xxtofl:
  2175                           	opt callstack 0
  2176  000002                     ?___omul:
  2177                           	opt callstack 0
  2178  000002                     ?___aodiv:
  2179                           	opt callstack 0
  2180  000002                     ?___aomod:
  2181                           	opt callstack 0
  2182  000002                     ?___lodiv:
  2183                           	opt callstack 0
  2184  000002                     ?___lomod:
  2185                           	opt callstack 0
  2186  000002                     get_free_tx_buffer@buf_id:
  2187                           	opt callstack 0
  2188  000002                     SPI1_ExchangeByte@data:
  2189                           	opt callstack 0
  2190  000002                     INTERRUPT_Initialize@state:
  2191                           	opt callstack 0
  2192  000002                     UART1_Read@readValue:
  2193                           	opt callstack 0
  2194  000002                     UART1_Write@txData:
  2195                           	opt callstack 0
  2196  000002                     CRC_8BitDataWrite@data:
  2197                           	opt callstack 0
  2198  000002                     nwkFrameInit@i:
  2199                           	opt callstack 0
  2200  000002                     nwkGroupInit@i:
  2201                           	opt callstack 0
  2202  000002                     nwkRouteInit@i:
  2203                           	opt callstack 0
  2204  000002                     free_tx_buffer@req:
  2205                           	opt callstack 0
  2206  000002                     cmdSendSink@cmd:
  2207                           	opt callstack 0
  2208  000002                     cmdSetTTL@cmd:
  2209                           	opt callstack 0
  2210  000002                     cmdGetRxCnt@atCommand:
  2211                           	opt callstack 0
  2212  000002                     CircularBufferSize@ctx:
  2213                           	opt callstack 0
  2214  000002                     get_timer0base@timer:
  2215                           	opt callstack 0
  2216  000002                     set_timer0base@timer:
  2217                           	opt callstack 0
  2218  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2219                           	opt callstack 0
  2220  000002                     DATAEE_WriteByte@bAdd:
  2221                           	opt callstack 0
  2222  000002                     DATAEE_ReadByte@bAdd:
  2223                           	opt callstack 0
  2224  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2225                           	opt callstack 0
  2226  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2227                           	opt callstack 0
  2228  000002                     UART1_SetErrorHandler@interruptHandler:
  2229                           	opt callstack 0
  2230  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2231                           	opt callstack 0
  2232  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2233                           	opt callstack 0
  2234  000002                     CRC_ReverseValue@crc:
  2235                           	opt callstack 0
  2236  000002                     NWK_OpenEndpoint@handler:
  2237                           	opt callstack 0
  2238  000002                     NWK_DataReq@req:
  2239                           	opt callstack 0
  2240  000002                     nwkFrameFree@frame:
  2241                           	opt callstack 0
  2242  000002                     nwkFrameNext@frame:
  2243                           	opt callstack 0
  2244  000002                     nwkFrameCommandInit@frame:
  2245                           	opt callstack 0
  2246  000002                     NWK_GroupIsMember@group:
  2247                           	opt callstack 0
  2248  000002                     NWK_RouteFindEntry@dst:
  2249                           	opt callstack 0
  2250  000002                     NWK_RouteFreeEntry@entry:
  2251                           	opt callstack 0
  2252  000002                     nwkFrame@nwkFramePayloadSize@frame_4705:
  2253                           	opt callstack 0
  2254  000002                     nwkTxConfirm@frame:
  2255                           	opt callstack 0
  2256  000002                     PHY_SetPanId@panId:
  2257                           	opt callstack 0
  2258  000002                     PHY_SetShortAddr@addr:
  2259                           	opt callstack 0
  2260  000002                     SYS_TimerStarted@timer:
  2261                           	opt callstack 0
  2262  000002                     placeTimer@timer:
  2263                           	opt callstack 0
  2264  000002                     ___wmul@multiplier:
  2265                           	opt callstack 0
  2266  000002                     isalpha@c:
  2267                           	opt callstack 0
  2268  000002                     isdigit@c:
  2269                           	opt callstack 0
  2270  000002                     isspace@c:
  2271                           	opt callstack 0
  2272  000002                     isupper@c:
  2273                           	opt callstack 0
  2274  000002                     memset@dest:
  2275                           	opt callstack 0
  2276  000002                     srand@s:
  2277                           	opt callstack 0
  2278  000002                     strlen@s:
  2279                           	opt callstack 0
  2280  000002                     islower@c:
  2281                           	opt callstack 0
  2282  000002                     strchr@s:
  2283                           	opt callstack 0
  2284  000002                     strncmp@_l:
  2285                           	opt callstack 0
  2286  000002                     DIA_ReadByte@flashAddr:
  2287                           	opt callstack 0
  2288  000002                     ___lmul@multiplier:
  2289                           	opt callstack 0
  2290  000002                     ___llmod@dividend:
  2291                           	opt callstack 0
  2292  000002                     ___xxtofl@val:
  2293                           	opt callstack 0
  2294  000002                     ___omul@multiplier:
  2295                           	opt callstack 0
  2296  000002                     ___aodiv@dividend:
  2297                           	opt callstack 0
  2298  000002                     ___aomod@dividend:
  2299                           	opt callstack 0
  2300  000002                     ___lodiv@dividend:
  2301                           	opt callstack 0
  2302  000002                     ___lomod@dividend:
  2303                           	opt callstack 0
  2304                           
  2305                           ; 8 bytes @ 0x1
  2306  000002                     	ds	1
  2307  000003                     ??_get_free_tx_buffer:
  2308  000003                     putch@txData:
  2309                           	opt callstack 0
  2310  000003                     nwkRouteNormalizeRanks@i:
  2311                           	opt callstack 0
  2312  000003                     SPI1_WriteBlock@block:
  2313                           	opt callstack 0
  2314  000003                     SPI1_ReadBlock@block:
  2315                           	opt callstack 0
  2316  000003                     CRC_Initialize@poly:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 2 bytes @ 0x2
  2320  000003                     	ds	1
  2321  000004                     ??_free_tx_buffer:
  2322  000004                     ??_nwkFrameNext:
  2323  000004                     ??_srand:
  2324  000004                     ??_isupper:
  2325  000004                     ??_isalpha:
  2326  000004                     ??_isdigit:
  2327  000004                     ??_isspace:
  2328  000004                     ??_islower:
  2329  000004                     ??_CircularBufferSize:
  2330  000004                     ??_TMR0_Initialize:
  2331  000004                     ??_CRC_ReverseValue:
  2332  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2333  000004                     set_parity@parity:
  2334                           	opt callstack 0
  2335  000004                     set_uart_baud@i:
  2336                           	opt callstack 0
  2337  000004                     DATAEE_WriteByte@bData:
  2338                           	opt callstack 0
  2339  000004                     NWK_OpenEndpoint@id:
  2340                           	opt callstack 0
  2341  000004                     NWK_RouteFindEntry@multicast:
  2342                           	opt callstack 0
  2343  000004                     nwkTxConfirm@status:
  2344                           	opt callstack 0
  2345  000004                     nwkTxConvertPhyStatus@status:
  2346                           	opt callstack 0
  2347  000004                     get_timer0base@tval:
  2348                           	opt callstack 0
  2349  000004                     set_timer0base@tval:
  2350                           	opt callstack 0
  2351  000004                     NWK_SetAddr@addr:
  2352                           	opt callstack 0
  2353  000004                     NWK_SetPanId@panId:
  2354                           	opt callstack 0
  2355  000004                     nwkDataReqTxConf@frame:
  2356                           	opt callstack 0
  2357  000004                     SYS_TimerStarted@t:
  2358                           	opt callstack 0
  2359  000004                     ___wmul@multiplicand:
  2360                           	opt callstack 0
  2361  000004                     memset@c:
  2362                           	opt callstack 0
  2363  000004                     fputc@c:
  2364                           	opt callstack 0
  2365  000004                     strlen@a:
  2366                           	opt callstack 0
  2367  000004                     strchr@c:
  2368                           	opt callstack 0
  2369  000004                     strncmp@_r:
  2370                           	opt callstack 0
  2371                           
  2372                           ; 2 bytes @ 0x3
  2373  000004                     	ds	1
  2374  000005                     DATAEE_WriteByte@GIEBitValue:
  2375                           	opt callstack 0
  2376  000005                     nwkRxInit@i:
  2377                           	opt callstack 0
  2378  000005                     PHY_DataConf@status:
  2379                           	opt callstack 0
  2380  000005                     SPI1_WriteBlock@blockSize:
  2381                           	opt callstack 0
  2382  000005                     SPI1_ReadBlock@blockSize:
  2383                           	opt callstack 0
  2384  000005                     CRC_Initialize@seed:
  2385                           	opt callstack 0
  2386  000005                     CRC_ReverseValue@reverse:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x4
  2390  000005                     	ds	1
  2391  000006                     ??_strchr:
  2392  000006                     ??___xxtofl:
  2393  000006                     free_tx_buffer@buf_id:
  2394                           	opt callstack 0
  2395  000006                     loadMACAddr@i:
  2396                           	opt callstack 0
  2397  000006                     NWK_Init@i:
  2398                           	opt callstack 0
  2399  000006                     NWK_GroupIsMember@i:
  2400                           	opt callstack 0
  2401  000006                     NWK_RouteNewEntry@i:
  2402                           	opt callstack 0
  2403  000006                     DATAEE_ReadByte_Platform@addr:
  2404                           	opt callstack 0
  2405  000006                     DATAEE_WriteByte_Platform@addr:
  2406                           	opt callstack 0
  2407  000006                     ___wmul@product:
  2408                           	opt callstack 0
  2409  000006                     memset@n:
  2410                           	opt callstack 0
  2411  000006                     fputc@fp:
  2412                           	opt callstack 0
  2413  000006                     strncmp@n:
  2414                           	opt callstack 0
  2415  000006                     ___lmul@multiplicand:
  2416                           	opt callstack 0
  2417  000006                     ___llmod@divisor:
  2418                           	opt callstack 0
  2419                           
  2420                           ; 4 bytes @ 0x5
  2421  000006                     	ds	1
  2422  000007                     NWK_RouteFindEntry@i:
  2423                           	opt callstack 0
  2424  000007                     appDataConf@req:
  2425                           	opt callstack 0
  2426  000007                     SPI1_WriteBlock@data:
  2427                           	opt callstack 0
  2428  000007                     SPI1_ReadBlock@data:
  2429                           	opt callstack 0
  2430  000007                     CRC_ReverseValue@mask:
  2431                           	opt callstack 0
  2432  000007                     NWK_RouteNewEntry@iter:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x6
  2436  000007                     	ds	1
  2437  000008                     ??_memset:
  2438  000008                     ??_fputc:
  2439  000008                     ??_strncmp:
  2440  000008                     ?_toupper:
  2441                           	opt callstack 0
  2442  000008                     ?_strspn:
  2443                           	opt callstack 0
  2444  000008                     ?_strcspn:
  2445                           	opt callstack 0
  2446  000008                     ?_NWK_RouteNextHop:
  2447                           	opt callstack 0
  2448  000008                     DATAEE_ReadByte_Platform@copy3:
  2449                           	opt callstack 0
  2450  000008                     DATAEE_WriteByte_Platform@data:
  2451                           	opt callstack 0
  2452  000008                     nwkTxAckReceived@ind:
  2453                           	opt callstack 0
  2454  000008                     _isspace$7731:
  2455                           	opt callstack 0
  2456  000008                     nwkDataReqTxConf@req:
  2457                           	opt callstack 0
  2458  000008                     NWK_RouteNextHop@dst:
  2459                           	opt callstack 0
  2460  000008                     nwkRouteRemove@dst:
  2461                           	opt callstack 0
  2462  000008                     nwkRouteFrameSent@frame:
  2463                           	opt callstack 0
  2464  000008                     memcpy@d1:
  2465                           	opt callstack 0
  2466  000008                     toupper@c:
  2467                           	opt callstack 0
  2468  000008                     strcspn@s:
  2469                           	opt callstack 0
  2470  000008                     strspn@s:
  2471                           	opt callstack 0
  2472  000008                     placeTimer@timeout:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 4 bytes @ 0x7
  2476  000008                     	ds	1
  2477  000009                     ?_CRC_CalculatedResultGet:
  2478                           	opt callstack 0
  2479  000009                     ?_atoi:
  2480                           	opt callstack 0
  2481  000009                     DATAEE_ReadByte_Platform@copy2:
  2482                           	opt callstack 0
  2483  000009                     SX1276WriteBuffer@buffer:
  2484                           	opt callstack 0
  2485  000009                     CRC_CalculatedResultGet@xorValue:
  2486                           	opt callstack 0
  2487  000009                     nwkDataReqConfirm@req:
  2488                           	opt callstack 0
  2489  000009                     NWK_RouteNewEntry@entry:
  2490                           	opt callstack 0
  2491  000009                     SX1276ReadBuffer@buffer:
  2492                           	opt callstack 0
  2493  000009                     atoi@s:
  2494                           	opt callstack 0
  2495  000009                     strncmp@l:
  2496                           	opt callstack 0
  2497                           
  2498                           ; 2 bytes @ 0x8
  2499  000009                     	ds	1
  2500  00000A                     ??_toupper:
  2501  00000A                     ??_nwkRouteFrameSent:
  2502  00000A                     ?_CircularBufferSpace:
  2503                           	opt callstack 0
  2504  00000A                     DATAEE_ReadByte_Platform@copy1:
  2505                           	opt callstack 0
  2506  00000A                     NWK_RouteNextHop@multicast:
  2507                           	opt callstack 0
  2508  00000A                     nwkRouteRemove@multicast:
  2509                           	opt callstack 0
  2510  00000A                     SX1276WriteBuffer@size:
  2511                           	opt callstack 0
  2512  00000A                     ___llmod@counter:
  2513                           	opt callstack 0
  2514  00000A                     ___xxtofl@sign:
  2515                           	opt callstack 0
  2516  00000A                     CircularBufferSpace@ctx:
  2517                           	opt callstack 0
  2518  00000A                     memcpy@s1:
  2519                           	opt callstack 0
  2520  00000A                     memset@k:
  2521                           	opt callstack 0
  2522  00000A                     strcspn@c:
  2523                           	opt callstack 0
  2524  00000A                     strspn@c:
  2525                           	opt callstack 0
  2526  00000A                     ___lmul@product:
  2527                           	opt callstack 0
  2528  00000A                     ___omul@multiplicand:
  2529                           	opt callstack 0
  2530  00000A                     ___aodiv@divisor:
  2531                           	opt callstack 0
  2532  00000A                     ___aomod@divisor:
  2533                           	opt callstack 0
  2534  00000A                     ___lodiv@divisor:
  2535                           	opt callstack 0
  2536  00000A                     ___lomod@divisor:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 8 bytes @ 0x9
  2540  00000A                     	ds	1
  2541  00000B                     ??_CRC_CalculatedResultGet:
  2542  00000B                     ??_atoi:
  2543  00000B                     ??_nwkDataReqConfirm:
  2544  00000B                     SX1276ReadBuffer@size:
  2545                           	opt callstack 0
  2546  00000B                     SX1276WriteBuffer@addr:
  2547                           	opt callstack 0
  2548  00000B                     ___xxtofl@exp:
  2549                           	opt callstack 0
  2550  00000B                     NWK_RouteNextHop@entry:
  2551                           	opt callstack 0
  2552  00000B                     nwkRouteRemove@entry:
  2553                           	opt callstack 0
  2554  00000B                     nwkRouteFrameReceived@frame:
  2555                           	opt callstack 0
  2556  00000B                     nwkTxAckReceived@command:
  2557                           	opt callstack 0
  2558  00000B                     strncmp@r:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0xA
  2562  00000B                     	ds	1
  2563  00000C                     ??_strspn:
  2564  00000C                     ??_strcspn:
  2565  00000C                     ??_CircularBufferSpace:
  2566  00000C                     SX1276ReadBuffer@addr:
  2567                           	opt callstack 0
  2568  00000C                     nwkRouteFrameSent@entry:
  2569                           	opt callstack 0
  2570  00000C                     placeTimer@prev:
  2571                           	opt callstack 0
  2572  00000C                     memcpy@n:
  2573                           	opt callstack 0
  2574  00000C                     memset@s:
  2575                           	opt callstack 0
  2576  00000C                     ___xxtofl@arg:
  2577                           	opt callstack 0
  2578                           
  2579                           ; 4 bytes @ 0xB
  2580  00000C                     	ds	1
  2581  00000D                     ??_nwkRouteFrameReceived:
  2582  00000D                     ?_strstr:
  2583                           	opt callstack 0
  2584  00000D                     ?_stoa:
  2585                           	opt callstack 0
  2586  00000D                     nwkRouteErrorReceived@ind:
  2587                           	opt callstack 0
  2588  00000D                     SX1276Read@addr:
  2589                           	opt callstack 0
  2590  00000D                     nwkDataReqConfirm@prev:
  2591                           	opt callstack 0
  2592  00000D                     nwkRoutePrepareTx@frame:
  2593                           	opt callstack 0
  2594  00000D                     nwkTxAckReceived@frame:
  2595                           	opt callstack 0
  2596  00000D                     stoa@fp:
  2597                           	opt callstack 0
  2598  00000D                     fputs@s:
  2599                           	opt callstack 0
  2600  00000D                     strstr@h:
  2601                           	opt callstack 0
  2602  00000D                     strcspn@i:
  2603                           	opt callstack 0
  2604  00000D                     strspn@i:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0xC
  2608  00000D                     	ds	1
  2609  00000E                     ?_nwkFrameAlloc:
  2610                           	opt callstack 0
  2611  00000E                     SX1276Read@data:
  2612                           	opt callstack 0
  2613  00000E                     memcpy@tmp:
  2614                           	opt callstack 0
  2615  00000E                     CRC_CalculatedResultGet@mask:
  2616                           	opt callstack 0
  2617  00000E                     placeTimer@t:
  2618                           	opt callstack 0
  2619  00000E                     _toupper$7870:
  2620                           	opt callstack 0
  2621                           
  2622                           ; 2 bytes @ 0xD
  2623  00000E                     	ds	1
  2624  00000F                     ?_strtok:
  2625                           	opt callstack 0
  2626  00000F                     ?_getSignalBandwidth:
  2627                           	opt callstack 0
  2628  00000F                     ?_getSpreadingFactor:
  2629                           	opt callstack 0
  2630  00000F                     SX1276Write@data:
  2631                           	opt callstack 0
  2632  00000F                     stoa@s:
  2633                           	opt callstack 0
  2634  00000F                     nwkRouteErrorReceived@command:
  2635                           	opt callstack 0
  2636  00000F                     atoi@neg:
  2637                           	opt callstack 0
  2638  00000F                     memcpy@d:
  2639                           	opt callstack 0
  2640  00000F                     fputs@fp:
  2641                           	opt callstack 0
  2642  00000F                     strstr@n:
  2643                           	opt callstack 0
  2644  00000F                     strtok@s:
  2645                           	opt callstack 0
  2646                           
  2647                           ; 2 bytes @ 0xE
  2648  00000F                     	ds	1
  2649  000010                     ??_nwkFrameAlloc:
  2650  000010                     ??_stoa:
  2651  000010                     ?___strtoxl:
  2652                           	opt callstack 0
  2653  000010                     CRC_CalculatedResultGet@reverse:
  2654                           	opt callstack 0
  2655  000010                     SX1276Write@addr:
  2656                           	opt callstack 0
  2657  000010                     SYS_TimerStart@timer:
  2658                           	opt callstack 0
  2659  000010                     ___strtoxl@s:
  2660                           	opt callstack 0
  2661  000010                     ___flge@ff1:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 4 bytes @ 0xF
  2665  000010                     	ds	1
  2666  000011                     ??_setCodingRate4:
  2667  000011                     ??_cad:
  2668  000011                     nwkRouteFrameReceived@discovery:
  2669                           	opt callstack 0
  2670  000011                     setTxPower@power:
  2671                           	opt callstack 0
  2672  000011                     setSyncWord@sw:
  2673                           	opt callstack 0
  2674  000011                     receive@size:
  2675                           	opt callstack 0
  2676  000011                     fputs@c:
  2677                           	opt callstack 0
  2678  000011                     CRC_CalculatedResultGet@result:
  2679                           	opt callstack 0
  2680  000011                     nwkRoutePrepareTx@header:
  2681                           	opt callstack 0
  2682  000011                     setPreambleLength@length:
  2683                           	opt callstack 0
  2684  000011                     PHY_DataReq@data:
  2685                           	opt callstack 0
  2686  000011                     _atoi$7704:
  2687                           	opt callstack 0
  2688  000011                     memcpy@s:
  2689                           	opt callstack 0
  2690  000011                     strstr@nl:
  2691                           	opt callstack 0
  2692  000011                     strtok@sep:
  2693                           	opt callstack 0
  2694  000011                     stoa@nuls:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 7 bytes @ 0x10
  2698  000011                     	ds	1
  2699  000012                     nwkFrameAlloc@i:
  2700                           	opt callstack 0
  2701  000012                     _nwkRouteFrameReceived$4119:
  2702                           	opt callstack 0
  2703  000012                     setCodingRate4@cr:
  2704                           	opt callstack 0
  2705  000012                     ___aodiv@counter:
  2706                           	opt callstack 0
  2707  000012                     ___aomod@counter:
  2708                           	opt callstack 0
  2709  000012                     ___lomod@counter:
  2710                           	opt callstack 0
  2711  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2712                           	opt callstack 0
  2713  000012                     nwkRxRejectDuplicate@header:
  2714                           	opt callstack 0
  2715  000012                     nwkTxAckWaitTimerHandler@timer:
  2716                           	opt callstack 0
  2717  000012                     nwkTxDelayTimerHandler@timer:
  2718                           	opt callstack 0
  2719  000012                     cad@RSSI:
  2720                           	opt callstack 0
  2721  000012                     fputs@i:
  2722                           	opt callstack 0
  2723  000012                     ___strtoxl@endptr:
  2724                           	opt callstack 0
  2725  000012                     ___omul@product:
  2726                           	opt callstack 0
  2727  000012                     ___lodiv@quotient:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 8 bytes @ 0x11
  2731  000012                     	ds	1
  2732  000013                     ??_getSignalBandwidth:
  2733  000013                     ??_getSpreadingFactor:
  2734  000013                     ?_crc16_app:
  2735                           	opt callstack 0
  2736  000013                     PHY_DataInd@ind:
  2737                           	opt callstack 0
  2738  000013                     setCodingRate4@denominator:
  2739                           	opt callstack 0
  2740  000013                     PHY_DataReq@size:
  2741                           	opt callstack 0
  2742  000013                     ___aodiv@sign:
  2743                           	opt callstack 0
  2744  000013                     ___aomod@sign:
  2745                           	opt callstack 0
  2746  000013                     CircularBufferPushBack@ctx:
  2747                           	opt callstack 0
  2748  000013                     crc16_app@dptr:
  2749                           	opt callstack 0
  2750  000013                     nwkRouteFrameReceived@entry:
  2751                           	opt callstack 0
  2752  000013                     _atoi$7706:
  2753                           	opt callstack 0
  2754                           
  2755                           ; 2 bytes @ 0x12
  2756  000013                     	ds	1
  2757  000014                     ??_nwkTxTaskHandler:
  2758  000014                     ??_PHY_DataInd:
  2759  000014                     ??_nwkRxRejectDuplicate:
  2760  000014                     ?_abs:
  2761                           	opt callstack 0
  2762  000014                     ?_pad:
  2763                           	opt callstack 0
  2764  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2765                           	opt callstack 0
  2766  000014                     cad@temp:
  2767                           	opt callstack 0
  2768  000014                     pad@fp:
  2769                           	opt callstack 0
  2770  000014                     abs@a:
  2771                           	opt callstack 0
  2772  000014                     ___strtoxl@base:
  2773                           	opt callstack 0
  2774  000014                     ___flge@ff2:
  2775                           	opt callstack 0
  2776  000014                     ___aodiv@quotient:
  2777                           	opt callstack 0
  2778                           
  2779                           ; 8 bytes @ 0x13
  2780  000014                     	ds	1
  2781  000015                     CircularBufferPushBack@val:
  2782                           	opt callstack 0
  2783  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2784                           	opt callstack 0
  2785  000015                     getSignalBandwidth@bw:
  2786                           	opt callstack 0
  2787  000015                     _atoi$7705:
  2788                           	opt callstack 0
  2789  000015                     crc16_app@len:
  2790                           	opt callstack 0
  2791  000015                     nwkRouteFrameReceived@header:
  2792                           	opt callstack 0
  2793                           
  2794                           ; 2 bytes @ 0x14
  2795  000015                     	ds	1
  2796  000016                     ??_abs:
  2797  000016                     ??_CircularBufferPushBack:
  2798  000016                     ?___lldiv:
  2799                           	opt callstack 0
  2800  000016                     nwkTxAckWaitTimerHandler@restart:
  2801                           	opt callstack 0
  2802  000016                     nwkTxDelayTimerHandler@restart:
  2803                           	opt callstack 0
  2804  000016                     ___strtoxl@is_signed:
  2805                           	opt callstack 0
  2806  000016                     nwkTxTaskHandler@frame:
  2807                           	opt callstack 0
  2808  000016                     pad@buf:
  2809                           	opt callstack 0
  2810  000016                     atoi@n:
  2811                           	opt callstack 0
  2812  000016                     ___lldiv@dividend:
  2813                           	opt callstack 0
  2814                           
  2815                           ; 4 bytes @ 0x15
  2816  000016                     	ds	1
  2817  000017                     ??___strtoxl:
  2818  000017                     crc16_app@seed:
  2819                           	opt callstack 0
  2820  000017                     PHY_DataInd@frame:
  2821                           	opt callstack 0
  2822  000017                     nwkTxAckWaitTimerHandler@frame:
  2823                           	opt callstack 0
  2824  000017                     nwkTxDelayTimerHandler@frame:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x16
  2828  000017                     	ds	1
  2829  000018                     ??___flge:
  2830  000018                     nwkRxRejectDuplicate@shift:
  2831                           	opt callstack 0
  2832  000018                     pad@p:
  2833                           	opt callstack 0
  2834  000018                     stoa@i:
  2835                           	opt callstack 0
  2836                           
  2837                           ; 2 bytes @ 0x17
  2838  000018                     	ds	1
  2839  000019                     ??_SYS_TimerTaskHandler:
  2840  000019                     nwkRxRejectDuplicate@i:
  2841                           	opt callstack 0
  2842  000019                     DIO0_Receive_ISR@packetLength:
  2843                           	opt callstack 0
  2844  000019                     crc16_app@result:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 2 bytes @ 0x18
  2848  000019                     	ds	1
  2849  00001A                     ??_pad:
  2850  00001A                     ?_rand:
  2851                           	opt callstack 0
  2852  00001A                     nwkRxRejectDuplicate@diff:
  2853                           	opt callstack 0
  2854  00001A                     DIO0_Receive_ISR@irqFlags:
  2855                           	opt callstack 0
  2856  00001A                     ___lodiv@counter:
  2857                           	opt callstack 0
  2858  00001A                     CircularBufferPushBack@write_pos:
  2859                           	opt callstack 0
  2860  00001A                     stoa@w:
  2861                           	opt callstack 0
  2862  00001A                     ___lldiv@divisor:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 4 bytes @ 0x19
  2866  00001A                     	ds	1
  2867  00001B                     crc16_app@ptr:
  2868                           	opt callstack 0
  2869  00001B                     nwkRxRejectDuplicate@freeEntry:
  2870                           	opt callstack 0
  2871  00001B                     pad@i:
  2872                           	opt callstack 0
  2873  00001B                     ___strtoxl@prev_a:
  2874                           	opt callstack 0
  2875  00001B                     DIO0_Receive_ISR@ind:
  2876                           	opt callstack 0
  2877                           
  2878                           ; 5 bytes @ 0x1A
  2879  00001B                     	ds	1
  2880  00001C                     ??_rand:
  2881  00001C                     stoa@cp:
  2882                           	opt callstack 0
  2883  00001C                     queueLedEvent@duration:
  2884                           	opt callstack 0
  2885                           
  2886                           ; 2 bytes @ 0x1B
  2887  00001C                     	ds	1
  2888  00001D                     SYS_TimerTaskHandler@cnt:
  2889                           	opt callstack 0
  2890  00001D                     crc16_app@i:
  2891                           	opt callstack 0
  2892  00001D                     nwkRxRejectDuplicate@entry:
  2893                           	opt callstack 0
  2894  00001D                     pad@w:
  2895                           	opt callstack 0
  2896  00001D                     stoa@p:
  2897                           	opt callstack 0
  2898                           
  2899                           ; 2 bytes @ 0x1C
  2900  00001D                     	ds	1
  2901  00001E                     queueLedEvent@LEDState:
  2902                           	opt callstack 0
  2903  00001E                     SYS_TimerTaskHandler@elapsed:
  2904                           	opt callstack 0
  2905  00001E                     ___lldiv@quotient:
  2906                           	opt callstack 0
  2907                           
  2908                           ; 4 bytes @ 0x1D
  2909  00001E                     	ds	1
  2910  00001F                     ?_dtoa:
  2911                           	opt callstack 0
  2912  00001F                     ?_utoa:
  2913                           	opt callstack 0
  2914  00001F                     ?_xtoa:
  2915                           	opt callstack 0
  2916  00001F                     dtoa@fp:
  2917                           	opt callstack 0
  2918  00001F                     stoa@l:
  2919                           	opt callstack 0
  2920  00001F                     utoa@fp:
  2921                           	opt callstack 0
  2922  00001F                     xtoa@fp:
  2923                           	opt callstack 0
  2924  00001F                     ___strtoxl$7892:
  2925                           	opt callstack 0
  2926  00001F                     queueLedEvent@temp:
  2927                           	opt callstack 0
  2928                           
  2929                           ; 3 bytes @ 0x1E
  2930  00001F                     	ds	2
  2931  000021                     ___strtoxl$7894:
  2932                           	opt callstack 0
  2933  000021                     dtoa@d:
  2934                           	opt callstack 0
  2935  000021                     utoa@d:
  2936                           	opt callstack 0
  2937  000021                     xtoa@d:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 8 bytes @ 0x20
  2941  000021                     	ds	1
  2942  000022                     queue_serial_led_event@i:
  2943                           	opt callstack 0
  2944  000022                     ___lldiv@counter:
  2945                           	opt callstack 0
  2946  000022                     SYS_TimerTaskHandler@timer:
  2947                           	opt callstack 0
  2948                           
  2949                           ; 2 bytes @ 0x21
  2950  000022                     	ds	1
  2951  000023                     ??_setSpreadingFactor:
  2952  000023                     ___strtoxl$7895:
  2953                           	opt callstack 0
  2954  000023                     setFrequency@frequency:
  2955                           	opt callstack 0
  2956  000023                     setSignalBandwidth@sbw:
  2957                           	opt callstack 0
  2958  000023                     computeFRF@frequency:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 4 bytes @ 0x22
  2962  000023                     	ds	1
  2963  000024                     nwkTxFrame@frame:
  2964                           	opt callstack 0
  2965  000024                     nwkTxBroadcastFrame@frame:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 2 bytes @ 0x23
  2969  000024                     	ds	1
  2970  000025                     ___strtoxl$7893:
  2971                           	opt callstack 0
  2972                           
  2973                           ; 1 bytes @ 0x24
  2974  000025                     	ds	1
  2975  000026                     ??_nwkTxBroadcastFrame:
  2976  000026                     ___strtoxl@conv_done:
  2977                           	opt callstack 0
  2978                           
  2979                           ; 1 bytes @ 0x25
  2980  000026                     	ds	1
  2981  000027                     ??_setSignalBandwidth:
  2982  000027                     nwkTxBroadcastFrame@newFrame:
  2983                           	opt callstack 0
  2984  000027                     setFrequency@num_mod:
  2985                           	opt callstack 0
  2986  000027                     computeFRF@num_mod:
  2987                           	opt callstack 0
  2988  000027                     ___strtoxl@limit:
  2989                           	opt callstack 0
  2990  000027                     _setSpreadingFactor$8634:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 4 bytes @ 0x26
  2994  000027                     	ds	1
  2995  000028                     nwkTxFrame@header:
  2996                           	opt callstack 0
  2997                           
  2998                           ; 2 bytes @ 0x27
  2999  000028                     	ds	1
  3000  000029                     ??_dtoa:
  3001  000029                     ??_utoa:
  3002  000029                     xtoa@x:
  3003                           	opt callstack 0
  3004  000029                     nwkRxHandleReceivedFrame@frame:
  3005                           	opt callstack 0
  3006                           
  3007                           ; 2 bytes @ 0x28
  3008  000029                     	ds	1
  3009  00002A                     ??_xtoa:
  3010  00002A                     nwkDataReqSendFrame@req:
  3011                           	opt callstack 0
  3012  00002A                     nwkRouteSendRouteError@src:
  3013                           	opt callstack 0
  3014  00002A                     nwkRxSendAck@frame:
  3015                           	opt callstack 0
  3016                           
  3017                           ; 2 bytes @ 0x29
  3018  00002A                     	ds	1
  3019  00002B                     ??_nwkRxHandleReceivedFrame:
  3020  00002B                     setSpreadingFactor@sf:
  3021                           	opt callstack 0
  3022  00002B                     ___strtoxl@sign:
  3023                           	opt callstack 0
  3024  00002B                     setFrequency@num:
  3025                           	opt callstack 0
  3026  00002B                     computeFRF@num:
  3027                           	opt callstack 0
  3028  00002B                     _setSignalBandwidth$8635:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 4 bytes @ 0x2A
  3032  00002B                     	ds	1
  3033  00002C                     ??_nwkDataReqSendFrame:
  3034  00002C                     ___strtoxl@skip:
  3035                           	opt callstack 0
  3036  00002C                     nwkRouteSendRouteError@dst:
  3037                           	opt callstack 0
  3038  00002C                     nwkRxSendAck@command:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 2 bytes @ 0x2B
  3042  00002C                     	ds	1
  3043  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3044                           	opt callstack 0
  3045  00002D                     nwkDataReqSendFrame@mcHeader:
  3046                           	opt callstack 0
  3047  00002D                     ___strtoxl@a:
  3048                           	opt callstack 0
  3049                           
  3050                           ; 4 bytes @ 0x2C
  3051  00002D                     	ds	1
  3052  00002E                     nwkRouteSendRouteError@multicast:
  3053                           	opt callstack 0
  3054  00002E                     nwkRxHandleReceivedFrame@member:
  3055                           	opt callstack 0
  3056  00002E                     nwkRxSendAck@ack:
  3057                           	opt callstack 0
  3058                           
  3059                           ; 2 bytes @ 0x2D
  3060  00002E                     	ds	1
  3061  00002F                     computeFRF@i:
  3062                           	opt callstack 0
  3063  00002F                     PHY_SetChannel@channel:
  3064                           	opt callstack 0
  3065  00002F                     nwkDataReqSendFrame@frame:
  3066                           	opt callstack 0
  3067  00002F                     nwkRouteSendRouteError@command:
  3068                           	opt callstack 0
  3069  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3070                           	opt callstack 0
  3071  00002F                     setSignalBandwidth@bw:
  3072                           	opt callstack 0
  3073                           
  3074                           ; 4 bytes @ 0x2E
  3075  00002F                     	ds	1
  3076  000030                     ??_bootLoadApplication:
  3077                           
  3078                           ; 1 bytes @ 0x2F
  3079  000030                     	ds	1
  3080  000031                     ??_nwkDataReqTaskHandler:
  3081  000031                     nwkRouteSendRouteError@frame:
  3082                           	opt callstack 0
  3083  000031                     nwkRxHandleReceivedFrame@header:
  3084                           	opt callstack 0
  3085  000031                     _dtoa$7201:
  3086                           	opt callstack 0
  3087  000031                     utoa@p:
  3088                           	opt callstack 0
  3089  000031                     ___strtoxl@cp:
  3090                           	opt callstack 0
  3091                           
  3092                           ; 2 bytes @ 0x30
  3093  000031                     	ds	1
  3094  000032                     bootLoadApplication@buf_id:
  3095                           	opt callstack 0
  3096  000032                     _xtoa$7229:
  3097                           	opt callstack 0
  3098                           
  3099                           ; 2 bytes @ 0x31
  3100  000032                     	ds	1
  3101  000033                     ??_initRadio:
  3102  000033                     ___strtoxl@c:
  3103                           	opt callstack 0
  3104  000033                     bootLoadApplication@temp:
  3105                           	opt callstack 0
  3106  000033                     nwkDataReqTaskHandler@req:
  3107                           	opt callstack 0
  3108  000033                     nwkRouteFrame@frame:
  3109                           	opt callstack 0
  3110  000033                     dtoa@p:
  3111                           	opt callstack 0
  3112  000033                     utoa@w:
  3113                           	opt callstack 0
  3114                           
  3115                           ; 2 bytes @ 0x32
  3116  000033                     	ds	1
  3117  000034                     ?_strtoul:
  3118                           	opt callstack 0
  3119  000034                     ?_strtol:
  3120                           	opt callstack 0
  3121  000034                     strtol@s:
  3122                           	opt callstack 0
  3123  000034                     _xtoa$7230:
  3124                           	opt callstack 0
  3125  000034                     strtoul@s:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 2 bytes @ 0x33
  3129  000034                     	ds	1
  3130  000035                     bootLoadApplication@i:
  3131                           	opt callstack 0
  3132  000035                     strtol@endptr:
  3133                           	opt callstack 0
  3134  000035                     nwkRouteFrame@header:
  3135                           	opt callstack 0
  3136  000035                     dtoa@w:
  3137                           	opt callstack 0
  3138  000035                     utoa@n:
  3139                           	opt callstack 0
  3140                           
  3141                           ; 8 bytes @ 0x34
  3142  000035                     	ds	1
  3143  000036                     xtoa@p:
  3144                           	opt callstack 0
  3145  000036                     strtol@base:
  3146                           	opt callstack 0
  3147  000036                     strtoul@endptr:
  3148                           	opt callstack 0
  3149                           
  3150                           ; 2 bytes @ 0x35
  3151  000036                     	ds	1
  3152  000037                     initRadio@version:
  3153                           	opt callstack 0
  3154  000037                     dtoa@s:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 2 bytes @ 0x36
  3158  000037                     	ds	1
  3159  000038                     initRadio@wideRSSI:
  3160                           	opt callstack 0
  3161  000038                     xtoa@w:
  3162                           	opt callstack 0
  3163  000038                     strtoul@base:
  3164                           	opt callstack 0
  3165                           
  3166                           ; 2 bytes @ 0x37
  3167  000038                     	ds	1
  3168  000039                     dtoa@n:
  3169                           	opt callstack 0
  3170                           
  3171                           ; 8 bytes @ 0x38
  3172  000039                     	ds	1
  3173  00003A                     ??_radio_engine:
  3174  00003A                     cmdSetBaud@atCommand:
  3175                           	opt callstack 0
  3176  00003A                     xtoa@n:
  3177                           	opt callstack 0
  3178                           
  3179                           ; 8 bytes @ 0x39
  3180  00003A                     	ds	2
  3181  00003C                     cmdSetBaud@tempbaud:
  3182                           	opt callstack 0
  3183                           
  3184                           ; 1 bytes @ 0x3B
  3185  00003C                     	ds	1
  3186  00003D                     cmdSetBaud@ptr:
  3187                           	opt callstack 0
  3188  00003D                     utoa@i:
  3189                           	opt callstack 0
  3190                           
  3191                           ; 2 bytes @ 0x3C
  3192  00003D                     	ds	4
  3193  000041                     dtoa@i:
  3194                           	opt callstack 0
  3195                           
  3196                           ; 2 bytes @ 0x40
  3197  000041                     	ds	1
  3198  000042                     xtoa@i:
  3199                           	opt callstack 0
  3200                           
  3201                           ; 2 bytes @ 0x41
  3202  000042                     	ds	2
  3203  000044                     xtoa@c:
  3204                           	opt callstack 0
  3205                           
  3206                           ; 2 bytes @ 0x43
  3207  000044                     	ds	2
  3208  000046                     ?_vfpfcnvrt:
  3209                           	opt callstack 0
  3210  000046                     vfpfcnvrt@fp:
  3211                           	opt callstack 0
  3212                           
  3213                           ; 2 bytes @ 0x45
  3214  000046                     	ds	2
  3215  000048                     vfpfcnvrt@fmt:
  3216                           	opt callstack 0
  3217                           
  3218                           ; 1 bytes @ 0x47
  3219  000048                     	ds	1
  3220  000049                     vfpfcnvrt@ap:
  3221                           	opt callstack 0
  3222                           
  3223                           ; 1 bytes @ 0x48
  3224  000049                     	ds	1
  3225  00004A                     ??_vfpfcnvrt:
  3226                           
  3227                           ; 1 bytes @ 0x49
  3228  00004A                     	ds	4
  3229  00004E                     ?_vfprintf:
  3230                           	opt callstack 0
  3231  00004E                     vfprintf@fp:
  3232                           	opt callstack 0
  3233                           
  3234                           ; 2 bytes @ 0x4D
  3235  00004E                     	ds	2
  3236  000050                     vfprintf@fmt:
  3237                           	opt callstack 0
  3238                           
  3239                           ; 2 bytes @ 0x4F
  3240  000050                     	ds	2
  3241  000052                     vfprintf@ap:
  3242                           	opt callstack 0
  3243                           
  3244                           ; 1 bytes @ 0x51
  3245  000052                     	ds	1
  3246  000053                     vfprintf@cfmt:
  3247                           	opt callstack 0
  3248                           
  3249                           ; 2 bytes @ 0x52
  3250  000053                     	ds	2
  3251  000055                     ?_printf:
  3252                           	opt callstack 0
  3253  000055                     printf@fmt:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 2 bytes @ 0x54
  3257  000055                     	ds	6
  3258  00005B                     
  3259                           ; 1 bytes @ 0x5A
  3260  00005B                     	ds	2
  3261  00005D                     printf@ap:
  3262                           	opt callstack 0
  3263                           
  3264                           ; 1 bytes @ 0x5C
  3265  00005D                     	ds	1
  3266  00005E                     
  3267                           ; 1 bytes @ 0x5D
  3268 ;;
  3269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3270 ;;
  3271 ;; *************** function _main *****************
  3272 ;; Defined at:
  3273 ;;		line 51 in file "main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 6/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:        0 bytes
  3292 ;; Hardware stack levels required when called:   22
  3293 ;; This function calls:
  3294 ;;		_SYSTEM_Initialize
  3295 ;;		_SYS_Init
  3296 ;;		_SYS_TaskHandler
  3297 ;;		_TMR0_SetInterruptHandler
  3298 ;;		_bootLoadApplication
  3299 ;;		_processATCommand
  3300 ;; This function is called by:
  3301 ;;		Startup code after reset
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text0
  3306  007EF2                     __ptext0:
  3307                           	opt callstack 0
  3308  007EF2                     _main:
  3309                           	opt callstack 9
  3310                           
  3311                           ;main.c: 54:     SYSTEM_Initialize();
  3312                           
  3313                           ;incstack = 0
  3314  007EF2  EC42  F040         	call	_SYSTEM_Initialize	;wreg free
  3315                           
  3316                           ; BSR set to: 61
  3317                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3318  007EF6  8ED2               	bsf	210,7,c	;volatile
  3319                           
  3320                           ; BSR set to: 61
  3321                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3322  007EF8  8CD2               	bsf	210,6,c	;volatile
  3323                           
  3324                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3325  007EFA  0EF6               	movlw	low _Timer0Handler
  3326  007EFC  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3327  007EFE  0E73               	movlw	high _Timer0Handler
  3328  007F00  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3329  007F02  EC4F  F042         	call	_TMR0_SetInterruptHandler	;wreg free
  3330                           
  3331                           ;main.c: 73:     SYS_Init();
  3332  007F06  EC25  F042         	call	_SYS_Init	;wreg free
  3333                           
  3334                           ; BSR set to: 2
  3335                           ;main.c: 74:     bootLoadApplication();
  3336  007F0A  EC7A  F00F         	call	_bootLoadApplication	;wreg free
  3337  007F0E  86BA               	bsf	186,3,c	;volatile
  3338  007F10                     l16178:
  3339                           
  3340                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3341  007F10  EC17  F042         	call	_SYS_TaskHandler	;wreg free
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;main.c: 79:         processATCommand();
  3345  007F14  EC47  F01B         	call	_processATCommand	;wreg free
  3346  007F18  D7FB               	goto	l16178
  3347  007F1A                     __end_of_main:
  3348                           	opt callstack 0
  3349                           
  3350 ;; *************** function _processATCommand *****************
  3351 ;; Defined at:
  3352 ;;		line 1008 in file "../app/app_src/application.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  data            1   75[BANK0 ] unsigned char 
  3357 ;;  data            1   76[BANK0 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 3F/0
  3364 ;;		On exit  : 6/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        4 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:   19
  3374 ;; This function calls:
  3375 ;;		_UART1_Read
  3376 ;;		_UART1_is_rx_ready
  3377 ;;		_executeATCommand
  3378 ;;		_get_timer0base
  3379 ;;		_memset
  3380 ;;		_queue_serial_led_event
  3381 ;;		_set_timer0base
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text1
  3388  00368E                     __ptext1:
  3389                           	opt callstack 0
  3390  00368E                     _processATCommand:
  3391                           	opt callstack 11
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;../app/app_src/application.c: 1011:     if(tx_done && U1ERRIRbits.TXMTIF){
  3395                           
  3396                           ;incstack = 0
  3397  00368E  51F1               	movf	_tx_done& (0+255),w,b	;volatile
  3398  003690  B4D8               	btfsc	status,2,c
  3399  003692  D006               	goto	l15948
  3400                           
  3401                           ; BSR set to: 0
  3402  003694  013D               	movlb	61	; () banked
  3403  003696  AFF9               	btfss	249,7,b	;volatile
  3404  003698  D003               	goto	l15948
  3405                           
  3406                           ; BSR set to: 61
  3407                           ;../app/app_src/application.c: 1013:        tx_done = 0;
  3408  00369A  0E00               	movlw	0
  3409  00369C  0100               	movlb	0	; () banked
  3410  00369E  6FF1               	movwf	_tx_done& (0+255),b	;volatile
  3411  0036A0                     l15948:
  3412                           
  3413                           ;../app/app_src/application.c: 1016:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3414  0036A0  0100               	movlb	0	; () banked
  3415  0036A2  05EF               	decf	_atStateVar& (0+255),w,b
  3416  0036A4  A4D8               	btfss	status,2,c
  3417  0036A6  D004               	goto	u15810
  3418                           
  3419                           ; BSR set to: 0
  3420  0036A8  0E05               	movlw	5
  3421  0036AA  19EF               	xorwf	_atStateVar& (0+255),w,b
  3422  0036AC  B4D8               	btfsc	status,2,c
  3423  0036AE  D08D               	goto	l16018
  3424  0036B0                     u15810:
  3425                           
  3426                           ; BSR set to: 0
  3427  0036B0  0EFD               	movlw	low _ATTimeoutTimer
  3428  0036B2  6E02               	movwf	get_timer0base@timer^0,c
  3429  0036B4  6A03               	clrf	(get_timer0base@timer+1)^0,c
  3430  0036B6  EC39  F03F         	call	_get_timer0base	;wreg free
  3431  0036BA  5002               	movf	?_get_timer0base^0,w,c
  3432  0036BC  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3433  0036BE  A4D8               	btfss	status,2,c
  3434  0036C0  D084               	goto	l16018
  3435                           
  3436                           ; BSR set to: 57
  3437                           ;../app/app_src/application.c: 1017:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1018:         atStateVar = resetATMachine;
  3438  0036C2  0E06               	movlw	6
  3439  0036C4  0100               	movlb	0	; () banked
  3440  0036C6  6FEF               	movwf	_atStateVar& (0+255),b
  3441  0036C8  D080               	goto	l16018
  3442  0036CA                     l15956:
  3443                           
  3444                           ;../app/app_src/application.c: 1022:             atStateVar = resetATMachine;
  3445  0036CA  0E06               	movlw	6
  3446  0036CC  0100               	movlb	0	; () banked
  3447  0036CE  6FEF               	movwf	_atStateVar& (0+255),b
  3448                           
  3449                           ;../app/app_src/application.c: 1023:             break;
  3450  0036D0  0012               	return	
  3451  0036D2                     l15958:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;../app/app_src/application.c: 1026:             if(UART1_is_rx_ready()){
  3455  0036D2  EC10  F042         	call	_UART1_is_rx_ready	;wreg free
  3456  0036D6  0900               	iorlw	0
  3457  0036D8  B4D8               	btfsc	status,2,c
  3458  0036DA  0012               	return	
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;../app/app_src/application.c: 1028:                 if(UART1_Read() == 'A')
  3462  0036DC  EC2E  F03B         	call	_UART1_Read	;wreg free
  3463  0036E0  0A41               	xorlw	65
  3464  0036E2  A4D8               	btfss	status,2,c
  3465  0036E4  0012               	return	
  3466                           
  3467                           ; BSR set to: 57
  3468                           ;../app/app_src/application.c: 1029:                 {;../app/app_src/application.c: 103
      +                          1:                     atStateVar = lookingForT;
  3469  0036E6  0E02               	movlw	2
  3470  0036E8  0100               	movlb	0	; () banked
  3471  0036EA  6FEF               	movwf	_atStateVar& (0+255),b
  3472  0036EC                     l15964:
  3473                           
  3474                           ;../app/app_src/application.c: 1032:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3475  0036EC  0EFD               	movlw	low _ATTimeoutTimer
  3476  0036EE  6E02               	movwf	set_timer0base@timer^0,c
  3477  0036F0  6A03               	clrf	(set_timer0base@timer+1)^0,c
  3478  0036F2  0E03               	movlw	3
  3479  0036F4  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3480  0036F6  0EE8               	movlw	232
  3481  0036F8  6E04               	movwf	set_timer0base@tval^0,c
  3482  0036FA  EC75  F040         	call	_set_timer0base	;wreg free
  3483  0036FE  0012               	return	
  3484  003700                     l15966:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;../app/app_src/application.c: 1037:             if(UART1_is_rx_ready()){
  3488  003700  EC10  F042         	call	_UART1_is_rx_ready	;wreg free
  3489  003704  0900               	iorlw	0
  3490  003706  B4D8               	btfsc	status,2,c
  3491  003708  0012               	return	
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;../app/app_src/application.c: 1039:                 if(UART1_Read() == 'T')
  3495  00370A  EC2E  F03B         	call	_UART1_Read	;wreg free
  3496  00370E  0A54               	xorlw	84
  3497  003710  A4D8               	btfss	status,2,c
  3498  003712  D004               	goto	l15972
  3499                           
  3500                           ; BSR set to: 57
  3501                           ;../app/app_src/application.c: 1040:                 {;../app/app_src/application.c: 104
      +                          2:                     atStateVar = readingCommand;
  3502  003714  0E03               	movlw	3
  3503  003716  0100               	movlb	0	; () banked
  3504  003718  6FEF               	movwf	_atStateVar& (0+255),b
  3505                           
  3506                           ;../app/app_src/application.c: 1043:                 }
  3507  00371A  0012               	return	
  3508  00371C                     l15972:
  3509                           
  3510                           ; BSR set to: 57
  3511                           ;../app/app_src/application.c: 1045:                 {;../app/app_src/application.c: 104
      +                          6:                     atStateVar = lookingForA;
  3512  00371C  0E01               	movlw	1
  3513  00371E  0100               	movlb	0	; () banked
  3514  003720  6FEF               	movwf	_atStateVar& (0+255),b
  3515  003722  0012               	return	
  3516  003724                     l15974:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;../app/app_src/application.c: 1052:             if(UART1_is_rx_ready())
  3520  003724  EC10  F042         	call	_UART1_is_rx_ready	;wreg free
  3521  003728  0900               	iorlw	0
  3522  00372A  B4D8               	btfsc	status,2,c
  3523  00372C  0012               	return	
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;../app/app_src/application.c: 1053:             {;../app/app_src/application.c: 1054:  
      +                                         uint8_t data = UART1_Read();
  3527  00372E  EC2E  F03B         	call	_UART1_Read	;wreg free
  3528  003732  0100               	movlb	0	; () banked
  3529  003734  6FAC               	movwf	processATCommand@data& (0+255),b
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;../app/app_src/application.c: 1055:                 if(data == '\r')
  3533  003736  0E0D               	movlw	13
  3534  003738  19AC               	xorwf	processATCommand@data& (0+255),w,b
  3535  00373A  A4D8               	btfss	status,2,c
  3536  00373C  D00C               	goto	l15986
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;../app/app_src/application.c: 1056:                 {;../app/app_src/application.c: 105
      +                          8:                     atStateVar = endingCommand;
  3540  00373E  0E04               	movlw	4
  3541  003740  6FEF               	movwf	_atStateVar& (0+255),b
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;../app/app_src/application.c: 1060:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3545  003742  0E34               	movlw	low _atCommand
  3546  003744  25F0               	addwf	_commandByteCounter& (0+255),w,b
  3547  003746  6ED9               	movwf	fsr2l,c
  3548  003748  6ADA               	clrf	fsr2h,c
  3549  00374A  0E02               	movlw	high _atCommand
  3550  00374C  22DA               	addwfc	fsr2h,f,c
  3551  00374E  0E00               	movlw	0
  3552  003750  6EDF               	movwf	indf2,c
  3553                           
  3554                           ; BSR set to: 0
  3555  003752  2BF0               	incf	_commandByteCounter& (0+255),f,b
  3556                           
  3557                           ;../app/app_src/application.c: 1061:                 }
  3558  003754  0012               	return	
  3559  003756                     l15986:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;../app/app_src/application.c: 1063:                 {;../app/app_src/application.c: 106
      +                          4:                     atCommand[commandByteCounter++] = data;
  3563  003756  0E34               	movlw	low _atCommand
  3564  003758  25F0               	addwf	_commandByteCounter& (0+255),w,b
  3565  00375A  6ED9               	movwf	fsr2l,c
  3566  00375C  6ADA               	clrf	fsr2h,c
  3567  00375E  0E02               	movlw	high _atCommand
  3568  003760  22DA               	addwfc	fsr2h,f,c
  3569  003762  0060  F2B3  FFDF   	movff	processATCommand@data,indf2
  3570                           
  3571                           ; BSR set to: 0
  3572  003768  2BF0               	incf	_commandByteCounter& (0+255),f,b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;../app/app_src/application.c: 1065:                     if(commandByteCounter >= 80)
  3576  00376A  0E4F               	movlw	79
  3577  00376C  65F0               	cpfsgt	_commandByteCounter& (0+255),b
  3578  00376E  0012               	return	
  3579  003770  D7AC               	goto	l15956
  3580  003772                     l15994:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;../app/app_src/application.c: 1075:             if(UART1_is_rx_ready())
  3584  003772  EC10  F042         	call	_UART1_is_rx_ready	;wreg free
  3585  003776  0900               	iorlw	0
  3586  003778  B4D8               	btfsc	status,2,c
  3587  00377A  0012               	return	
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;../app/app_src/application.c: 1076:             {;../app/app_src/application.c: 1077:  
      +                                         uint8_t data = UART1_Read();
  3591  00377C  EC2E  F03B         	call	_UART1_Read	;wreg free
  3592  003780  0100               	movlb	0	; () banked
  3593  003782  6FAB               	movwf	processATCommand@data_828& (0+255),b
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;../app/app_src/application.c: 1078:                 if(data == '\n')
  3597  003784  0E0A               	movlw	10
  3598  003786  19AB               	xorwf	processATCommand@data_828& (0+255),w,b
  3599  003788  A4D8               	btfss	status,2,c
  3600  00378A  D79F               	goto	l15956
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;../app/app_src/application.c: 1079:                 {;../app/app_src/application.c: 108
      +                          1:                     atStateVar = processCommand;
  3604  00378C  0E05               	movlw	5
  3605  00378E  6FEF               	movwf	_atStateVar& (0+255),b
  3606                           
  3607                           ;../app/app_src/application.c: 1082:                 }
  3608  003790  0012               	return	
  3609  003792                     l16004:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;../app/app_src/application.c: 1092:             executeATCommand(atCommand);
  3613  003792  0E34               	movlw	low _atCommand
  3614  003794  6FA4               	movwf	executeATCommand@cmd& (0+255),b
  3615  003796  0E02               	movlw	high _atCommand
  3616  003798  6FA5               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3617  00379A  EC59  F000         	call	_executeATCommand	;wreg free
  3618                           
  3619                           ;../app/app_src/application.c: 1093:             queue_serial_led_event();
  3620  00379E  EC7E  F039         	call	_queue_serial_led_event	;wreg free
  3621  0037A2  D793               	goto	l15956
  3622  0037A4                     l16010:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;../app/app_src/application.c: 1097:             atStateVar = lookingForA;
  3626  0037A4  0E01               	movlw	1
  3627  0037A6  6FEF               	movwf	_atStateVar& (0+255),b
  3628                           
  3629                           ;../app/app_src/application.c: 1098:             commandByteCounter = 0;
  3630  0037A8  0E00               	movlw	0
  3631  0037AA  6FF0               	movwf	_commandByteCounter& (0+255),b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;../app/app_src/application.c: 1100:             memset(atCommand,0,sizeof(atCommand));
  3635  0037AC  0E34               	movlw	low _atCommand
  3636  0037AE  6E02               	movwf	memset@dest^0,c
  3637  0037B0  0E02               	movlw	high _atCommand
  3638  0037B2  6E03               	movwf	(memset@dest+1)^0,c
  3639  0037B4  0E00               	movlw	0
  3640  0037B6  6E05               	movwf	(memset@c+1)^0,c
  3641  0037B8  0E00               	movlw	0
  3642  0037BA  6E04               	movwf	memset@c^0,c
  3643  0037BC  0E00               	movlw	0
  3644  0037BE  6E07               	movwf	(memset@n+1)^0,c
  3645  0037C0  0E50               	movlw	80
  3646  0037C2  6E06               	movwf	memset@n^0,c
  3647  0037C4  ECC9  F01E         	call	_memset	;wreg free
  3648  0037C8  D791               	goto	l15964
  3649  0037CA                     l16018:
  3650  0037CA  0100               	movlb	0	; () banked
  3651  0037CC  51EF               	movf	_atStateVar& (0+255),w,b
  3652  0037CE  6FA9               	movwf	??_processATCommand& (0+255),b
  3653  0037D0  6BAA               	clrf	(??_processATCommand+1)& (0+255),b
  3654                           
  3655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3656                           ; Switch size 1, requested type "simple"
  3657                           ; Number of cases is 1, Range of values is 0 to 0
  3658                           ; switch strategies available:
  3659                           ; Name         Instructions Cycles
  3660                           ; simple_byte            4     3 (average)
  3661                           ;	Chosen strategy is simple_byte
  3662  0037D2  51AA               	movf	(??_processATCommand+1)& (0+255),w,b
  3663  0037D4  0A00               	xorlw	0	; case 0
  3664  0037D6  A4D8               	btfss	status,2,c
  3665  0037D8  D778               	goto	l15956
  3666                           
  3667                           ; BSR set to: 0
  3668                           ; Switch size 1, requested type "simple"
  3669                           ; Number of cases is 7, Range of values is 0 to 6
  3670                           ; switch strategies available:
  3671                           ; Name         Instructions Cycles
  3672                           ; simple_byte           22    12 (average)
  3673                           ;	Chosen strategy is simple_byte
  3674  0037DA  51A9               	movf	??_processATCommand& (0+255),w,b
  3675  0037DC  0A00               	xorlw	0	; case 0
  3676  0037DE  B4D8               	btfsc	status,2,c
  3677  0037E0  D774               	goto	l15956
  3678  0037E2  0A01               	xorlw	1	; case 1
  3679  0037E4  B4D8               	btfsc	status,2,c
  3680  0037E6  D775               	goto	l15958
  3681  0037E8  0A03               	xorlw	3	; case 2
  3682  0037EA  B4D8               	btfsc	status,2,c
  3683  0037EC  D789               	goto	l15966
  3684  0037EE  0A01               	xorlw	1	; case 3
  3685  0037F0  B4D8               	btfsc	status,2,c
  3686  0037F2  D798               	goto	l15974
  3687  0037F4  0A07               	xorlw	7	; case 4
  3688  0037F6  B4D8               	btfsc	status,2,c
  3689  0037F8  D7BC               	goto	l15994
  3690  0037FA  0A01               	xorlw	1	; case 5
  3691  0037FC  B4D8               	btfsc	status,2,c
  3692  0037FE  D7C9               	goto	l16004
  3693  003800  0A03               	xorlw	3	; case 6
  3694  003802  B4D8               	btfsc	status,2,c
  3695  003804  D7CF               	goto	l16010
  3696  003806  D761               	goto	l15956
  3697  003808                     __end_of_processATCommand:
  3698                           	opt callstack 0
  3699                           
  3700 ;; *************** function _queue_serial_led_event *****************
  3701 ;; Defined at:
  3702 ;;		line 96 in file "../app/app_src/led.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  i               1   33[COMRAM] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        1 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:   10
  3723 ;; This function calls:
  3724 ;;		_queueLedEvent
  3725 ;; This function is called by:
  3726 ;;		_processATCommand
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text2
  3731  0072FC                     __ptext2:
  3732                           	opt callstack 0
  3733  0072FC                     _queue_serial_led_event:
  3734                           	opt callstack 19
  3735                           
  3736                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3737                           
  3738                           ;incstack = 0
  3739  0072FC  0E01               	movlw	1
  3740  0072FE  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3741  007300  0E90               	movlw	144
  3742  007302  6E1C               	movwf	queueLedEvent@duration^0,c
  3743  007304  0E00               	movlw	0
  3744  007306  EC50  F03D         	call	_queueLedEvent
  3745                           
  3746                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3747  00730A  0E00               	movlw	0
  3748  00730C  6E22               	movwf	queue_serial_led_event@i^0,c
  3749  00730E                     l15874:
  3750                           
  3751                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3752  00730E  0E00               	movlw	0
  3753  007310  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3754  007312  0E64               	movlw	100
  3755  007314  6E1C               	movwf	queueLedEvent@duration^0,c
  3756  007316  0E01               	movlw	1
  3757  007318  EC50  F03D         	call	_queueLedEvent
  3758                           
  3759                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3760  00731C  0E00               	movlw	0
  3761  00731E  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3762  007320  0E64               	movlw	100
  3763  007322  6E1C               	movwf	queueLedEvent@duration^0,c
  3764  007324  0E00               	movlw	0
  3765  007326  EC50  F03D         	call	_queueLedEvent
  3766                           
  3767                           ;../app/app_src/led.c: 103:     }
  3768  00732A  2A22               	incf	queue_serial_led_event@i^0,f,c
  3769  00732C  0E01               	movlw	1
  3770  00732E  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3771  007330  D7EE               	goto	l15874
  3772                           
  3773                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3774  007332  0E00               	movlw	0
  3775  007334  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3776  007336  0E64               	movlw	100
  3777  007338  6E1C               	movwf	queueLedEvent@duration^0,c
  3778  00733A  0E00               	movlw	0
  3779  00733C  EC50  F03D         	call	_queueLedEvent
  3780                           
  3781                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3782  007340  0E00               	movlw	0
  3783  007342  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3784  007344  0E64               	movlw	100
  3785  007346  6E1C               	movwf	queueLedEvent@duration^0,c
  3786  007348  0E01               	movlw	1
  3787  00734A  EC50  F03D         	call	_queueLedEvent
  3788  00734E  0012               	return		;funcret
  3789  007350                     __end_of_queue_serial_led_event:
  3790                           	opt callstack 0
  3791                           
  3792 ;; *************** function _queueLedEvent *****************
  3793 ;; Defined at:
  3794 ;;		line 53 in file "../app/app_src/led.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  LEDState        1    wreg     unsigned char 
  3797 ;;  duration        2   27[COMRAM] unsigned short 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  LEDState        1   29[COMRAM] unsigned char 
  3800 ;;  temp            3   30[COMRAM] struct ledEvent
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      char 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;Total ram usage:        6 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    9
  3817 ;; This function calls:
  3818 ;;		_CircularBufferPushBack
  3819 ;;		_CircularBufferSpace
  3820 ;; This function is called by:
  3821 ;;		_queue_serial_led_event
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text3
  3826  007AA0                     __ptext3:
  3827                           	opt callstack 0
  3828  007AA0                     _queueLedEvent:
  3829                           	opt callstack 19
  3830                           
  3831                           ;incstack = 0
  3832                           ;queueLedEvent@LEDState stored from wreg
  3833  007AA0  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3834                           
  3835                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3836  007AA2  0EC8               	movlw	low _ledtasksbuf
  3837  007AA4  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3838  007AA6  0E01               	movlw	high _ledtasksbuf
  3839  007AA8  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3840  007AAA  EC35  F03E         	call	_CircularBufferSpace	;wreg free
  3841  007AAE  500A               	movf	?_CircularBufferSpace^0,w,c
  3842  007AB0  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3843  007AB2  B4D8               	btfsc	status,2,c
  3844  007AB4  0012               	return	
  3845                           
  3846                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3847  007AB6  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3848                           
  3849                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  3850  007ABC  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3851  007AC2  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3852                           
  3853                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3854  007AC8  0EC8               	movlw	low _ledtasksbuf
  3855  007ACA  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3856  007ACC  0E01               	movlw	high _ledtasksbuf
  3857  007ACE  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3858  007AD0  0E1F               	movlw	low queueLedEvent@temp
  3859  007AD2  6E15               	movwf	CircularBufferPushBack@val^0,c
  3860  007AD4  ECCB  F026         	call	_CircularBufferPushBack	;wreg free
  3861  007AD8  0012               	return		;funcret
  3862  007ADA                     __end_of_queueLedEvent:
  3863                           	opt callstack 0
  3864                           
  3865 ;; *************** function _CircularBufferSpace *****************
  3866 ;; Defined at:
  3867 ;;		line 126 in file "../app/app_src/circular buffer.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  ctx             2    9[COMRAM] PTR const struct .
  3870 ;;		 -> ledtasksbuf(10), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2    9[COMRAM] unsigned int 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    8
  3889 ;; This function calls:
  3890 ;;		_CircularBufferSize
  3891 ;; This function is called by:
  3892 ;;		_queueLedEvent
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text4
  3897  007C6A                     __ptext4:
  3898                           	opt callstack 0
  3899  007C6A                     _CircularBufferSpace:
  3900                           	opt callstack 19
  3901                           
  3902                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  3903                           
  3904                           ;incstack = 0
  3905  007C6A  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3906  007C70  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3907  007C76  EC3E  F038         	call	_CircularBufferSize	;wreg free
  3908  007C7A  EE20 F008          	lfsr	2,8
  3909  007C7E  500A               	movf	CircularBufferSpace@ctx^0,w,c
  3910  007C80  26D9               	addwf	fsr2l,f,c
  3911  007C82  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  3912  007C84  22DA               	addwfc	fsr2h,f,c
  3913  007C86  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  3914  007C8C  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  3915  007C92  5002               	movf	?_CircularBufferSize^0,w,c
  3916  007C94  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  3917  007C96  6E0A               	movwf	?_CircularBufferSpace^0,c
  3918  007C98  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  3919  007C9A  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  3920  007C9C  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  3921  007C9E  0012               	return		;funcret
  3922  007CA0                     __end_of_CircularBufferSpace:
  3923                           	opt callstack 0
  3924                           
  3925 ;; *************** function _CircularBufferSize *****************
  3926 ;; Defined at:
  3927 ;;		line 122 in file "../app/app_src/circular buffer.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  ctx             2    1[COMRAM] PTR const struct .
  3930 ;;		 -> ledtasksbuf(10), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    1[COMRAM] unsigned int 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        8 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    7
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_CircularBufferSpace
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text5
  3957  00707C                     __ptext5:
  3958                           	opt callstack 0
  3959  00707C                     _CircularBufferSize:
  3960                           	opt callstack 19
  3961                           
  3962                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  3963                           
  3964                           ;incstack = 0
  3965  00707C  EE20 F008          	lfsr	2,8
  3966  007080  5002               	movf	CircularBufferSize@ctx^0,w,c
  3967  007082  26D9               	addwf	fsr2l,f,c
  3968  007084  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  3969  007086  22DA               	addwfc	fsr2h,f,c
  3970  007088  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  3971  00708E  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  3972  007094  EE20 F004          	lfsr	2,4
  3973  007098  5002               	movf	CircularBufferSize@ctx^0,w,c
  3974  00709A  26D9               	addwf	fsr2l,f,c
  3975  00709C  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  3976  00709E  22DA               	addwfc	fsr2h,f,c
  3977  0070A0  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  3978  0070A6  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  3979  0070AC  EE20 F002          	lfsr	2,2
  3980  0070B0  5002               	movf	CircularBufferSize@ctx^0,w,c
  3981  0070B2  26D9               	addwf	fsr2l,f,c
  3982  0070B4  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  3983  0070B6  22DA               	addwfc	fsr2h,f,c
  3984  0070B8  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  3985  0070BE  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  3986  0070C4  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  3987  0070C6  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  3988  0070C8  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  3989  0070CA  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  3990  0070CC  5004               	movf	??_CircularBufferSize^0,w,c
  3991  0070CE  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  3992  0070D0  6E02               	movwf	?_CircularBufferSize^0,c
  3993  0070D2  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  3994  0070D4  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  3995  0070D6  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  3996  0070D8  0012               	return		;funcret
  3997  0070DA                     __end_of_CircularBufferSize:
  3998                           	opt callstack 0
  3999                           
  4000 ;; *************** function _CircularBufferPushBack *****************
  4001 ;; Defined at:
  4002 ;;		line 71 in file "../app/app_src/circular buffer.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  ctx             2   18[COMRAM] PTR struct .
  4005 ;;		 -> ledtasksbuf(10), 
  4006 ;;  val             1   20[COMRAM] PTR void 
  4007 ;;		 -> queueLedEvent@temp(3), 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  write_pos       2   25[COMRAM] unsigned int 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      char 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;Total ram usage:        9 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    8
  4026 ;; This function calls:
  4027 ;;		___wmul
  4028 ;;		_memcpy
  4029 ;; This function is called by:
  4030 ;;		_queueLedEvent
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text6
  4035  004D96                     __ptext6:
  4036                           	opt callstack 0
  4037  004D96                     _CircularBufferPushBack:
  4038                           	opt callstack 19
  4039                           
  4040                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
  4041                           
  4042                           ;incstack = 0
  4043  004D96  EE20 F008          	lfsr	2,8
  4044  004D9A  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4045  004D9C  26D9               	addwf	fsr2l,f,c
  4046  004D9E  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4047  004DA0  22DA               	addwfc	fsr2h,f,c
  4048  004DA2  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4049  004DA8  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4050  004DAE  EE20 F002          	lfsr	2,2
  4051  004DB2  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4052  004DB4  26D9               	addwf	fsr2l,f,c
  4053  004DB6  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4054  004DB8  22DA               	addwfc	fsr2h,f,c
  4055  004DBA  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
  4056  004DC0  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
  4057  004DC6  0E01               	movlw	1
  4058  004DC8  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
  4059  004DCA  0E00               	movlw	0
  4060  004DCC  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
  4061  004DCE  5016               	movf	??_CircularBufferPushBack^0,w,c
  4062  004DD0  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
  4063  004DD2  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
  4064  004DD4  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
  4065  004DD6  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
  4066  004DD8  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
  4067                           
  4068                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
  4069  004DDA  EE20 F004          	lfsr	2,4
  4070  004DDE  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4071  004DE0  26D9               	addwf	fsr2l,f,c
  4072  004DE2  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4073  004DE4  22DA               	addwfc	fsr2h,f,c
  4074  004DE6  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
  4075  004DE8  18DE               	xorwf	postinc2,w,c
  4076  004DEA  E104               	bnz	l14792
  4077  004DEC  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
  4078  004DEE  18DE               	xorwf	postinc2,w,c
  4079  004DF0  B4D8               	btfsc	status,2,c
  4080  004DF2  0012               	return	
  4081  004DF4                     l14792:
  4082                           
  4083                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
  4084  004DF4  EE20 F002          	lfsr	2,2
  4085  004DF8  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4086  004DFA  26D9               	addwf	fsr2l,f,c
  4087  004DFC  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4088  004DFE  22DA               	addwfc	fsr2h,f,c
  4089  004E00  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  4090  004E06  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  4091  004E0C  EE20 F006          	lfsr	2,6
  4092  004E10  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4093  004E12  26D9               	addwf	fsr2l,f,c
  4094  004E14  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4095  004E16  22DA               	addwfc	fsr2h,f,c
  4096  004E18  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  4097  004E1E  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  4098  004E24  EC22  F03F         	call	___wmul	;wreg free
  4099  004E28  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
  4100  004E2E  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
  4101  004E34  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4102  004E3A  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4103  004E40  5002               	movf	?___wmul^0,w,c
  4104  004E42  2416               	addwf	??_CircularBufferPushBack^0,w,c
  4105  004E44  6E08               	movwf	memcpy@d1^0,c
  4106  004E46  5003               	movf	(?___wmul+1)^0,w,c
  4107  004E48  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
  4108  004E4A  6E09               	movwf	(memcpy@d1+1)^0,c
  4109  004E4C  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
  4110  004E52  6A0B               	clrf	(memcpy@s1+1)^0,c
  4111  004E54  EE20 F006          	lfsr	2,6
  4112  004E58  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4113  004E5A  26D9               	addwf	fsr2l,f,c
  4114  004E5C  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4115  004E5E  22DA               	addwfc	fsr2h,f,c
  4116  004E60  006F FF78  F00C    	movff	postinc2,memcpy@n
  4117  004E66  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  4118  004E6C  ECD0  F035         	call	_memcpy	;wreg free
  4119                           
  4120                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
  4121  004E70  EE20 F002          	lfsr	2,2
  4122  004E74  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4123  004E76  26D9               	addwf	fsr2l,f,c
  4124  004E78  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4125  004E7A  22DA               	addwfc	fsr2h,f,c
  4126  004E7C  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
  4127  004E82  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
  4128  004E88  0012               	return		;funcret
  4129  004E8A                     __end_of_CircularBufferPushBack:
  4130                           	opt callstack 0
  4131                           
  4132 ;; *************** function _executeATCommand *****************
  4133 ;; Defined at:
  4134 ;;		line 831 in file "../app/app_src/application.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  cmd             2   68[BANK0 ] PTR unsigned char 
  4137 ;;		 -> atCommand(80), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  retcode         1    0        unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      unsigned char 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 3F/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;Total ram usage:        5 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:   18
  4156 ;; This function calls:
  4157 ;;		_cmdAddr
  4158 ;;		_cmdBcast
  4159 ;;		_cmdBootLoad
  4160 ;;		_cmdGetCAD
  4161 ;;		_cmdGetCADRSSI
  4162 ;;		_cmdGetMode
  4163 ;;		_cmdGetRFCH
  4164 ;;		_cmdGetRxCnt
  4165 ;;		_cmdGetSF
  4166 ;;		_cmdGetTTL
  4167 ;;		_cmdGetTX
  4168 ;;		_cmdI
  4169 ;;		_cmdMac
  4170 ;;		_cmdNaddr
  4171 ;;		_cmdRecv
  4172 ;;		_cmdReset
  4173 ;;		_cmdRstCAD
  4174 ;;		_cmdSend
  4175 ;;		_cmdSendSink
  4176 ;;		_cmdSetAES
  4177 ;;		_cmdSetAddr
  4178 ;;		_cmdSetBaud
  4179 ;;		_cmdSetCADRSSI
  4180 ;;		_cmdSetNaddr
  4181 ;;		_cmdSetParity
  4182 ;;		_cmdSetRFCH
  4183 ;;		_cmdSetSF
  4184 ;;		_cmdSetSink
  4185 ;;		_cmdSetTTL
  4186 ;;		_cmdSetTX
  4187 ;;		_print_hop_table
  4188 ;;		_printf
  4189 ;;		_set_hop_table_ttl
  4190 ;;		_strstr
  4191 ;; This function is called by:
  4192 ;;		_processATCommand
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text7
  4197  0000B2                     __ptext7:
  4198                           	opt callstack 0
  4199  0000B2                     _executeATCommand:
  4200                           	opt callstack 11
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;../app/app_src/application.c: 834:     switch(*(cmd+1))
  4204                           
  4205                           ;incstack = 0
  4206  0000B2  D296               	goto	l15860
  4207  0000B4                     l15720:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;../app/app_src/application.c: 837:          if(strstr(atCommand,"+SEND:")){
  4211  0000B4  0E34               	movlw	low _atCommand
  4212  0000B6  6E0D               	movwf	strstr@h^0,c
  4213  0000B8  0E02               	movlw	high _atCommand
  4214  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4215  0000BC  0E61               	movlw	low STR_62
  4216  0000BE  6E0F               	movwf	strstr@n^0,c
  4217  0000C0  0EFF               	movlw	high STR_62
  4218  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4219  0000C4  EC65  F02A         	call	_strstr	;wreg free
  4220  0000C8  500D               	movf	?_strstr^0,w,c
  4221  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4222  0000CC  B4D8               	btfsc	status,2,c
  4223  0000CE  D009               	goto	l15724
  4224                           
  4225                           ;../app/app_src/application.c: 838:           cmdSend(cmd);
  4226  0000D0  0060  F290  F076   	movff	executeATCommand@cmd,cmdSend@cmd
  4227  0000D6  0060  F294  F077   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4228  0000DC  ECB3  F010         	call	_cmdSend	;wreg free
  4229                           
  4230                           ;../app/app_src/application.c: 839:          }
  4231  0000E0  0012               	return	
  4232  0000E2                     l15724:
  4233  0000E2  0E34               	movlw	low _atCommand
  4234  0000E4  6E0D               	movwf	strstr@h^0,c
  4235  0000E6  0E02               	movlw	high _atCommand
  4236  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4237  0000EA  0E30               	movlw	low STR_64
  4238  0000EC  6E0F               	movwf	strstr@n^0,c
  4239  0000EE  0EFF               	movlw	high STR_64
  4240  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4241  0000F2  EC65  F02A         	call	_strstr	;wreg free
  4242  0000F6  500D               	movf	?_strstr^0,w,c
  4243  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4244  0000FA  B4D8               	btfsc	status,2,c
  4245  0000FC  D003               	goto	l15728
  4246                           
  4247                           ;../app/app_src/application.c: 841:           cmdSetSink();
  4248  0000FE  EC02  F042         	call	_cmdSetSink	;wreg free
  4249                           
  4250                           ;../app/app_src/application.c: 842:          }
  4251  000102  0012               	return	
  4252  000104                     l15728:
  4253  000104  0E34               	movlw	low _atCommand
  4254  000106  6E0D               	movwf	strstr@h^0,c
  4255  000108  0E02               	movlw	high _atCommand
  4256  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4257  00010C  0EA7               	movlw	low STR_66
  4258  00010E  6E0F               	movwf	strstr@n^0,c
  4259  000110  0EFF               	movlw	high STR_66
  4260  000112  6E10               	movwf	(strstr@n+1)^0,c
  4261  000114  EC65  F02A         	call	_strstr	;wreg free
  4262  000118  500D               	movf	?_strstr^0,w,c
  4263  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4264  00011C  B4D8               	btfsc	status,2,c
  4265  00011E  D007               	goto	l15732
  4266                           
  4267                           ;../app/app_src/application.c: 844:           cmdSendSink(atCommand);
  4268  000120  0E34               	movlw	low _atCommand
  4269  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4270  000124  0E02               	movlw	high _atCommand
  4271  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4272  000128  EC88  F042         	call	_cmdSendSink	;wreg free
  4273                           
  4274                           ;../app/app_src/application.c: 845:          }
  4275  00012C  0012               	return	
  4276  00012E                     l15732:
  4277  00012E  0E34               	movlw	low _atCommand
  4278  000130  6E0D               	movwf	strstr@h^0,c
  4279  000132  0E02               	movlw	high _atCommand
  4280  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4281  000136  0EE6               	movlw	low STR_68
  4282  000138  6E0F               	movwf	strstr@n^0,c
  4283  00013A  0EFF               	movlw	high STR_68
  4284  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4285  00013E  EC65  F02A         	call	_strstr	;wreg free
  4286  000142  500D               	movf	?_strstr^0,w,c
  4287  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4288  000146  B4D8               	btfsc	status,2,c
  4289  000148  D003               	goto	l15736
  4290                           
  4291                           ;../app/app_src/application.c: 847:           cmdGetSF();
  4292  00014A  EC98  F041         	call	_cmdGetSF	;wreg free
  4293                           
  4294                           ;../app/app_src/application.c: 848:          }
  4295  00014E  0012               	return	
  4296  000150                     l15736:
  4297  000150  0E34               	movlw	low _atCommand
  4298  000152  6E0D               	movwf	strstr@h^0,c
  4299  000154  0E02               	movlw	high _atCommand
  4300  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4301  000158  0EE1               	movlw	low STR_70
  4302  00015A  6E0F               	movwf	strstr@n^0,c
  4303  00015C  0EFF               	movlw	high STR_70
  4304  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4305  000160  EC65  F02A         	call	_strstr	;wreg free
  4306  000164  500D               	movf	?_strstr^0,w,c
  4307  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4308  000168  B4D8               	btfsc	status,2,c
  4309  00016A  D008               	goto	l15740
  4310                           
  4311                           ;../app/app_src/application.c: 850:           cmdSetSF(atCommand);
  4312  00016C  0E34               	movlw	low _atCommand
  4313  00016E  0100               	movlb	0	; () banked
  4314  000170  6F76               	movwf	cmdSetSF@atCommand& (0+255),b
  4315  000172  0E02               	movlw	high _atCommand
  4316  000174  6F77               	movwf	(cmdSetSF@atCommand+1)& (0+255),b
  4317  000176  ECD4  F02F         	call	_cmdSetSF	;wreg free
  4318                           
  4319                           ;../app/app_src/application.c: 851:          }
  4320  00017A  0012               	return	
  4321  00017C                     l15740:
  4322  00017C  0E34               	movlw	low _atCommand
  4323  00017E  6E0D               	movwf	strstr@h^0,c
  4324  000180  0E02               	movlw	high _atCommand
  4325  000182  6E0E               	movwf	(strstr@h+1)^0,c
  4326  000184  0ED8               	movlw	low STR_72
  4327  000186  6E0F               	movwf	strstr@n^0,c
  4328  000188  0EFE               	movlw	high STR_72
  4329  00018A  6E10               	movwf	(strstr@n+1)^0,c
  4330  00018C  EC65  F02A         	call	_strstr	;wreg free
  4331  000190  500D               	movf	?_strstr^0,w,c
  4332  000192  100E               	iorwf	(?_strstr+1)^0,w,c
  4333  000194  B4D8               	btfsc	status,2,c
  4334  000196  D219               	goto	l15856
  4335                           
  4336                           ;../app/app_src/application.c: 853:                 print_hop_table(atCommand);
  4337  000198  0E34               	movlw	low _atCommand
  4338  00019A  0100               	movlb	0	; () banked
  4339  00019C  6F76               	movwf	print_hop_table@atCommand& (0+255),b
  4340  00019E  0E02               	movlw	high _atCommand
  4341  0001A0  6F77               	movwf	(print_hop_table@atCommand+1)& (0+255),b
  4342  0001A2  ECFB  F041         	call	_print_hop_table	;wreg free
  4343                           
  4344                           ;../app/app_src/application.c: 854:             }
  4345  0001A6  0012               	return	
  4346  0001A8                     l15744:
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;../app/app_src/application.c: 860:          if(strstr(atCommand,"+BCAST=")){
  4350  0001A8  0E34               	movlw	low _atCommand
  4351  0001AA  6E0D               	movwf	strstr@h^0,c
  4352  0001AC  0E02               	movlw	high _atCommand
  4353  0001AE  6E0E               	movwf	(strstr@h+1)^0,c
  4354  0001B0  0E51               	movlw	low STR_74
  4355  0001B2  6E0F               	movwf	strstr@n^0,c
  4356  0001B4  0EFF               	movlw	high STR_74
  4357  0001B6  6E10               	movwf	(strstr@n+1)^0,c
  4358  0001B8  EC65  F02A         	call	_strstr	;wreg free
  4359  0001BC  500D               	movf	?_strstr^0,w,c
  4360  0001BE  100E               	iorwf	(?_strstr+1)^0,w,c
  4361  0001C0  B4D8               	btfsc	status,2,c
  4362  0001C2  D009               	goto	l15748
  4363                           
  4364                           ;../app/app_src/application.c: 861:     cmdBcast(cmd);
  4365  0001C4  0060  F290  F076   	movff	executeATCommand@cmd,cmdBcast@cmd
  4366  0001CA  0060  F294  F077   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4367  0001D0  EC0B  F014         	call	_cmdBcast	;wreg free
  4368                           
  4369                           ;../app/app_src/application.c: 862:    }
  4370  0001D4  0012               	return	
  4371  0001D6                     l15748:
  4372  0001D6  0E34               	movlw	low _atCommand
  4373  0001D8  6E0D               	movwf	strstr@h^0,c
  4374  0001DA  0E02               	movlw	high _atCommand
  4375  0001DC  6E0E               	movwf	(strstr@h+1)^0,c
  4376  0001DE  0E68               	movlw	low STR_76
  4377  0001E0  6E0F               	movwf	strstr@n^0,c
  4378  0001E2  0EFF               	movlw	high STR_76
  4379  0001E4  6E10               	movwf	(strstr@n+1)^0,c
  4380  0001E6  EC65  F02A         	call	_strstr	;wreg free
  4381  0001EA  500D               	movf	?_strstr^0,w,c
  4382  0001EC  100E               	iorwf	(?_strstr+1)^0,w,c
  4383  0001EE  B4D8               	btfsc	status,2,c
  4384  0001F0  D007               	goto	l15752
  4385                           
  4386                           ;../app/app_src/application.c: 864:                 cmdSetBaud(atCommand);
  4387  0001F2  0E34               	movlw	low _atCommand
  4388  0001F4  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4389  0001F6  0E02               	movlw	high _atCommand
  4390  0001F8  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4391  0001FA  EC40  F036         	call	_cmdSetBaud	;wreg free
  4392                           
  4393                           ;../app/app_src/application.c: 865:             }
  4394  0001FE  0012               	return	
  4395  000200                     l15752:
  4396  000200  0E34               	movlw	low _atCommand
  4397  000202  6E0D               	movwf	strstr@h^0,c
  4398  000204  0E02               	movlw	high _atCommand
  4399  000206  6E0E               	movwf	(strstr@h+1)^0,c
  4400  000208  0E0B               	movlw	low STR_78
  4401  00020A  6E0F               	movwf	strstr@n^0,c
  4402  00020C  0EFF               	movlw	high STR_78
  4403  00020E  6E10               	movwf	(strstr@n+1)^0,c
  4404  000210  EC65  F02A         	call	_strstr	;wreg free
  4405  000214  500D               	movf	?_strstr^0,w,c
  4406  000216  100E               	iorwf	(?_strstr+1)^0,w,c
  4407  000218  B4D8               	btfsc	status,2,c
  4408  00021A  D1D7               	goto	l15856
  4409                           
  4410                           ;../app/app_src/application.c: 867:                 cmdBootLoad();
  4411  00021C  EC6D  F03D         	call	_cmdBootLoad	;wreg free
  4412                           
  4413                           ;../app/app_src/application.c: 868:             }
  4414  000220  0012               	return	
  4415  000222                     l15756:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;../app/app_src/application.c: 874:          if(strstr(atCommand,"+ADDR?")){
  4419  000222  0E34               	movlw	low _atCommand
  4420  000224  6E0D               	movwf	strstr@h^0,c
  4421  000226  0E02               	movlw	high _atCommand
  4422  000228  6E0E               	movwf	(strstr@h+1)^0,c
  4423  00022A  0E92               	movlw	low STR_80
  4424  00022C  6E0F               	movwf	strstr@n^0,c
  4425  00022E  0EFF               	movlw	high STR_80
  4426  000230  6E10               	movwf	(strstr@n+1)^0,c
  4427  000232  EC65  F02A         	call	_strstr	;wreg free
  4428  000236  500D               	movf	?_strstr^0,w,c
  4429  000238  100E               	iorwf	(?_strstr+1)^0,w,c
  4430  00023A  B4D8               	btfsc	status,2,c
  4431  00023C  D003               	goto	l15760
  4432                           
  4433                           ;../app/app_src/application.c: 875:           cmdAddr();
  4434  00023E  ECC6  F040         	call	_cmdAddr	;wreg free
  4435                           
  4436                           ;../app/app_src/application.c: 876:          }
  4437  000242  0012               	return	
  4438  000244                     l15760:
  4439  000244  0E34               	movlw	low _atCommand
  4440  000246  6E0D               	movwf	strstr@h^0,c
  4441  000248  0E02               	movlw	high _atCommand
  4442  00024A  6E0E               	movwf	(strstr@h+1)^0,c
  4443  00024C  0E76               	movlw	low STR_82
  4444  00024E  6E0F               	movwf	strstr@n^0,c
  4445  000250  0EFF               	movlw	high STR_82
  4446  000252  6E10               	movwf	(strstr@n+1)^0,c
  4447  000254  EC65  F02A         	call	_strstr	;wreg free
  4448  000258  500D               	movf	?_strstr^0,w,c
  4449  00025A  100E               	iorwf	(?_strstr+1)^0,w,c
  4450  00025C  B4D8               	btfsc	status,2,c
  4451  00025E  D008               	goto	l15764
  4452                           
  4453                           ;../app/app_src/application.c: 878:     cmdSetAddr(atCommand);
  4454  000260  0E34               	movlw	low _atCommand
  4455  000262  0100               	movlb	0	; () banked
  4456  000264  6F76               	movwf	cmdSetAddr@cmd& (0+255),b
  4457  000266  0E02               	movlw	high _atCommand
  4458  000268  6F77               	movwf	(cmdSetAddr@cmd+1)& (0+255),b
  4459  00026A  EC62  F032         	call	_cmdSetAddr	;wreg free
  4460                           
  4461                           ;../app/app_src/application.c: 879:    }
  4462  00026E  0012               	return	
  4463  000270                     l15764:
  4464  000270  0E34               	movlw	low _atCommand
  4465  000272  6E0D               	movwf	strstr@h^0,c
  4466  000274  0E02               	movlw	high _atCommand
  4467  000276  6E0E               	movwf	(strstr@h+1)^0,c
  4468  000278  0E15               	movlw	low STR_84
  4469  00027A  6E0F               	movwf	strstr@n^0,c
  4470  00027C  0EFF               	movlw	high STR_84
  4471  00027E  6E10               	movwf	(strstr@n+1)^0,c
  4472  000280  EC65  F02A         	call	_strstr	;wreg free
  4473  000284  500D               	movf	?_strstr^0,w,c
  4474  000286  100E               	iorwf	(?_strstr+1)^0,w,c
  4475  000288  B4D8               	btfsc	status,2,c
  4476  00028A  D19F               	goto	l15856
  4477                           
  4478                           ;../app/app_src/application.c: 881:           cmdSetAES(atCommand);
  4479  00028C  0E34               	movlw	low _atCommand
  4480  00028E  0100               	movlb	0	; () banked
  4481  000290  6F76               	movwf	cmdSetAES@cmd& (0+255),b
  4482  000292  0E02               	movlw	high _atCommand
  4483  000294  6F77               	movwf	(cmdSetAES@cmd+1)& (0+255),b
  4484  000296  EC0B  F016         	call	_cmdSetAES	;wreg free
  4485                           
  4486                           ;../app/app_src/application.c: 882:          }
  4487  00029A  0012               	return	
  4488  00029C                     l15768:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;../app/app_src/application.c: 888:          if(strstr(atCommand,"+CADCOUNTER?")){
  4492  00029C  0E34               	movlw	low _atCommand
  4493  00029E  6E0D               	movwf	strstr@h^0,c
  4494  0002A0  0E02               	movlw	high _atCommand
  4495  0002A2  6E0E               	movwf	(strstr@h+1)^0,c
  4496  0002A4  0EA7               	movlw	low STR_86
  4497  0002A6  6E0F               	movwf	strstr@n^0,c
  4498  0002A8  0EFE               	movlw	high STR_86
  4499  0002AA  6E10               	movwf	(strstr@n+1)^0,c
  4500  0002AC  EC65  F02A         	call	_strstr	;wreg free
  4501  0002B0  500D               	movf	?_strstr^0,w,c
  4502  0002B2  100E               	iorwf	(?_strstr+1)^0,w,c
  4503  0002B4  B4D8               	btfsc	status,2,c
  4504  0002B6  D003               	goto	l15772
  4505                           
  4506                           ;../app/app_src/application.c: 889:           cmdGetCAD();
  4507  0002B8  ECA3  F041         	call	_cmdGetCAD	;wreg free
  4508                           
  4509                           ;../app/app_src/application.c: 890:          }
  4510  0002BC  0012               	return	
  4511  0002BE                     l15772:
  4512  0002BE  0E34               	movlw	low _atCommand
  4513  0002C0  6E0D               	movwf	strstr@h^0,c
  4514  0002C2  0E02               	movlw	high _atCommand
  4515  0002C4  6E0E               	movwf	(strstr@h+1)^0,c
  4516  0002C6  0E56               	movlw	low STR_88
  4517  0002C8  6E0F               	movwf	strstr@n^0,c
  4518  0002CA  0EFE               	movlw	high STR_88
  4519  0002CC  6E10               	movwf	(strstr@n+1)^0,c
  4520  0002CE  EC65  F02A         	call	_strstr	;wreg free
  4521  0002D2  500D               	movf	?_strstr^0,w,c
  4522  0002D4  100E               	iorwf	(?_strstr+1)^0,w,c
  4523  0002D6  B4D8               	btfsc	status,2,c
  4524  0002D8  D003               	goto	l15776
  4525                           
  4526                           ;../app/app_src/application.c: 892:           cmdRstCAD();
  4527  0002DA  ECB9  F041         	call	_cmdRstCAD	;wreg free
  4528                           
  4529                           ;../app/app_src/application.c: 893:          }
  4530  0002DE  0012               	return	
  4531  0002E0                     l15776:
  4532  0002E0  0E34               	movlw	low _atCommand
  4533  0002E2  6E0D               	movwf	strstr@h^0,c
  4534  0002E4  0E02               	movlw	high _atCommand
  4535  0002E6  6E0E               	movwf	(strstr@h+1)^0,c
  4536  0002E8  0EF7               	movlw	low STR_90
  4537  0002EA  6E0F               	movwf	strstr@n^0,c
  4538  0002EC  0EFE               	movlw	high STR_90
  4539  0002EE  6E10               	movwf	(strstr@n+1)^0,c
  4540  0002F0  EC65  F02A         	call	_strstr	;wreg free
  4541  0002F4  500D               	movf	?_strstr^0,w,c
  4542  0002F6  100E               	iorwf	(?_strstr+1)^0,w,c
  4543  0002F8  B4D8               	btfsc	status,2,c
  4544  0002FA  D003               	goto	l15780
  4545                           
  4546                           ;../app/app_src/application.c: 895:           cmdGetCADRSSI();
  4547  0002FC  EC10  F041         	call	_cmdGetCADRSSI	;wreg free
  4548                           
  4549                           ;../app/app_src/application.c: 896:          }
  4550  000300  0012               	return	
  4551  000302                     l15780:
  4552  000302  0E34               	movlw	low _atCommand
  4553  000304  6E0D               	movwf	strstr@h^0,c
  4554  000306  0E02               	movlw	high _atCommand
  4555  000308  6E0E               	movwf	(strstr@h+1)^0,c
  4556  00030A  0EE3               	movlw	low STR_92
  4557  00030C  6E0F               	movwf	strstr@n^0,c
  4558  00030E  0EFE               	movlw	high STR_92
  4559  000310  6E10               	movwf	(strstr@n+1)^0,c
  4560  000312  EC65  F02A         	call	_strstr	;wreg free
  4561  000316  500D               	movf	?_strstr^0,w,c
  4562  000318  100E               	iorwf	(?_strstr+1)^0,w,c
  4563  00031A  B4D8               	btfsc	status,2,c
  4564  00031C  D156               	goto	l15856
  4565                           
  4566                           ;../app/app_src/application.c: 898:           cmdSetCADRSSI(atCommand);
  4567  00031E  0E34               	movlw	low _atCommand
  4568  000320  0100               	movlb	0	; () banked
  4569  000322  6F76               	movwf	cmdSetCADRSSI@atCommand& (0+255),b
  4570  000324  0E02               	movlw	high _atCommand
  4571  000326  6F77               	movwf	(cmdSetCADRSSI@atCommand+1)& (0+255),b
  4572  000328  EC2B  F030         	call	_cmdSetCADRSSI	;wreg free
  4573                           
  4574                           ;../app/app_src/application.c: 899:          }
  4575  00032C  0012               	return	
  4576  00032E                     l15784:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;../app/app_src/application.c: 905:             if(strstr(atCommand,"+HOPS?")){
  4580  00032E  0E34               	movlw	low _atCommand
  4581  000330  6E0D               	movwf	strstr@h^0,c
  4582  000332  0E02               	movlw	high _atCommand
  4583  000334  6E0E               	movwf	(strstr@h+1)^0,c
  4584  000336  0E99               	movlw	low STR_94
  4585  000338  6E0F               	movwf	strstr@n^0,c
  4586  00033A  0EFF               	movlw	high STR_94
  4587  00033C  6E10               	movwf	(strstr@n+1)^0,c
  4588  00033E  EC65  F02A         	call	_strstr	;wreg free
  4589  000342  500D               	movf	?_strstr^0,w,c
  4590  000344  100E               	iorwf	(?_strstr+1)^0,w,c
  4591  000346  B4D8               	btfsc	status,2,c
  4592  000348  D003               	goto	l15788
  4593  00034A                     u15520:
  4594                           
  4595                           ;../app/app_src/application.c: 906:                 cmdGetTTL();
  4596  00034A  EC8A  F042         	call	_cmdGetTTL	;wreg free
  4597                           
  4598                           ;../app/app_src/application.c: 907:             }
  4599  00034E  0012               	return	
  4600  000350                     l15788:
  4601  000350  0E34               	movlw	low _atCommand
  4602  000352  6E0D               	movwf	strstr@h^0,c
  4603  000354  0E02               	movlw	high _atCommand
  4604  000356  6E0E               	movwf	(strstr@h+1)^0,c
  4605  000358  0E7D               	movlw	low STR_96
  4606  00035A  6E0F               	movwf	strstr@n^0,c
  4607  00035C  0EFF               	movlw	high STR_96
  4608  00035E  6E10               	movwf	(strstr@n+1)^0,c
  4609  000360  EC65  F02A         	call	_strstr	;wreg free
  4610  000364  500D               	movf	?_strstr^0,w,c
  4611  000366  100E               	iorwf	(?_strstr+1)^0,w,c
  4612  000368  B4D8               	btfsc	status,2,c
  4613  00036A  D007               	goto	l15792
  4614  00036C                     u15530:
  4615                           
  4616                           ;../app/app_src/application.c: 909:                 cmdSetTTL(atCommand);
  4617  00036C  0E34               	movlw	low _atCommand
  4618  00036E  6E02               	movwf	cmdSetTTL@cmd^0,c
  4619  000370  0E02               	movlw	high _atCommand
  4620  000372  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4621  000374  EC87  F042         	call	_cmdSetTTL	;wreg free
  4622                           
  4623                           ;../app/app_src/application.c: 910:             }
  4624  000378  0012               	return	
  4625  00037A                     l15792:
  4626  00037A  0E34               	movlw	low _atCommand
  4627  00037C  6E0D               	movwf	strstr@h^0,c
  4628  00037E  0E02               	movlw	high _atCommand
  4629  000380  6E0E               	movwf	(strstr@h+1)^0,c
  4630  000382  0E1E               	movlw	low STR_98
  4631  000384  6E0F               	movwf	strstr@n^0,c
  4632  000386  0EFF               	movlw	high STR_98
  4633  000388  6E10               	movwf	(strstr@n+1)^0,c
  4634  00038A  EC65  F02A         	call	_strstr	;wreg free
  4635  00038E  500D               	movf	?_strstr^0,w,c
  4636  000390  100E               	iorwf	(?_strstr+1)^0,w,c
  4637  000392  B4D8               	btfsc	status,2,c
  4638  000394  D11A               	goto	l15856
  4639                           
  4640                           ;../app/app_src/application.c: 912:                 set_hop_table_ttl(atCommand);
  4641  000396  0E34               	movlw	low _atCommand
  4642  000398  0100               	movlb	0	; () banked
  4643  00039A  6F76               	movwf	set_hop_table_ttl@cmd& (0+255),b
  4644  00039C  0E02               	movlw	high _atCommand
  4645  00039E  6F77               	movwf	(set_hop_table_ttl@cmd+1)& (0+255),b
  4646  0003A0  ECF4  F041         	call	_set_hop_table_ttl	;wreg free
  4647                           
  4648                           ;../app/app_src/application.c: 913:             }
  4649  0003A4  0012               	return	
  4650  0003A6                     l15796:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;../app/app_src/application.c: 919:             if(strstr(cmd,"+I")){
  4654  0003A6  0060  F290  F00D   	movff	executeATCommand@cmd,strstr@h
  4655  0003AC  0060  F294  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4656  0003B2  0EFA               	movlw	low STR_100
  4657  0003B4  6E0F               	movwf	strstr@n^0,c
  4658  0003B6  0EFF               	movlw	high STR_100
  4659  0003B8  6E10               	movwf	(strstr@n+1)^0,c
  4660  0003BA  EC65  F02A         	call	_strstr	;wreg free
  4661  0003BE  500D               	movf	?_strstr^0,w,c
  4662  0003C0  100E               	iorwf	(?_strstr+1)^0,w,c
  4663  0003C2  B4D8               	btfsc	status,2,c
  4664  0003C4  D102               	goto	l15856
  4665                           
  4666                           ;../app/app_src/application.c: 920:                 cmdI();
  4667  0003C6  EC79  F042         	call	_cmdI	;wreg free
  4668                           
  4669                           ;../app/app_src/application.c: 921:             }
  4670  0003CA  0012               	return	
  4671  0003CC                     l15800:
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;../app/app_src/application.c: 927:          if(strstr(atCommand,"+MAC?")){
  4675  0003CC  0E34               	movlw	low _atCommand
  4676  0003CE  6E0D               	movwf	strstr@h^0,c
  4677  0003D0  0E02               	movlw	high _atCommand
  4678  0003D2  6E0E               	movwf	(strstr@h+1)^0,c
  4679  0003D4  0EB4               	movlw	low STR_102
  4680  0003D6  6E0F               	movwf	strstr@n^0,c
  4681  0003D8  0EFF               	movlw	high STR_102
  4682  0003DA  6E10               	movwf	(strstr@n+1)^0,c
  4683  0003DC  EC65  F02A         	call	_strstr	;wreg free
  4684  0003E0  500D               	movf	?_strstr^0,w,c
  4685  0003E2  100E               	iorwf	(?_strstr+1)^0,w,c
  4686  0003E4  B4D8               	btfsc	status,2,c
  4687  0003E6  D003               	goto	l15804
  4688                           
  4689                           ;../app/app_src/application.c: 928:           cmdMac();
  4690  0003E8  EC9A  F03A         	call	_cmdMac	;wreg free
  4691                           
  4692                           ;../app/app_src/application.c: 929:          }
  4693  0003EC  0012               	return	
  4694  0003EE                     l15804:
  4695  0003EE  0E34               	movlw	low _atCommand
  4696  0003F0  6E0D               	movwf	strstr@h^0,c
  4697  0003F2  0E02               	movlw	high _atCommand
  4698  0003F4  6E0E               	movwf	(strstr@h+1)^0,c
  4699  0003F6  0E84               	movlw	low STR_104
  4700  0003F8  6E0F               	movwf	strstr@n^0,c
  4701  0003FA  0EFF               	movlw	high STR_104
  4702  0003FC  6E10               	movwf	(strstr@n+1)^0,c
  4703  0003FE  EC65  F02A         	call	_strstr	;wreg free
  4704  000402  500D               	movf	?_strstr^0,w,c
  4705  000404  100E               	iorwf	(?_strstr+1)^0,w,c
  4706  000406  B4D8               	btfsc	status,2,c
  4707  000408  D0E0               	goto	l15856
  4708                           
  4709                           ;../app/app_src/application.c: 931:           cmdGetMode();
  4710  00040A  EC09  F042         	call	_cmdGetMode	;wreg free
  4711                           
  4712                           ;../app/app_src/application.c: 932:          }
  4713  00040E  0012               	return	
  4714  000410                     l15808:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;../app/app_src/application.c: 938:          if(strstr(atCommand,"+NADDR?")){
  4718  000410  0E34               	movlw	low _atCommand
  4719  000412  6E0D               	movwf	strstr@h^0,c
  4720  000414  0E02               	movlw	high _atCommand
  4721  000416  6E0E               	movwf	(strstr@h+1)^0,c
  4722  000418  0E59               	movlw	low STR_106
  4723  00041A  6E0F               	movwf	strstr@n^0,c
  4724  00041C  0EFF               	movlw	high STR_106
  4725  00041E  6E10               	movwf	(strstr@n+1)^0,c
  4726  000420  EC65  F02A         	call	_strstr	;wreg free
  4727  000424  500D               	movf	?_strstr^0,w,c
  4728  000426  100E               	iorwf	(?_strstr+1)^0,w,c
  4729  000428  B4D8               	btfsc	status,2,c
  4730  00042A  D003               	goto	l15812
  4731                           
  4732                           ;../app/app_src/application.c: 939:     cmdNaddr();
  4733  00042C  EC82  F041         	call	_cmdNaddr	;wreg free
  4734                           
  4735                           ;../app/app_src/application.c: 940:    }
  4736  000430  0012               	return	
  4737  000432                     l15812:
  4738  000432  0E34               	movlw	low _atCommand
  4739  000434  6E0D               	movwf	strstr@h^0,c
  4740  000436  0E02               	movlw	high _atCommand
  4741  000438  6E0E               	movwf	(strstr@h+1)^0,c
  4742  00043A  0E49               	movlw	low STR_108
  4743  00043C  6E0F               	movwf	strstr@n^0,c
  4744  00043E  0EFF               	movlw	high STR_108
  4745  000440  6E10               	movwf	(strstr@n+1)^0,c
  4746  000442  EC65  F02A         	call	_strstr	;wreg free
  4747  000446  500D               	movf	?_strstr^0,w,c
  4748  000448  100E               	iorwf	(?_strstr+1)^0,w,c
  4749  00044A  B4D8               	btfsc	status,2,c
  4750  00044C  D0BE               	goto	l15856
  4751                           
  4752                           ;../app/app_src/application.c: 942:     cmdSetNaddr(atCommand);
  4753  00044E  0E34               	movlw	low _atCommand
  4754  000450  0100               	movlb	0	; () banked
  4755  000452  6F76               	movwf	cmdSetNaddr@cmd& (0+255),b
  4756  000454  0E02               	movlw	high _atCommand
  4757  000456  6F77               	movwf	(cmdSetNaddr@cmd+1)& (0+255),b
  4758  000458  EC92  F035         	call	_cmdSetNaddr	;wreg free
  4759                           
  4760                           ;../app/app_src/application.c: 943:    }
  4761  00045C  0012               	return	
  4762  00045E                     l15816:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;../app/app_src/application.c: 949:             if(strstr(atCommand,"+PARITY=")){
  4766  00045E  0E34               	movlw	low _atCommand
  4767  000460  6E0D               	movwf	strstr@h^0,c
  4768  000462  0E02               	movlw	high _atCommand
  4769  000464  6E0E               	movwf	(strstr@h+1)^0,c
  4770  000466  0E27               	movlw	low STR_110
  4771  000468  6E0F               	movwf	strstr@n^0,c
  4772  00046A  0EFF               	movlw	high STR_110
  4773  00046C  6E10               	movwf	(strstr@n+1)^0,c
  4774  00046E  EC65  F02A         	call	_strstr	;wreg free
  4775  000472  500D               	movf	?_strstr^0,w,c
  4776  000474  100E               	iorwf	(?_strstr+1)^0,w,c
  4777  000476  B4D8               	btfsc	status,2,c
  4778  000478  D0A8               	goto	l15856
  4779                           
  4780                           ;../app/app_src/application.c: 950:                 cmdSetParity(atCommand);
  4781  00047A  0E34               	movlw	low _atCommand
  4782  00047C  0100               	movlb	0	; () banked
  4783  00047E  6F76               	movwf	cmdSetParity@atCommand& (0+255),b
  4784  000480  0E02               	movlw	high _atCommand
  4785  000482  6F77               	movwf	(cmdSetParity@atCommand+1)& (0+255),b
  4786  000484  EC39  F033         	call	_cmdSetParity	;wreg free
  4787  000488                     l15820:
  4788                           
  4789                           ;../app/app_src/application.c: 956:          if(strstr(atCommand,"+RECV")){
  4790  000488  0E34               	movlw	low _atCommand
  4791  00048A  6E0D               	movwf	strstr@h^0,c
  4792  00048C  0E02               	movlw	high _atCommand
  4793  00048E  6E0E               	movwf	(strstr@h+1)^0,c
  4794  000490  0ECC               	movlw	low STR_112
  4795  000492  6E0F               	movwf	strstr@n^0,c
  4796  000494  0EFF               	movlw	high STR_112
  4797  000496  6E10               	movwf	(strstr@n+1)^0,c
  4798  000498  EC65  F02A         	call	_strstr	;wreg free
  4799  00049C  500D               	movf	?_strstr^0,w,c
  4800  00049E  100E               	iorwf	(?_strstr+1)^0,w,c
  4801  0004A0  B4D8               	btfsc	status,2,c
  4802  0004A2  D003               	goto	l15824
  4803                           
  4804                           ;../app/app_src/application.c: 957:           cmdRecv();
  4805  0004A4  EC89  F042         	call	_cmdRecv	;wreg free
  4806                           
  4807                           ;../app/app_src/application.c: 958:          }
  4808  0004A8  0012               	return	
  4809  0004AA                     l15824:
  4810  0004AA  0E34               	movlw	low _atCommand
  4811  0004AC  6E0D               	movwf	strstr@h^0,c
  4812  0004AE  0E02               	movlw	high _atCommand
  4813  0004B0  6E0E               	movwf	(strstr@h+1)^0,c
  4814  0004B2  0E8B               	movlw	low STR_114
  4815  0004B4  6E0F               	movwf	strstr@n^0,c
  4816  0004B6  0EFF               	movlw	high STR_114
  4817  0004B8  6E10               	movwf	(strstr@n+1)^0,c
  4818  0004BA  EC65  F02A         	call	_strstr	;wreg free
  4819  0004BE  500D               	movf	?_strstr^0,w,c
  4820  0004C0  100E               	iorwf	(?_strstr+1)^0,w,c
  4821  0004C2  B4D8               	btfsc	status,2,c
  4822  0004C4  D003               	goto	l15828
  4823                           
  4824                           ;../app/app_src/application.c: 960:           cmdGetRFCH();
  4825  0004C6  EC02  F041         	call	_cmdGetRFCH	;wreg free
  4826                           
  4827                           ;../app/app_src/application.c: 961:          }
  4828  0004CA  0012               	return	
  4829  0004CC                     l15828:
  4830  0004CC  0E34               	movlw	low _atCommand
  4831  0004CE  6E0D               	movwf	strstr@h^0,c
  4832  0004D0  0E02               	movlw	high _atCommand
  4833  0004D2  6E0E               	movwf	(strstr@h+1)^0,c
  4834  0004D4  0E6F               	movlw	low STR_116
  4835  0004D6  6E0F               	movwf	strstr@n^0,c
  4836  0004D8  0EFF               	movlw	high STR_116
  4837  0004DA  6E10               	movwf	(strstr@n+1)^0,c
  4838  0004DC  EC65  F02A         	call	_strstr	;wreg free
  4839  0004E0  500D               	movf	?_strstr^0,w,c
  4840  0004E2  100E               	iorwf	(?_strstr+1)^0,w,c
  4841  0004E4  B4D8               	btfsc	status,2,c
  4842  0004E6  D008               	goto	l15832
  4843                           
  4844                           ;../app/app_src/application.c: 963:           cmdSetRFCH(atCommand);
  4845  0004E8  0E34               	movlw	low _atCommand
  4846  0004EA  0100               	movlb	0	; () banked
  4847  0004EC  6F76               	movwf	cmdSetRFCH@cmd& (0+255),b
  4848  0004EE  0E02               	movlw	high _atCommand
  4849  0004F0  6F77               	movwf	(cmdSetRFCH@cmd+1)& (0+255),b
  4850  0004F2  EC2B  F031         	call	_cmdSetRFCH	;wreg free
  4851                           
  4852                           ;../app/app_src/application.c: 964:          }
  4853  0004F6  0012               	return	
  4854  0004F8                     l15832:
  4855  0004F8  0E34               	movlw	low _atCommand
  4856  0004FA  6E0D               	movwf	strstr@h^0,c
  4857  0004FC  0E02               	movlw	high _atCommand
  4858  0004FE  6E0E               	movwf	(strstr@h+1)^0,c
  4859  000500  0EF0               	movlw	low STR_118
  4860  000502  6E0F               	movwf	strstr@n^0,c
  4861  000504  0EFF               	movlw	high STR_118
  4862  000506  6E10               	movwf	(strstr@n+1)^0,c
  4863  000508  EC65  F02A         	call	_strstr	;wreg free
  4864  00050C  500D               	movf	?_strstr^0,w,c
  4865  00050E  100E               	iorwf	(?_strstr+1)^0,w,c
  4866  000510  B4D8               	btfsc	status,2,c
  4867  000512  D003               	goto	l15836
  4868                           
  4869                           ;../app/app_src/application.c: 966:           cmdReset();
  4870  000514  EC85  F042         	call	_cmdReset	;wreg free
  4871                           
  4872                           ;../app/app_src/application.c: 967:          }
  4873  000518  0012               	return	
  4874  00051A                     l15836:
  4875  00051A  0E34               	movlw	low _atCommand
  4876  00051C  6E0D               	movwf	strstr@h^0,c
  4877  00051E  0E02               	movlw	high _atCommand
  4878  000520  6E0E               	movwf	(strstr@h+1)^0,c
  4879  000522  0EA0               	movlw	low STR_120
  4880  000524  6E0F               	movwf	strstr@n^0,c
  4881  000526  0EFF               	movlw	high STR_120
  4882  000528  6E10               	movwf	(strstr@n+1)^0,c
  4883  00052A  EC65  F02A         	call	_strstr	;wreg free
  4884  00052E  500D               	movf	?_strstr^0,w,c
  4885  000530  100E               	iorwf	(?_strstr+1)^0,w,c
  4886  000532  B4D8               	btfsc	status,2,c
  4887  000534  D04A               	goto	l15856
  4888                           
  4889                           ;../app/app_src/application.c: 969:           cmdGetRxCnt(atCommand);
  4890  000536  0E34               	movlw	low _atCommand
  4891  000538  6E02               	movwf	cmdGetRxCnt@atCommand^0,c
  4892  00053A  0E02               	movlw	high _atCommand
  4893  00053C  6E03               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4894  00053E  EC8B  F042         	call	_cmdGetRxCnt	;wreg free
  4895                           
  4896                           ;../app/app_src/application.c: 970:          }
  4897  000542  0012               	return	
  4898  000544                     l15840:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;../app/app_src/application.c: 976:          if(strstr(atCommand,"+TTL?")){
  4902  000544  0E34               	movlw	low _atCommand
  4903  000546  6E0D               	movwf	strstr@h^0,c
  4904  000548  0E02               	movlw	high _atCommand
  4905  00054A  6E0E               	movwf	(strstr@h+1)^0,c
  4906  00054C  0EBA               	movlw	low STR_122
  4907  00054E  6E0F               	movwf	strstr@n^0,c
  4908  000550  0EFF               	movlw	high STR_122
  4909  000552  6E10               	movwf	(strstr@n+1)^0,c
  4910  000554  EC65  F02A         	call	_strstr	;wreg free
  4911  000558  500D               	movf	?_strstr^0,w,c
  4912  00055A  100E               	iorwf	(?_strstr+1)^0,w,c
  4913  00055C  A4D8               	btfss	status,2,c
  4914  00055E  D6F5               	goto	u15520
  4915  000560  0E34               	movlw	low _atCommand
  4916  000562  6E0D               	movwf	strstr@h^0,c
  4917  000564  0E02               	movlw	high _atCommand
  4918  000566  6E0E               	movwf	(strstr@h+1)^0,c
  4919  000568  0EAE               	movlw	low STR_124
  4920  00056A  6E0F               	movwf	strstr@n^0,c
  4921  00056C  0EFF               	movlw	high STR_124
  4922  00056E  6E10               	movwf	(strstr@n+1)^0,c
  4923  000570  EC65  F02A         	call	_strstr	;wreg free
  4924  000574  500D               	movf	?_strstr^0,w,c
  4925  000576  100E               	iorwf	(?_strstr+1)^0,w,c
  4926  000578  A4D8               	btfss	status,2,c
  4927  00057A  D6F8               	goto	u15530
  4928  00057C  0E34               	movlw	low _atCommand
  4929  00057E  6E0D               	movwf	strstr@h^0,c
  4930  000580  0E02               	movlw	high _atCommand
  4931  000582  6E0E               	movwf	(strstr@h+1)^0,c
  4932  000584  0E01               	movlw	low STR_126
  4933  000586  6E0F               	movwf	strstr@n^0,c
  4934  000588  0EFF               	movlw	high STR_126
  4935  00058A  6E10               	movwf	(strstr@n+1)^0,c
  4936  00058C  EC65  F02A         	call	_strstr	;wreg free
  4937  000590  500D               	movf	?_strstr^0,w,c
  4938  000592  100E               	iorwf	(?_strstr+1)^0,w,c
  4939  000594  B4D8               	btfsc	status,2,c
  4940  000596  D003               	goto	l15852
  4941                           
  4942                           ;../app/app_src/application.c: 983:           cmdGetTX();
  4943  000598  EC8D  F041         	call	_cmdGetTX	;wreg free
  4944                           
  4945                           ;../app/app_src/application.c: 984:          }
  4946  00059C  0012               	return	
  4947  00059E                     l15852:
  4948  00059E  0E34               	movlw	low _atCommand
  4949  0005A0  6E0D               	movwf	strstr@h^0,c
  4950  0005A2  0E02               	movlw	high _atCommand
  4951  0005A4  6E0E               	movwf	(strstr@h+1)^0,c
  4952  0005A6  0EED               	movlw	low STR_128
  4953  0005A8  6E0F               	movwf	strstr@n^0,c
  4954  0005AA  0EFE               	movlw	high STR_128
  4955  0005AC  6E10               	movwf	(strstr@n+1)^0,c
  4956  0005AE  EC65  F02A         	call	_strstr	;wreg free
  4957  0005B2  500D               	movf	?_strstr^0,w,c
  4958  0005B4  100E               	iorwf	(?_strstr+1)^0,w,c
  4959  0005B6  B4D8               	btfsc	status,2,c
  4960  0005B8  D008               	goto	l15856
  4961                           
  4962                           ;../app/app_src/application.c: 986:           cmdSetTX(atCommand);
  4963  0005BA  0E34               	movlw	low _atCommand
  4964  0005BC  0100               	movlb	0	; () banked
  4965  0005BE  6F76               	movwf	cmdSetTX@cmd& (0+255),b
  4966  0005C0  0E02               	movlw	high _atCommand
  4967  0005C2  6F77               	movwf	(cmdSetTX@cmd+1)& (0+255),b
  4968  0005C4  ECA8  F028         	call	_cmdSetTX	;wreg free
  4969                           
  4970                           ;../app/app_src/application.c: 987:          }
  4971  0005C8  0012               	return	
  4972  0005CA                     l15856:
  4973                           
  4974                           ;../app/app_src/application.c: 996:             printf("NOT OK:%u\r\n", (uint16_t)UNDEFC
      +                          MD);
  4975  0005CA  0ECC               	movlw	low STR_4
  4976  0005CC  6E55               	movwf	printf@fmt^0,c
  4977  0005CE  0EFE               	movlw	high STR_4
  4978  0005D0  6E56               	movwf	(printf@fmt+1)^0,c
  4979  0005D2  0E00               	movlw	0
  4980  0005D4  6E58               	movwf	(?_printf+3)^0,c
  4981  0005D6  0E09               	movlw	9
  4982  0005D8  6E57               	movwf	(?_printf+2)^0,c
  4983  0005DA  EC0F  F040         	call	_printf	;wreg free
  4984                           
  4985                           ;../app/app_src/application.c: 997:             break;
  4986  0005DE  0012               	return	
  4987  0005E0                     l15860:
  4988                           
  4989                           ; BSR set to: 0
  4990  0005E0  EE20 F001          	lfsr	2,1
  4991  0005E4  51A4               	movf	executeATCommand@cmd& (0+255),w,b
  4992  0005E6  26D9               	addwf	fsr2l,f,c
  4993  0005E8  51A5               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  4994  0005EA  22DA               	addwfc	fsr2h,f,c
  4995  0005EC  50DF               	movf	indf2,w,c
  4996  0005EE  6FA6               	movwf	??_executeATCommand& (0+255),b
  4997  0005F0  6BA7               	clrf	(??_executeATCommand+1)& (0+255),b
  4998                           
  4999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5000                           ; Switch size 1, requested type "simple"
  5001                           ; Number of cases is 1, Range of values is 0 to 0
  5002                           ; switch strategies available:
  5003                           ; Name         Instructions Cycles
  5004                           ; simple_byte            4     3 (average)
  5005                           ;	Chosen strategy is simple_byte
  5006  0005F2  51A7               	movf	(??_executeATCommand+1)& (0+255),w,b
  5007  0005F4  0A00               	xorlw	0	; case 0
  5008  0005F6  A4D8               	btfss	status,2,c
  5009  0005F8  D7E8               	goto	l15856
  5010                           
  5011                           ; BSR set to: 0
  5012                           ; Switch size 1, requested type "simple"
  5013                           ; Number of cases is 11, Range of values is 65 to 84
  5014                           ; switch strategies available:
  5015                           ; Name         Instructions Cycles
  5016                           ; simple_byte           34    18 (average)
  5017                           ;	Chosen strategy is simple_byte
  5018  0005FA  51A6               	movf	??_executeATCommand& (0+255),w,b
  5019  0005FC  0A41               	xorlw	65	; case 65
  5020  0005FE  B4D8               	btfsc	status,2,c
  5021  000600  D610               	goto	l15756
  5022  000602  0A03               	xorlw	3	; case 66
  5023  000604  B4D8               	btfsc	status,2,c
  5024  000606  D5D0               	goto	l15744
  5025  000608  0A01               	xorlw	1	; case 67
  5026  00060A  B4D8               	btfsc	status,2,c
  5027  00060C  D647               	goto	l15768
  5028  00060E  0A0B               	xorlw	11	; case 72
  5029  000610  B4D8               	btfsc	status,2,c
  5030  000612  D68D               	goto	l15784
  5031  000614  0A01               	xorlw	1	; case 73
  5032  000616  B4D8               	btfsc	status,2,c
  5033  000618  D6C6               	goto	l15796
  5034  00061A  0A04               	xorlw	4	; case 77
  5035  00061C  B4D8               	btfsc	status,2,c
  5036  00061E  D6D6               	goto	l15800
  5037  000620  0A03               	xorlw	3	; case 78
  5038  000622  B4D8               	btfsc	status,2,c
  5039  000624  D6F5               	goto	l15808
  5040  000626  0A1E               	xorlw	30	; case 80
  5041  000628  B4D8               	btfsc	status,2,c
  5042  00062A  D719               	goto	l15816
  5043  00062C  0A02               	xorlw	2	; case 82
  5044  00062E  B4D8               	btfsc	status,2,c
  5045  000630  D72B               	goto	l15820
  5046  000632  0A01               	xorlw	1	; case 83
  5047  000634  B4D8               	btfsc	status,2,c
  5048  000636  D53E               	goto	l15720
  5049  000638  0A07               	xorlw	7	; case 84
  5050  00063A  B4D8               	btfsc	status,2,c
  5051  00063C  D783               	goto	l15840
  5052  00063E  D7C5               	goto	l15856
  5053  000640                     __end_of_executeATCommand:
  5054                           	opt callstack 0
  5055                           
  5056 ;; *************** function _set_hop_table_ttl *****************
  5057 ;; Defined at:
  5058 ;;		line 809 in file "../app/app_src/application.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5061 ;;		 -> atCommand(80), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 3F/0
  5070 ;;		On exit  : 3F/1
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        2 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:   16
  5080 ;; This function calls:
  5081 ;;		_printf
  5082 ;; This function is called by:
  5083 ;;		_executeATCommand
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text8
  5088  0083E8                     __ptext8:
  5089                           	opt callstack 0
  5090  0083E8                     _set_hop_table_ttl:
  5091                           	opt callstack 12
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;../app/app_src/application.c: 822:     printf("OK\r\n");
  5095                           
  5096                           ;incstack = 0
  5097  0083E8  0ED7               	movlw	low STR_13
  5098  0083EA  6E55               	movwf	printf@fmt^0,c
  5099  0083EC  0EFF               	movlw	high STR_13
  5100  0083EE  6E56               	movwf	(printf@fmt+1)^0,c
  5101  0083F0  EC0F  F040         	call	_printf	;wreg free
  5102                           
  5103                           ; BSR set to: 1
  5104  0083F4  0012               	return		;funcret
  5105  0083F6                     __end_of_set_hop_table_ttl:
  5106                           	opt callstack 0
  5107                           
  5108 ;; *************** function _print_hop_table *****************
  5109 ;; Defined at:
  5110 ;;		line 793 in file "../app/app_src/application.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5113 ;;		 -> atCommand(80), 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 3F/0
  5122 ;;		On exit  : 3F/1
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:        2 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:   16
  5132 ;; This function calls:
  5133 ;;		_printf
  5134 ;; This function is called by:
  5135 ;;		_executeATCommand
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text9
  5140  0083F6                     __ptext9:
  5141                           	opt callstack 0
  5142  0083F6                     _print_hop_table:
  5143                           	opt callstack 12
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;../app/app_src/application.c: 794:     printf("Hop table\r\n");
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;incstack = 0
  5150  0083F6  0EB4               	movlw	low STR_60
  5151  0083F8  6E55               	movwf	printf@fmt^0,c
  5152  0083FA  0EFE               	movlw	high STR_60
  5153  0083FC  6E56               	movwf	(printf@fmt+1)^0,c
  5154  0083FE  EC0F  F040         	call	_printf	;wreg free
  5155                           
  5156                           ; BSR set to: 1
  5157  008402  0012               	return		;funcret
  5158  008404                     __end_of_print_hop_table:
  5159                           	opt callstack 0
  5160                           
  5161 ;; *************** function _cmdSetTX *****************
  5162 ;; Defined at:
  5163 ;;		line 616 in file "../app/app_src/application.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5166 ;;		 -> atCommand(80), 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  CHstr           3   29[BANK0 ] unsigned char [3]
  5169 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  5170 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5171 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  5172 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5173 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5174 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5175 ;;  temp            1   28[BANK0 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 3F/0
  5182 ;;		On exit  : 3F/1
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;Total ram usage:       10 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:   16
  5192 ;; This function calls:
  5193 ;;		_DATAEE_WriteByte_Platform
  5194 ;;		_initRadio
  5195 ;;		_memcpy
  5196 ;;		_memset
  5197 ;;		_printf
  5198 ;;		_strstr
  5199 ;;		_strtoul
  5200 ;; This function is called by:
  5201 ;;		_executeATCommand
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text10
  5206  005150                     __ptext10:
  5207                           	opt callstack 0
  5208  005150                     _cmdSetTX:
  5209                           	opt callstack 12
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;../app/app_src/application.c: 617:  char *p1,*p2;;../app/app_src/application.c: 618:  c
      +                          har CHstr[3];;../app/app_src/application.c: 619:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 620:  p1 = strstr(atCommand,"=") + 1;
  5213                           
  5214                           ; BSR set to: 1
  5215                           ;incstack = 0
  5216  005150  0E34               	movlw	low _atCommand
  5217  005152  6E0D               	movwf	strstr@h^0,c
  5218  005154  0E02               	movlw	high _atCommand
  5219  005156  6E0E               	movwf	(strstr@h+1)^0,c
  5220  005158  0EDF               	movlw	low (STR_18+3)
  5221  00515A  6E0F               	movwf	strstr@n^0,c
  5222  00515C  0EFF               	movlw	high (STR_18+3)
  5223  00515E  6E10               	movwf	(strstr@n+1)^0,c
  5224  005160  EC65  F02A         	call	_strstr	;wreg free
  5225  005164  0E01               	movlw	1
  5226  005166  240D               	addwf	?_strstr^0,w,c
  5227  005168  0100               	movlb	0	; () banked
  5228  00516A  6F7A               	movwf	cmdSetTX@p1& (0+255),b
  5229  00516C  0E00               	movlw	0
  5230  00516E  200E               	addwfc	(?_strstr+1)^0,w,c
  5231  005170  6F7B               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;../app/app_src/application.c: 621:     if(!p1){
  5235  005172  517A               	movf	cmdSetTX@p1& (0+255),w,b
  5236  005174  117B               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5237  005176  A4D8               	btfss	status,2,c
  5238  005178  D00A               	goto	l15360
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;../app/app_src/application.c: 622:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5242  00517A  0ECC               	movlw	low STR_4
  5243  00517C  6E55               	movwf	printf@fmt^0,c
  5244  00517E  0EFE               	movlw	high STR_4
  5245  005180  6E56               	movwf	(printf@fmt+1)^0,c
  5246  005182  0E00               	movlw	0
  5247  005184  6E58               	movwf	(?_printf+3)^0,c
  5248  005186  0E0B               	movlw	11
  5249  005188  6E57               	movwf	(?_printf+2)^0,c
  5250  00518A  EC0F  F040         	call	_printf	;wreg free
  5251  00518E                     l15360:
  5252                           
  5253                           ;../app/app_src/application.c: 624:     memset(CHstr, 0 , sizeof(CHstr));
  5254  00518E  0E7D               	movlw	low cmdSetTX@CHstr
  5255  005190  6E02               	movwf	memset@dest^0,c
  5256  005192  6A03               	clrf	(memset@dest+1)^0,c
  5257  005194  0E00               	movlw	0
  5258  005196  6E05               	movwf	(memset@c+1)^0,c
  5259  005198  0E00               	movlw	0
  5260  00519A  6E04               	movwf	memset@c^0,c
  5261  00519C  0E00               	movlw	0
  5262  00519E  6E07               	movwf	(memset@n+1)^0,c
  5263  0051A0  0E03               	movlw	3
  5264  0051A2  6E06               	movwf	memset@n^0,c
  5265  0051A4  ECC9  F01E         	call	_memset	;wreg free
  5266                           
  5267                           ;../app/app_src/application.c: 625:  memcpy(CHstr,p1,2);
  5268  0051A8  0E7D               	movlw	low cmdSetTX@CHstr
  5269  0051AA  6E08               	movwf	memcpy@d1^0,c
  5270  0051AC  6A09               	clrf	(memcpy@d1+1)^0,c
  5271  0051AE  0060  F1E8  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5272  0051B4  0060  F1EC  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5273  0051BA  0E00               	movlw	0
  5274  0051BC  6E0D               	movwf	(memcpy@n+1)^0,c
  5275  0051BE  0E02               	movlw	2
  5276  0051C0  6E0C               	movwf	memcpy@n^0,c
  5277  0051C2  ECD0  F035         	call	_memcpy	;wreg free
  5278                           
  5279                           ;../app/app_src/application.c: 626:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5280  0051C6  0E7D               	movlw	low cmdSetTX@CHstr
  5281  0051C8  6E34               	movwf	strtoul@s^0,c
  5282  0051CA  6A35               	clrf	(strtoul@s+1)^0,c
  5283  0051CC  0E78               	movlw	low cmdSetTX@p2
  5284  0051CE  6E36               	movwf	strtoul@endptr^0,c
  5285  0051D0  6A37               	clrf	(strtoul@endptr+1)^0,c
  5286  0051D2  0E00               	movlw	0
  5287  0051D4  6E39               	movwf	(strtoul@base+1)^0,c
  5288  0051D6  0E0A               	movlw	10
  5289  0051D8  6E38               	movwf	strtoul@base^0,c
  5290  0051DA  EC0B  F03B         	call	_strtoul	;wreg free
  5291  0051DE  5034               	movf	?_strtoul^0,w,c
  5292  0051E0  0100               	movlb	0	; () banked
  5293  0051E2  6F7C               	movwf	cmdSetTX@temp& (0+255),b
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;../app/app_src/application.c: 627:  if((temp > 5) || (temp < 2)){
  5297  0051E4  0E06               	movlw	6
  5298  0051E6  617C               	cpfslt	cmdSetTX@temp& (0+255),b
  5299  0051E8  D003               	goto	u14970
  5300                           
  5301                           ; BSR set to: 0
  5302  0051EA  0E02               	movlw	2
  5303  0051EC  617C               	cpfslt	cmdSetTX@temp& (0+255),b
  5304  0051EE  D00B               	goto	l338
  5305  0051F0                     u14970:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;../app/app_src/application.c: 628:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5309  0051F0  0ECC               	movlw	low STR_4
  5310  0051F2  6E55               	movwf	printf@fmt^0,c
  5311  0051F4  0EFE               	movlw	high STR_4
  5312  0051F6  6E56               	movwf	(printf@fmt+1)^0,c
  5313  0051F8  0E00               	movlw	0
  5314  0051FA  6E58               	movwf	(?_printf+3)^0,c
  5315  0051FC  0E0B               	movlw	11
  5316  0051FE  6E57               	movwf	(?_printf+2)^0,c
  5317  005200  EC0F  F040         	call	_printf	;wreg free
  5318                           
  5319                           ;../app/app_src/application.c: 629:  }
  5320  005204  0012               	return	
  5321  005206                     l338:
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;../app/app_src/application.c: 631:   TXPower = temp;
  5325  005206  0060  F1F0  F0EA   	movff	cmdSetTX@temp,_TXPower
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;../app/app_src/application.c: 632:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5329  00520C  0E00               	movlw	0
  5330  00520E  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5331  005210  0E1D               	movlw	29
  5332  005212  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5333  005214  0060  F3A8  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5334  00521A  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  5335                           
  5336                           ;../app/app_src/application.c: 633:   initRadio();
  5337  00521E  EC6E  F01D         	call	_initRadio	;wreg free
  5338                           
  5339                           ; BSR set to: 1
  5340                           ;../app/app_src/application.c: 634:   printf("OK\r\n");
  5341  005222  0ED7               	movlw	low STR_13
  5342  005224  6E55               	movwf	printf@fmt^0,c
  5343  005226  0EFF               	movlw	high STR_13
  5344  005228  6E56               	movwf	(printf@fmt+1)^0,c
  5345  00522A  EC0F  F040         	call	_printf	;wreg free
  5346                           
  5347                           ; BSR set to: 1
  5348  00522E  0012               	return		;funcret
  5349  005230                     __end_of_cmdSetTX:
  5350                           	opt callstack 0
  5351                           
  5352 ;; *************** function _cmdSetTTL *****************
  5353 ;; Defined at:
  5354 ;;		line 514 in file "../app/app_src/application.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5357 ;;		 -> atCommand(80), 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		None
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;Total ram usage:        2 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    7
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_executeATCommand
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text11
  5384  00850E                     __ptext11:
  5385                           	opt callstack 0
  5386  00850E                     _cmdSetTTL:
  5387                           	opt callstack 21
  5388                           
  5389                           ;../app/app_src/application.c: 521:  return;
  5390                           
  5391                           ; BSR set to: 1
  5392                           ;incstack = 0
  5393  00850E  0012               	return		;funcret
  5394  008510                     __end_of_cmdSetTTL:
  5395                           	opt callstack 0
  5396                           
  5397 ;; *************** function _cmdSetSink *****************
  5398 ;; Defined at:
  5399 ;;		line 403 in file "../app/app_src/application.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 3F/1
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;Total ram usage:        0 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:   16
  5420 ;; This function calls:
  5421 ;;		_printf
  5422 ;; This function is called by:
  5423 ;;		_executeATCommand
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text12
  5428  008404                     __ptext12:
  5429                           	opt callstack 0
  5430  008404                     _cmdSetSink:
  5431                           	opt callstack 12
  5432                           
  5433                           ;../app/app_src/application.c: 417:  printf("OK\r\n");
  5434                           
  5435                           ;incstack = 0
  5436  008404  0ED7               	movlw	low STR_13
  5437  008406  6E55               	movwf	printf@fmt^0,c
  5438  008408  0EFF               	movlw	high STR_13
  5439  00840A  6E56               	movwf	(printf@fmt+1)^0,c
  5440  00840C  EC0F  F040         	call	_printf	;wreg free
  5441                           
  5442                           ; BSR set to: 1
  5443  008410  0012               	return		;funcret
  5444  008412                     __end_of_cmdSetSink:
  5445                           	opt callstack 0
  5446                           
  5447 ;; *************** function _cmdSetSF *****************
  5448 ;; Defined at:
  5449 ;;		line 757 in file "../app/app_src/application.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5452 ;;		 -> atCommand(80), 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  5455 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  5456 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5457 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5458 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5459 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  5460 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5461 ;;  temp            1   31[BANK0 ] char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 3F/0
  5468 ;;		On exit  : 3F/1
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:       10 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:   16
  5478 ;; This function calls:
  5479 ;;		_DATAEE_WriteByte_Platform
  5480 ;;		_initRadio
  5481 ;;		_memcpy
  5482 ;;		_printf
  5483 ;;		_strstr
  5484 ;;		_strtol
  5485 ;; This function is called by:
  5486 ;;		_executeATCommand
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text13
  5491  005FA8                     __ptext13:
  5492                           	opt callstack 0
  5493  005FA8                     _cmdSetSF:
  5494                           	opt callstack 12
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;../app/app_src/application.c: 758:  char *p1,*p2;;../app/app_src/application.c: 759:  c
      +                          har CHstr[3];;../app/app_src/application.c: 760:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 761:  p1 = strstr(atCommand,"=") + 1;
  5498                           
  5499                           ; BSR set to: 1
  5500                           ;incstack = 0
  5501  005FA8  0060  F1D8  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5502  005FAE  0060  F1DC  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5503  005FB4  0EDF               	movlw	low (STR_18+3)
  5504  005FB6  6E0F               	movwf	strstr@n^0,c
  5505  005FB8  0EFF               	movlw	high (STR_18+3)
  5506  005FBA  6E10               	movwf	(strstr@n+1)^0,c
  5507  005FBC  EC65  F02A         	call	_strstr	;wreg free
  5508  005FC0  0E01               	movlw	1
  5509  005FC2  240D               	addwf	?_strstr^0,w,c
  5510  005FC4  0100               	movlb	0	; () banked
  5511  005FC6  6F78               	movwf	cmdSetSF@p1& (0+255),b
  5512  005FC8  0E00               	movlw	0
  5513  005FCA  200E               	addwfc	(?_strstr+1)^0,w,c
  5514  005FCC  6F79               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;../app/app_src/application.c: 762:  memcpy(CHstr,p1,2);
  5518  005FCE  0E7A               	movlw	low cmdSetSF@CHstr
  5519  005FD0  6E08               	movwf	memcpy@d1^0,c
  5520  005FD2  6A09               	clrf	(memcpy@d1+1)^0,c
  5521  005FD4  0060  F1E0  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5522  005FDA  0060  F1E4  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5523  005FE0  0E00               	movlw	0
  5524  005FE2  6E0D               	movwf	(memcpy@n+1)^0,c
  5525  005FE4  0E02               	movlw	2
  5526  005FE6  6E0C               	movwf	memcpy@n^0,c
  5527  005FE8  ECD0  F035         	call	_memcpy	;wreg free
  5528                           
  5529                           ;../app/app_src/application.c: 763:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5530  005FEC  0E7A               	movlw	low cmdSetSF@CHstr
  5531  005FEE  6E34               	movwf	strtol@s^0,c
  5532  005FF0  0E7D               	movlw	low cmdSetSF@p2
  5533  005FF2  6E35               	movwf	strtol@endptr^0,c
  5534  005FF4  0E00               	movlw	0
  5535  005FF6  6E37               	movwf	(strtol@base+1)^0,c
  5536  005FF8  0E10               	movlw	16
  5537  005FFA  6E36               	movwf	strtol@base^0,c
  5538  005FFC  EC5A  F03C         	call	_strtol	;wreg free
  5539  006000  5034               	movf	?_strtol^0,w,c
  5540  006002  0100               	movlb	0	; () banked
  5541  006004  6F7F               	movwf	cmdSetSF@temp& (0+255),b
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;../app/app_src/application.c: 764:  if((temp > 12) || (temp < 7)){
  5545  006006  517F               	movf	cmdSetSF@temp& (0+255),w,b
  5546  006008  0A80               	xorlw	128
  5547  00600A  0F73               	addlw	-141
  5548  00600C  B0D8               	btfsc	status,0,c
  5549  00600E  D005               	goto	u15040
  5550                           
  5551                           ; BSR set to: 0
  5552  006010  517F               	movf	cmdSetSF@temp& (0+255),w,b
  5553  006012  0A80               	xorlw	128
  5554  006014  0F79               	addlw	-135
  5555  006016  B0D8               	btfsc	status,0,c
  5556  006018  D009               	goto	l379
  5557  00601A                     u15040:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;../app/app_src/application.c: 765:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5561  00601A  0ECC               	movlw	low STR_4
  5562  00601C  6E55               	movwf	printf@fmt^0,c
  5563  00601E  0EFE               	movlw	high STR_4
  5564  006020  6E56               	movwf	(printf@fmt+1)^0,c
  5565  006022  0E0D               	movlw	13
  5566  006024  6E57               	movwf	(?_printf+2)^0,c
  5567  006026  EC0F  F040         	call	_printf	;wreg free
  5568                           
  5569                           ;../app/app_src/application.c: 766:  }
  5570  00602A  0012               	return	
  5571  00602C                     l379:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;../app/app_src/application.c: 768:   current_sf = temp;
  5575  00602C  0060  F1FC  F0EC   	movff	cmdSetSF@temp,_current_sf
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;../app/app_src/application.c: 769:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5579  006032  0E00               	movlw	0
  5580  006034  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5581  006036  0E21               	movlw	33
  5582  006038  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5583  00603A  0060  F1FC  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5584  006040  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  5585                           
  5586                           ;../app/app_src/application.c: 770:   initRadio();
  5587  006044  EC6E  F01D         	call	_initRadio	;wreg free
  5588                           
  5589                           ; BSR set to: 1
  5590                           ;../app/app_src/application.c: 771:   printf("OK\r\n");
  5591  006048  0ED7               	movlw	low STR_13
  5592  00604A  6E55               	movwf	printf@fmt^0,c
  5593  00604C  0EFF               	movlw	high STR_13
  5594  00604E  6E56               	movwf	(printf@fmt+1)^0,c
  5595  006050  EC0F  F040         	call	_printf	;wreg free
  5596                           
  5597                           ; BSR set to: 1
  5598  006054  0012               	return		;funcret
  5599  006056                     __end_of_cmdSetSF:
  5600                           	opt callstack 0
  5601                           
  5602 ;; *************** function _cmdSetRFCH *****************
  5603 ;; Defined at:
  5604 ;;		line 580 in file "../app/app_src/application.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5607 ;;		 -> atCommand(80), 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  5610 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  5611 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5612 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5613 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5614 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  5615 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5616 ;;  temp            1   31[BANK0 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 3F/0
  5623 ;;		On exit  : 3F/1
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;Total ram usage:       10 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:   16
  5633 ;; This function calls:
  5634 ;;		_DATAEE_WriteByte_Platform
  5635 ;;		_initRadio
  5636 ;;		_memcpy
  5637 ;;		_printf
  5638 ;;		_strstr
  5639 ;;		_strtoul
  5640 ;; This function is called by:
  5641 ;;		_executeATCommand
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text14
  5646  006256                     __ptext14:
  5647                           	opt callstack 0
  5648  006256                     _cmdSetRFCH:
  5649                           	opt callstack 12
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;../app/app_src/application.c: 581:  char *p1,*p2;;../app/app_src/application.c: 582:  c
      +                          har CHstr[3];;../app/app_src/application.c: 583:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 584:  p1 = strstr(atCommand,"=") + 1;
  5653                           
  5654                           ; BSR set to: 1
  5655                           ;incstack = 0
  5656  006256  0E34               	movlw	low _atCommand
  5657  006258  6E0D               	movwf	strstr@h^0,c
  5658  00625A  0E02               	movlw	high _atCommand
  5659  00625C  6E0E               	movwf	(strstr@h+1)^0,c
  5660  00625E  0EDF               	movlw	low (STR_18+3)
  5661  006260  6E0F               	movwf	strstr@n^0,c
  5662  006262  0EFF               	movlw	high (STR_18+3)
  5663  006264  6E10               	movwf	(strstr@n+1)^0,c
  5664  006266  EC65  F02A         	call	_strstr	;wreg free
  5665  00626A  0E01               	movlw	1
  5666  00626C  240D               	addwf	?_strstr^0,w,c
  5667  00626E  0100               	movlb	0	; () banked
  5668  006270  6F78               	movwf	cmdSetRFCH@p1& (0+255),b
  5669  006272  0E00               	movlw	0
  5670  006274  200E               	addwfc	(?_strstr+1)^0,w,c
  5671  006276  6F79               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;../app/app_src/application.c: 585:  memcpy(CHstr,p1,2);
  5675  006278  0E7A               	movlw	low cmdSetRFCH@CHstr
  5676  00627A  6E08               	movwf	memcpy@d1^0,c
  5677  00627C  6A09               	clrf	(memcpy@d1+1)^0,c
  5678  00627E  0060  F1E0  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5679  006284  0060  F1E4  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5680  00628A  0E00               	movlw	0
  5681  00628C  6E0D               	movwf	(memcpy@n+1)^0,c
  5682  00628E  0E02               	movlw	2
  5683  006290  6E0C               	movwf	memcpy@n^0,c
  5684  006292  ECD0  F035         	call	_memcpy	;wreg free
  5685                           
  5686                           ;../app/app_src/application.c: 586:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5687  006296  0E7A               	movlw	low cmdSetRFCH@CHstr
  5688  006298  6E34               	movwf	strtoul@s^0,c
  5689  00629A  6A35               	clrf	(strtoul@s+1)^0,c
  5690  00629C  0E7D               	movlw	low cmdSetRFCH@p2
  5691  00629E  6E36               	movwf	strtoul@endptr^0,c
  5692  0062A0  6A37               	clrf	(strtoul@endptr+1)^0,c
  5693  0062A2  0E00               	movlw	0
  5694  0062A4  6E39               	movwf	(strtoul@base+1)^0,c
  5695  0062A6  0E10               	movlw	16
  5696  0062A8  6E38               	movwf	strtoul@base^0,c
  5697  0062AA  EC0B  F03B         	call	_strtoul	;wreg free
  5698  0062AE  0434               	decf	?_strtoul^0,w,c
  5699  0062B0  0100               	movlb	0	; () banked
  5700  0062B2  6F7F               	movwf	cmdSetRFCH@temp& (0+255),b
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;../app/app_src/application.c: 587:  if(temp > sizeof(fhssList)){
  5704  0062B4  0EFC               	movlw	252
  5705  0062B6  657F               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5706  0062B8  D009               	goto	l329
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;../app/app_src/application.c: 588:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5710  0062BA  0ECC               	movlw	low STR_4
  5711  0062BC  6E55               	movwf	printf@fmt^0,c
  5712  0062BE  0EFE               	movlw	high STR_4
  5713  0062C0  6E56               	movwf	(printf@fmt+1)^0,c
  5714  0062C2  0E0A               	movlw	10
  5715  0062C4  6E57               	movwf	(?_printf+2)^0,c
  5716  0062C6  EC0F  F040         	call	_printf	;wreg free
  5717                           
  5718                           ;../app/app_src/application.c: 589:  }
  5719  0062CA  0012               	return	
  5720  0062CC                     l329:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;../app/app_src/application.c: 591:   channel = temp;
  5724  0062CC  0060  F1FC  F0EB   	movff	cmdSetRFCH@temp,_channel
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;../app/app_src/application.c: 592:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5728  0062D2  0E00               	movlw	0
  5729  0062D4  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5730  0062D6  0E1C               	movlw	28
  5731  0062D8  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5732  0062DA  0060  F3AC  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5733  0062E0  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  5734                           
  5735                           ;../app/app_src/application.c: 593:   initRadio();
  5736  0062E4  EC6E  F01D         	call	_initRadio	;wreg free
  5737                           
  5738                           ; BSR set to: 1
  5739                           ;../app/app_src/application.c: 594:         printf("OK\r\n");
  5740  0062E8  0ED7               	movlw	low STR_13
  5741  0062EA  6E55               	movwf	printf@fmt^0,c
  5742  0062EC  0EFF               	movlw	high STR_13
  5743  0062EE  6E56               	movwf	(printf@fmt+1)^0,c
  5744  0062F0  EC0F  F040         	call	_printf	;wreg free
  5745                           
  5746                           ; BSR set to: 1
  5747  0062F4  0012               	return		;funcret
  5748  0062F6                     __end_of_cmdSetRFCH:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _cmdSetParity *****************
  5752 ;; Defined at:
  5753 ;;		line 692 in file "../app/app_src/application.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5756 ;;		 -> atCommand(80), 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 3F/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;Total ram usage:        2 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:   16
  5775 ;; This function calls:
  5776 ;;		_printf
  5777 ;;		_set_parity
  5778 ;;		_strstr
  5779 ;; This function is called by:
  5780 ;;		_executeATCommand
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text15
  5785  006672                     __ptext15:
  5786                           	opt callstack 0
  5787  006672                     _cmdSetParity:
  5788                           	opt callstack 12
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;../app/app_src/application.c: 693:     if(strstr(atCommand,"=ODD"))
  5792                           
  5793                           ; BSR set to: 1
  5794                           ;incstack = 0
  5795  006672  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5796  006678  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5797  00667E  0EEB               	movlw	low STR_46
  5798  006680  6E0F               	movwf	strstr@n^0,c
  5799  006682  0EFF               	movlw	high STR_46
  5800  006684  6E10               	movwf	(strstr@n+1)^0,c
  5801  006686  EC65  F02A         	call	_strstr	;wreg free
  5802  00668A  500D               	movf	?_strstr^0,w,c
  5803  00668C  100E               	iorwf	(?_strstr+1)^0,w,c
  5804  00668E  B4D8               	btfsc	status,2,c
  5805  006690  D004               	goto	l15408
  5806                           
  5807                           ;../app/app_src/application.c: 694:     {;../app/app_src/application.c: 695:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  5808  006692  0E02               	movlw	2
  5809  006694  EC0E  F038         	call	_set_parity
  5810                           
  5811                           ;../app/app_src/application.c: 696:     }
  5812  006698  0012               	return	
  5813  00669A                     l15408:
  5814  00669A  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5815  0066A0  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5816  0066A6  0EC0               	movlw	low STR_48
  5817  0066A8  6E0F               	movwf	strstr@n^0,c
  5818  0066AA  0EFF               	movlw	high STR_48
  5819  0066AC  6E10               	movwf	(strstr@n+1)^0,c
  5820  0066AE  EC65  F02A         	call	_strstr	;wreg free
  5821  0066B2  500D               	movf	?_strstr^0,w,c
  5822  0066B4  100E               	iorwf	(?_strstr+1)^0,w,c
  5823  0066B6  B4D8               	btfsc	status,2,c
  5824  0066B8  D004               	goto	l15412
  5825                           
  5826                           ;../app/app_src/application.c: 698:     {;../app/app_src/application.c: 699:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  5827  0066BA  0E00               	movlw	0
  5828  0066BC  EC0E  F038         	call	_set_parity
  5829                           
  5830                           ;../app/app_src/application.c: 700:     }
  5831  0066C0  0012               	return	
  5832  0066C2                     l15412:
  5833  0066C2  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5834  0066C8  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5835  0066CE  0EC6               	movlw	low STR_50
  5836  0066D0  6E0F               	movwf	strstr@n^0,c
  5837  0066D2  0EFF               	movlw	high STR_50
  5838  0066D4  6E10               	movwf	(strstr@n+1)^0,c
  5839  0066D6  EC65  F02A         	call	_strstr	;wreg free
  5840  0066DA  500D               	movf	?_strstr^0,w,c
  5841  0066DC  100E               	iorwf	(?_strstr+1)^0,w,c
  5842  0066DE  B4D8               	btfsc	status,2,c
  5843  0066E0  D004               	goto	l15416
  5844                           
  5845                           ;../app/app_src/application.c: 702:     {;../app/app_src/application.c: 703:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  5846  0066E2  0E03               	movlw	3
  5847  0066E4  EC0E  F038         	call	_set_parity
  5848                           
  5849                           ;../app/app_src/application.c: 704:     }
  5850  0066E8  0012               	return	
  5851  0066EA                     l15416:
  5852                           
  5853                           ;../app/app_src/application.c: 706:     {;../app/app_src/application.c: 707:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  5854  0066EA  0ECC               	movlw	low STR_4
  5855  0066EC  6E55               	movwf	printf@fmt^0,c
  5856  0066EE  0EFE               	movlw	high STR_4
  5857  0066F0  6E56               	movwf	(printf@fmt+1)^0,c
  5858  0066F2  0E0D               	movlw	13
  5859  0066F4  6E57               	movwf	(?_printf+2)^0,c
  5860  0066F6  EC0F  F040         	call	_printf	;wreg free
  5861  0066FA  0012               	return		;funcret
  5862  0066FC                     __end_of_cmdSetParity:
  5863                           	opt callstack 0
  5864                           
  5865 ;; *************** function _cmdSetNaddr *****************
  5866 ;; Defined at:
  5867 ;;		line 343 in file "../app/app_src/application.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5870 ;;		 -> atCommand(80), 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  5873 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5874 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  5875 ;;  tempaddr        1   28[BANK0 ] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 3F/0
  5882 ;;		On exit  : 3F/1
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;Total ram usage:        7 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:   16
  5892 ;; This function calls:
  5893 ;;		_DATAEE_WriteByte_Platform
  5894 ;;		_initRadio
  5895 ;;		_printf
  5896 ;;		_setSyncWord
  5897 ;;		_strstr
  5898 ;;		_strtoul
  5899 ;; This function is called by:
  5900 ;;		_executeATCommand
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text16
  5905  006B24                     __ptext16:
  5906                           	opt callstack 0
  5907  006B24                     _cmdSetNaddr:
  5908                           	opt callstack 12
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;../app/app_src/application.c: 344:  uint8_t tempaddr;;../app/app_src/application.c: 345
      +                          :  char *p1,*p2;;../app/app_src/application.c: 346:  p1 = strstr(atCommand,"=") + 1;
  5912                           
  5913                           ;incstack = 0
  5914  006B24  0E34               	movlw	low _atCommand
  5915  006B26  6E0D               	movwf	strstr@h^0,c
  5916  006B28  0E02               	movlw	high _atCommand
  5917  006B2A  6E0E               	movwf	(strstr@h+1)^0,c
  5918  006B2C  0EDF               	movlw	low (STR_18+3)
  5919  006B2E  6E0F               	movwf	strstr@n^0,c
  5920  006B30  0EFF               	movlw	high (STR_18+3)
  5921  006B32  6E10               	movwf	(strstr@n+1)^0,c
  5922  006B34  EC65  F02A         	call	_strstr	;wreg free
  5923  006B38  0E01               	movlw	1
  5924  006B3A  240D               	addwf	?_strstr^0,w,c
  5925  006B3C  0100               	movlb	0	; () banked
  5926  006B3E  6F7A               	movwf	cmdSetNaddr@p1& (0+255),b
  5927  006B40  0E00               	movlw	0
  5928  006B42  200E               	addwfc	(?_strstr+1)^0,w,c
  5929  006B44  6F7B               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;../app/app_src/application.c: 348:  tempaddr = strtoul(p1,p2,16);
  5933  006B46  0060  F1E8  F034   	movff	cmdSetNaddr@p1,strtoul@s
  5934  006B4C  0060  F1EC  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  5935  006B52  0060  F1E0  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  5936  006B58  0060  F1E4  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  5937  006B5E  0E00               	movlw	0
  5938  006B60  6E39               	movwf	(strtoul@base+1)^0,c
  5939  006B62  0E10               	movlw	16
  5940  006B64  6E38               	movwf	strtoul@base^0,c
  5941  006B66  EC0B  F03B         	call	_strtoul	;wreg free
  5942  006B6A  5034               	movf	?_strtoul^0,w,c
  5943  006B6C  0100               	movlb	0	; () banked
  5944  006B6E  6F7C               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;../app/app_src/application.c: 349:  currentNetID = tempaddr;
  5948  006B70  0060  F1F0  F0FA   	movff	cmdSetNaddr@tempaddr,_currentNetID
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;../app/app_src/application.c: 350:  setSyncWord(currentNetID);
  5952  006B76  51FA               	movf	_currentNetID& (0+255),w,b
  5953  006B78  ECD5  F041         	call	_setSyncWord
  5954                           
  5955                           ;../app/app_src/application.c: 352:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  5956  006B7C  0E00               	movlw	0
  5957  006B7E  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5958  006B80  0E19               	movlw	25
  5959  006B82  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5960  006B84  0060  F3E8  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  5961  006B8A  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  5962                           
  5963                           ;../app/app_src/application.c: 353:     initRadio();
  5964  006B8E  EC6E  F01D         	call	_initRadio	;wreg free
  5965                           
  5966                           ; BSR set to: 1
  5967                           ;../app/app_src/application.c: 354:  printf("OK\r\n");
  5968  006B92  0ED7               	movlw	low STR_13
  5969  006B94  6E55               	movwf	printf@fmt^0,c
  5970  006B96  0EFF               	movlw	high STR_13
  5971  006B98  6E56               	movwf	(printf@fmt+1)^0,c
  5972  006B9A  EC0F  F040         	call	_printf	;wreg free
  5973                           
  5974                           ; BSR set to: 1
  5975  006B9E  0012               	return		;funcret
  5976  006BA0                     __end_of_cmdSetNaddr:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function _setSyncWord *****************
  5980 ;; Defined at:
  5981 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  sw              1    wreg     unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  sw              1   16[COMRAM] unsigned char 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 3F/0
  5992 ;;		On exit  : 3F/3D
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;Total ram usage:        1 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:   11
  6002 ;; This function calls:
  6003 ;;		_SX1276Write
  6004 ;; This function is called by:
  6005 ;;		_cmdSetNaddr
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text17
  6010  0083AA                     __ptext17:
  6011                           	opt callstack 0
  6012  0083AA                     _setSyncWord:
  6013                           	opt callstack 16
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;incstack = 0
  6017                           ;setSyncWord@sw stored from wreg
  6018  0083AA  6E11               	movwf	setSyncWord@sw^0,c
  6019                           
  6020                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6021  0083AC  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6022  0083B2  0E39               	movlw	57
  6023  0083B4  ECCC  F041         	call	_SX1276Write
  6024                           
  6025                           ; BSR set to: 61
  6026  0083B8  0012               	return		;funcret
  6027  0083BA                     __end_of_setSyncWord:
  6028                           	opt callstack 0
  6029                           
  6030 ;; *************** function _cmdSetCADRSSI *****************
  6031 ;; Defined at:
  6032 ;;		line 656 in file "../app/app_src/application.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  6035 ;;		 -> atCommand(80), 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  6038 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  6039 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6040 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6041 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6042 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  6043 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6044 ;;  temp            1   31[BANK0 ] char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 3F/0
  6051 ;;		On exit  : 3F/1
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;Total ram usage:       10 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:   16
  6061 ;; This function calls:
  6062 ;;		_DATAEE_WriteByte_Platform
  6063 ;;		_initRadio
  6064 ;;		_memcpy
  6065 ;;		_printf
  6066 ;;		_strstr
  6067 ;;		_strtol
  6068 ;; This function is called by:
  6069 ;;		_executeATCommand
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text18
  6074  006056                     __ptext18:
  6075                           	opt callstack 0
  6076  006056                     _cmdSetCADRSSI:
  6077                           	opt callstack 12
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;../app/app_src/application.c: 657:  char *p1,*p2;;../app/app_src/application.c: 658:  c
      +                          har CHstr[3];;../app/app_src/application.c: 659:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 660:  p1 = strstr(atCommand,"=") + 1;
  6081                           
  6082                           ; BSR set to: 61
  6083                           ;incstack = 0
  6084  006056  0060  F1D8  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6085  00605C  0060  F1DC  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6086  006062  0EDF               	movlw	low (STR_18+3)
  6087  006064  6E0F               	movwf	strstr@n^0,c
  6088  006066  0EFF               	movlw	high (STR_18+3)
  6089  006068  6E10               	movwf	(strstr@n+1)^0,c
  6090  00606A  EC65  F02A         	call	_strstr	;wreg free
  6091  00606E  0E01               	movlw	1
  6092  006070  240D               	addwf	?_strstr^0,w,c
  6093  006072  0100               	movlb	0	; () banked
  6094  006074  6F78               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6095  006076  0E00               	movlw	0
  6096  006078  200E               	addwfc	(?_strstr+1)^0,w,c
  6097  00607A  6F79               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;../app/app_src/application.c: 661:  memcpy(CHstr,p1,3);
  6101  00607C  0E7A               	movlw	low cmdSetCADRSSI@CHstr
  6102  00607E  6E08               	movwf	memcpy@d1^0,c
  6103  006080  6A09               	clrf	(memcpy@d1+1)^0,c
  6104  006082  0060  F1E0  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6105  006088  0060  F1E4  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6106  00608E  0E00               	movlw	0
  6107  006090  6E0D               	movwf	(memcpy@n+1)^0,c
  6108  006092  0E03               	movlw	3
  6109  006094  6E0C               	movwf	memcpy@n^0,c
  6110  006096  ECD0  F035         	call	_memcpy	;wreg free
  6111                           
  6112                           ;../app/app_src/application.c: 662:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6113  00609A  0E7A               	movlw	low cmdSetCADRSSI@CHstr
  6114  00609C  6E34               	movwf	strtol@s^0,c
  6115  00609E  0E7D               	movlw	low cmdSetCADRSSI@p2
  6116  0060A0  6E35               	movwf	strtol@endptr^0,c
  6117  0060A2  0E00               	movlw	0
  6118  0060A4  6E37               	movwf	(strtol@base+1)^0,c
  6119  0060A6  0E0A               	movlw	10
  6120  0060A8  6E36               	movwf	strtol@base^0,c
  6121  0060AA  EC5A  F03C         	call	_strtol	;wreg free
  6122  0060AE  5034               	movf	?_strtol^0,w,c
  6123  0060B0  0100               	movlb	0	; () banked
  6124  0060B2  6F7F               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;../app/app_src/application.c: 663:  if((temp > 0) || (temp < -120)){
  6128  0060B4  517F               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6129  0060B6  0A80               	xorlw	128
  6130  0060B8  0F7F               	addlw	-129
  6131  0060BA  B0D8               	btfsc	status,0,c
  6132  0060BC  D005               	goto	u14990
  6133                           
  6134                           ; BSR set to: 0
  6135  0060BE  517F               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6136  0060C0  0A80               	xorlw	128
  6137  0060C2  0FF8               	addlw	248
  6138  0060C4  B0D8               	btfsc	status,0,c
  6139  0060C6  D009               	goto	l348
  6140  0060C8                     u14990:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;../app/app_src/application.c: 664:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6144  0060C8  0ECC               	movlw	low STR_4
  6145  0060CA  6E55               	movwf	printf@fmt^0,c
  6146  0060CC  0EFE               	movlw	high STR_4
  6147  0060CE  6E56               	movwf	(printf@fmt+1)^0,c
  6148  0060D0  0E0B               	movlw	11
  6149  0060D2  6E57               	movwf	(?_printf+2)^0,c
  6150  0060D4  EC0F  F040         	call	_printf	;wreg free
  6151                           
  6152                           ;../app/app_src/application.c: 665:  }
  6153  0060D8  0012               	return	
  6154  0060DA                     l348:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;../app/app_src/application.c: 667:   RSSITarget = temp;
  6158  0060DA  0060  F1FC  F0F9   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;../app/app_src/application.c: 668:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6162  0060E0  0E00               	movlw	0
  6163  0060E2  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6164  0060E4  0E1E               	movlw	30
  6165  0060E6  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6166  0060E8  0060  F3E4  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6167  0060EE  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  6168                           
  6169                           ;../app/app_src/application.c: 669:   initRadio();
  6170  0060F2  EC6E  F01D         	call	_initRadio	;wreg free
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;../app/app_src/application.c: 670:   printf("OK\r\n");
  6174  0060F6  0ED7               	movlw	low STR_13
  6175  0060F8  6E55               	movwf	printf@fmt^0,c
  6176  0060FA  0EFF               	movlw	high STR_13
  6177  0060FC  6E56               	movwf	(printf@fmt+1)^0,c
  6178  0060FE  EC0F  F040         	call	_printf	;wreg free
  6179                           
  6180                           ; BSR set to: 1
  6181  006102  0012               	return		;funcret
  6182  006104                     __end_of_cmdSetCADRSSI:
  6183                           	opt callstack 0
  6184                           
  6185 ;; *************** function _strtol *****************
  6186 ;; Defined at:
  6187 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6190 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6191 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6192 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6193 ;;  base            2   53[COMRAM] int 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  4   51[COMRAM] long 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;Total ram usage:        4 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:   10
  6212 ;; This function calls:
  6213 ;;		___strtoxl
  6214 ;; This function is called by:
  6215 ;;		_cmdSetCADRSSI
  6216 ;;		_cmdSetSF
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text19
  6221  0078B4                     __ptext19:
  6222                           	opt callstack 0
  6223  0078B4                     _strtol:
  6224                           	opt callstack 17
  6225                           
  6226                           ; BSR set to: 1
  6227                           ;incstack = 0
  6228  0078B4  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6229  0078BA  6A11               	clrf	(___strtoxl@s+1)^0,c
  6230  0078BC  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6231  0078C2  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6232  0078C4  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6233  0078CA  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6234  0078D0  0E01               	movlw	1
  6235  0078D2  6E16               	movwf	___strtoxl@is_signed^0,c
  6236  0078D4  EC98  F005         	call	___strtoxl	;wreg free
  6237  0078D8  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6238  0078DE  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6239  0078E4  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6240  0078EA  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6241  0078F0  0012               	return		;funcret
  6242  0078F2                     __end_of_strtol:
  6243                           	opt callstack 0
  6244                           
  6245 ;; *************** function _cmdSetBaud *****************
  6246 ;; Defined at:
  6247 ;;		line 731 in file "../app/app_src/application.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6250 ;;		 -> atCommand(80), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6253 ;;		 -> atCommand(80), NULL(0), 
  6254 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        5 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:   11
  6271 ;; This function calls:
  6272 ;;		_strtok
  6273 ;;		_strtoul
  6274 ;; This function is called by:
  6275 ;;		_executeATCommand
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text20
  6280  006C80                     __ptext20:
  6281                           	opt callstack 0
  6282  006C80                     _cmdSetBaud:
  6283                           	opt callstack 17
  6284                           
  6285                           ;../app/app_src/application.c: 731: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 732: {;../app/app_src/application.c: 733:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 734:     char *ptr;;../app/app_src/application.c: 735:     ptr =
      +                           strtok(atCommand,"=");
  6286                           
  6287                           ;incstack = 0
  6288  006C80  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6289  006C86  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6290  006C8C  0EDF               	movlw	low (STR_18+3)
  6291  006C8E  6E11               	movwf	strtok@sep^0,c
  6292  006C90  0EFF               	movlw	high (STR_18+3)
  6293  006C92  6E12               	movwf	(strtok@sep+1)^0,c
  6294  006C94  ECF7  F029         	call	_strtok	;wreg free
  6295  006C98  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6296  006C9E  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6297                           
  6298                           ;../app/app_src/application.c: 736:     ptr = strtok(((void*)0),"\r");
  6299  006CA4  0E00               	movlw	0
  6300  006CA6  6E0F               	movwf	strtok@s^0,c
  6301  006CA8  0E00               	movlw	0
  6302  006CAA  6E10               	movwf	(strtok@s+1)^0,c
  6303  006CAC  0EFD               	movlw	low STR_55
  6304  006CAE  6E11               	movwf	strtok@sep^0,c
  6305  006CB0  0EFF               	movlw	high STR_55
  6306  006CB2  6E12               	movwf	(strtok@sep+1)^0,c
  6307  006CB4  ECF7  F029         	call	_strtok	;wreg free
  6308  006CB8  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6309  006CBE  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6310                           
  6311                           ;../app/app_src/application.c: 737:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6312  006CC4  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6313  006CCA  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6314  006CD0  0E00               	movlw	0
  6315  006CD2  6E36               	movwf	strtoul@endptr^0,c
  6316  006CD4  0E00               	movlw	0
  6317  006CD6  6E37               	movwf	(strtoul@endptr+1)^0,c
  6318  006CD8  0E00               	movlw	0
  6319  006CDA  6E39               	movwf	(strtoul@base+1)^0,c
  6320  006CDC  0E0A               	movlw	10
  6321  006CDE  6E38               	movwf	strtoul@base^0,c
  6322  006CE0  EC0B  F03B         	call	_strtoul	;wreg free
  6323  006CE4  5034               	movf	?_strtoul^0,w,c
  6324  006CE6  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6325                           
  6326                           ;../app/app_src/application.c: 738:     tempbaud++;
  6327  006CE8  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6328  006CEA  0012               	return		;funcret
  6329  006CEC                     __end_of_cmdSetBaud:
  6330                           	opt callstack 0
  6331                           
  6332 ;; *************** function _strtok *****************
  6333 ;; Defined at:
  6334 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  s               2   14[COMRAM] PTR unsigned char 
  6337 ;;		 -> atCommand(80), NULL(0), 
  6338 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6339 ;;		 -> STR_55(2), STR_54(2), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2   14[COMRAM] PTR unsigned char 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;Total ram usage:        4 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    9
  6358 ;; This function calls:
  6359 ;;		_strcspn
  6360 ;;		_strspn
  6361 ;; This function is called by:
  6362 ;;		_cmdSetBaud
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text21
  6367  0053EE                     __ptext21:
  6368                           	opt callstack 0
  6369  0053EE                     _strtok:
  6370                           	opt callstack 18
  6371                           
  6372                           ;incstack = 0
  6373  0053EE  500F               	movf	strtok@s^0,w,c
  6374  0053F0  1010               	iorwf	(strtok@s+1)^0,w,c
  6375  0053F2  A4D8               	btfss	status,2,c
  6376  0053F4  D00F               	goto	l10730
  6377  0053F6  0060  F55C  F00F   	movff	strtok@p,strtok@s
  6378  0053FC  0060  F560  F010   	movff	strtok@p+1,strtok@s+1
  6379  005402  500F               	movf	strtok@s^0,w,c
  6380  005404  1010               	iorwf	(strtok@s+1)^0,w,c
  6381  005406  A4D8               	btfss	status,2,c
  6382  005408  D005               	goto	l10730
  6383  00540A  0E00               	movlw	0
  6384  00540C  6E0F               	movwf	?_strtok^0,c
  6385  00540E  0E00               	movlw	0
  6386  005410  6E10               	movwf	(?_strtok+1)^0,c
  6387  005412  0012               	return	
  6388  005414                     l10730:
  6389  005414  0060  F03C  F008   	movff	strtok@s,strspn@s
  6390  00541A  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6391  005420  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6392  005426  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6393  00542C  ECAE  F037         	call	_strspn	;wreg free
  6394  005430  5008               	movf	?_strspn^0,w,c
  6395  005432  260F               	addwf	strtok@s^0,f,c
  6396  005434  5009               	movf	(?_strspn+1)^0,w,c
  6397  005436  2210               	addwfc	(strtok@s+1)^0,f,c
  6398  005438  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6399  00543E  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6400  005444  50DF               	movf	indf2,w,c
  6401  005446  A4D8               	btfss	status,2,c
  6402  005448  D00C               	goto	l10738
  6403  00544A  0E00               	movlw	0
  6404  00544C  0101               	movlb	1	; () banked
  6405  00544E  6F57               	movwf	strtok@p& (0+255),b
  6406  005450  0E00               	movlw	0
  6407  005452  6F58               	movwf	(strtok@p+1)& (0+255),b
  6408  005454  0060  F55C  F00F   	movff	strtok@p,?_strtok
  6409  00545A  0060  F560  F010   	movff	strtok@p+1,?_strtok+1
  6410  005460  0012               	return	
  6411  005462                     l10738:
  6412  005462  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6413  005468  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6414  00546E  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6415  005474  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6416  00547A  ECDE  F037         	call	_strcspn	;wreg free
  6417  00547E  5008               	movf	?_strcspn^0,w,c
  6418  005480  240F               	addwf	strtok@s^0,w,c
  6419  005482  0101               	movlb	1	; () banked
  6420  005484  6F57               	movwf	strtok@p& (0+255),b
  6421  005486  5009               	movf	(?_strcspn+1)^0,w,c
  6422  005488  2010               	addwfc	(strtok@s+1)^0,w,c
  6423  00548A  6F58               	movwf	(strtok@p+1)& (0+255),b
  6424                           
  6425                           ; BSR set to: 1
  6426  00548C  0060  F55F  FFD9   	movff	strtok@p,fsr2l
  6427  005492  0060  F563  FFDA   	movff	strtok@p+1,fsr2h
  6428  005498  50DF               	movf	indf2,w,c
  6429  00549A  B4D8               	btfsc	status,2,c
  6430  00549C  D00B               	goto	l10746
  6431                           
  6432                           ; BSR set to: 1
  6433  00549E  0060  F55F  FFD9   	movff	strtok@p,fsr2l
  6434  0054A4  0060  F563  FFDA   	movff	strtok@p+1,fsr2h
  6435  0054AA  0E00               	movlw	0
  6436  0054AC  6EDF               	movwf	indf2,c
  6437                           
  6438                           ; BSR set to: 1
  6439  0054AE  4B57               	infsnz	strtok@p& (0+255),f,b
  6440  0054B0  2B58               	incf	(strtok@p+1)& (0+255),f,b
  6441  0054B2  D004               	goto	l4024
  6442  0054B4                     l10746:
  6443                           
  6444                           ; BSR set to: 1
  6445  0054B4  0E00               	movlw	0
  6446  0054B6  6F57               	movwf	strtok@p& (0+255),b
  6447  0054B8  0E00               	movlw	0
  6448  0054BA  6F58               	movwf	(strtok@p+1)& (0+255),b
  6449  0054BC                     l4024:
  6450                           
  6451                           ; BSR set to: 1
  6452  0054BC  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6453  0054C2  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6454  0054C8  0012               	return		;funcret
  6455  0054CA                     __end_of_strtok:
  6456                           	opt callstack 0
  6457                           
  6458 ;; *************** function _strspn *****************
  6459 ;; Defined at:
  6460 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6463 ;;		 -> atCommand(80), NULL(0), 
  6464 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6465 ;;		 -> STR_55(2), STR_54(2), 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  i               2   12[COMRAM] unsigned int 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  2    7[COMRAM] unsigned int 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;Total ram usage:        7 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    8
  6484 ;; This function calls:
  6485 ;;		_strchr
  6486 ;; This function is called by:
  6487 ;;		_strtok
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text22
  6492  006F5C                     __ptext22:
  6493                           	opt callstack 0
  6494  006F5C                     _strspn:
  6495                           	opt callstack 18
  6496                           
  6497                           ;incstack = 0
  6498  006F5C  0E00               	movlw	0
  6499  006F5E  6E0E               	movwf	(strspn@i+1)^0,c
  6500  006F60  0E00               	movlw	0
  6501  006F62  6E0D               	movwf	strspn@i^0,c
  6502  006F64  D004               	goto	l10440
  6503  006F66                     l10438:
  6504  006F66  4A08               	infsnz	strspn@s^0,f,c
  6505  006F68  2A09               	incf	(strspn@s+1)^0,f,c
  6506  006F6A  4A0D               	infsnz	strspn@i^0,f,c
  6507  006F6C  2A0E               	incf	(strspn@i+1)^0,f,c
  6508  006F6E                     l10440:
  6509  006F6E  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6510  006F74  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6511  006F7A  50DF               	movf	indf2,w,c
  6512  006F7C  B4D8               	btfsc	status,2,c
  6513  006F7E  D017               	goto	u8470
  6514  006F80  0060  F028  F002   	movff	strspn@c,strchr@s
  6515  006F86  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6516  006F8C  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6517  006F92  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6518  006F98  50DF               	movf	indf2,w,c
  6519  006F9A  6E0C               	movwf	??_strspn^0,c
  6520  006F9C  500C               	movf	??_strspn^0,w,c
  6521  006F9E  6E04               	movwf	strchr@c^0,c
  6522  006FA0  6A05               	clrf	(strchr@c+1)^0,c
  6523  006FA2  EC4C  F034         	call	_strchr	;wreg free
  6524  006FA6  5002               	movf	?_strchr^0,w,c
  6525  006FA8  1003               	iorwf	(?_strchr+1)^0,w,c
  6526  006FAA  A4D8               	btfss	status,2,c
  6527  006FAC  D7DC               	goto	l10438
  6528  006FAE                     u8470:
  6529  006FAE  0060  F034  F008   	movff	strspn@i,?_strspn
  6530  006FB4  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6531  006FBA  0012               	return		;funcret
  6532  006FBC                     __end_of_strspn:
  6533                           	opt callstack 0
  6534                           
  6535 ;; *************** function _strcspn *****************
  6536 ;; Defined at:
  6537 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6540 ;;		 -> atCommand(80), NULL(0), 
  6541 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6542 ;;		 -> STR_55(2), STR_54(2), 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  i               2   12[COMRAM] unsigned int 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  2    7[COMRAM] unsigned int 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;Total ram usage:        7 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    8
  6561 ;; This function calls:
  6562 ;;		_strchr
  6563 ;; This function is called by:
  6564 ;;		_strtok
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text23
  6569  006FBC                     __ptext23:
  6570                           	opt callstack 0
  6571  006FBC                     _strcspn:
  6572                           	opt callstack 18
  6573                           
  6574                           ;incstack = 0
  6575  006FBC  0E00               	movlw	0
  6576  006FBE  6E0E               	movwf	(strcspn@i+1)^0,c
  6577  006FC0  0E00               	movlw	0
  6578  006FC2  6E0D               	movwf	strcspn@i^0,c
  6579  006FC4  D004               	goto	l10448
  6580  006FC6                     l10446:
  6581  006FC6  4A08               	infsnz	strcspn@s^0,f,c
  6582  006FC8  2A09               	incf	(strcspn@s+1)^0,f,c
  6583  006FCA  4A0D               	infsnz	strcspn@i^0,f,c
  6584  006FCC  2A0E               	incf	(strcspn@i+1)^0,f,c
  6585  006FCE                     l10448:
  6586  006FCE  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6587  006FD4  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6588  006FDA  50DF               	movf	indf2,w,c
  6589  006FDC  B4D8               	btfsc	status,2,c
  6590  006FDE  D017               	goto	u8490
  6591  006FE0  0060  F028  F002   	movff	strcspn@c,strchr@s
  6592  006FE6  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6593  006FEC  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6594  006FF2  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6595  006FF8  50DF               	movf	indf2,w,c
  6596  006FFA  6E0C               	movwf	??_strcspn^0,c
  6597  006FFC  500C               	movf	??_strcspn^0,w,c
  6598  006FFE  6E04               	movwf	strchr@c^0,c
  6599  007000  6A05               	clrf	(strchr@c+1)^0,c
  6600  007002  EC4C  F034         	call	_strchr	;wreg free
  6601  007006  5002               	movf	?_strchr^0,w,c
  6602  007008  1003               	iorwf	(?_strchr+1)^0,w,c
  6603  00700A  B4D8               	btfsc	status,2,c
  6604  00700C  D7DC               	goto	l10446
  6605  00700E                     u8490:
  6606  00700E  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6607  007014  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6608  00701A  0012               	return		;funcret
  6609  00701C                     __end_of_strcspn:
  6610                           	opt callstack 0
  6611                           
  6612 ;; *************** function _cmdSetAddr *****************
  6613 ;; Defined at:
  6614 ;;		line 308 in file "../app/app_src/application.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  6617 ;;		 -> atCommand(80), 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  tempaddr        2   28[BANK0 ] unsigned short 
  6620 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  6621 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6622 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  1    wreg      void 
  6625 ;; Registers used:
  6626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 3F/0
  6629 ;;		On exit  : 3F/1
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;Total ram usage:        8 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:   16
  6639 ;; This function calls:
  6640 ;;		_printf
  6641 ;;		_strstr
  6642 ;;		_strtoul
  6643 ;; This function is called by:
  6644 ;;		_executeATCommand
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text24
  6649  0064C4                     __ptext24:
  6650                           	opt callstack 0
  6651  0064C4                     _cmdSetAddr:
  6652                           	opt callstack 12
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;../app/app_src/application.c: 309:  uint16_t tempaddr;;../app/app_src/application.c: 31
      +                          0:  char *p1,*p2;;../app/app_src/application.c: 311:  p1 = strstr(atCommand,"=") + 1;
  6656                           
  6657                           ;incstack = 0
  6658  0064C4  0E34               	movlw	low _atCommand
  6659  0064C6  6E0D               	movwf	strstr@h^0,c
  6660  0064C8  0E02               	movlw	high _atCommand
  6661  0064CA  6E0E               	movwf	(strstr@h+1)^0,c
  6662  0064CC  0EDF               	movlw	low (STR_18+3)
  6663  0064CE  6E0F               	movwf	strstr@n^0,c
  6664  0064D0  0EFF               	movlw	high (STR_18+3)
  6665  0064D2  6E10               	movwf	(strstr@n+1)^0,c
  6666  0064D4  EC65  F02A         	call	_strstr	;wreg free
  6667  0064D8  0E01               	movlw	1
  6668  0064DA  240D               	addwf	?_strstr^0,w,c
  6669  0064DC  0100               	movlb	0	; () banked
  6670  0064DE  6F7A               	movwf	cmdSetAddr@p1& (0+255),b
  6671  0064E0  0E00               	movlw	0
  6672  0064E2  200E               	addwfc	(?_strstr+1)^0,w,c
  6673  0064E4  6F7B               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;../app/app_src/application.c: 313:  tempaddr = strtoul(p1,p2,16);
  6677  0064E6  0060  F1E8  F034   	movff	cmdSetAddr@p1,strtoul@s
  6678  0064EC  0060  F1EC  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6679  0064F2  0060  F1E0  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6680  0064F8  0060  F1E4  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6681  0064FE  0E00               	movlw	0
  6682  006500  6E39               	movwf	(strtoul@base+1)^0,c
  6683  006502  0E10               	movlw	16
  6684  006504  6E38               	movwf	strtoul@base^0,c
  6685  006506  EC0B  F03B         	call	_strtoul	;wreg free
  6686  00650A  0060  F0D0  F07C   	movff	?_strtoul,cmdSetAddr@tempaddr
  6687  006510  0060  F0D4  F07D   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6688                           
  6689                           ;../app/app_src/application.c: 315:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6690  006516  0100               	movlb	0	; () banked
  6691  006518  517C               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6692  00651A  117D               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6693  00651C  B4D8               	btfsc	status,2,c
  6694  00651E  D012               	goto	l15196
  6695                           
  6696                           ; BSR set to: 0
  6697  006520  297C               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6698  006522  E103               	bnz	u14860
  6699  006524  297D               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6700  006526  B4D8               	btfsc	status,2,c
  6701  006528  D00D               	goto	l15196
  6702  00652A                     u14860:
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;../app/app_src/application.c: 316:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6706  00652A  0060  F1F4  F0FC   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6707                           
  6708                           ;../app/app_src/application.c: 317:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6709  006530  0060  F1F0  F0FB   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;../app/app_src/application.c: 318:   printf("OK\r\n");
  6713  006536  0ED7               	movlw	low STR_13
  6714  006538  6E55               	movwf	printf@fmt^0,c
  6715  00653A  0EFF               	movlw	high STR_13
  6716  00653C  6E56               	movwf	(printf@fmt+1)^0,c
  6717  00653E  EC0F  F040         	call	_printf	;wreg free
  6718                           
  6719                           ;../app/app_src/application.c: 319:  }
  6720  006542  0012               	return	
  6721  006544                     l15196:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;../app/app_src/application.c: 321:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6725  006544  0ECC               	movlw	low STR_4
  6726  006546  6E55               	movwf	printf@fmt^0,c
  6727  006548  0EFE               	movlw	high STR_4
  6728  00654A  6E56               	movwf	(printf@fmt+1)^0,c
  6729  00654C  0E05               	movlw	5
  6730  00654E  6E57               	movwf	(?_printf+2)^0,c
  6731  006550  EC0F  F040         	call	_printf	;wreg free
  6732                           
  6733                           ; BSR set to: 1
  6734  006554  0012               	return		;funcret
  6735  006556                     __end_of_cmdSetAddr:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _cmdSetAES *****************
  6739 ;; Defined at:
  6740 ;;		line 449 in file "../app/app_src/application.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  6743 ;;		 -> atCommand(80), 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  temp            3   60[BANK0 ] unsigned char [3]
  6746 ;;  p2              2   58[BANK0 ] PTR unsigned char 
  6747 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6748 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6749 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6750 ;;  byte            1   64[BANK0 ] unsigned char 
  6751 ;;  i               1   67[BANK0 ] unsigned char 
  6752 ;;  AESstr         32   26[BANK0 ] unsigned char [32]
  6753 ;;  p1              2   65[BANK0 ] PTR unsigned char 
  6754 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6755 ;;  key_type        1   63[BANK0 ] unsigned char 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 3F/0
  6762 ;;		On exit  : 3F/1
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6765 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;Total ram usage:       46 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:   16
  6772 ;; This function calls:
  6773 ;;		_DATAEE_WriteByte_Platform
  6774 ;;		_memcpy
  6775 ;;		_printf
  6776 ;;		_strlen
  6777 ;;		_strstr
  6778 ;;		_strtoul
  6779 ;; This function is called by:
  6780 ;;		_executeATCommand
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text25
  6785  002C16                     __ptext25:
  6786                           	opt callstack 0
  6787  002C16                     _cmdSetAES:
  6788                           	opt callstack 12
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;../app/app_src/application.c: 453:  p1 = strstr(atCommand,":") + 1;
  6792                           
  6793                           ; BSR set to: 0
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;incstack = 0
  6797  002C16  0E34               	movlw	low _atCommand
  6798  002C18  6E0D               	movwf	strstr@h^0,c
  6799  002C1A  0E02               	movlw	high _atCommand
  6800  002C1C  6E0E               	movwf	(strstr@h+1)^0,c
  6801  002C1E  0E66               	movlw	low (STR_62+5)
  6802  002C20  6E0F               	movwf	strstr@n^0,c
  6803  002C22  0EFF               	movlw	high (STR_62+5)
  6804  002C24  6E10               	movwf	(strstr@n+1)^0,c
  6805  002C26  EC65  F02A         	call	_strstr	;wreg free
  6806  002C2A  0E01               	movlw	1
  6807  002C2C  240D               	addwf	?_strstr^0,w,c
  6808  002C2E  0100               	movlb	0	; () banked
  6809  002C30  6FA1               	movwf	cmdSetAES@p1& (0+255),b
  6810  002C32  0E00               	movlw	0
  6811  002C34  200E               	addwfc	(?_strstr+1)^0,w,c
  6812  002C36  6FA2               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;../app/app_src/application.c: 454:     if(!p1){
  6816  002C38  51A1               	movf	cmdSetAES@p1& (0+255),w,b
  6817  002C3A  11A2               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6818  002C3C  A4D8               	btfss	status,2,c
  6819  002C3E  D017               	goto	l15258
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;../app/app_src/application.c: 455:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6823  002C40  0ECC               	movlw	low STR_4
  6824  002C42  6E55               	movwf	printf@fmt^0,c
  6825  002C44  0EFE               	movlw	high STR_4
  6826  002C46  6E56               	movwf	(printf@fmt+1)^0,c
  6827  002C48  0E09               	movlw	9
  6828  002C4A  6E57               	movwf	(?_printf+2)^0,c
  6829  002C4C  EC0F  F040         	call	_printf	;wreg free
  6830  002C50  0012               	return	
  6831  002C52                     l15248:
  6832                           
  6833                           ; BSR set to: 0
  6834  002C52  0E4E               	movlw	78
  6835  002C54  D001               	goto	L1
  6836  002C56                     l15250:
  6837                           
  6838                           ; BSR set to: 0
  6839  002C56  0E41               	movlw	65
  6840  002C58                     L1:
  6841  002C58  6F9F               	movwf	cmdSetAES@key_type& (0+255),b
  6842  002C5A  D02D               	goto	l15260
  6843  002C5C                     l15252:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;../app/app_src/application.c: 462:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  6847  002C5C  0ECC               	movlw	low STR_4
  6848  002C5E  6E55               	movwf	printf@fmt^0,c
  6849  002C60  0EFE               	movlw	high STR_4
  6850  002C62  6E56               	movwf	(printf@fmt+1)^0,c
  6851  002C64  0E0D               	movlw	13
  6852  002C66  6E57               	movwf	(?_printf+2)^0,c
  6853  002C68  EC0F  F040         	call	_printf	;wreg free
  6854  002C6C  0012               	return	
  6855  002C6E                     l15258:
  6856                           
  6857                           ; BSR set to: 0
  6858  002C6E  0060  F287  FFF6   	movff	cmdSetAES@p1,tblptrl
  6859  002C74  0060  F28B  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  6860  002C7A  0E00               	movlw	low (__mediumconst shr (0+16))
  6861  002C7C  6EF8               	movwf	tblptru,c
  6862  002C7E  0E0F               	movlw	(high __ramtop+-1)
  6863  002C80  64F7               	cpfsgt	tblptrh,c
  6864  002C82  D003               	bra	u14897
  6865  002C84  0008               	tblrd		*
  6866  002C86  50F5               	movf	tablat,w,c
  6867  002C88  D007               	bra	u14890
  6868  002C8A                     u14897:
  6869  002C8A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6870  002C90  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6871  002C96  50EF               	movf	indf0,w,c
  6872  002C98                     u14890:
  6873  002C98  0100               	movlb	0	; () banked
  6874  002C9A  6F78               	movwf	??_cmdSetAES& (0+255),b
  6875  002C9C  6B79               	clrf	(??_cmdSetAES+1)& (0+255),b
  6876                           
  6877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6878                           ; Switch size 1, requested type "simple"
  6879                           ; Number of cases is 1, Range of values is 0 to 0
  6880                           ; switch strategies available:
  6881                           ; Name         Instructions Cycles
  6882                           ; simple_byte            4     3 (average)
  6883                           ;	Chosen strategy is simple_byte
  6884  002C9E  5179               	movf	(??_cmdSetAES+1)& (0+255),w,b
  6885  002CA0  0A00               	xorlw	0	; case 0
  6886  002CA2  A4D8               	btfss	status,2,c
  6887  002CA4  D7DB               	goto	l15252
  6888                           
  6889                           ; BSR set to: 0
  6890                           ; Switch size 1, requested type "simple"
  6891                           ; Number of cases is 2, Range of values is 65 to 78
  6892                           ; switch strategies available:
  6893                           ; Name         Instructions Cycles
  6894                           ; simple_byte            7     4 (average)
  6895                           ;	Chosen strategy is simple_byte
  6896  002CA6  5178               	movf	??_cmdSetAES& (0+255),w,b
  6897  002CA8  0A41               	xorlw	65	; case 65
  6898  002CAA  B4D8               	btfsc	status,2,c
  6899  002CAC  D7D4               	goto	l15250
  6900  002CAE  0A0F               	xorlw	15	; case 78
  6901  002CB0  B4D8               	btfsc	status,2,c
  6902  002CB2  D7CF               	goto	l15248
  6903  002CB4  D7D3               	goto	l15252
  6904  002CB6                     l15260:
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;../app/app_src/application.c: 465:     p1 = strstr(atCommand,"=") + 1;
  6908  002CB6  0E34               	movlw	low _atCommand
  6909  002CB8  6E0D               	movwf	strstr@h^0,c
  6910  002CBA  0E02               	movlw	high _atCommand
  6911  002CBC  6E0E               	movwf	(strstr@h+1)^0,c
  6912  002CBE  0EDF               	movlw	low (STR_18+3)
  6913  002CC0  6E0F               	movwf	strstr@n^0,c
  6914  002CC2  0EFF               	movlw	high (STR_18+3)
  6915  002CC4  6E10               	movwf	(strstr@n+1)^0,c
  6916  002CC6  EC65  F02A         	call	_strstr	;wreg free
  6917  002CCA  0E01               	movlw	1
  6918  002CCC  240D               	addwf	?_strstr^0,w,c
  6919  002CCE  0100               	movlb	0	; () banked
  6920  002CD0  6FA1               	movwf	cmdSetAES@p1& (0+255),b
  6921  002CD2  0E00               	movlw	0
  6922  002CD4  200E               	addwfc	(?_strstr+1)^0,w,c
  6923  002CD6  6FA2               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;../app/app_src/application.c: 466:     if(!p1){
  6927  002CD8  51A1               	movf	cmdSetAES@p1& (0+255),w,b
  6928  002CDA  11A2               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6929  002CDC  A4D8               	btfss	status,2,c
  6930  002CDE  D009               	goto	l15268
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;../app/app_src/application.c: 467:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6934  002CE0  0ECC               	movlw	low STR_4
  6935  002CE2  6E55               	movwf	printf@fmt^0,c
  6936  002CE4  0EFE               	movlw	high STR_4
  6937  002CE6  6E56               	movwf	(printf@fmt+1)^0,c
  6938  002CE8  0E09               	movlw	9
  6939  002CEA  6E57               	movwf	(?_printf+2)^0,c
  6940  002CEC  EC0F  F040         	call	_printf	;wreg free
  6941  002CF0  0012               	return	
  6942  002CF2                     l15268:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;../app/app_src/application.c: 471:  if(strlen(p1) != 32){
  6946  002CF2  0060  F284  F002   	movff	cmdSetAES@p1,strlen@s
  6947  002CF8  0060  F288  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  6948  002CFE  EC24  F03A         	call	_strlen	;wreg free
  6949  002D02  0E20               	movlw	32
  6950  002D04  1802               	xorwf	?_strlen^0,w,c
  6951  002D06  1003               	iorwf	(?_strlen+1)^0,w,c
  6952  002D08  B4D8               	btfsc	status,2,c
  6953  002D0A  D009               	goto	l15274
  6954                           
  6955                           ;../app/app_src/application.c: 472:   printf("NOT OK:%u\r\n",KEYLENERROR);
  6956  002D0C  0ECC               	movlw	low STR_4
  6957  002D0E  6E55               	movwf	printf@fmt^0,c
  6958  002D10  0EFE               	movlw	high STR_4
  6959  002D12  6E56               	movwf	(printf@fmt+1)^0,c
  6960  002D14  0E08               	movlw	8
  6961  002D16  6E57               	movwf	(?_printf+2)^0,c
  6962  002D18  EC0F  F040         	call	_printf	;wreg free
  6963  002D1C  0012               	return	
  6964  002D1E                     l15274:
  6965                           
  6966                           ;../app/app_src/application.c: 475:  memcpy(AESstr,p1,32);
  6967  002D1E  0E7A               	movlw	low cmdSetAES@AESstr
  6968  002D20  6E08               	movwf	memcpy@d1^0,c
  6969  002D22  6A09               	clrf	(memcpy@d1+1)^0,c
  6970  002D24  0060  F284  F00A   	movff	cmdSetAES@p1,memcpy@s1
  6971  002D2A  0060  F288  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  6972  002D30  0E00               	movlw	0
  6973  002D32  6E0D               	movwf	(memcpy@n+1)^0,c
  6974  002D34  0E20               	movlw	32
  6975  002D36  6E0C               	movwf	memcpy@n^0,c
  6976  002D38  ECD0  F035         	call	_memcpy	;wreg free
  6977                           
  6978                           ;../app/app_src/application.c: 477:  for(uint8_t i = 0; i < 16; i++){
  6979  002D3C  0E00               	movlw	0
  6980  002D3E  0100               	movlb	0	; () banked
  6981  002D40  6FA3               	movwf	cmdSetAES@i& (0+255),b
  6982  002D42                     l15282:
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;../app/app_src/application.c: 478:   char temp[3];;../app/app_src/application.c: 479:  
      +                           char *p2;;../app/app_src/application.c: 480:   uint8_t byte;;../app/app_src/application
      +                          .c: 481:   memcpy(temp,0,sizeof(temp));
  6986  002D42  0E9C               	movlw	low cmdSetAES@temp
  6987  002D44  6E08               	movwf	memcpy@d1^0,c
  6988  002D46  6A09               	clrf	(memcpy@d1+1)^0,c
  6989  002D48  0E00               	movlw	0
  6990  002D4A  6E0A               	movwf	memcpy@s1^0,c
  6991  002D4C  0E00               	movlw	0
  6992  002D4E  6E0B               	movwf	(memcpy@s1+1)^0,c
  6993  002D50  0E00               	movlw	0
  6994  002D52  6E0D               	movwf	(memcpy@n+1)^0,c
  6995  002D54  0E03               	movlw	3
  6996  002D56  6E0C               	movwf	memcpy@n^0,c
  6997  002D58  ECD0  F035         	call	_memcpy	;wreg free
  6998                           
  6999                           ;../app/app_src/application.c: 482:   memcpy(temp,(AESstr + i*2),2);
  7000  002D5C  0E9C               	movlw	low cmdSetAES@temp
  7001  002D5E  6E08               	movwf	memcpy@d1^0,c
  7002  002D60  6A09               	clrf	(memcpy@d1+1)^0,c
  7003  002D62  0100               	movlb	0	; () banked
  7004  002D64  51A3               	movf	cmdSetAES@i& (0+255),w,b
  7005  002D66  0D02               	mullw	2
  7006  002D68  50F3               	movf	243,w,c
  7007  002D6A  0F7A               	addlw	low cmdSetAES@AESstr
  7008  002D6C  6F78               	movwf	??_cmdSetAES& (0+255),b
  7009  002D6E  0060  F1E0  F00A   	movff	??_cmdSetAES,memcpy@s1
  7010  002D74  6A0B               	clrf	(memcpy@s1+1)^0,c
  7011  002D76  0E00               	movlw	0
  7012  002D78  6E0D               	movwf	(memcpy@n+1)^0,c
  7013  002D7A  0E02               	movlw	2
  7014  002D7C  6E0C               	movwf	memcpy@n^0,c
  7015  002D7E  ECD0  F035         	call	_memcpy	;wreg free
  7016                           
  7017                           ;../app/app_src/application.c: 483:   byte = (uint8_t)strtoul(temp,&p2,16);
  7018  002D82  0E9C               	movlw	low cmdSetAES@temp
  7019  002D84  6E34               	movwf	strtoul@s^0,c
  7020  002D86  6A35               	clrf	(strtoul@s+1)^0,c
  7021  002D88  0E9A               	movlw	low cmdSetAES@p2
  7022  002D8A  6E36               	movwf	strtoul@endptr^0,c
  7023  002D8C  6A37               	clrf	(strtoul@endptr+1)^0,c
  7024  002D8E  0E00               	movlw	0
  7025  002D90  6E39               	movwf	(strtoul@base+1)^0,c
  7026  002D92  0E10               	movlw	16
  7027  002D94  6E38               	movwf	strtoul@base^0,c
  7028  002D96  EC0B  F03B         	call	_strtoul	;wreg free
  7029  002D9A  5034               	movf	?_strtoul^0,w,c
  7030  002D9C  0100               	movlb	0	; () banked
  7031  002D9E  6FA0               	movwf	cmdSetAES@byte& (0+255),b
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;../app/app_src/application.c: 484:         if('A' == key_type){
  7035  002DA0  0E41               	movlw	65
  7036  002DA2  199F               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7037  002DA4  A4D8               	btfss	status,2,c
  7038  002DA6  D015               	goto	l15294
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;../app/app_src/application.c: 485:             aes_key[i] = byte;
  7042  002DA8  0E24               	movlw	low _aes_key
  7043  002DAA  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7044  002DAC  6ED9               	movwf	fsr2l,c
  7045  002DAE  6ADA               	clrf	fsr2h,c
  7046  002DB0  0E02               	movlw	high _aes_key
  7047  002DB2  22DA               	addwfc	fsr2h,f,c
  7048  002DB4  0060  F283  FFDF   	movff	cmdSetAES@byte,indf2
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;../app/app_src/application.c: 486:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7052  002DBA  0E09               	movlw	9
  7053  002DBC  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7054  002DBE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7055  002DC0  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7056  002DC2  0E00               	movlw	0
  7057  002DC4  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7058  002DC6  0060  F280  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7059  002DCC  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  7060                           
  7061                           ;../app/app_src/application.c: 487:         }
  7062  002DD0  D014               	goto	l15298
  7063  002DD2                     l15294:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;../app/app_src/application.c: 489:             net_key[i] = byte;
  7067  002DD2  0E14               	movlw	low _net_key
  7068  002DD4  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7069  002DD6  6ED9               	movwf	fsr2l,c
  7070  002DD8  6ADA               	clrf	fsr2h,c
  7071  002DDA  0E02               	movlw	high _net_key
  7072  002DDC  22DA               	addwfc	fsr2h,f,c
  7073  002DDE  0060  F283  FFDF   	movff	cmdSetAES@byte,indf2
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;../app/app_src/application.c: 490:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7077  002DE4  0E23               	movlw	35
  7078  002DE6  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7079  002DE8  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7080  002DEA  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7081  002DEC  0E00               	movlw	0
  7082  002DEE  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7083  002DF0  0060  F280  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7084  002DF6  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  7085  002DFA                     l15298:
  7086                           
  7087                           ;../app/app_src/application.c: 492:  }
  7088  002DFA  0100               	movlb	0	; () banked
  7089  002DFC  2BA3               	incf	cmdSetAES@i& (0+255),f,b
  7090                           
  7091                           ; BSR set to: 0
  7092  002DFE  0E0F               	movlw	15
  7093  002E00  65A3               	cpfsgt	cmdSetAES@i& (0+255),b
  7094  002E02  D79F               	goto	l15282
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;../app/app_src/application.c: 493:  printf("OK\r\n");
  7098  002E04  0ED7               	movlw	low STR_13
  7099  002E06  6E55               	movwf	printf@fmt^0,c
  7100  002E08  0EFF               	movlw	high STR_13
  7101  002E0A  6E56               	movwf	(printf@fmt+1)^0,c
  7102  002E0C  EC0F  F040         	call	_printf	;wreg free
  7103                           
  7104                           ; BSR set to: 1
  7105  002E10  0012               	return		;funcret
  7106  002E12                     __end_of_cmdSetAES:
  7107                           	opt callstack 0
  7108                           
  7109 ;; *************** function _cmdSendSink *****************
  7110 ;; Defined at:
  7111 ;;		line 428 in file "../app/app_src/application.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7114 ;;		 -> atCommand(80), 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		None
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;Total ram usage:        2 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    7
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_executeATCommand
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text26
  7141  008510                     __ptext26:
  7142                           	opt callstack 0
  7143  008510                     _cmdSendSink:
  7144                           	opt callstack 21
  7145                           
  7146                           ; BSR set to: 1
  7147                           ;incstack = 0
  7148  008510  0012               	return		;funcret
  7149  008512                     __end_of_cmdSendSink:
  7150                           	opt callstack 0
  7151                           
  7152 ;; *************** function _cmdSend *****************
  7153 ;; Defined at:
  7154 ;;		line 219 in file "../app/app_src/application.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  7157 ;;		 -> atCommand(80), 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  buf_id          1   37[BANK0 ] unsigned char 
  7160 ;;  destaddr        5   26[BANK0 ] unsigned char [5]
  7161 ;;  p1              2   35[BANK0 ] PTR unsigned char 
  7162 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  7163 ;;  p2              2   33[BANK0 ] PTR unsigned char 
  7164 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7165 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7166 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7167 ;;  tempaddr        2   31[BANK0 ] unsigned short 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 3F/1
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;Total ram usage:       16 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:   16
  7184 ;; This function calls:
  7185 ;;		_NWK_DataReq
  7186 ;;		_get_free_tx_buffer
  7187 ;;		_memcpy
  7188 ;;		_memset
  7189 ;;		_printf
  7190 ;;		_strlen
  7191 ;;		_strstr
  7192 ;;		_strtoul
  7193 ;; This function is called by:
  7194 ;;		_executeATCommand
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text27
  7199  002166                     __ptext27:
  7200                           	opt callstack 0
  7201  002166                     _cmdSend:
  7202                           	opt callstack 12
  7203                           
  7204                           ;../app/app_src/application.c: 220:  uint16_t tempaddr;;../app/app_src/application.c: 22
      +                          1:  char *p1,*p2;;../app/app_src/application.c: 222:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 223:         destaddr[4] = 0;
  7205                           
  7206                           ;incstack = 0
  7207  002166  0E00               	movlw	0
  7208  002168  0100               	movlb	0	; () banked
  7209  00216A  6F7E               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;../app/app_src/application.c: 224:  p1 = strstr(cmd,":") + 1;
  7213  00216C  0060  F1D8  F00D   	movff	cmdSend@cmd,strstr@h
  7214  002172  0060  F1DC  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7215  002178  0E66               	movlw	low (STR_62+5)
  7216  00217A  6E0F               	movwf	strstr@n^0,c
  7217  00217C  0EFF               	movlw	high (STR_62+5)
  7218  00217E  6E10               	movwf	(strstr@n+1)^0,c
  7219  002180  EC65  F02A         	call	_strstr	;wreg free
  7220  002184  0E01               	movlw	1
  7221  002186  240D               	addwf	?_strstr^0,w,c
  7222  002188  0100               	movlb	0	; () banked
  7223  00218A  6F83               	movwf	cmdSend@p1& (0+255),b
  7224  00218C  0E00               	movlw	0
  7225  00218E  200E               	addwfc	(?_strstr+1)^0,w,c
  7226  002190  6F84               	movwf	(cmdSend@p1+1)& (0+255),b
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;../app/app_src/application.c: 225:  memcpy(destaddr,p1,4);
  7230  002192  0E7A               	movlw	low cmdSend@destaddr
  7231  002194  6E08               	movwf	memcpy@d1^0,c
  7232  002196  6A09               	clrf	(memcpy@d1+1)^0,c
  7233  002198  0060  F20C  F00A   	movff	cmdSend@p1,memcpy@s1
  7234  00219E  0060  F210  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7235  0021A4  0E00               	movlw	0
  7236  0021A6  6E0D               	movwf	(memcpy@n+1)^0,c
  7237  0021A8  0E04               	movlw	4
  7238  0021AA  6E0C               	movwf	memcpy@n^0,c
  7239  0021AC  ECD0  F035         	call	_memcpy	;wreg free
  7240                           
  7241                           ;../app/app_src/application.c: 227:  tempaddr = strtoul(destaddr,&p2,16);
  7242  0021B0  0E7A               	movlw	low cmdSend@destaddr
  7243  0021B2  6E34               	movwf	strtoul@s^0,c
  7244  0021B4  6A35               	clrf	(strtoul@s+1)^0,c
  7245  0021B6  0E81               	movlw	low cmdSend@p2
  7246  0021B8  6E36               	movwf	strtoul@endptr^0,c
  7247  0021BA  6A37               	clrf	(strtoul@endptr+1)^0,c
  7248  0021BC  0E00               	movlw	0
  7249  0021BE  6E39               	movwf	(strtoul@base+1)^0,c
  7250  0021C0  0E10               	movlw	16
  7251  0021C2  6E38               	movwf	strtoul@base^0,c
  7252  0021C4  EC0B  F03B         	call	_strtoul	;wreg free
  7253  0021C8  0060  F0D0  F07F   	movff	?_strtoul,cmdSend@tempaddr
  7254  0021CE  0060  F0D4  F080   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7255                           
  7256                           ;../app/app_src/application.c: 229:  p1 = strstr(cmd,"=") + 1;
  7257  0021D4  0060  F1D8  F00D   	movff	cmdSend@cmd,strstr@h
  7258  0021DA  0060  F1DC  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7259  0021E0  0EDF               	movlw	low (STR_18+3)
  7260  0021E2  6E0F               	movwf	strstr@n^0,c
  7261  0021E4  0EFF               	movlw	high (STR_18+3)
  7262  0021E6  6E10               	movwf	(strstr@n+1)^0,c
  7263  0021E8  EC65  F02A         	call	_strstr	;wreg free
  7264  0021EC  0E01               	movlw	1
  7265  0021EE  240D               	addwf	?_strstr^0,w,c
  7266  0021F0  0100               	movlb	0	; () banked
  7267  0021F2  6F83               	movwf	cmdSend@p1& (0+255),b
  7268  0021F4  0E00               	movlw	0
  7269  0021F6  200E               	addwfc	(?_strstr+1)^0,w,c
  7270  0021F8  6F84               	movwf	(cmdSend@p1+1)& (0+255),b
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;../app/app_src/application.c: 230:  if(strlen(p1) > 64){
  7274  0021FA  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7275  002200  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7276  002206  EC24  F03A         	call	_strlen	;wreg free
  7277  00220A  5003               	movf	(?_strlen+1)^0,w,c
  7278  00220C  E104               	bnz	u14800
  7279  00220E  0E41               	movlw	65
  7280  002210  5C02               	subwf	?_strlen^0,w,c
  7281  002212  A0D8               	btfss	status,0,c
  7282  002214  D009               	goto	l15104
  7283  002216                     u14800:
  7284                           
  7285                           ;../app/app_src/application.c: 231:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7286  002216  0ECC               	movlw	low STR_4
  7287  002218  6E55               	movwf	printf@fmt^0,c
  7288  00221A  0EFE               	movlw	high STR_4
  7289  00221C  6E56               	movwf	(printf@fmt+1)^0,c
  7290  00221E  0E07               	movlw	7
  7291  002220  6E57               	movwf	(?_printf+2)^0,c
  7292  002222  EC0F  F040         	call	_printf	;wreg free
  7293                           
  7294                           ;../app/app_src/application.c: 232:  }
  7295  002226  0012               	return	
  7296  002228                     l15104:
  7297                           
  7298                           ;../app/app_src/application.c: 234:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 235:         if(!get_free_tx_buffer(&buf_id)){
  7299  002228  0E85               	movlw	low cmdSend@buf_id
  7300  00222A  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7301  00222C  EC4C  F037         	call	_get_free_tx_buffer	;wreg free
  7302  002230  0900               	iorlw	0
  7303  002232  A4D8               	btfss	status,2,c
  7304  002234  D009               	goto	l15110
  7305                           
  7306                           ;../app/app_src/application.c: 236:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7307  002236  0ECC               	movlw	low STR_4
  7308  002238  6E55               	movwf	printf@fmt^0,c
  7309  00223A  0EFE               	movlw	high STR_4
  7310  00223C  6E56               	movwf	(printf@fmt+1)^0,c
  7311  00223E  0E11               	movlw	17
  7312  002240  6E57               	movwf	(?_printf+2)^0,c
  7313  002242  EC0F  F040         	call	_printf	;wreg free
  7314  002246  0012               	return	
  7315  002248                     l15110:
  7316                           
  7317                           ;../app/app_src/application.c: 239:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7318  002248  0100               	movlb	0	; () banked
  7319  00224A  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7320  00224C  0D83               	mullw	131
  7321  00224E  0E80               	movlw	low (_tx_buffer+22)
  7322  002250  24F3               	addwf	243,w,c
  7323  002252  6E02               	movwf	memset@dest^0,c
  7324  002254  0E08               	movlw	high (_tx_buffer+22)
  7325  002256  20F4               	addwfc	prodh,w,c
  7326  002258  6E03               	movwf	(memset@dest+1)^0,c
  7327  00225A  0E00               	movlw	0
  7328  00225C  6E05               	movwf	(memset@c+1)^0,c
  7329  00225E  0E00               	movlw	0
  7330  002260  6E04               	movwf	memset@c^0,c
  7331  002262  0E00               	movlw	0
  7332  002264  6E07               	movwf	(memset@n+1)^0,c
  7333  002266  0E6D               	movlw	109
  7334  002268  6E06               	movwf	memset@n^0,c
  7335  00226A  ECC9  F01E         	call	_memset	;wreg free
  7336                           
  7337                           ;../app/app_src/application.c: 240:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7338  00226E  0100               	movlb	0	; () banked
  7339  002270  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7340  002272  0D83               	mullw	131
  7341  002274  0E80               	movlw	low (_tx_buffer+22)
  7342  002276  24F3               	addwf	243,w,c
  7343  002278  6E08               	movwf	memcpy@d1^0,c
  7344  00227A  0E08               	movlw	high (_tx_buffer+22)
  7345  00227C  20F4               	addwfc	prodh,w,c
  7346  00227E  6E09               	movwf	(memcpy@d1+1)^0,c
  7347  002280  0060  F20C  F00A   	movff	cmdSend@p1,memcpy@s1
  7348  002286  0060  F210  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7349  00228C  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7350  002292  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7351  002298  EC24  F03A         	call	_strlen	;wreg free
  7352  00229C  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7353  0022A2  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7354  0022A8  ECD0  F035         	call	_memcpy	;wreg free
  7355                           
  7356                           ;../app/app_src/application.c: 241:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7357  0022AC  0100               	movlb	0	; () banked
  7358  0022AE  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7359  0022B0  0D83               	mullw	131
  7360  0022B2  0E72               	movlw	low (_tx_buffer+8)
  7361  0022B4  24F3               	addwf	243,w,c
  7362  0022B6  6ED9               	movwf	fsr2l,c
  7363  0022B8  0E08               	movlw	high (_tx_buffer+8)
  7364  0022BA  20F4               	addwfc	prodh,w,c
  7365  0022BC  6EDA               	movwf	fsr2h,c
  7366  0022BE  0060  F1FF  FFDE   	movff	cmdSend@tempaddr,postinc2
  7367  0022C4  0060  F203  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;../app/app_src/application.c: 242:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7371  0022CA  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7372  0022CC  0D83               	mullw	131
  7373  0022CE  0E74               	movlw	low (_tx_buffer+10)
  7374  0022D0  24F3               	addwf	243,w,c
  7375  0022D2  6ED9               	movwf	fsr2l,c
  7376  0022D4  0E08               	movlw	high (_tx_buffer+10)
  7377  0022D6  20F4               	addwfc	prodh,w,c
  7378  0022D8  6EDA               	movwf	fsr2h,c
  7379  0022DA  0E01               	movlw	1
  7380  0022DC  6EDF               	movwf	indf2,c
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;../app/app_src/application.c: 243:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7384  0022DE  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7385  0022E0  0D83               	mullw	131
  7386  0022E2  0E75               	movlw	low (_tx_buffer+11)
  7387  0022E4  24F3               	addwf	243,w,c
  7388  0022E6  6ED9               	movwf	fsr2l,c
  7389  0022E8  0E08               	movlw	high (_tx_buffer+11)
  7390  0022EA  20F4               	addwfc	prodh,w,c
  7391  0022EC  6EDA               	movwf	fsr2h,c
  7392  0022EE  0E01               	movlw	1
  7393  0022F0  6EDF               	movwf	indf2,c
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;../app/app_src/application.c: 244:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST;
  7397  0022F2  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7398  0022F4  0D83               	mullw	131
  7399  0022F6  0E76               	movlw	low (_tx_buffer+12)
  7400  0022F8  24F3               	addwf	243,w,c
  7401  0022FA  6ED9               	movwf	fsr2l,c
  7402  0022FC  0E08               	movlw	high (_tx_buffer+12)
  7403  0022FE  20F4               	addwfc	prodh,w,c
  7404  002300  6EDA               	movwf	fsr2h,c
  7405  002302  0E01               	movlw	1
  7406  002304  6EDF               	movwf	indf2,c
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;../app/app_src/application.c: 245:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7410  002306  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7411  002308  0D83               	mullw	131
  7412  00230A  0E6A               	movlw	low _tx_buffer
  7413  00230C  6F78               	movwf	??_cmdSend& (0+255),b
  7414  00230E  0E08               	movlw	high _tx_buffer
  7415  002310  6F79               	movwf	(??_cmdSend+1)& (0+255),b
  7416  002312  0E16               	movlw	22
  7417  002314  2778               	addwf	??_cmdSend& (0+255),f,b
  7418  002316  0E00               	movlw	0
  7419  002318  2379               	addwfc	(??_cmdSend+1)& (0+255),f,b
  7420  00231A  50F3               	movf	243,w,c
  7421  00231C  2778               	addwf	??_cmdSend& (0+255),f,b
  7422  00231E  50F4               	movf	244,w,c
  7423  002320  2379               	addwfc	(??_cmdSend+1)& (0+255),f,b
  7424  002322  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7425  002324  0D83               	mullw	131
  7426  002326  0E79               	movlw	low (_tx_buffer+15)
  7427  002328  24F3               	addwf	243,w,c
  7428  00232A  6ED9               	movwf	fsr2l,c
  7429  00232C  0E08               	movlw	high (_tx_buffer+15)
  7430  00232E  20F4               	addwfc	prodh,w,c
  7431  002330  6EDA               	movwf	fsr2h,c
  7432  002332  0060  F1E3  FFDE   	movff	??_cmdSend,postinc2
  7433  002338  0060  F1E7  FFDD   	movff	??_cmdSend+1,postdec2
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;../app/app_src/application.c: 246:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7437  00233E  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7438  002340  0D83               	mullw	131
  7439  002342  0E7B               	movlw	low (_tx_buffer+17)
  7440  002344  24F3               	addwf	243,w,c
  7441  002346  6ED9               	movwf	fsr2l,c
  7442  002348  0E08               	movlw	high (_tx_buffer+17)
  7443  00234A  20F4               	addwfc	prodh,w,c
  7444  00234C  6EDA               	movwf	fsr2h,c
  7445  00234E  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7446  002354  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7447  00235A  EC24  F03A         	call	_strlen	;wreg free
  7448  00235E  5002               	movf	?_strlen^0,w,c
  7449  002360  6EDF               	movwf	indf2,c
  7450                           
  7451                           ;../app/app_src/application.c: 247:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7452  002362  0100               	movlb	0	; () banked
  7453  002364  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7454  002366  0D83               	mullw	131
  7455  002368  0E7C               	movlw	low (_tx_buffer+18)
  7456  00236A  24F3               	addwf	243,w,c
  7457  00236C  6ED9               	movwf	fsr2l,c
  7458  00236E  0E08               	movlw	high (_tx_buffer+18)
  7459  002370  20F4               	addwfc	prodh,w,c
  7460  002372  6EDA               	movwf	fsr2h,c
  7461  002374  0E40               	movlw	low _appDataConf
  7462  002376  6EDE               	movwf	postinc2,c
  7463  002378  0E80               	movlw	high _appDataConf
  7464  00237A  6EDD               	movwf	postdec2,c
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;../app/app_src/application.c: 248:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7468  00237C  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7469  00237E  0D83               	mullw	131
  7470  002380  0E6C               	movlw	low (_tx_buffer+2)
  7471  002382  24F3               	addwf	243,w,c
  7472  002384  6ED9               	movwf	fsr2l,c
  7473  002386  0E08               	movlw	high (_tx_buffer+2)
  7474  002388  20F4               	addwfc	prodh,w,c
  7475  00238A  6EDA               	movwf	fsr2h,c
  7476  00238C  0060  F3CB  FFDF   	movff	_msgIDCounter,indf2
  7477                           
  7478                           ; BSR set to: 0
  7479  002392  2BF2               	incf	_msgIDCounter& (0+255),f,b
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;../app/app_src/application.c: 249:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7483  002394  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7484  002396  0D83               	mullw	131
  7485  002398  0E6D               	movlw	low (_tx_buffer+3)
  7486  00239A  24F3               	addwf	243,w,c
  7487  00239C  6E02               	movwf	NWK_DataReq@req^0,c
  7488  00239E  0E08               	movlw	high (_tx_buffer+3)
  7489  0023A0  20F4               	addwfc	prodh,w,c
  7490  0023A2  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7491  0023A4  EC52  F035         	call	_NWK_DataReq	;wreg free
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;../app/app_src/application.c: 250:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7495  0023A8  0ED0               	movlw	low (STR_4+4)
  7496  0023AA  6E55               	movwf	printf@fmt^0,c
  7497  0023AC  0EFE               	movlw	high (STR_4+4)
  7498  0023AE  6E56               	movwf	(printf@fmt+1)^0,c
  7499  0023B0  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7500  0023B2  0D83               	mullw	131
  7501  0023B4  0E6C               	movlw	low (_tx_buffer+2)
  7502  0023B6  24F3               	addwf	243,w,c
  7503  0023B8  6ED9               	movwf	fsr2l,c
  7504  0023BA  0E08               	movlw	high (_tx_buffer+2)
  7505  0023BC  20F4               	addwfc	prodh,w,c
  7506  0023BE  6EDA               	movwf	fsr2h,c
  7507  0023C0  50DF               	movf	indf2,w,c
  7508  0023C2  6F78               	movwf	??_cmdSend& (0+255),b
  7509  0023C4  5178               	movf	??_cmdSend& (0+255),w,b
  7510  0023C6  6E57               	movwf	(?_printf+2)^0,c
  7511  0023C8  6A58               	clrf	(?_printf+3)^0,c
  7512  0023CA  EC0F  F040         	call	_printf	;wreg free
  7513                           
  7514                           ; BSR set to: 1
  7515  0023CE  0012               	return		;funcret
  7516  0023D0                     __end_of_cmdSend:
  7517                           	opt callstack 0
  7518                           
  7519 ;; *************** function _strtoul *****************
  7520 ;; Defined at:
  7521 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7524 ;;		 -> STR_55(2), STR_54(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7525 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7526 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7527 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7528 ;;		 -> cmdSend@p2(2), 
  7529 ;;  base            2   55[COMRAM] int 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  4   51[COMRAM] unsigned long 
  7534 ;; Registers used:
  7535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7541 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;Total ram usage:        6 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:   10
  7548 ;; This function calls:
  7549 ;;		___strtoxl
  7550 ;; This function is called by:
  7551 ;;		_cmdSend
  7552 ;;		_cmdSetAddr
  7553 ;;		_cmdSetNaddr
  7554 ;;		_cmdSetAES
  7555 ;;		_cmdSetRFCH
  7556 ;;		_cmdSetTX
  7557 ;;		_cmdSetBaud
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text28
  7562  007616                     __ptext28:
  7563                           	opt callstack 0
  7564  007616                     _strtoul:
  7565                           	opt callstack 17
  7566                           
  7567                           ; BSR set to: 1
  7568                           ;incstack = 0
  7569  007616  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7570  00761C  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7571  007622  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7572  007628  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7573  00762E  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7574  007634  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7575  00763A  0E00               	movlw	0
  7576  00763C  6E16               	movwf	___strtoxl@is_signed^0,c
  7577  00763E  EC98  F005         	call	___strtoxl	;wreg free
  7578  007642  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7579  007648  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7580  00764E  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7581  007654  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7582  00765A  0012               	return		;funcret
  7583  00765C                     __end_of_strtoul:
  7584                           	opt callstack 0
  7585                           
  7586 ;; *************** function ___strtoxl *****************
  7587 ;; Defined at:
  7588 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7591 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7592 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7593 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7594 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7595 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7596 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7597 ;;  base            2   19[COMRAM] int 
  7598 ;;  is_signed       1   21[COMRAM] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  a               4   44[COMRAM] unsigned long 
  7601 ;;  limit           4   38[COMRAM] unsigned long 
  7602 ;;  prev_a          4   26[COMRAM] unsigned long 
  7603 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7604 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7605 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7606 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7607 ;;  c               1   50[COMRAM] unsigned char 
  7608 ;;  skip            1   43[COMRAM] unsigned char 
  7609 ;;  sign            1   42[COMRAM] unsigned char 
  7610 ;;  conv_done       1   37[COMRAM] unsigned char 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  4   15[COMRAM] unsigned long 
  7613 ;; Registers used:
  7614 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7620 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;Total ram usage:       36 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    9
  7627 ;; This function calls:
  7628 ;;		___lmul
  7629 ;;		_isalpha
  7630 ;;		_isdigit
  7631 ;;		_isspace
  7632 ;;		_toupper
  7633 ;; This function is called by:
  7634 ;;		_strtol
  7635 ;;		_strtoul
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text29
  7640  000B30                     __ptext29:
  7641                           	opt callstack 0
  7642  000B30                     ___strtoxl:
  7643                           	opt callstack 17
  7644                           
  7645                           ;incstack = 0
  7646  000B30  0E00               	movlw	0
  7647  000B32  6E2D               	movwf	___strtoxl@a^0,c
  7648  000B34  0E00               	movlw	0
  7649  000B36  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7650  000B38  0E00               	movlw	0
  7651  000B3A  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7652  000B3C  0E00               	movlw	0
  7653  000B3E  6E30               	movwf	(___strtoxl@a+3)^0,c
  7654  000B40  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7655  000B46  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7656  000B4C  5031               	movf	___strtoxl@cp^0,w,c
  7657  000B4E  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7658  000B50  B4D8               	btfsc	status,2,c
  7659  000B52  D1DF               	goto	l14692
  7660  000B54  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7661  000B5A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7662  000B60  0E00               	movlw	low (__mediumconst shr (0+16))
  7663  000B62  6EF8               	movwf	tblptru,c
  7664  000B64  0E0F               	movlw	(high __ramtop+-1)
  7665  000B66  64F7               	cpfsgt	tblptrh,c
  7666  000B68  D003               	bra	u13757
  7667  000B6A  0008               	tblrd		*
  7668  000B6C  50F5               	movf	tablat,w,c
  7669  000B6E  D007               	bra	u13750
  7670  000B70                     u13757:
  7671  000B70  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7672  000B76  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7673  000B7C  50EF               	movf	indf0,w,c
  7674  000B7E                     u13750:
  7675  000B7E  0900               	iorlw	0
  7676  000B80  B4D8               	btfsc	status,2,c
  7677  000B82  D1C7               	goto	l14692
  7678  000B84  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7679  000B8A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7680  000B90  0E00               	movlw	low (__mediumconst shr (0+16))
  7681  000B92  6EF8               	movwf	tblptru,c
  7682  000B94  0E0F               	movlw	(high __ramtop+-1)
  7683  000B96  64F7               	cpfsgt	tblptrh,c
  7684  000B98  D003               	bra	u13777
  7685  000B9A  0008               	tblrd		*
  7686  000B9C  50F5               	movf	tablat,w,c
  7687  000B9E  D007               	bra	u13770
  7688  000BA0                     u13777:
  7689  000BA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7690  000BA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7691  000BAC  50EF               	movf	indf0,w,c
  7692  000BAE                     u13770:
  7693  000BAE  D017               	goto	u13780
  7694  000BB0                     l14590:
  7695  000BB0  4A31               	infsnz	___strtoxl@cp^0,f,c
  7696  000BB2  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7697  000BB4  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7698  000BBA  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7699  000BC0  0E00               	movlw	low (__mediumconst shr (0+16))
  7700  000BC2  6EF8               	movwf	tblptru,c
  7701  000BC4  0E0F               	movlw	(high __ramtop+-1)
  7702  000BC6  64F7               	cpfsgt	tblptrh,c
  7703  000BC8  D003               	bra	u13787
  7704  000BCA  0008               	tblrd		*
  7705  000BCC  50F5               	movf	tablat,w,c
  7706  000BCE  D007               	bra	u13780
  7707  000BD0                     u13787:
  7708  000BD0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7709  000BD6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7710  000BDC  50EF               	movf	indf0,w,c
  7711  000BDE                     u13780:
  7712  000BDE  6E33               	movwf	___strtoxl@c^0,c
  7713  000BE0  0E01               	movlw	1
  7714  000BE2  6E25               	movwf	___strtoxl$7893^0,c
  7715  000BE4  0E20               	movlw	32
  7716  000BE6  1833               	xorwf	___strtoxl@c^0,w,c
  7717  000BE8  B4D8               	btfsc	status,2,c
  7718  000BEA  D013               	goto	l14600
  7719  000BEC  0EF7               	movlw	247
  7720  000BEE  6E17               	movwf	??___strtoxl^0,c
  7721  000BF0  0EFF               	movlw	255
  7722  000BF2  6E18               	movwf	(??___strtoxl+1)^0,c
  7723  000BF4  5033               	movf	___strtoxl@c^0,w,c
  7724  000BF6  6E19               	movwf	(??___strtoxl+2)^0,c
  7725  000BF8  6A1A               	clrf	(??___strtoxl+3)^0,c
  7726  000BFA  5017               	movf	??___strtoxl^0,w,c
  7727  000BFC  2619               	addwf	(??___strtoxl+2)^0,f,c
  7728  000BFE  5018               	movf	(??___strtoxl+1)^0,w,c
  7729  000C00  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7730  000C02  501A               	movf	(??___strtoxl+3)^0,w,c
  7731  000C04  E104               	bnz	u13800
  7732  000C06  0E05               	movlw	5
  7733  000C08  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7734  000C0A  A0D8               	btfss	status,0,c
  7735  000C0C  D002               	goto	l14600
  7736  000C0E                     u13800:
  7737  000C0E  0E00               	movlw	0
  7738  000C10  6E25               	movwf	___strtoxl$7893^0,c
  7739  000C12                     l14600:
  7740  000C12  0060  F094  F01F   	movff	___strtoxl$7893,___strtoxl$7892
  7741  000C18  6A20               	clrf	(___strtoxl$7892+1)^0,c
  7742  000C1A  501F               	movf	___strtoxl$7892^0,w,c
  7743  000C1C  1020               	iorwf	(___strtoxl$7892+1)^0,w,c
  7744  000C1E  A4D8               	btfss	status,2,c
  7745  000C20  D7C7               	goto	l14590
  7746  000C22  0E00               	movlw	0
  7747  000C24  6E2B               	movwf	___strtoxl@sign^0,c
  7748  000C26  0E00               	movlw	0
  7749  000C28  6E26               	movwf	___strtoxl@conv_done^0,c
  7750  000C2A  0E00               	movlw	0
  7751  000C2C  6E2C               	movwf	___strtoxl@skip^0,c
  7752  000C2E  0E2D               	movlw	45
  7753  000C30  1833               	xorwf	___strtoxl@c^0,w,c
  7754  000C32  A4D8               	btfss	status,2,c
  7755  000C34  D01B               	goto	l14614
  7756  000C36  0E01               	movlw	1
  7757  000C38  6E2B               	movwf	___strtoxl@sign^0,c
  7758  000C3A                     l14612:
  7759  000C3A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7760  000C3C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7761  000C3E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7762  000C44  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7763  000C4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7764  000C4C  6EF8               	movwf	tblptru,c
  7765  000C4E  0E0F               	movlw	(high __ramtop+-1)
  7766  000C50  64F7               	cpfsgt	tblptrh,c
  7767  000C52  D003               	bra	u13837
  7768  000C54  0008               	tblrd		*
  7769  000C56  50F5               	movf	tablat,w,c
  7770  000C58  D007               	bra	u13830
  7771  000C5A                     u13837:
  7772  000C5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7773  000C60  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7774  000C66  50EF               	movf	indf0,w,c
  7775  000C68                     u13830:
  7776  000C68  6E33               	movwf	___strtoxl@c^0,c
  7777  000C6A  D004               	goto	l14618
  7778  000C6C                     l14614:
  7779  000C6C  0E2B               	movlw	43
  7780  000C6E  1833               	xorwf	___strtoxl@c^0,w,c
  7781  000C70  B4D8               	btfsc	status,2,c
  7782  000C72  D7E3               	goto	l14612
  7783  000C74                     l14618:
  7784  000C74  0E30               	movlw	48
  7785  000C76  1833               	xorwf	___strtoxl@c^0,w,c
  7786  000C78  A4D8               	btfss	status,2,c
  7787  000C7A  D050               	goto	l14640
  7788  000C7C  4A31               	infsnz	___strtoxl@cp^0,f,c
  7789  000C7E  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7790  000C80  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7791  000C86  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7792  000C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  7793  000C8E  6EF8               	movwf	tblptru,c
  7794  000C90  0E0F               	movlw	(high __ramtop+-1)
  7795  000C92  64F7               	cpfsgt	tblptrh,c
  7796  000C94  D003               	bra	u13867
  7797  000C96  0008               	tblrd		*
  7798  000C98  50F5               	movf	tablat,w,c
  7799  000C9A  D007               	bra	u13860
  7800  000C9C                     u13867:
  7801  000C9C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7802  000CA2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7803  000CA8  50EF               	movf	indf0,w,c
  7804  000CAA                     u13860:
  7805  000CAA  6E33               	movwf	___strtoxl@c^0,c
  7806  000CAC  5014               	movf	___strtoxl@base^0,w,c
  7807  000CAE  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7808  000CB0  B4D8               	btfsc	status,2,c
  7809  000CB2  D005               	goto	u13880
  7810  000CB4  0E10               	movlw	16
  7811  000CB6  1814               	xorwf	___strtoxl@base^0,w,c
  7812  000CB8  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7813  000CBA  A4D8               	btfss	status,2,c
  7814  000CBC  D025               	goto	l14634
  7815  000CBE                     u13880:
  7816  000CBE  0E78               	movlw	120
  7817  000CC0  1833               	xorwf	___strtoxl@c^0,w,c
  7818  000CC2  B4D8               	btfsc	status,2,c
  7819  000CC4  D004               	goto	u13900
  7820  000CC6  0E58               	movlw	88
  7821  000CC8  1833               	xorwf	___strtoxl@c^0,w,c
  7822  000CCA  A4D8               	btfss	status,2,c
  7823  000CCC  D01D               	goto	l14634
  7824  000CCE                     u13900:
  7825  000CCE  0E00               	movlw	0
  7826  000CD0  6E15               	movwf	(___strtoxl@base+1)^0,c
  7827  000CD2  0E10               	movlw	16
  7828  000CD4  6E14               	movwf	___strtoxl@base^0,c
  7829  000CD6  4A31               	infsnz	___strtoxl@cp^0,f,c
  7830  000CD8  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7831  000CDA  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7832  000CE0  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7833  000CE6  0E00               	movlw	low (__mediumconst shr (0+16))
  7834  000CE8  6EF8               	movwf	tblptru,c
  7835  000CEA  0E0F               	movlw	(high __ramtop+-1)
  7836  000CEC  64F7               	cpfsgt	tblptrh,c
  7837  000CEE  D003               	bra	u13917
  7838  000CF0  0008               	tblrd		*
  7839  000CF2  50F5               	movf	tablat,w,c
  7840  000CF4  D007               	bra	u13910
  7841  000CF6                     u13917:
  7842  000CF6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7843  000CFC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7844  000D02  50EF               	movf	indf0,w,c
  7845  000D04                     u13910:
  7846  000D04  6E33               	movwf	___strtoxl@c^0,c
  7847  000D06  D00A               	goto	l14640
  7848  000D08                     l14634:
  7849  000D08  0E01               	movlw	1
  7850  000D0A  6E26               	movwf	___strtoxl@conv_done^0,c
  7851  000D0C  5014               	movf	___strtoxl@base^0,w,c
  7852  000D0E  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7853  000D10  A4D8               	btfss	status,2,c
  7854  000D12  D004               	goto	l14640
  7855  000D14  0E00               	movlw	0
  7856  000D16  6E15               	movwf	(___strtoxl@base+1)^0,c
  7857  000D18  0E08               	movlw	8
  7858  000D1A  6E14               	movwf	___strtoxl@base^0,c
  7859  000D1C                     l14640:
  7860  000D1C  5014               	movf	___strtoxl@base^0,w,c
  7861  000D1E  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7862  000D20  A4D8               	btfss	status,2,c
  7863  000D22  D004               	goto	l4084
  7864  000D24  0E00               	movlw	0
  7865  000D26  6E15               	movwf	(___strtoxl@base+1)^0,c
  7866  000D28  0E0A               	movlw	10
  7867  000D2A  6E14               	movwf	___strtoxl@base^0,c
  7868  000D2C                     l4084:
  7869  000D2C  5016               	movf	___strtoxl@is_signed^0,w,c
  7870  000D2E  B4D8               	btfsc	status,2,c
  7871  000D30  D014               	goto	l4085
  7872  000D32  502B               	movf	___strtoxl@sign^0,w,c
  7873  000D34  A4D8               	btfss	status,2,c
  7874  000D36  D008               	goto	l14648
  7875  000D38  0EFF               	movlw	255
  7876  000D3A  6E27               	movwf	___strtoxl@limit^0,c
  7877  000D3C  0EFF               	movlw	255
  7878  000D3E  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7879  000D40  0EFF               	movlw	255
  7880  000D42  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7881  000D44  0E7F               	movlw	127
  7882  000D46  D007               	goto	L2
  7883  000D48                     l14648:
  7884  000D48  0E00               	movlw	0
  7885  000D4A  6E27               	movwf	___strtoxl@limit^0,c
  7886  000D4C  0E00               	movlw	0
  7887  000D4E  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7888  000D50  0E00               	movlw	0
  7889  000D52  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7890  000D54  0E80               	movlw	128
  7891  000D56                     L2:
  7892  000D56  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  7893  000D58  D004               	goto	l4091
  7894  000D5A                     l4085:
  7895  000D5A  6827               	setf	___strtoxl@limit^0,c
  7896  000D5C  6828               	setf	(___strtoxl@limit+1)^0,c
  7897  000D5E  6829               	setf	(___strtoxl@limit+2)^0,c
  7898  000D60  682A               	setf	(___strtoxl@limit+3)^0,c
  7899  000D62                     l4091:
  7900  000D62  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  7901  000D68  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  7902  000D6E  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  7903  000D74  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  7904  000D7A  0E9F               	movlw	159
  7905  000D7C  6E17               	movwf	??___strtoxl^0,c
  7906  000D7E  0EFF               	movlw	255
  7907  000D80  6E18               	movwf	(??___strtoxl+1)^0,c
  7908  000D82  5033               	movf	___strtoxl@c^0,w,c
  7909  000D84  6E19               	movwf	(??___strtoxl+2)^0,c
  7910  000D86  6A1A               	clrf	(??___strtoxl+3)^0,c
  7911  000D88  0E20               	movlw	32
  7912  000D8A  1219               	iorwf	(??___strtoxl+2)^0,f,c
  7913  000D8C  0E00               	movlw	0
  7914  000D8E  121A               	iorwf	(??___strtoxl+3)^0,f,c
  7915  000D90  5017               	movf	??___strtoxl^0,w,c
  7916  000D92  2619               	addwf	(??___strtoxl+2)^0,f,c
  7917  000D94  5018               	movf	(??___strtoxl+1)^0,w,c
  7918  000D96  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7919  000D98  501A               	movf	(??___strtoxl+3)^0,w,c
  7920  000D9A  E106               	bnz	u13960
  7921  000D9C  0E1A               	movlw	26
  7922  000D9E  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7923  000DA0  B0D8               	btfsc	status,0,c
  7924  000DA2  D002               	goto	u13960
  7925  000DA4  0E01               	movlw	1
  7926  000DA6  D001               	goto	u13970
  7927  000DA8                     u13960:
  7928  000DA8  0E00               	movlw	0
  7929  000DAA                     u13970:
  7930  000DAA  6E21               	movwf	___strtoxl$7894^0,c
  7931  000DAC  6A22               	clrf	(___strtoxl$7894+1)^0,c
  7932  000DAE  5021               	movf	___strtoxl$7894^0,w,c
  7933  000DB0  1022               	iorwf	(___strtoxl$7894+1)^0,w,c
  7934  000DB2  B4D8               	btfsc	status,2,c
  7935  000DB4  D00A               	goto	l14658
  7936  000DB6  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  7937  000DBC  6A09               	clrf	(toupper@c+1)^0,c
  7938  000DBE  ECD2  F039         	call	_toupper	;wreg free
  7939  000DC2  5008               	movf	?_toupper^0,w,c
  7940  000DC4  0FC9               	addlw	201
  7941  000DC6  6E33               	movwf	___strtoxl@c^0,c
  7942  000DC8  D01C               	goto	l14666
  7943  000DCA                     l14658:
  7944  000DCA  0ED0               	movlw	208
  7945  000DCC  6E17               	movwf	??___strtoxl^0,c
  7946  000DCE  0EFF               	movlw	255
  7947  000DD0  6E18               	movwf	(??___strtoxl+1)^0,c
  7948  000DD2  5033               	movf	___strtoxl@c^0,w,c
  7949  000DD4  6E19               	movwf	(??___strtoxl+2)^0,c
  7950  000DD6  6A1A               	clrf	(??___strtoxl+3)^0,c
  7951  000DD8  5017               	movf	??___strtoxl^0,w,c
  7952  000DDA  2619               	addwf	(??___strtoxl+2)^0,f,c
  7953  000DDC  5018               	movf	(??___strtoxl+1)^0,w,c
  7954  000DDE  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7955  000DE0  501A               	movf	(??___strtoxl+3)^0,w,c
  7956  000DE2  E106               	bnz	u13990
  7957  000DE4  0E0A               	movlw	10
  7958  000DE6  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7959  000DE8  B0D8               	btfsc	status,0,c
  7960  000DEA  D002               	goto	u13990
  7961  000DEC  0E01               	movlw	1
  7962  000DEE  D001               	goto	u14000
  7963  000DF0                     u13990:
  7964  000DF0  0E00               	movlw	0
  7965  000DF2                     u14000:
  7966  000DF2  6E23               	movwf	___strtoxl$7895^0,c
  7967  000DF4  6A24               	clrf	(___strtoxl$7895+1)^0,c
  7968  000DF6  5023               	movf	___strtoxl$7895^0,w,c
  7969  000DF8  1024               	iorwf	(___strtoxl$7895+1)^0,w,c
  7970  000DFA  B4D8               	btfsc	status,2,c
  7971  000DFC  D07C               	goto	l14686
  7972  000DFE  0E30               	movlw	48
  7973  000E00  5E33               	subwf	___strtoxl@c^0,f,c
  7974  000E02                     l14666:
  7975  000E02  5033               	movf	___strtoxl@c^0,w,c
  7976  000E04  6E17               	movwf	??___strtoxl^0,c
  7977  000E06  6A18               	clrf	(??___strtoxl+1)^0,c
  7978  000E08  5014               	movf	___strtoxl@base^0,w,c
  7979  000E0A  5C17               	subwf	??___strtoxl^0,w,c
  7980  000E0C  5018               	movf	(??___strtoxl+1)^0,w,c
  7981  000E0E  0A80               	xorlw	128
  7982  000E10  6E19               	movwf	(??___strtoxl+2)^0,c
  7983  000E12  5015               	movf	(___strtoxl@base+1)^0,w,c
  7984  000E14  0A80               	xorlw	128
  7985  000E16  5819               	subwfb	(??___strtoxl+2)^0,w,c
  7986  000E18  B0D8               	btfsc	status,0,c
  7987  000E1A  D06D               	goto	l14686
  7988  000E1C  502C               	movf	___strtoxl@skip^0,w,c
  7989  000E1E  A4D8               	btfss	status,2,c
  7990  000E20  D04F               	goto	l14682
  7991  000E22  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  7992  000E28  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  7993  000E2E  0E00               	movlw	0
  7994  000E30  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  7995  000E32  0EFF               	movlw	-1
  7996  000E34  6E04               	movwf	(___lmul@multiplier+2)^0,c
  7997  000E36  6E05               	movwf	(___lmul@multiplier+3)^0,c
  7998  000E38  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  7999  000E3E  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8000  000E44  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8001  000E4A  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8002  000E50  EC6D  F038         	call	___lmul	;wreg free
  8003  000E54  5033               	movf	___strtoxl@c^0,w,c
  8004  000E56  2402               	addwf	?___lmul^0,w,c
  8005  000E58  6E2D               	movwf	___strtoxl@a^0,c
  8006  000E5A  0E00               	movlw	0
  8007  000E5C  2003               	addwfc	(?___lmul+1)^0,w,c
  8008  000E5E  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8009  000E60  0E00               	movlw	0
  8010  000E62  2004               	addwfc	(?___lmul+2)^0,w,c
  8011  000E64  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8012  000E66  0E00               	movlw	0
  8013  000E68  2005               	addwfc	(?___lmul+3)^0,w,c
  8014  000E6A  6E30               	movwf	(___strtoxl@a+3)^0,c
  8015  000E6C  501B               	movf	___strtoxl@prev_a^0,w,c
  8016  000E6E  5C2D               	subwf	___strtoxl@a^0,w,c
  8017  000E70  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8018  000E72  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8019  000E74  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8020  000E76  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8021  000E78  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8022  000E7A  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8023  000E7C  A0D8               	btfss	status,0,c
  8024  000E7E  D00D               	goto	u14060
  8025  000E80  5016               	movf	___strtoxl@is_signed^0,w,c
  8026  000E82  B4D8               	btfsc	status,2,c
  8027  000E84  D01D               	goto	l14682
  8028  000E86  502D               	movf	___strtoxl@a^0,w,c
  8029  000E88  5C27               	subwf	___strtoxl@limit^0,w,c
  8030  000E8A  502E               	movf	(___strtoxl@a+1)^0,w,c
  8031  000E8C  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8032  000E8E  502F               	movf	(___strtoxl@a+2)^0,w,c
  8033  000E90  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8034  000E92  5030               	movf	(___strtoxl@a+3)^0,w,c
  8035  000E94  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8036  000E96  B0D8               	btfsc	status,0,c
  8037  000E98  D013               	goto	l14682
  8038  000E9A                     u14060:
  8039  000E9A  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8040  000EA0  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8041  000EA6  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8042  000EAC  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8043  000EB2  0E00               	movlw	0
  8044  000EB4  0101               	movlb	1	; () banked
  8045  000EB6  6F56               	movwf	(_errno+1)& (0+255),b
  8046  000EB8  0E22               	movlw	34
  8047  000EBA  6F55               	movwf	_errno& (0+255),b
  8048  000EBC  0E01               	movlw	1
  8049  000EBE  6E2C               	movwf	___strtoxl@skip^0,c
  8050  000EC0                     l14682:
  8051  000EC0  4A31               	infsnz	___strtoxl@cp^0,f,c
  8052  000EC2  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8053  000EC4  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8054  000ECA  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8055  000ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8056  000ED2  6EF8               	movwf	tblptru,c
  8057  000ED4  0E0F               	movlw	(high __ramtop+-1)
  8058  000ED6  64F7               	cpfsgt	tblptrh,c
  8059  000ED8  D003               	bra	u14077
  8060  000EDA  0008               	tblrd		*
  8061  000EDC  50F5               	movf	tablat,w,c
  8062  000EDE  D007               	bra	u14070
  8063  000EE0                     u14077:
  8064  000EE0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8065  000EE6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8066  000EEC  50EF               	movf	indf0,w,c
  8067  000EEE                     u14070:
  8068  000EEE  6E33               	movwf	___strtoxl@c^0,c
  8069  000EF0  0E01               	movlw	1
  8070  000EF2  6E26               	movwf	___strtoxl@conv_done^0,c
  8071  000EF4  D736               	goto	l4091
  8072  000EF6                     l14686:
  8073  000EF6  502C               	movf	___strtoxl@skip^0,w,c
  8074  000EF8  A4D8               	btfss	status,2,c
  8075  000EFA  D00B               	goto	l14692
  8076  000EFC  502B               	movf	___strtoxl@sign^0,w,c
  8077  000EFE  B4D8               	btfsc	status,2,c
  8078  000F00  D008               	goto	l14692
  8079  000F02  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8080  000F04  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8081  000F06  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8082  000F08  6C2D               	negf	___strtoxl@a^0,c
  8083  000F0A  0E00               	movlw	0
  8084  000F0C  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8085  000F0E  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8086  000F10  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8087  000F12                     l14692:
  8088  000F12  5012               	movf	___strtoxl@endptr^0,w,c
  8089  000F14  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8090  000F16  B4D8               	btfsc	status,2,c
  8091  000F18  D015               	goto	l14700
  8092  000F1A  5026               	movf	___strtoxl@conv_done^0,w,c
  8093  000F1C  A4D8               	btfss	status,2,c
  8094  000F1E  D006               	goto	l14698
  8095  000F20  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8096  000F26  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8097  000F2C                     l14698:
  8098  000F2C  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8099  000F32  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8100  000F38  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8101  000F3E  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8102  000F44                     l14700:
  8103  000F44  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8104  000F4A  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8105  000F50  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8106  000F56  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8107  000F5C  0012               	return		;funcret
  8108  000F5E                     __end_of___strtoxl:
  8109                           	opt callstack 0
  8110                           
  8111 ;; *************** function ___lmul *****************
  8112 ;; Defined at:
  8113 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  multiplier      4    1[COMRAM] unsigned long 
  8116 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  product         4    9[COMRAM] unsigned long 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  4    1[COMRAM] unsigned long 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;Total ram usage:       12 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    7
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		___strtoxl
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text30
  8143  0070DA                     __ptext30:
  8144                           	opt callstack 0
  8145  0070DA                     ___lmul:
  8146                           	opt callstack 18
  8147                           
  8148                           ;incstack = 0
  8149  0070DA  0E00               	movlw	0
  8150  0070DC  6E0A               	movwf	___lmul@product^0,c
  8151  0070DE  0E00               	movlw	0
  8152  0070E0  6E0B               	movwf	(___lmul@product+1)^0,c
  8153  0070E2  0E00               	movlw	0
  8154  0070E4  6E0C               	movwf	(___lmul@product+2)^0,c
  8155  0070E6  0E00               	movlw	0
  8156  0070E8  6E0D               	movwf	(___lmul@product+3)^0,c
  8157  0070EA                     l9774:
  8158  0070EA  A002               	btfss	___lmul@multiplier^0,0,c
  8159  0070EC  D008               	goto	l9778
  8160  0070EE  5006               	movf	___lmul@multiplicand^0,w,c
  8161  0070F0  260A               	addwf	___lmul@product^0,f,c
  8162  0070F2  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8163  0070F4  220B               	addwfc	(___lmul@product+1)^0,f,c
  8164  0070F6  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8165  0070F8  220C               	addwfc	(___lmul@product+2)^0,f,c
  8166  0070FA  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8167  0070FC  220D               	addwfc	(___lmul@product+3)^0,f,c
  8168  0070FE                     l9778:
  8169  0070FE  90D8               	bcf	status,0,c
  8170  007100  3606               	rlcf	___lmul@multiplicand^0,f,c
  8171  007102  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8172  007104  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8173  007106  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8174  007108  90D8               	bcf	status,0,c
  8175  00710A  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8176  00710C  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8177  00710E  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8178  007110  3202               	rrcf	___lmul@multiplier^0,f,c
  8179  007112  5002               	movf	___lmul@multiplier^0,w,c
  8180  007114  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8181  007116  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8182  007118  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8183  00711A  A4D8               	btfss	status,2,c
  8184  00711C  D7E6               	goto	l9774
  8185  00711E  0060  F028  F002   	movff	___lmul@product,?___lmul
  8186  007124  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8187  00712A  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8188  007130  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8189  007136  0012               	return		;funcret
  8190  007138                     __end_of___lmul:
  8191                           	opt callstack 0
  8192                           
  8193 ;; *************** function _cmdRstCAD *****************
  8194 ;; Defined at:
  8195 ;;		line 541 in file "../app/app_src/application.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 3F/1
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;Total ram usage:        0 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:   16
  8216 ;; This function calls:
  8217 ;;		_printf
  8218 ;; This function is called by:
  8219 ;;		_executeATCommand
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text31
  8224  008372                     __ptext31:
  8225                           	opt callstack 0
  8226  008372                     _cmdRstCAD:
  8227                           	opt callstack 12
  8228                           
  8229                           ;../app/app_src/application.c: 542:  cadCounter = 0;
  8230                           
  8231                           ;incstack = 0
  8232  008372  0E00               	movlw	0
  8233  008374  0100               	movlb	0	; () banked
  8234  008376  6FED               	movwf	_cadCounter& (0+255),b
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;../app/app_src/application.c: 543:  printf("OK\r\n");
  8238  008378  0ED7               	movlw	low STR_13
  8239  00837A  6E55               	movwf	printf@fmt^0,c
  8240  00837C  0EFF               	movlw	high STR_13
  8241  00837E  6E56               	movwf	(printf@fmt+1)^0,c
  8242  008380  EC0F  F040         	call	_printf	;wreg free
  8243                           
  8244                           ; BSR set to: 1
  8245  008384  0012               	return		;funcret
  8246  008386                     __end_of_cmdRstCAD:
  8247                           	opt callstack 0
  8248                           
  8249 ;; *************** function _cmdReset *****************
  8250 ;; Defined at:
  8251 ;;		line 681 in file "../app/app_src/application.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		None
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    7
  8272 ;; This function calls:
  8273 ;;		Nothing
  8274 ;; This function is called by:
  8275 ;;		_executeATCommand
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text32
  8280  00850A                     __ptext32:
  8281                           	opt callstack 0
  8282  00850A                     _cmdReset:
  8283                           	opt callstack 21
  8284                           
  8285                           ; BSR set to: 1
  8286                           ;incstack = 0
  8287  00850A  00FF               	reset		;# 
  8288  00850C                     l355:
  8289  00850C  D7FF               	goto	l355
  8290  00850E                     __end_of_cmdReset:
  8291                           	opt callstack 0
  8292                           
  8293 ;; *************** function _cmdRecv *****************
  8294 ;; Defined at:
  8295 ;;		line 364 in file "../app/app_src/application.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		None
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    7
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_executeATCommand
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text33
  8324  008512                     __ptext33:
  8325                           	opt callstack 0
  8326  008512                     _cmdRecv:
  8327                           	opt callstack 21
  8328                           
  8329                           ;../app/app_src/application.c: 378:  return;
  8330                           
  8331                           ;incstack = 0
  8332  008512  0012               	return		;funcret
  8333  008514                     __end_of_cmdRecv:
  8334                           	opt callstack 0
  8335                           
  8336 ;; *************** function _cmdNaddr *****************
  8337 ;; Defined at:
  8338 ;;		line 332 in file "../app/app_src/application.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 3F/1
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:   16
  8359 ;; This function calls:
  8360 ;;		_printf
  8361 ;; This function is called by:
  8362 ;;		_executeATCommand
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text34
  8367  008304                     __ptext34:
  8368                           	opt callstack 0
  8369  008304                     _cmdNaddr:
  8370                           	opt callstack 12
  8371                           
  8372                           ;../app/app_src/application.c: 333:  printf("NADDR=%02X\r\n",currentNetID);
  8373                           
  8374                           ;incstack = 0
  8375  008304  0E73               	movlw	low STR_15
  8376  008306  6E55               	movwf	printf@fmt^0,c
  8377  008308  0EFE               	movlw	high STR_15
  8378  00830A  6E56               	movwf	(printf@fmt+1)^0,c
  8379  00830C  0060  F3E8  F057   	movff	_currentNetID,?_printf+2
  8380  008312  6A58               	clrf	(?_printf+3)^0,c
  8381  008314  EC0F  F040         	call	_printf	;wreg free
  8382                           
  8383                           ; BSR set to: 1
  8384  008318  0012               	return		;funcret
  8385  00831A                     __end_of_cmdNaddr:
  8386                           	opt callstack 0
  8387                           
  8388 ;; *************** function _cmdMac *****************
  8389 ;; Defined at:
  8390 ;;		line 387 in file "../app/app_src/application.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  i               1   23[BANK0 ] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 3F/1
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8408 ;;Total ram usage:        2 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:   16
  8411 ;; This function calls:
  8412 ;;		_printf
  8413 ;; This function is called by:
  8414 ;;		_executeATCommand
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text35
  8419  007534                     __ptext35:
  8420                           	opt callstack 0
  8421  007534                     _cmdMac:
  8422                           	opt callstack 12
  8423                           
  8424                           ;../app/app_src/application.c: 388:  printf("MAC=");
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;incstack = 0
  8428  007534  0EDC               	movlw	low STR_18
  8429  007536  6E55               	movwf	printf@fmt^0,c
  8430  007538  0EFF               	movlw	high STR_18
  8431  00753A  6E56               	movwf	(printf@fmt+1)^0,c
  8432  00753C  EC0F  F040         	call	_printf	;wreg free
  8433                           
  8434                           ; BSR set to: 1
  8435                           ;../app/app_src/application.c: 389:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8436  007540  0E00               	movlw	0
  8437  007542  0100               	movlb	0	; () banked
  8438  007544  6F77               	movwf	cmdMac@i& (0+255),b
  8439  007546                     l15226:
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;../app/app_src/application.c: 390:   printf("%02X", EUIDbyte[i]);
  8443  007546  0EF5               	movlw	low STR_19
  8444  007548  6E55               	movwf	printf@fmt^0,c
  8445  00754A  0EFF               	movlw	high STR_19
  8446  00754C  6E56               	movwf	(printf@fmt+1)^0,c
  8447  00754E  0EBC               	movlw	low _EUIDbyte
  8448  007550  2577               	addwf	cmdMac@i& (0+255),w,b
  8449  007552  6ED9               	movwf	fsr2l,c
  8450  007554  6ADA               	clrf	fsr2h,c
  8451  007556  0E01               	movlw	high _EUIDbyte
  8452  007558  22DA               	addwfc	fsr2h,f,c
  8453  00755A  50DF               	movf	indf2,w,c
  8454  00755C  6F76               	movwf	??_cmdMac& (0+255),b
  8455  00755E  5176               	movf	??_cmdMac& (0+255),w,b
  8456  007560  6E57               	movwf	(?_printf+2)^0,c
  8457  007562  6A58               	clrf	(?_printf+3)^0,c
  8458  007564  EC0F  F040         	call	_printf	;wreg free
  8459                           
  8460                           ; BSR set to: 1
  8461                           ;../app/app_src/application.c: 391:  }
  8462  007568  0100               	movlb	0	; () banked
  8463  00756A  2B77               	incf	cmdMac@i& (0+255),f,b
  8464                           
  8465                           ; BSR set to: 0
  8466  00756C  0E0B               	movlw	11
  8467  00756E  6577               	cpfsgt	cmdMac@i& (0+255),b
  8468  007570  D7EA               	goto	l15226
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;../app/app_src/application.c: 392:  printf("\r\n");
  8472  007572  0ED4               	movlw	low (STR_135+2)
  8473  007574  6E55               	movwf	printf@fmt^0,c
  8474  007576  0EFF               	movlw	high (STR_135+2)
  8475  007578  6E56               	movwf	(printf@fmt+1)^0,c
  8476  00757A  EC0F  F040         	call	_printf	;wreg free
  8477                           
  8478                           ; BSR set to: 1
  8479  00757E  0012               	return		;funcret
  8480  007580                     __end_of_cmdMac:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function _cmdI *****************
  8484 ;; Defined at:
  8485 ;;		line 207 in file "../app/app_src/application.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 3F/1
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:   17
  8506 ;; This function calls:
  8507 ;;		_sendInfo
  8508 ;; This function is called by:
  8509 ;;		_executeATCommand
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text36
  8514  0084F2                     __ptext36:
  8515                           	opt callstack 0
  8516  0084F2                     _cmdI:
  8517                           	opt callstack 11
  8518                           
  8519                           ;../app/app_src/application.c: 209:     sendInfo();
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;incstack = 0
  8523  0084F2  EC9C  F038         	call	_sendInfo	;wreg free
  8524                           
  8525                           ; BSR set to: 1
  8526  0084F6  0012               	return		;funcret
  8527  0084F8                     __end_of_cmdI:
  8528                           	opt callstack 0
  8529                           
  8530 ;; *************** function _sendInfo *****************
  8531 ;; Defined at:
  8532 ;;		line 1146 in file "../app/app_src/application.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 3F/1
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;Total ram usage:        0 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:   16
  8553 ;; This function calls:
  8554 ;;		_printf
  8555 ;; This function is called by:
  8556 ;;		_cmdI
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text37
  8561  007138                     __ptext37:
  8562                           	opt callstack 0
  8563  007138                     _sendInfo:
  8564                           	opt callstack 11
  8565                           
  8566                           ;../app/app_src/application.c: 1148:     printf("LoRa Mesh\r\n");
  8567                           
  8568                           ; BSR set to: 1
  8569                           ;incstack = 0
  8570  007138  0EC0               	movlw	low STR_131
  8571  00713A  6E55               	movwf	printf@fmt^0,c
  8572  00713C  0EFE               	movlw	high STR_131
  8573  00713E  6E56               	movwf	(printf@fmt+1)^0,c
  8574  007140  EC0F  F040         	call	_printf	;wreg free
  8575  007144  0EF3               	movlw	low STR_132
  8576  007146  6E55               	movwf	printf@fmt^0,c
  8577  007148  0EFD               	movlw	high STR_132
  8578  00714A  6E56               	movwf	(printf@fmt+1)^0,c
  8579  00714C  0E00               	movlw	0
  8580  00714E  6E58               	movwf	(?_printf+3)^0,c
  8581  007150  0E01               	movlw	1
  8582  007152  6E57               	movwf	(?_printf+2)^0,c
  8583  007154  0E00               	movlw	0
  8584  007156  6E5A               	movwf	(?_printf+5)^0,c
  8585  007158  0E00               	movlw	0
  8586  00715A  6E59               	movwf	(?_printf+4)^0,c
  8587  00715C  EC0F  F040         	call	_printf	;wreg free
  8588  007160  0ED7               	movlw	low STR_133
  8589  007162  6E55               	movwf	printf@fmt^0,c
  8590  007164  0EFD               	movlw	high STR_133
  8591  007166  6E56               	movwf	(printf@fmt+1)^0,c
  8592  007168  0E00               	movlw	0
  8593  00716A  6E58               	movwf	(?_printf+3)^0,c
  8594  00716C  0E02               	movlw	2
  8595  00716E  6E57               	movwf	(?_printf+2)^0,c
  8596  007170  0E00               	movlw	0
  8597  007172  6E5A               	movwf	(?_printf+5)^0,c
  8598  007174  0E01               	movlw	1
  8599  007176  6E59               	movwf	(?_printf+4)^0,c
  8600  007178  EC0F  F040         	call	_printf	;wreg free
  8601                           
  8602                           ;../app/app_src/application.c: 1152:     printf("Region ");
  8603  00717C  0E41               	movlw	low STR_134
  8604  00717E  6E55               	movwf	printf@fmt^0,c
  8605  007180  0EFF               	movlw	high STR_134
  8606  007182  6E56               	movwf	(printf@fmt+1)^0,c
  8607  007184  EC0F  F040         	call	_printf	;wreg free
  8608                           
  8609                           ;../app/app_src/application.c: 1154:     printf("NA\r\n");
  8610  007188  0ED2               	movlw	low STR_135
  8611  00718A  6E55               	movwf	printf@fmt^0,c
  8612  00718C  0EFF               	movlw	high STR_135
  8613  00718E  6E56               	movwf	(printf@fmt+1)^0,c
  8614  007190  EC0F  F040         	call	_printf	;wreg free
  8615                           
  8616                           ; BSR set to: 1
  8617  007194  0012               	return		;funcret
  8618  007196                     __end_of_sendInfo:
  8619                           	opt callstack 0
  8620                           
  8621 ;; *************** function _cmdGetTX *****************
  8622 ;; Defined at:
  8623 ;;		line 605 in file "../app/app_src/application.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 3F/1
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;Total ram usage:        0 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:   16
  8644 ;; This function calls:
  8645 ;;		_printf
  8646 ;; This function is called by:
  8647 ;;		_executeATCommand
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text38
  8652  00831A                     __ptext38:
  8653                           	opt callstack 0
  8654  00831A                     _cmdGetTX:
  8655                           	opt callstack 12
  8656                           
  8657                           ;../app/app_src/application.c: 606:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  8658                           
  8659                           ; BSR set to: 1
  8660                           ;incstack = 0
  8661  00831A  0E65               	movlw	low STR_37
  8662  00831C  6E55               	movwf	printf@fmt^0,c
  8663  00831E  0EFE               	movlw	high STR_37
  8664  008320  6E56               	movwf	(printf@fmt+1)^0,c
  8665  008322  0060  F3A8  F057   	movff	_TXPower,?_printf+2
  8666  008328  6A58               	clrf	(?_printf+3)^0,c
  8667  00832A  EC0F  F040         	call	_printf	;wreg free
  8668                           
  8669                           ; BSR set to: 1
  8670  00832E  0012               	return		;funcret
  8671  008330                     __end_of_cmdGetTX:
  8672                           	opt callstack 0
  8673                           
  8674 ;; *************** function _cmdGetTTL *****************
  8675 ;; Defined at:
  8676 ;;		line 503 in file "../app/app_src/application.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		None
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    7
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_executeATCommand
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text39
  8705  008514                     __ptext39:
  8706                           	opt callstack 0
  8707  008514                     _cmdGetTTL:
  8708                           	opt callstack 21
  8709                           
  8710                           ;../app/app_src/application.c: 505:  return;
  8711                           
  8712                           ; BSR set to: 1
  8713                           ;incstack = 0
  8714  008514  0012               	return		;funcret
  8715  008516                     __end_of_cmdGetTTL:
  8716                           	opt callstack 0
  8717                           
  8718 ;; *************** function _cmdGetSF *****************
  8719 ;; Defined at:
  8720 ;;		line 747 in file "../app/app_src/application.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;		None
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;		None
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  1    wreg      void 
  8727 ;; Registers used:
  8728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 3F/1
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;Total ram usage:        0 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; Hardware stack levels required when called:   16
  8741 ;; This function calls:
  8742 ;;		_printf
  8743 ;; This function is called by:
  8744 ;;		_executeATCommand
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           	psect	text40
  8749  008330                     __ptext40:
  8750                           	opt callstack 0
  8751  008330                     _cmdGetSF:
  8752                           	opt callstack 12
  8753                           
  8754                           ;../app/app_src/application.c: 748:     printf("SF=%u\r\n", current_sf);
  8755                           
  8756                           ;incstack = 0
  8757  008330  0E39               	movlw	low STR_56
  8758  008332  6E55               	movwf	printf@fmt^0,c
  8759  008334  0EFF               	movlw	high STR_56
  8760  008336  6E56               	movwf	(printf@fmt+1)^0,c
  8761  008338  0060  F3B0  F057   	movff	_current_sf,?_printf+2
  8762  00833E  6A58               	clrf	(?_printf+3)^0,c
  8763  008340  EC0F  F040         	call	_printf	;wreg free
  8764                           
  8765                           ; BSR set to: 1
  8766  008344  0012               	return		;funcret
  8767  008346                     __end_of_cmdGetSF:
  8768                           	opt callstack 0
  8769                           
  8770 ;; *************** function _cmdGetRxCnt *****************
  8771 ;; Defined at:
  8772 ;;		line 782 in file "../app/app_src/application.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  atCommand       2    1[COMRAM] PTR unsigned char 
  8775 ;;		 -> atCommand(80), 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		None
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;Total ram usage:        2 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    7
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_executeATCommand
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text41
  8802  008516                     __ptext41:
  8803                           	opt callstack 0
  8804  008516                     _cmdGetRxCnt:
  8805                           	opt callstack 21
  8806                           
  8807                           ; BSR set to: 1
  8808                           ;incstack = 0
  8809  008516  0012               	return		;funcret
  8810  008518                     __end_of_cmdGetRxCnt:
  8811                           	opt callstack 0
  8812                           
  8813 ;; *************** function _cmdGetRFCH *****************
  8814 ;; Defined at:
  8815 ;;		line 569 in file "../app/app_src/application.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 3F/1
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:   16
  8836 ;; This function calls:
  8837 ;;		_printf
  8838 ;; This function is called by:
  8839 ;;		_executeATCommand
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text42
  8844  008204                     __ptext42:
  8845                           	opt callstack 0
  8846  008204                     _cmdGetRFCH:
  8847                           	opt callstack 12
  8848                           
  8849                           ;../app/app_src/application.c: 570:  printf("CHANNEL=%u\r\n",(channel + 1));
  8850                           
  8851                           ;incstack = 0
  8852  008204  0E9A               	movlw	low STR_33
  8853  008206  6E55               	movwf	printf@fmt^0,c
  8854  008208  0EFE               	movlw	high STR_33
  8855  00820A  6E56               	movwf	(printf@fmt+1)^0,c
  8856  00820C  0E01               	movlw	1
  8857  00820E  0100               	movlb	0	; () banked
  8858  008210  25EB               	addwf	_channel& (0+255),w,b
  8859  008212  6E57               	movwf	(?_printf+2)^0,c
  8860  008214  6A58               	clrf	(?_printf+3)^0,c
  8861  008216  0E00               	movlw	0
  8862  008218  2258               	addwfc	(?_printf+3)^0,f,c
  8863  00821A  EC0F  F040         	call	_printf	;wreg free
  8864                           
  8865                           ; BSR set to: 1
  8866  00821E  0012               	return		;funcret
  8867  008220                     __end_of_cmdGetRFCH:
  8868                           	opt callstack 0
  8869                           
  8870 ;; *************** function _cmdGetMode *****************
  8871 ;; Defined at:
  8872 ;;		line 553 in file "../app/app_src/application.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      void 
  8879 ;; Registers used:
  8880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 3F/1
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;Total ram usage:        0 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:   16
  8893 ;; This function calls:
  8894 ;;		_printf
  8895 ;; This function is called by:
  8896 ;;		_executeATCommand
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text43
  8901  008412                     __ptext43:
  8902                           	opt callstack 0
  8903  008412                     _cmdGetMode:
  8904                           	opt callstack 12
  8905                           
  8906                           ;../app/app_src/application.c: 555:   printf("MODE = REPEATER\r\n");
  8907                           
  8908                           ; BSR set to: 1
  8909                           ;incstack = 0
  8910  008412  0E34               	movlw	low STR_31
  8911  008414  6E55               	movwf	printf@fmt^0,c
  8912  008416  0EFE               	movlw	high STR_31
  8913  008418  6E56               	movwf	(printf@fmt+1)^0,c
  8914  00841A  EC0F  F040         	call	_printf	;wreg free
  8915                           
  8916                           ; BSR set to: 1
  8917                           
  8918                           ;../app/app_src/application.c: 556:  }
  8919  00841E  0012               	return		;funcret
  8920  008420                     __end_of_cmdGetMode:
  8921                           	opt callstack 0
  8922                           
  8923 ;; *************** function _cmdGetCADRSSI *****************
  8924 ;; Defined at:
  8925 ;;		line 645 in file "../app/app_src/application.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 3F/1
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:   16
  8946 ;; This function calls:
  8947 ;;		_printf
  8948 ;; This function is called by:
  8949 ;;		_executeATCommand
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text44
  8954  008220                     __ptext44:
  8955                           	opt callstack 0
  8956  008220                     _cmdGetCADRSSI:
  8957                           	opt callstack 12
  8958                           
  8959                           ;../app/app_src/application.c: 646:  printf("CAD RSS=%i\r\n",RSSITarget);
  8960                           
  8961                           ; BSR set to: 1
  8962                           ;incstack = 0
  8963  008220  0E80               	movlw	low STR_42
  8964  008222  6E55               	movwf	printf@fmt^0,c
  8965  008224  0EFE               	movlw	high STR_42
  8966  008226  6E56               	movwf	(printf@fmt+1)^0,c
  8967  008228  0100               	movlb	0	; () banked
  8968  00822A  51F9               	movf	_RSSITarget& (0+255),w,b
  8969  00822C  6E57               	movwf	(?_printf+2)^0,c
  8970  00822E  6A58               	clrf	(?_printf+3)^0,c
  8971  008230  BE57               	btfsc	(?_printf+2)^0,7,c
  8972  008232  0658               	decf	(?_printf+3)^0,f,c
  8973  008234  EC0F  F040         	call	_printf	;wreg free
  8974                           
  8975                           ; BSR set to: 1
  8976  008238  0012               	return		;funcret
  8977  00823A                     __end_of_cmdGetCADRSSI:
  8978                           	opt callstack 0
  8979                           
  8980 ;; *************** function _cmdGetCAD *****************
  8981 ;; Defined at:
  8982 ;;		line 530 in file "../app/app_src/application.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;		None
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 3F/1
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;Total ram usage:        0 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:   16
  9003 ;; This function calls:
  9004 ;;		_printf
  9005 ;; This function is called by:
  9006 ;;		_executeATCommand
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           	psect	text45
  9011  008346                     __ptext45:
  9012                           	opt callstack 0
  9013  008346                     _cmdGetCAD:
  9014                           	opt callstack 12
  9015                           
  9016                           ;../app/app_src/application.c: 531:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9017                           
  9018                           ; BSR set to: 1
  9019                           ;incstack = 0
  9020  008346  0E0D               	movlw	low STR_29
  9021  008348  6E55               	movwf	printf@fmt^0,c
  9022  00834A  0EFE               	movlw	high STR_29
  9023  00834C  6E56               	movwf	(printf@fmt+1)^0,c
  9024  00834E  0060  F3B4  F057   	movff	_cadCounter,?_printf+2
  9025  008354  6A58               	clrf	(?_printf+3)^0,c
  9026  008356  EC0F  F040         	call	_printf	;wreg free
  9027                           
  9028                           ; BSR set to: 1
  9029  00835A  0012               	return		;funcret
  9030  00835C                     __end_of_cmdGetCAD:
  9031                           	opt callstack 0
  9032                           
  9033 ;; *************** function _cmdBootLoad *****************
  9034 ;; Defined at:
  9035 ;;		line 718 in file "../app/app_src/application.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;		None
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;Total ram usage:        2 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:   16
  9056 ;; This function calls:
  9057 ;;		_DATAEE_WriteByte_Platform
  9058 ;;		_printf
  9059 ;; This function is called by:
  9060 ;;		_executeATCommand
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text46
  9065  007ADA                     __ptext46:
  9066                           	opt callstack 0
  9067  007ADA                     _cmdBootLoad:
  9068                           	opt callstack 12
  9069                           
  9070                           ;../app/app_src/application.c: 719:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9071                           
  9072                           ; BSR set to: 1
  9073                           ;incstack = 0
  9074  007ADA  0E00               	movlw	0
  9075  007ADC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9076  007ADE  0E00               	movlw	0
  9077  007AE0  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9078  007AE2  0E00               	movlw	0
  9079  007AE4  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9080  007AE6  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
  9081                           
  9082                           ;../app/app_src/application.c: 720:     printf("OK\r\n");
  9083  007AEA  0ED7               	movlw	low STR_13
  9084  007AEC  6E55               	movwf	printf@fmt^0,c
  9085  007AEE  0EFF               	movlw	high STR_13
  9086  007AF0  6E56               	movwf	(printf@fmt+1)^0,c
  9087  007AF2  EC0F  F040         	call	_printf	;wreg free
  9088                           
  9089                           ; BSR set to: 1
  9090                           ;../app/app_src/application.c: 721:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9091  007AF6  0E52               	movlw	82
  9092  007AF8  0100               	movlb	0	; () banked
  9093  007AFA  6F77               	movwf	(??_cmdBootLoad+1)& (0+255),b
  9094  007AFC  0E2B               	movlw	43
  9095  007AFE  6F76               	movwf	??_cmdBootLoad& (0+255),b
  9096  007B00  0E00               	movlw	0
  9097  007B02                     u16077:
  9098  007B02  2EE8               	decfsz	wreg,f,c
  9099  007B04  D7FE               	bra	u16077
  9100  007B06  2F76               	decfsz	??_cmdBootLoad& (0+255),f,b
  9101  007B08  D7FC               	bra	u16077
  9102  007B0A  2F77               	decfsz	(??_cmdBootLoad+1)& (0+255),f,b
  9103  007B0C  D7FA               	bra	u16077
  9104  007B0E  F000               	nop	
  9105  007B10  00FF               	reset		;# 
  9106  007B12  0012               	return		;funcret
  9107  007B14                     __end_of_cmdBootLoad:
  9108                           	opt callstack 0
  9109                           
  9110 ;; *************** function _cmdBcast *****************
  9111 ;; Defined at:
  9112 ;;		line 261 in file "../app/app_src/application.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  9115 ;;		 -> atCommand(80), 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  buf_id          1   28[BANK0 ] unsigned char 
  9118 ;;  p2              3    0        PTR unsigned char 
  9119 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  9120 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 3F/1
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9133 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9134 ;;Total ram usage:        7 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:   16
  9137 ;; This function calls:
  9138 ;;		_NWK_DataReq
  9139 ;;		_get_free_tx_buffer
  9140 ;;		_memcpy
  9141 ;;		_memset
  9142 ;;		_printf
  9143 ;;		_strlen
  9144 ;;		_strstr
  9145 ;; This function is called by:
  9146 ;;		_executeATCommand
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text47
  9151  002816                     __ptext47:
  9152                           	opt callstack 0
  9153  002816                     _cmdBcast:
  9154                           	opt callstack 12
  9155                           
  9156                           ;../app/app_src/application.c: 262:  char *p1,*p2;;../app/app_src/application.c: 264:  p
      +                          1 = strstr(cmd,"=") + 1;
  9157                           
  9158                           ;incstack = 0
  9159  002816  0060  F1D8  F00D   	movff	cmdBcast@cmd,strstr@h
  9160  00281C  0060  F1DC  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9161  002822  0EDF               	movlw	low (STR_18+3)
  9162  002824  6E0F               	movwf	strstr@n^0,c
  9163  002826  0EFF               	movlw	high (STR_18+3)
  9164  002828  6E10               	movwf	(strstr@n+1)^0,c
  9165  00282A  EC65  F02A         	call	_strstr	;wreg free
  9166  00282E  0E01               	movlw	1
  9167  002830  240D               	addwf	?_strstr^0,w,c
  9168  002832  0100               	movlb	0	; () banked
  9169  002834  6F7A               	movwf	cmdBcast@p1& (0+255),b
  9170  002836  0E00               	movlw	0
  9171  002838  200E               	addwfc	(?_strstr+1)^0,w,c
  9172  00283A  6F7B               	movwf	(cmdBcast@p1+1)& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;../app/app_src/application.c: 266:  if((!p1) || (strlen(p1) > 64)){
  9176  00283C  517A               	movf	cmdBcast@p1& (0+255),w,b
  9177  00283E  117B               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9178  002840  B4D8               	btfsc	status,2,c
  9179  002842  D00E               	goto	u14830
  9180                           
  9181                           ; BSR set to: 0
  9182  002844  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9183  00284A  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9184  002850  EC24  F03A         	call	_strlen	;wreg free
  9185  002854  5003               	movf	(?_strlen+1)^0,w,c
  9186  002856  E104               	bnz	u14830
  9187  002858  0E41               	movlw	65
  9188  00285A  5C02               	subwf	?_strlen^0,w,c
  9189  00285C  A0D8               	btfss	status,0,c
  9190  00285E  D009               	goto	l15146
  9191  002860                     u14830:
  9192                           
  9193                           ;../app/app_src/application.c: 267:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9194  002860  0ECC               	movlw	low STR_4
  9195  002862  6E55               	movwf	printf@fmt^0,c
  9196  002864  0EFE               	movlw	high STR_4
  9197  002866  6E56               	movwf	(printf@fmt+1)^0,c
  9198  002868  0E07               	movlw	7
  9199  00286A  6E57               	movwf	(?_printf+2)^0,c
  9200  00286C  EC0F  F040         	call	_printf	;wreg free
  9201                           
  9202                           ;../app/app_src/application.c: 268:  }
  9203  002870  0012               	return	
  9204  002872                     l15146:
  9205                           
  9206                           ;../app/app_src/application.c: 270:   uint8_t buf_id;;../app/app_src/application.c: 271:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9207  002872  0E7C               	movlw	low cmdBcast@buf_id
  9208  002874  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9209  002876  EC4C  F037         	call	_get_free_tx_buffer	;wreg free
  9210  00287A  0900               	iorlw	0
  9211  00287C  A4D8               	btfss	status,2,c
  9212  00287E  D009               	goto	l15152
  9213                           
  9214                           ;../app/app_src/application.c: 272:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9215  002880  0ECC               	movlw	low STR_4
  9216  002882  6E55               	movwf	printf@fmt^0,c
  9217  002884  0EFE               	movlw	high STR_4
  9218  002886  6E56               	movwf	(printf@fmt+1)^0,c
  9219  002888  0E11               	movlw	17
  9220  00288A  6E57               	movwf	(?_printf+2)^0,c
  9221  00288C  EC0F  F040         	call	_printf	;wreg free
  9222  002890  0012               	return	
  9223  002892                     l15152:
  9224                           
  9225                           ;../app/app_src/application.c: 275:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9226  002892  0100               	movlb	0	; () banked
  9227  002894  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9228  002896  0D83               	mullw	131
  9229  002898  0E80               	movlw	low (_tx_buffer+22)
  9230  00289A  24F3               	addwf	243,w,c
  9231  00289C  6E02               	movwf	memset@dest^0,c
  9232  00289E  0E08               	movlw	high (_tx_buffer+22)
  9233  0028A0  20F4               	addwfc	prodh,w,c
  9234  0028A2  6E03               	movwf	(memset@dest+1)^0,c
  9235  0028A4  0E00               	movlw	0
  9236  0028A6  6E05               	movwf	(memset@c+1)^0,c
  9237  0028A8  0E00               	movlw	0
  9238  0028AA  6E04               	movwf	memset@c^0,c
  9239  0028AC  0E00               	movlw	0
  9240  0028AE  6E07               	movwf	(memset@n+1)^0,c
  9241  0028B0  0E6D               	movlw	109
  9242  0028B2  6E06               	movwf	memset@n^0,c
  9243  0028B4  ECC9  F01E         	call	_memset	;wreg free
  9244                           
  9245                           ;../app/app_src/application.c: 276:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9246  0028B8  0100               	movlb	0	; () banked
  9247  0028BA  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9248  0028BC  0D83               	mullw	131
  9249  0028BE  0E80               	movlw	low (_tx_buffer+22)
  9250  0028C0  24F3               	addwf	243,w,c
  9251  0028C2  6E08               	movwf	memcpy@d1^0,c
  9252  0028C4  0E08               	movlw	high (_tx_buffer+22)
  9253  0028C6  20F4               	addwfc	prodh,w,c
  9254  0028C8  6E09               	movwf	(memcpy@d1+1)^0,c
  9255  0028CA  0060  F1E8  F00A   	movff	cmdBcast@p1,memcpy@s1
  9256  0028D0  0060  F1EC  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9257  0028D6  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9258  0028DC  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9259  0028E2  EC24  F03A         	call	_strlen	;wreg free
  9260  0028E6  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9261  0028EC  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9262  0028F2  ECD0  F035         	call	_memcpy	;wreg free
  9263                           
  9264                           ;../app/app_src/application.c: 277:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9265  0028F6  0100               	movlb	0	; () banked
  9266  0028F8  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9267  0028FA  0D83               	mullw	131
  9268  0028FC  0E72               	movlw	low (_tx_buffer+8)
  9269  0028FE  24F3               	addwf	243,w,c
  9270  002900  6ED9               	movwf	fsr2l,c
  9271  002902  0E08               	movlw	high (_tx_buffer+8)
  9272  002904  20F4               	addwfc	prodh,w,c
  9273  002906  6EDA               	movwf	fsr2h,c
  9274  002908  0EFF               	movlw	255
  9275  00290A  6EDE               	movwf	postinc2,c
  9276  00290C  0EFF               	movlw	255
  9277  00290E  6EDD               	movwf	postdec2,c
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;../app/app_src/application.c: 278:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9281  002910  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9282  002912  0D83               	mullw	131
  9283  002914  0E74               	movlw	low (_tx_buffer+10)
  9284  002916  24F3               	addwf	243,w,c
  9285  002918  6ED9               	movwf	fsr2l,c
  9286  00291A  0E08               	movlw	high (_tx_buffer+10)
  9287  00291C  20F4               	addwfc	prodh,w,c
  9288  00291E  6EDA               	movwf	fsr2h,c
  9289  002920  0E01               	movlw	1
  9290  002922  6EDF               	movwf	indf2,c
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;../app/app_src/application.c: 279:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9294  002924  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9295  002926  0D83               	mullw	131
  9296  002928  0E75               	movlw	low (_tx_buffer+11)
  9297  00292A  24F3               	addwf	243,w,c
  9298  00292C  6ED9               	movwf	fsr2l,c
  9299  00292E  0E08               	movlw	high (_tx_buffer+11)
  9300  002930  20F4               	addwfc	prodh,w,c
  9301  002932  6EDA               	movwf	fsr2h,c
  9302  002934  0E01               	movlw	1
  9303  002936  6EDF               	movwf	indf2,c
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;../app/app_src/application.c: 280:         tx_buffer[buf_id].nwkDataReq.options = 0;
  9307  002938  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9308  00293A  0D83               	mullw	131
  9309  00293C  0E76               	movlw	low (_tx_buffer+12)
  9310  00293E  24F3               	addwf	243,w,c
  9311  002940  6ED9               	movwf	fsr2l,c
  9312  002942  0E08               	movlw	high (_tx_buffer+12)
  9313  002944  20F4               	addwfc	prodh,w,c
  9314  002946  6EDA               	movwf	fsr2h,c
  9315  002948  0E00               	movlw	0
  9316  00294A  6EDF               	movwf	indf2,c
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;../app/app_src/application.c: 281:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9320  00294C  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9321  00294E  0D83               	mullw	131
  9322  002950  0E6A               	movlw	low _tx_buffer
  9323  002952  6F78               	movwf	??_cmdBcast& (0+255),b
  9324  002954  0E08               	movlw	high _tx_buffer
  9325  002956  6F79               	movwf	(??_cmdBcast+1)& (0+255),b
  9326  002958  0E16               	movlw	22
  9327  00295A  2778               	addwf	??_cmdBcast& (0+255),f,b
  9328  00295C  0E00               	movlw	0
  9329  00295E  2379               	addwfc	(??_cmdBcast+1)& (0+255),f,b
  9330  002960  50F3               	movf	243,w,c
  9331  002962  2778               	addwf	??_cmdBcast& (0+255),f,b
  9332  002964  50F4               	movf	244,w,c
  9333  002966  2379               	addwfc	(??_cmdBcast+1)& (0+255),f,b
  9334  002968  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9335  00296A  0D83               	mullw	131
  9336  00296C  0E79               	movlw	low (_tx_buffer+15)
  9337  00296E  24F3               	addwf	243,w,c
  9338  002970  6ED9               	movwf	fsr2l,c
  9339  002972  0E08               	movlw	high (_tx_buffer+15)
  9340  002974  20F4               	addwfc	prodh,w,c
  9341  002976  6EDA               	movwf	fsr2h,c
  9342  002978  0060  F1E3  FFDE   	movff	??_cmdBcast,postinc2
  9343  00297E  0060  F1E7  FFDD   	movff	??_cmdBcast+1,postdec2
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;../app/app_src/application.c: 282:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9347  002984  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9348  002986  0D83               	mullw	131
  9349  002988  0E7B               	movlw	low (_tx_buffer+17)
  9350  00298A  24F3               	addwf	243,w,c
  9351  00298C  6ED9               	movwf	fsr2l,c
  9352  00298E  0E08               	movlw	high (_tx_buffer+17)
  9353  002990  20F4               	addwfc	prodh,w,c
  9354  002992  6EDA               	movwf	fsr2h,c
  9355  002994  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9356  00299A  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9357  0029A0  EC24  F03A         	call	_strlen	;wreg free
  9358  0029A4  5002               	movf	?_strlen^0,w,c
  9359  0029A6  6EDF               	movwf	indf2,c
  9360                           
  9361                           ;../app/app_src/application.c: 283:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9362  0029A8  0100               	movlb	0	; () banked
  9363  0029AA  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9364  0029AC  0D83               	mullw	131
  9365  0029AE  0E7C               	movlw	low (_tx_buffer+18)
  9366  0029B0  24F3               	addwf	243,w,c
  9367  0029B2  6ED9               	movwf	fsr2l,c
  9368  0029B4  0E08               	movlw	high (_tx_buffer+18)
  9369  0029B6  20F4               	addwfc	prodh,w,c
  9370  0029B8  6EDA               	movwf	fsr2h,c
  9371  0029BA  0E40               	movlw	low _appDataConf
  9372  0029BC  6EDE               	movwf	postinc2,c
  9373  0029BE  0E80               	movlw	high _appDataConf
  9374  0029C0  6EDD               	movwf	postdec2,c
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;../app/app_src/application.c: 284:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9378  0029C2  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9379  0029C4  0D83               	mullw	131
  9380  0029C6  0E6C               	movlw	low (_tx_buffer+2)
  9381  0029C8  24F3               	addwf	243,w,c
  9382  0029CA  6ED9               	movwf	fsr2l,c
  9383  0029CC  0E08               	movlw	high (_tx_buffer+2)
  9384  0029CE  20F4               	addwfc	prodh,w,c
  9385  0029D0  6EDA               	movwf	fsr2h,c
  9386  0029D2  0060  F3CB  FFDF   	movff	_msgIDCounter,indf2
  9387                           
  9388                           ; BSR set to: 0
  9389  0029D8  2BF2               	incf	_msgIDCounter& (0+255),f,b
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;../app/app_src/application.c: 285:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9393  0029DA  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9394  0029DC  0D83               	mullw	131
  9395  0029DE  0E6D               	movlw	low (_tx_buffer+3)
  9396  0029E0  24F3               	addwf	243,w,c
  9397  0029E2  6E02               	movwf	NWK_DataReq@req^0,c
  9398  0029E4  0E08               	movlw	high (_tx_buffer+3)
  9399  0029E6  20F4               	addwfc	prodh,w,c
  9400  0029E8  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9401  0029EA  EC52  F035         	call	_NWK_DataReq	;wreg free
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;../app/app_src/application.c: 286:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9405  0029EE  0ED0               	movlw	low (STR_4+4)
  9406  0029F0  6E55               	movwf	printf@fmt^0,c
  9407  0029F2  0EFE               	movlw	high (STR_4+4)
  9408  0029F4  6E56               	movwf	(printf@fmt+1)^0,c
  9409  0029F6  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9410  0029F8  0D83               	mullw	131
  9411  0029FA  0E6C               	movlw	low (_tx_buffer+2)
  9412  0029FC  24F3               	addwf	243,w,c
  9413  0029FE  6ED9               	movwf	fsr2l,c
  9414  002A00  0E08               	movlw	high (_tx_buffer+2)
  9415  002A02  20F4               	addwfc	prodh,w,c
  9416  002A04  6EDA               	movwf	fsr2h,c
  9417  002A06  50DF               	movf	indf2,w,c
  9418  002A08  6F78               	movwf	??_cmdBcast& (0+255),b
  9419  002A0A  5178               	movf	??_cmdBcast& (0+255),w,b
  9420  002A0C  6E57               	movwf	(?_printf+2)^0,c
  9421  002A0E  6A58               	clrf	(?_printf+3)^0,c
  9422  002A10  EC0F  F040         	call	_printf	;wreg free
  9423                           
  9424                           ; BSR set to: 1
  9425  002A14  0012               	return		;funcret
  9426  002A16                     __end_of_cmdBcast:
  9427                           	opt callstack 0
  9428                           
  9429 ;; *************** function _strstr *****************
  9430 ;; Defined at:
  9431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9434 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9435 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9436 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9437 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9438 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9439 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9440 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9441 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9442 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9443 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9444 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9445 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9446 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9447 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  nl              2   16[COMRAM] unsigned int 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  2   12[COMRAM] PTR unsigned char 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;Total ram usage:        6 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    8
  9466 ;; This function calls:
  9467 ;;		_strchr
  9468 ;;		_strlen
  9469 ;;		_strncmp
  9470 ;; This function is called by:
  9471 ;;		_cmdSend
  9472 ;;		_cmdBcast
  9473 ;;		_cmdSetAddr
  9474 ;;		_cmdSetNaddr
  9475 ;;		_cmdSetAES
  9476 ;;		_cmdSetRFCH
  9477 ;;		_cmdSetTX
  9478 ;;		_cmdSetCADRSSI
  9479 ;;		_cmdSetParity
  9480 ;;		_cmdSetSF
  9481 ;;		_executeATCommand
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text48
  9486  0054CA                     __ptext48:
  9487                           	opt callstack 0
  9488  0054CA                     _strstr:
  9489                           	opt callstack 20
  9490                           
  9491                           ; BSR set to: 1
  9492                           ;incstack = 0
  9493  0054CA  500F               	movf	strstr@n^0,w,c
  9494  0054CC  1010               	iorwf	(strstr@n+1)^0,w,c
  9495  0054CE  B4D8               	btfsc	status,2,c
  9496  0054D0  D063               	goto	u14160
  9497  0054D2  0060  F03C  F002   	movff	strstr@n,strlen@s
  9498  0054D8  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9499  0054DE  EC24  F03A         	call	_strlen	;wreg free
  9500  0054E2  0060  F008  F011   	movff	?_strlen,strstr@nl
  9501  0054E8  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9502  0054EE  D038               	goto	l14718
  9503  0054F0                     l14710:
  9504  0054F0  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9505  0054F6  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9506  0054FC  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9507  005502  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9508  005508  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9509  00550E  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9510  005514  ECA1  F023         	call	_strncmp	;wreg free
  9511  005518  5002               	movf	?_strncmp^0,w,c
  9512  00551A  1003               	iorwf	(?_strncmp+1)^0,w,c
  9513  00551C  A4D8               	btfss	status,2,c
  9514  00551E  D007               	goto	l14716
  9515  005520  0060  F034  F00D   	movff	strstr@h,?_strstr
  9516  005526  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9517  00552C  0012               	return	
  9518  00552E                     l14716:
  9519  00552E  0E01               	movlw	1
  9520  005530  240D               	addwf	strstr@h^0,w,c
  9521  005532  6E02               	movwf	strchr@s^0,c
  9522  005534  0E00               	movlw	0
  9523  005536  200E               	addwfc	(strstr@h+1)^0,w,c
  9524  005538  6E03               	movwf	(strchr@s+1)^0,c
  9525  00553A  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9526  005540  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9527  005546                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9528  005546  6AF8               	clrf	tblptru,c
  9529  005548                     	endif
  9530  005548                     	if	0	;tblptru may be non-zero
  9531  005548                     	endif
  9532  005548  0008               	tblrd		*
  9533  00554A  50F5               	movf	tablat,w,c
  9534  00554C  6E04               	movwf	strchr@c^0,c
  9535  00554E  6A05               	clrf	(strchr@c+1)^0,c
  9536  005550  EC4C  F034         	call	_strchr	;wreg free
  9537  005554  0060  F008  F00D   	movff	?_strchr,strstr@h
  9538  00555A  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
  9539  005560                     l14718:
  9540  005560  500D               	movf	strstr@h^0,w,c
  9541  005562  100E               	iorwf	(strstr@h+1)^0,w,c
  9542  005564  B4D8               	btfsc	status,2,c
  9543  005566  D018               	goto	u14160
  9544  005568  0060  F037  FFF6   	movff	strstr@h,tblptrl
  9545  00556E  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
  9546  005574  0E00               	movlw	low (__mediumconst shr (0+16))
  9547  005576  6EF8               	movwf	tblptru,c
  9548  005578  0E0F               	movlw	(high __ramtop+-1)
  9549  00557A  64F7               	cpfsgt	tblptrh,c
  9550  00557C  D003               	bra	u14157
  9551  00557E  0008               	tblrd		*
  9552  005580  50F5               	movf	tablat,w,c
  9553  005582  D007               	bra	u14150
  9554  005584                     u14157:
  9555  005584  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9556  00558A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9557  005590  50EF               	movf	indf0,w,c
  9558  005592                     u14150:
  9559  005592  0900               	iorlw	0
  9560  005594  A4D8               	btfss	status,2,c
  9561  005596  D7AC               	goto	l14710
  9562  005598                     u14160:
  9563  005598  0E00               	movlw	0
  9564  00559A  6E0D               	movwf	?_strstr^0,c
  9565  00559C  0E00               	movlw	0
  9566  00559E  6E0E               	movwf	(?_strstr+1)^0,c
  9567  0055A0  0012               	return		;funcret
  9568  0055A2                     __end_of_strstr:
  9569                           	opt callstack 0
  9570                           
  9571 ;; *************** function _strncmp *****************
  9572 ;; Defined at:
  9573 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  9576 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9577 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  9578 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9579 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9580 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9581 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9582 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9583 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9584 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9585 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9586 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9587 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9588 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9589 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9590 ;;  n               2    5[COMRAM] unsigned int 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  r               2   10[COMRAM] PTR const unsigned char 
  9593 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9594 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9595 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9596 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9597 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9598 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9599 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9600 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9601 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9602 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9603 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9604 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9605 ;;  l               2    8[COMRAM] PTR const unsigned char 
  9606 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  2    1[COMRAM] int 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9616 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;Total ram usage:       11 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    7
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_strstr
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text49
  9631  004742                     __ptext49:
  9632                           	opt callstack 0
  9633  004742                     _strncmp:
  9634                           	opt callstack 20
  9635                           
  9636                           ;incstack = 0
  9637  004742  0060  F008  F009   	movff	strncmp@_l,strncmp@l
  9638  004748  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
  9639  00474E  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
  9640  004754  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
  9641  00475A  0606               	decf	strncmp@n^0,f,c
  9642  00475C  A0D8               	btfss	status,0,c
  9643  00475E  0607               	decf	(strncmp@n+1)^0,f,c
  9644  004760  2806               	incf	strncmp@n^0,w,c
  9645  004762  E10F               	bnz	l10424
  9646  004764  2807               	incf	(strncmp@n+1)^0,w,c
  9647  004766  A4D8               	btfss	status,2,c
  9648  004768  D00C               	goto	l10424
  9649  00476A  0E00               	movlw	0
  9650  00476C  6E03               	movwf	(?_strncmp+1)^0,c
  9651  00476E  0E00               	movlw	0
  9652  004770  6E02               	movwf	?_strncmp^0,c
  9653  004772  0012               	return	
  9654  004774                     l10422:
  9655  004774  4A09               	infsnz	strncmp@l^0,f,c
  9656  004776  2A0A               	incf	(strncmp@l+1)^0,f,c
  9657  004778  4A0B               	infsnz	strncmp@r^0,f,c
  9658  00477A  2A0C               	incf	(strncmp@r+1)^0,f,c
  9659  00477C  0606               	decf	strncmp@n^0,f,c
  9660  00477E  A0D8               	btfss	status,0,c
  9661  004780  0607               	decf	(strncmp@n+1)^0,f,c
  9662  004782                     l10424:
  9663  004782  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9664  004788  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9665  00478E  0E00               	movlw	low (__mediumconst shr (0+16))
  9666  004790  6EF8               	movwf	tblptru,c
  9667  004792  0E0F               	movlw	(high __ramtop+-1)
  9668  004794  64F7               	cpfsgt	tblptrh,c
  9669  004796  D003               	bra	u8407
  9670  004798  0008               	tblrd		*
  9671  00479A  50F5               	movf	tablat,w,c
  9672  00479C  D007               	bra	u8400
  9673  00479E                     u8407:
  9674  00479E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9675  0047A4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9676  0047AA  50EF               	movf	indf0,w,c
  9677  0047AC                     u8400:
  9678  0047AC  0900               	iorlw	0
  9679  0047AE  B4D8               	btfsc	status,2,c
  9680  0047B0  D033               	goto	u8440
  9681  0047B2  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9682  0047B8  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9683  0047BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9684  0047BE  6AF8               	clrf	tblptru,c
  9685  0047C0                     	endif
  9686  0047C0                     	if	0	;tblptru may be non-zero
  9687  0047C0                     	endif
  9688  0047C0  0008               	tblrd		*
  9689  0047C2  50F5               	movf	tablat,w,c
  9690  0047C4  0900               	iorlw	0
  9691  0047C6  B4D8               	btfsc	status,2,c
  9692  0047C8  D027               	goto	u8440
  9693  0047CA  5006               	movf	strncmp@n^0,w,c
  9694  0047CC  1007               	iorwf	(strncmp@n+1)^0,w,c
  9695  0047CE  B4D8               	btfsc	status,2,c
  9696  0047D0  D023               	goto	u8440
  9697  0047D2  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9698  0047D8  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9699  0047DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9700  0047DE  6AF8               	clrf	tblptru,c
  9701  0047E0                     	endif
  9702  0047E0                     	if	0	;tblptru may be non-zero
  9703  0047E0                     	endif
  9704  0047E0  0008               	tblrd		*
  9705  0047E2  006F FFD4  F008    	movff	tablat,??_strncmp
  9706  0047E8  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9707  0047EE  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9708  0047F4  0E00               	movlw	low (__mediumconst shr (0+16))
  9709  0047F6  6EF8               	movwf	tblptru,c
  9710  0047F8  0E0F               	movlw	(high __ramtop+-1)
  9711  0047FA  64F7               	cpfsgt	tblptrh,c
  9712  0047FC  D003               	bra	u8447
  9713  0047FE  0008               	tblrd		*
  9714  004800  50F5               	movf	tablat,w,c
  9715  004802  D007               	bra	u8445
  9716  004804                     u8447:
  9717  004804  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9718  00480A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9719  004810  50EF               	movf	indf0,w,c
  9720  004812                     u8445:
  9721  004812  1808               	xorwf	??_strncmp^0,w,c
  9722  004814  B4D8               	btfsc	status,2,c
  9723  004816  D7AE               	goto	l10422
  9724  004818                     u8440:
  9725  004818  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9726  00481E  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9727  004824  0E00               	movlw	low (__mediumconst shr (0+16))
  9728  004826  6EF8               	movwf	tblptru,c
  9729  004828  0E0F               	movlw	(high __ramtop+-1)
  9730  00482A  64F7               	cpfsgt	tblptrh,c
  9731  00482C  D003               	bra	u8457
  9732  00482E  0008               	tblrd		*
  9733  004830  50F5               	movf	tablat,w,c
  9734  004832  D007               	bra	u8450
  9735  004834                     u8457:
  9736  004834  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9737  00483A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9738  004840  50EF               	movf	indf0,w,c
  9739  004842                     u8450:
  9740  004842  6E08               	movwf	??_strncmp^0,c
  9741  004844  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9742  00484A  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9743  004850                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9744  004850  6AF8               	clrf	tblptru,c
  9745  004852                     	endif
  9746  004852                     	if	0	;tblptru may be non-zero
  9747  004852                     	endif
  9748  004852  0008               	tblrd		*
  9749  004854  50F5               	movf	tablat,w,c
  9750  004856  5C08               	subwf	??_strncmp^0,w,c
  9751  004858  6E02               	movwf	?_strncmp^0,c
  9752  00485A  6A03               	clrf	(?_strncmp+1)^0,c
  9753  00485C  A0D8               	btfss	status,0,c
  9754  00485E  0603               	decf	(?_strncmp+1)^0,f,c
  9755  004860  0012               	return		;funcret
  9756  004862                     __end_of_strncmp:
  9757                           	opt callstack 0
  9758                           
  9759 ;; *************** function _strchr *****************
  9760 ;; Defined at:
  9761 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  s               2    1[COMRAM] PTR const unsigned char 
  9764 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9765 ;;  c               2    3[COMRAM] int 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2    1[COMRAM] PTR unsigned char 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;Total ram usage:        6 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    7
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_strstr
  9788 ;;		_strcspn
  9789 ;;		_strspn
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text50
  9794  006898                     __ptext50:
  9795                           	opt callstack 0
  9796  006898                     _strchr:
  9797                           	opt callstack 20
  9798                           
  9799                           ;incstack = 0
  9800  006898  0060  F00B  FFF6   	movff	strchr@s,tblptrl
  9801  00689E  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
  9802  0068A4  0E00               	movlw	low (__mediumconst shr (0+16))
  9803  0068A6  6EF8               	movwf	tblptru,c
  9804  0068A8  0E0F               	movlw	(high __ramtop+-1)
  9805  0068AA  64F7               	cpfsgt	tblptrh,c
  9806  0068AC  D003               	bra	u7737
  9807  0068AE  0008               	tblrd		*
  9808  0068B0  50F5               	movf	tablat,w,c
  9809  0068B2  D007               	bra	u7730
  9810  0068B4                     u7737:
  9811  0068B4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9812  0068BA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9813  0068C0  50EF               	movf	indf0,w,c
  9814  0068C2                     u7730:
  9815  0068C2  1804               	xorwf	strchr@c^0,w,c
  9816  0068C4  A4D8               	btfss	status,2,c
  9817  0068C6  D007               	goto	l9894
  9818  0068C8  0060  F008  F002   	movff	strchr@s,?_strchr
  9819  0068CE  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
  9820  0068D4  0012               	return	
  9821  0068D6                     l9894:
  9822  0068D6  5002               	movf	strchr@s^0,w,c
  9823  0068D8  6E06               	movwf	??_strchr^0,c
  9824  0068DA  5003               	movf	(strchr@s+1)^0,w,c
  9825  0068DC  6E07               	movwf	(??_strchr+1)^0,c
  9826  0068DE  4A02               	infsnz	strchr@s^0,f,c
  9827  0068E0  2A03               	incf	(strchr@s+1)^0,f,c
  9828  0068E2  0060  F01B  FFF6   	movff	??_strchr,tblptrl
  9829  0068E8  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
  9830  0068EE  0E00               	movlw	low (__mediumconst shr (0+16))
  9831  0068F0  6EF8               	movwf	tblptru,c
  9832  0068F2  0E0F               	movlw	(high __ramtop+-1)
  9833  0068F4  64F7               	cpfsgt	tblptrh,c
  9834  0068F6  D003               	bra	u7757
  9835  0068F8  0008               	tblrd		*
  9836  0068FA  50F5               	movf	tablat,w,c
  9837  0068FC  D007               	bra	u7750
  9838  0068FE                     u7757:
  9839  0068FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9840  006904  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9841  00690A  50EF               	movf	indf0,w,c
  9842  00690C                     u7750:
  9843  00690C  0900               	iorlw	0
  9844  00690E  A4D8               	btfss	status,2,c
  9845  006910  D7C3               	goto	_strchr
  9846  006912  0E00               	movlw	0
  9847  006914  6E02               	movwf	?_strchr^0,c
  9848  006916  0E00               	movlw	0
  9849  006918  6E03               	movwf	(?_strchr+1)^0,c
  9850  00691A  0012               	return		;funcret
  9851  00691C                     __end_of_strchr:
  9852                           	opt callstack 0
  9853                           
  9854 ;; *************** function _get_free_tx_buffer *****************
  9855 ;; Defined at:
  9856 ;;		line 58 in file "../app/app_src/application.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
  9859 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      _Bool 
  9864 ;; Registers used:
  9865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;Total ram usage:        2 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:    7
  9878 ;; This function calls:
  9879 ;;		Nothing
  9880 ;; This function is called by:
  9881 ;;		_cmdSend
  9882 ;;		_cmdBcast
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886                           	psect	text51
  9887  006E98                     __ptext51:
  9888                           	opt callstack 0
  9889  006E98                     _get_free_tx_buffer:
  9890                           	opt callstack 20
  9891                           
  9892                           ;../app/app_src/application.c: 59:     *buf_id = 0;
  9893                           
  9894                           ;incstack = 0
  9895  006E98  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9896  006E9A  6ED9               	movwf	fsr2l,c
  9897  006E9C  6ADA               	clrf	fsr2h,c
  9898  006E9E  0E00               	movlw	0
  9899  006EA0  6EDF               	movwf	indf2,c
  9900                           
  9901                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
  9902  006EA2  D023               	goto	l206
  9903  006EA4                     l10578:
  9904                           
  9905                           ;../app/app_src/application.c: 61:         if(tx_buffer[*buf_id].free){
  9906  006EA4  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9907  006EA6  6ED9               	movwf	fsr2l,c
  9908  006EA8  6ADA               	clrf	fsr2h,c
  9909  006EAA  50DF               	movf	indf2,w,c
  9910  006EAC  6E03               	movwf	??_get_free_tx_buffer^0,c
  9911  006EAE  5003               	movf	??_get_free_tx_buffer^0,w,c
  9912  006EB0  0D83               	mullw	131
  9913  006EB2  0E6A               	movlw	low _tx_buffer
  9914  006EB4  24F3               	addwf	243,w,c
  9915  006EB6  6ED9               	movwf	fsr2l,c
  9916  006EB8  0E08               	movlw	high _tx_buffer
  9917  006EBA  20F4               	addwfc	prodh,w,c
  9918  006EBC  6EDA               	movwf	fsr2h,c
  9919  006EBE  A4DF               	btfss	indf2,2,c
  9920  006EC0  D010               	goto	l10586
  9921                           
  9922                           ;../app/app_src/application.c: 62:             tx_buffer[*buf_id].free = 0;
  9923  006EC2  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9924  006EC4  6ED9               	movwf	fsr2l,c
  9925  006EC6  6ADA               	clrf	fsr2h,c
  9926  006EC8  50DF               	movf	indf2,w,c
  9927  006ECA  6E03               	movwf	??_get_free_tx_buffer^0,c
  9928  006ECC  5003               	movf	??_get_free_tx_buffer^0,w,c
  9929  006ECE  0D83               	mullw	131
  9930  006ED0  0E6A               	movlw	low _tx_buffer
  9931  006ED2  24F3               	addwf	243,w,c
  9932  006ED4  6ED9               	movwf	fsr2l,c
  9933  006ED6  0E08               	movlw	high _tx_buffer
  9934  006ED8  20F4               	addwfc	prodh,w,c
  9935  006EDA  6EDA               	movwf	fsr2h,c
  9936  006EDC  94DF               	bcf	indf2,2,c
  9937                           
  9938                           ;../app/app_src/application.c: 63:             return 1;
  9939  006EDE  0E01               	movlw	1
  9940  006EE0  0012               	return	
  9941  006EE2                     l10586:
  9942                           
  9943                           ;../app/app_src/application.c: 65:         (*buf_id)++;
  9944  006EE2  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9945  006EE4  6ED9               	movwf	fsr2l,c
  9946  006EE6  6ADA               	clrf	fsr2h,c
  9947  006EE8  2ADF               	incf	indf2,f,c
  9948  006EEA                     l206:
  9949                           
  9950                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
  9951  006EEA  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9952  006EEC  6ED9               	movwf	fsr2l,c
  9953  006EEE  6ADA               	clrf	fsr2h,c
  9954  006EF0  0E03               	movlw	3
  9955  006EF2  64DF               	cpfsgt	indf2,c
  9956  006EF4  D7D7               	goto	l10578
  9957                           
  9958                           ;../app/app_src/application.c: 67:     return 0;
  9959  006EF6  0E00               	movlw	0
  9960  006EF8  0012               	return		;funcret
  9961  006EFA                     __end_of_get_free_tx_buffer:
  9962                           	opt callstack 0
  9963                           
  9964 ;; *************** function _NWK_DataReq *****************
  9965 ;; Defined at:
  9966 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
  9969 ;;		 -> tx_buffer(524), 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;		None
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 3F/0
  9978 ;;		On exit  : 3F/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;Total ram usage:        2 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; Hardware stack levels required when called:    7
  9988 ;; This function calls:
  9989 ;;		Nothing
  9990 ;; This function is called by:
  9991 ;;		_cmdSend
  9992 ;;		_cmdBcast
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text52
  9997  006AA4                     __ptext52:
  9998                           	opt callstack 0
  9999  006AA4                     _NWK_DataReq:
 10000                           	opt callstack 20
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10004                           
 10005                           ;incstack = 0
 10006  006AA4  EE20 F004          	lfsr	2,4
 10007  006AA8  5002               	movf	NWK_DataReq@req^0,w,c
 10008  006AAA  26D9               	addwf	fsr2l,f,c
 10009  006AAC  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10010  006AAE  22DA               	addwfc	fsr2h,f,c
 10011  006AB0  0E00               	movlw	0
 10012  006AB2  6EDF               	movwf	indf2,c
 10013                           
 10014                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10015  006AB4  EE20 F011          	lfsr	2,17
 10016  006AB8  5002               	movf	NWK_DataReq@req^0,w,c
 10017  006ABA  26D9               	addwf	fsr2l,f,c
 10018  006ABC  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10019  006ABE  22DA               	addwfc	fsr2h,f,c
 10020  006AC0  0E00               	movlw	0
 10021  006AC2  6EDF               	movwf	indf2,c
 10022                           
 10023                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10024  006AC4  EE20 F002          	lfsr	2,2
 10025  006AC8  5002               	movf	NWK_DataReq@req^0,w,c
 10026  006ACA  26D9               	addwf	fsr2l,f,c
 10027  006ACC  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10028  006ACE  22DA               	addwfc	fsr2h,f,c
 10029  006AD0  0E00               	movlw	0
 10030  006AD2  6EDE               	movwf	postinc2,c
 10031  006AD4  0E00               	movlw	0
 10032  006AD6  6EDD               	movwf	postdec2,c
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10036  006AD8  0101               	movlb	1	; () banked
 10037  006ADA  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10038  006ADC  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10039                           
 10040                           ; BSR set to: 1
 10041                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10042  006ADE  0100               	movlb	0	; () banked
 10043  006AE0  51E2               	movf	_nwkDataReqQueue& (0+255),w,b
 10044  006AE2  11E3               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10045  006AE4  A4D8               	btfss	status,2,c
 10046  006AE6  D011               	goto	l10656
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10050  006AE8  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10051  006AEE  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10052  006AF4  0E00               	movlw	0
 10053  006AF6  6EDE               	movwf	postinc2,c
 10054  006AF8  0E00               	movlw	0
 10055  006AFA  6EDD               	movwf	postdec2,c
 10056  006AFC                     l10654:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10060  006AFC  0060  F008  F0E2   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10061  006B02  0060  F00C  F0E3   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10062                           
 10063                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10064  006B08  0012               	return	
 10065  006B0A                     l10656:
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10069  006B0A  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10070  006B10  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10071  006B16  0060  F38B  FFDE   	movff	_nwkDataReqQueue,postinc2
 10072  006B1C  0060  F38F  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10073  006B22  D7EC               	goto	l10654
 10074  006B24                     __end_of_NWK_DataReq:
 10075                           	opt callstack 0
 10076                           
 10077 ;; *************** function _cmdAddr *****************
 10078 ;; Defined at:
 10079 ;;		line 297 in file "../app/app_src/application.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;		None
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 3F/1
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;Total ram usage:        0 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:   16
 10100 ;; This function calls:
 10101 ;;		_printf
 10102 ;; This function is called by:
 10103 ;;		_executeATCommand
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text53
 10108  00818C                     __ptext53:
 10109                           	opt callstack 0
 10110  00818C                     _cmdAddr:
 10111                           	opt callstack 12
 10112                           
 10113                           ;../app/app_src/application.c: 298:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;incstack = 0
 10117  00818C  0E46               	movlw	low STR_11
 10118  00818E  6E55               	movwf	printf@fmt^0,c
 10119  008190  0EFE               	movlw	high STR_11
 10120  008192  6E56               	movwf	(printf@fmt+1)^0,c
 10121  008194  0060  F3F0  F057   	movff	_currentAddr0,?_printf+2
 10122  00819A  6A58               	clrf	(?_printf+3)^0,c
 10123  00819C  0060  F3EC  F059   	movff	_currentAddr1,?_printf+4
 10124  0081A2  6A5A               	clrf	(?_printf+5)^0,c
 10125  0081A4  EC0F  F040         	call	_printf	;wreg free
 10126                           
 10127                           ; BSR set to: 1
 10128  0081A8  0012               	return		;funcret
 10129  0081AA                     __end_of_cmdAddr:
 10130                           	opt callstack 0
 10131                           
 10132 ;; *************** function _UART1_is_rx_ready *****************
 10133 ;; Defined at:
 10134 ;;		line 169 in file "mcc_generated_files/uart1.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;		None
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;		None
 10139 ;; Return value:  Size  Location     Type
 10140 ;;                  1    wreg      _Bool 
 10141 ;; Registers used:
 10142 ;;		wreg, status,2
 10143 ;; Tracked objects:
 10144 ;;		On entry : 3F/0
 10145 ;;		On exit  : 3F/0
 10146 ;;		Unchanged: 0/0
 10147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10152 ;;Total ram usage:        0 bytes
 10153 ;; Hardware stack levels used:    1
 10154 ;; Hardware stack levels required when called:    7
 10155 ;; This function calls:
 10156 ;;		Nothing
 10157 ;; This function is called by:
 10158 ;;		_processATCommand
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           	psect	text54
 10163  008420                     __ptext54:
 10164                           	opt callstack 0
 10165  008420                     _UART1_is_rx_ready:
 10166                           	opt callstack 22
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 10170                           
 10171                           ; BSR set to: 1
 10172                           ;incstack = 0
 10173  008420  51E6               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10174  008422  B4D8               	btfsc	status,2,c
 10175  008424  D002               	goto	u10390
 10176  008426  0E01               	movlw	1
 10177  008428  0012               	return	
 10178  00842A                     u10390:
 10179  00842A  0E00               	movlw	0
 10180                           
 10181                           ; BSR set to: 0
 10182  00842C  0012               	return		;funcret
 10183  00842E                     __end_of_UART1_is_rx_ready:
 10184                           	opt callstack 0
 10185                           
 10186 ;; *************** function _UART1_Read *****************
 10187 ;; Defined at:
 10188 ;;		line 188 in file "mcc_generated_files/uart1.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;		None
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;  readValue       1    1[COMRAM] unsigned char 
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  1    wreg      unsigned char 
 10195 ;; Registers used:
 10196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10197 ;; Tracked objects:
 10198 ;;		On entry : 3F/0
 10199 ;;		On exit  : 3F/39
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;Total ram usage:        1 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:    7
 10209 ;; This function calls:
 10210 ;;		Nothing
 10211 ;; This function is called by:
 10212 ;;		_processATCommand
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           	psect	text55
 10217  00765C                     __ptext55:
 10218                           	opt callstack 0
 10219  00765C                     _UART1_Read:
 10220                           	opt callstack 22
 10221                           
 10222                           ; BSR set to: 0
 10223                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;incstack = 0
 10230  00765C  51E6               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10231  00765E  B4D8               	btfsc	status,2,c
 10232  007660  D7FD               	goto	_UART1_Read
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10236  007662  0E28               	movlw	low _uart1RxStatusBuffer
 10237  007664  25E7               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10238  007666  6ED9               	movwf	fsr2l,c
 10239  007668  6ADA               	clrf	fsr2h,c
 10240  00766A  0E01               	movlw	high _uart1RxStatusBuffer
 10241  00766C  22DA               	addwfc	fsr2h,f,c
 10242  00766E  50DF               	movf	indf2,w,c
 10243  007670  0101               	movlb	1	; () banked
 10244  007672  6F62               	movwf	_uart1RxLastError& (0+255),b	;volatile
 10245                           
 10246                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 10247  007674  0E38               	movlw	low _uart1RxBuffer
 10248  007676  0100               	movlb	0	; () banked
 10249  007678  25E7               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10250  00767A  6ED9               	movwf	fsr2l,c
 10251  00767C  6ADA               	clrf	fsr2h,c
 10252  00767E  0E01               	movlw	high _uart1RxBuffer
 10253  007680  22DA               	addwfc	fsr2h,f,c
 10254  007682  50DF               	movf	indf2,w,c
 10255  007684  6E02               	movwf	UART1_Read@readValue^0,c
 10256                           
 10257                           ; BSR set to: 0
 10258  007686  2BE7               	incf	_uart1RxTail& (0+255),f,b	;volatile
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10262  007688  0E0F               	movlw	15
 10263  00768A  65E7               	cpfsgt	_uart1RxTail& (0+255),b
 10264  00768C  D002               	goto	l11862
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 10268  00768E  0E00               	movlw	0
 10269  007690  6FE7               	movwf	_uart1RxTail& (0+255),b	;volatile
 10270  007692                     l11862:
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 10274  007692  0139               	movlb	57	; () banked
 10275  007694  9793               	bcf	147,3,b	;volatile
 10276                           
 10277                           ; BSR set to: 57
 10278                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 10279  007696  0100               	movlb	0	; () banked
 10280  007698  07E6               	decf	_uart1RxCount& (0+255),f,b	;volatile
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 10284  00769A  0139               	movlb	57	; () banked
 10285  00769C  8793               	bsf	147,3,b	;volatile
 10286                           
 10287                           ; BSR set to: 57
 10288                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 10289  00769E  5002               	movf	UART1_Read@readValue^0,w,c
 10290                           
 10291                           ; BSR set to: 57
 10292  0076A0  0012               	return		;funcret
 10293  0076A2                     __end_of_UART1_Read:
 10294                           	opt callstack 0
 10295                           
 10296 ;; *************** function _bootLoadApplication *****************
 10297 ;; Defined at:
 10298 ;;		line 1277 in file "../app/app_src/application.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;		None
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  buf_id          1   49[COMRAM] unsigned char 
 10303 ;;  temp            2   50[COMRAM] unsigned short 
 10304 ;;  i               1   52[COMRAM] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      void 
 10307 ;; Registers used:
 10308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10309 ;; Tracked objects:
 10310 ;;		On entry : 3F/2
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;Total ram usage:        6 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:   14
 10321 ;; This function calls:
 10322 ;;		_DATAEE_ReadByte_Platform
 10323 ;;		_DATAEE_WriteByte_Platform
 10324 ;;		_NWK_OpenEndpoint
 10325 ;;		_NWK_SetAddr
 10326 ;;		_NWK_SetPanId
 10327 ;;		_PHY_SetChannel
 10328 ;;		_PHY_SetRxState
 10329 ;;		_crc16_app
 10330 ;;		_loadMACAddr
 10331 ;;		_set_parity
 10332 ;;		_set_uart_baud
 10333 ;; This function is called by:
 10334 ;;		_main
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text56
 10339  001EF4                     __ptext56:
 10340                           	opt callstack 0
 10341  001EF4                     _bootLoadApplication:
 10342                           	opt callstack 16
 10343                           
 10344                           ; BSR set to: 2
 10345                           ;../app/app_src/application.c: 1279:     uint16_t temp;;../app/app_src/application.c: 12
      +                          80:     uint8_t i;;../app/app_src/application.c: 1285:     loadMACAddr();
 10346                           
 10347                           ; BSR set to: 57
 10348                           ;incstack = 0
 10349  001EF4  EC14  F03D         	call	_loadMACAddr	;wreg free
 10350                           
 10351                           ;../app/app_src/application.c: 1287:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 10352  001EF8  0EBC               	movlw	low _EUIDbyte
 10353  001EFA  6E13               	movwf	crc16_app@dptr^0,c
 10354  001EFC  0E01               	movlw	high _EUIDbyte
 10355  001EFE  6E14               	movwf	(crc16_app@dptr+1)^0,c
 10356  001F00  0E00               	movlw	0
 10357  001F02  6E16               	movwf	(crc16_app@len+1)^0,c
 10358  001F04  0E0C               	movlw	12
 10359  001F06  6E15               	movwf	crc16_app@len^0,c
 10360  001F08  0E00               	movlw	0
 10361  001F0A  6E18               	movwf	(crc16_app@seed+1)^0,c
 10362  001F0C  0E00               	movlw	0
 10363  001F0E  6E17               	movwf	crc16_app@seed^0,c
 10364  001F10  EC8E  F034         	call	_crc16_app	;wreg free
 10365  001F14  0060  F04C  F033   	movff	?_crc16_app,bootLoadApplication@temp
 10366  001F1A  0060  F050  F034   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 10367                           
 10368                           ; BSR set to: 57
 10369                           ;../app/app_src/application.c: 1288:     currentAddr0 = (temp >> 8) & 0xFF;
 10370  001F20  0060  F0D0  F0FC   	movff	bootLoadApplication@temp+1,_currentAddr0
 10371                           
 10372                           ; BSR set to: 57
 10373                           ;../app/app_src/application.c: 1289:     currentAddr1 = (temp) & 0xFF;
 10374  001F26  0060  F0CC  F0FB   	movff	bootLoadApplication@temp,_currentAddr1
 10375                           
 10376                           ; BSR set to: 57
 10377                           ;../app/app_src/application.c: 1292:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 10378  001F2C  0E00               	movlw	0
 10379  001F2E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10380  001F30  0E19               	movlw	25
 10381  001F32  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10382  001F34  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10383  001F38  0100               	movlb	0	; () banked
 10384  001F3A  6FFA               	movwf	_currentNetID& (0+255),b
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;../app/app_src/application.c: 1295:     for(i = 0; i < 16; i++){
 10388  001F3C  0E00               	movlw	0
 10389  001F3E  6E35               	movwf	bootLoadApplication@i^0,c
 10390  001F40                     l16038:
 10391                           
 10392                           ;../app/app_src/application.c: 1296:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10393  001F40  0E24               	movlw	low _aes_key
 10394  001F42  2435               	addwf	bootLoadApplication@i^0,w,c
 10395  001F44  6ED9               	movwf	fsr2l,c
 10396  001F46  6ADA               	clrf	fsr2h,c
 10397  001F48  0E02               	movlw	high _aes_key
 10398  001F4A  22DA               	addwfc	fsr2h,f,c
 10399  001F4C  0E09               	movlw	9
 10400  001F4E  2435               	addwf	bootLoadApplication@i^0,w,c
 10401  001F50  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10402  001F52  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10403  001F54  0E00               	movlw	0
 10404  001F56  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10405  001F58  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10406  001F5C  6EDF               	movwf	indf2,c
 10407                           
 10408                           ;../app/app_src/application.c: 1297:     }
 10409  001F5E  2A35               	incf	bootLoadApplication@i^0,f,c
 10410  001F60  0E0F               	movlw	15
 10411  001F62  6435               	cpfsgt	bootLoadApplication@i^0,c
 10412  001F64  D7ED               	goto	l16038
 10413                           
 10414                           ;../app/app_src/application.c: 1298:     for(i = 0; i < 16; i++){
 10415  001F66  0E00               	movlw	0
 10416  001F68  6E35               	movwf	bootLoadApplication@i^0,c
 10417  001F6A                     l16050:
 10418                           
 10419                           ;../app/app_src/application.c: 1299:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10420  001F6A  0E14               	movlw	low _net_key
 10421  001F6C  2435               	addwf	bootLoadApplication@i^0,w,c
 10422  001F6E  6ED9               	movwf	fsr2l,c
 10423  001F70  6ADA               	clrf	fsr2h,c
 10424  001F72  0E02               	movlw	high _net_key
 10425  001F74  22DA               	addwfc	fsr2h,f,c
 10426  001F76  0E23               	movlw	35
 10427  001F78  2435               	addwf	bootLoadApplication@i^0,w,c
 10428  001F7A  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10429  001F7C  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10430  001F7E  0E00               	movlw	0
 10431  001F80  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10432  001F82  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10433  001F86  6EDF               	movwf	indf2,c
 10434                           
 10435                           ;../app/app_src/application.c: 1300:     }
 10436  001F88  2A35               	incf	bootLoadApplication@i^0,f,c
 10437  001F8A  0E0F               	movlw	15
 10438  001F8C  6435               	cpfsgt	bootLoadApplication@i^0,c
 10439  001F8E  D7ED               	goto	l16050
 10440                           
 10441                           ;../app/app_src/application.c: 1307:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 10442  001F90  0E00               	movlw	0
 10443  001F92  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10444  001F94  0E1A               	movlw	26
 10445  001F96  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10446  001F98  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10447  001F9C  0101               	movlb	1	; () banked
 10448  001F9E  6F6F               	movwf	_sinkAddr0& (0+255),b
 10449                           
 10450                           ;../app/app_src/application.c: 1308:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 10451  001FA0  0E00               	movlw	0
 10452  001FA2  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10453  001FA4  0E1B               	movlw	27
 10454  001FA6  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10455  001FA8  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10456  001FAC  0101               	movlb	1	; () banked
 10457  001FAE  6F6E               	movwf	_sinkAddr1& (0+255),b
 10458                           
 10459                           ;../app/app_src/application.c: 1311:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 10460  001FB0  0E00               	movlw	0
 10461  001FB2  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10462  001FB4  0E1C               	movlw	28
 10463  001FB6  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10464  001FB8  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10465  001FBC  0100               	movlb	0	; () banked
 10466  001FBE  6FEB               	movwf	_channel& (0+255),b
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;../app/app_src/application.c: 1312:     if(channel > sizeof(fhssList)){
 10470  001FC0  0EFC               	movlw	252
 10471  001FC2  65EB               	cpfsgt	_channel& (0+255),b
 10472  001FC4  D00B               	goto	l16064
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;../app/app_src/application.c: 1313:         channel = 0;
 10476  001FC6  0E00               	movlw	0
 10477  001FC8  6FEB               	movwf	_channel& (0+255),b
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;../app/app_src/application.c: 1314:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 10481  001FCA  0E00               	movlw	0
 10482  001FCC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10483  001FCE  0E1C               	movlw	28
 10484  001FD0  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10485  001FD2  0060  F3AC  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 10486  001FD8  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
 10487  001FDC                     l16064:
 10488                           
 10489                           ;../app/app_src/application.c: 1318:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 10490  001FDC  0E00               	movlw	0
 10491  001FDE  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10492  001FE0  0E1D               	movlw	29
 10493  001FE2  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10494  001FE4  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10495  001FE8  0100               	movlb	0	; () banked
 10496  001FEA  6FEA               	movwf	_TXPower& (0+255),b
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;../app/app_src/application.c: 1319:     if((TXPower < 2) || (TXPower > 5)){
 10500  001FEC  0E01               	movlw	1
 10501  001FEE  65EA               	cpfsgt	_TXPower& (0+255),b
 10502  001FF0  D003               	goto	u15960
 10503                           
 10504                           ; BSR set to: 0
 10505  001FF2  0E05               	movlw	5
 10506  001FF4  65EA               	cpfsgt	_TXPower& (0+255),b
 10507  001FF6  D00B               	goto	l16074
 10508  001FF8                     u15960:
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;../app/app_src/application.c: 1320:         TXPower = 5;
 10512  001FF8  0E05               	movlw	5
 10513  001FFA  6FEA               	movwf	_TXPower& (0+255),b
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;../app/app_src/application.c: 1321:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 10517  001FFC  0E00               	movlw	0
 10518  001FFE  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10519  002000  0E1D               	movlw	29
 10520  002002  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10521  002004  0060  F3A8  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 10522  00200A  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
 10523  00200E                     l16074:
 10524                           
 10525                           ;../app/app_src/application.c: 1325:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10526  00200E  0E00               	movlw	0
 10527  002010  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10528  002012  0E21               	movlw	33
 10529  002014  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10530  002016  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10531  00201A  0100               	movlb	0	; () banked
 10532  00201C  6FEC               	movwf	_current_sf& (0+255),b
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;../app/app_src/application.c: 1326:     if((current_sf < 7) || (current_sf > 12)){
 10536  00201E  0E06               	movlw	6
 10537  002020  65EC               	cpfsgt	_current_sf& (0+255),b
 10538  002022  D003               	goto	u15980
 10539                           
 10540                           ; BSR set to: 0
 10541  002024  0E0C               	movlw	12
 10542  002026  65EC               	cpfsgt	_current_sf& (0+255),b
 10543  002028  D00B               	goto	l16084
 10544  00202A                     u15980:
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;../app/app_src/application.c: 1327:         current_sf = 7;
 10548  00202A  0E07               	movlw	7
 10549  00202C  6FEC               	movwf	_current_sf& (0+255),b
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;../app/app_src/application.c: 1328:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 10553  00202E  0E00               	movlw	0
 10554  002030  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10555  002032  0E21               	movlw	33
 10556  002034  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10557  002036  0060  F3B0  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 10558  00203C  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
 10559  002040                     l16084:
 10560                           
 10561                           ;../app/app_src/application.c: 1332:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10562  002040  0E00               	movlw	0
 10563  002042  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10564  002044  0E1E               	movlw	30
 10565  002046  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10566  002048  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10567  00204C  0100               	movlb	0	; () banked
 10568  00204E  6FF9               	movwf	_RSSITarget& (0+255),b
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;../app/app_src/application.c: 1333:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 10572  002050  51F9               	movf	_RSSITarget& (0+255),w,b
 10573  002052  0A80               	xorlw	128
 10574  002054  0F9E               	addlw	158
 10575  002056  B0D8               	btfsc	status,0,c
 10576  002058  D005               	goto	u16000
 10577                           
 10578                           ; BSR set to: 0
 10579  00205A  51F9               	movf	_RSSITarget& (0+255),w,b
 10580  00205C  0A80               	xorlw	128
 10581  00205E  0FF8               	addlw	248
 10582  002060  B0D8               	btfsc	status,0,c
 10583  002062  D00B               	goto	l16094
 10584  002064                     u16000:
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;../app/app_src/application.c: 1334:         RSSITarget = -80;
 10588  002064  0EB0               	movlw	176
 10589  002066  6FF9               	movwf	_RSSITarget& (0+255),b
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;../app/app_src/application.c: 1335:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 10593  002068  0E00               	movlw	0
 10594  00206A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10595  00206C  0E1E               	movlw	30
 10596  00206E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10597  002070  0060  F3E4  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 10598  002076  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
 10599  00207A                     l16094:
 10600                           
 10601                           ;../app/app_src/application.c: 1339:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 10602  00207A  0E00               	movlw	0
 10603  00207C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10604  00207E  0E1F               	movlw	31
 10605  002080  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10606  002082  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10607  002086  6E35               	movwf	bootLoadApplication@i^0,c
 10608                           
 10609                           ;../app/app_src/application.c: 1340:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 10610  002088  0E04               	movlw	4
 10611  00208A  6035               	cpfslt	bootLoadApplication@i^0,c
 10612  00208C  D003               	goto	u16020
 10613  00208E  0435               	decf	bootLoadApplication@i^0,w,c
 10614  002090  A4D8               	btfss	status,2,c
 10615  002092  D00A               	goto	l16104
 10616  002094                     u16020:
 10617                           
 10618                           ;../app/app_src/application.c: 1341:         i = UART_9BIT_EVEN_PARITY;
 10619  002094  0E03               	movlw	3
 10620  002096  6E35               	movwf	bootLoadApplication@i^0,c
 10621                           
 10622                           ;../app/app_src/application.c: 1342:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 10623  002098  0E00               	movlw	0
 10624  00209A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10625  00209C  0E1F               	movlw	31
 10626  00209E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10627  0020A0  0E03               	movlw	3
 10628  0020A2  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10629  0020A4  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
 10630  0020A8                     l16104:
 10631                           
 10632                           ;../app/app_src/application.c: 1345:     set_parity(i);
 10633  0020A8  5035               	movf	bootLoadApplication@i^0,w,c
 10634  0020AA  EC0E  F038         	call	_set_parity
 10635                           
 10636                           ;../app/app_src/application.c: 1348:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10637  0020AE  0E00               	movlw	0
 10638  0020B0  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10639  0020B2  0E20               	movlw	32
 10640  0020B4  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10641  0020B6  EC45  F027         	call	_DATAEE_ReadByte_Platform	;wreg free
 10642  0020BA  6E35               	movwf	bootLoadApplication@i^0,c
 10643                           
 10644                           ;../app/app_src/application.c: 1349:     if(i > UART_BAUD_19200){
 10645  0020BC  0E01               	movlw	1
 10646  0020BE  6435               	cpfsgt	bootLoadApplication@i^0,c
 10647  0020C0  D00A               	goto	l16114
 10648                           
 10649                           ;../app/app_src/application.c: 1350:         i = UART_BAUD_19200;
 10650  0020C2  0E01               	movlw	1
 10651  0020C4  6E35               	movwf	bootLoadApplication@i^0,c
 10652                           
 10653                           ;../app/app_src/application.c: 1351:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 10654  0020C6  0E00               	movlw	0
 10655  0020C8  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10656  0020CA  0E20               	movlw	32
 10657  0020CC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10658  0020CE  0E01               	movlw	1
 10659  0020D0  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10660  0020D2  EC51  F03B         	call	_DATAEE_WriteByte_Platform	;wreg free
 10661  0020D6                     l16114:
 10662                           
 10663                           ;../app/app_src/application.c: 1353:     set_uart_baud(i);
 10664  0020D6  5035               	movf	bootLoadApplication@i^0,w,c
 10665  0020D8  ECDE  F02C         	call	_set_uart_baud
 10666                           
 10667                           ;../app/app_src/application.c: 1392:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 10668  0020DC  0E00               	movlw	0
 10669  0020DE  6E32               	movwf	bootLoadApplication@buf_id^0,c
 10670  0020E0                     l16120:
 10671                           
 10672                           ;../app/app_src/application.c: 1393:         tx_buffer[buf_id].free = 1;
 10673  0020E0  5032               	movf	bootLoadApplication@buf_id^0,w,c
 10674  0020E2  0D83               	mullw	131
 10675  0020E4  0E6A               	movlw	low _tx_buffer
 10676  0020E6  24F3               	addwf	243,w,c
 10677  0020E8  6ED9               	movwf	fsr2l,c
 10678  0020EA  0E08               	movlw	high _tx_buffer
 10679  0020EC  20F4               	addwfc	prodh,w,c
 10680  0020EE  6EDA               	movwf	fsr2h,c
 10681  0020F0  84DF               	bsf	indf2,2,c
 10682                           
 10683                           ;../app/app_src/application.c: 1394:     }
 10684  0020F2  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 10685  0020F4  0E03               	movlw	3
 10686  0020F6  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 10687  0020F8  D7F3               	goto	l16120
 10688                           
 10689                           ;../app/app_src/application.c: 1395:     temp = (currentAddr0 << 8) | currentAddr1;
 10690  0020FA  0100               	movlb	0	; () banked
 10691  0020FC  51FB               	movf	_currentAddr1& (0+255),w,b
 10692  0020FE  0060  F3F0  F030   	movff	_currentAddr0,??_bootLoadApplication
 10693  002104  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 10694  002106  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 10695  00210C  6A30               	clrf	??_bootLoadApplication^0,c
 10696  00210E  1030               	iorwf	??_bootLoadApplication^0,w,c
 10697  002110  6E33               	movwf	bootLoadApplication@temp^0,c
 10698  002112  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 10699  002114  6E34               	movwf	(bootLoadApplication@temp+1)^0,c
 10700                           
 10701                           ;../app/app_src/application.c: 1396:     if(temp < 0x8000){
 10702  002116  0E80               	movlw	128
 10703  002118  5C34               	subwf	(bootLoadApplication@temp+1)^0,w,c
 10704  00211A  B0D8               	btfsc	status,0,c
 10705  00211C  D008               	goto	l16134
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;../app/app_src/application.c: 1397:         temp += 0x8000;
 10709  00211E  0E80               	movlw	128
 10710  002120  2634               	addwf	(bootLoadApplication@temp+1)^0,f,c
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;../app/app_src/application.c: 1398:         currentAddr0 = (temp >> 8) & 0xFF;
 10714  002122  0060  F0D0  F0FC   	movff	bootLoadApplication@temp+1,_currentAddr0
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;../app/app_src/application.c: 1399:         currentAddr1 = temp & 0xFF;
 10718  002128  0060  F0CC  F0FB   	movff	bootLoadApplication@temp,_currentAddr1
 10719  00212E                     l16134:
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;../app/app_src/application.c: 1401:     NWK_SetAddr(temp);
 10723  00212E  0060  F0CC  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 10724  002134  0060  F0D0  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 10725  00213A  ECE4  F040         	call	_NWK_SetAddr	;wreg free
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;../app/app_src/application.c: 1402:     NWK_SetPanId(0x1234);
 10729  00213E  0E12               	movlw	18
 10730  002140  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 10731  002142  0E34               	movlw	52
 10732  002144  6E04               	movwf	NWK_SetPanId@panId^0,c
 10733  002146  ECD5  F040         	call	_NWK_SetPanId	;wreg free
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;../app/app_src/application.c: 1403:     PHY_SetChannel(0x00);
 10737  00214A  0E00               	movlw	0
 10738  00214C  EC79  F03C         	call	_PHY_SetChannel
 10739                           
 10740                           ; BSR set to: 61
 10741                           ;../app/app_src/application.c: 1404:     PHY_SetRxState(1);
 10742  002150  0E01               	movlw	1
 10743  002152  EC72  F042         	call	_PHY_SetRxState
 10744                           
 10745                           ; BSR set to: 61
 10746                           ;../app/app_src/application.c: 1405:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 10747  002156  0EA0               	movlw	low _appDataInd
 10748  002158  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 10749  00215A  0E69               	movlw	high _appDataInd
 10750  00215C  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 10751  00215E  0E01               	movlw	1
 10752  002160  EC85  F040         	call	_NWK_OpenEndpoint
 10753  002164  0012               	return		;funcret
 10754  002166                     __end_of_bootLoadApplication:
 10755                           	opt callstack 0
 10756                           
 10757 ;; *************** function _set_uart_baud *****************
 10758 ;; Defined at:
 10759 ;;		line 148 in file "../app/app_src/application.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  i               1    wreg     unsigned char 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  i               1    3[COMRAM] unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  1    wreg      unsigned char 
 10766 ;; Registers used:
 10767 ;;		wreg, status,2, status,0
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 3F/3D
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;Total ram usage:        3 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    7
 10780 ;; This function calls:
 10781 ;;		Nothing
 10782 ;; This function is called by:
 10783 ;;		_bootLoadApplication
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text57
 10788  0059BC                     __ptext57:
 10789                           	opt callstack 0
 10790  0059BC                     _set_uart_baud:
 10791                           	opt callstack 22
 10792                           
 10793                           ;incstack = 0
 10794                           ;set_uart_baud@i stored from wreg
 10795  0059BC  6E04               	movwf	set_uart_baud@i^0,c
 10796                           
 10797                           ;../app/app_src/application.c: 148: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 149: {;../app/app_src/application.c: 150:     U1CON1 &= ~(1<<7);
 10798  0059BE  013D               	movlb	61	; () banked
 10799  0059C0  9FF3               	bcf	243,7,b	;volatile
 10800                           
 10801                           ;../app/app_src/application.c: 151:     switch(i)
 10802  0059C2  D047               	goto	l11930
 10803  0059C4                     l11878:
 10804                           
 10805                           ; BSR set to: 61
 10806                           ;../app/app_src/application.c: 155:             U1CON0 &=~ (1<<7);
 10807  0059C4  9FF2               	bcf	242,7,b	;volatile
 10808                           
 10809                           ; BSR set to: 61
 10810                           ;../app/app_src/application.c: 156:             U1BRGL = 0xA0;
 10811  0059C6  0EA0               	movlw	160
 10812  0059C8  6FF5               	movwf	245,b	;volatile
 10813                           
 10814                           ; BSR set to: 61
 10815                           ;../app/app_src/application.c: 157:             U1BRGH = 0x01;
 10816  0059CA  0E01               	movlw	1
 10817  0059CC  6FF6               	movwf	246,b	;volatile
 10818                           
 10819                           ; BSR set to: 61
 10820                           ;../app/app_src/application.c: 158:             current_baud_rate = 9600;
 10821  0059CE  0E80               	movlw	128
 10822  0059D0  0101               	movlb	1	; () banked
 10823  0059D2  6F52               	movwf	_current_baud_rate& (0+255),b
 10824  0059D4  0E25               	movlw	37
 10825  0059D6  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10826  0059D8  0E00               	movlw	0
 10827  0059DA  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10828                           
 10829                           ; BSR set to: 1
 10830                           ;../app/app_src/application.c: 159:             uart_baud_rate = UART_BAUD_9600;
 10831  0059DC  0E00               	movlw	0
 10832  0059DE  D037               	goto	L6
 10833  0059E0                     l11888:
 10834                           
 10835                           ; BSR set to: 61
 10836                           ;../app/app_src/application.c: 163:             U1CON0 &=~ (1<<7);
 10837  0059E0  9FF2               	bcf	242,7,b	;volatile
 10838                           
 10839                           ; BSR set to: 61
 10840                           ;../app/app_src/application.c: 164:             U1BRGL = 0xCF;
 10841  0059E2  0ECF               	movlw	207
 10842  0059E4  6FF5               	movwf	245,b	;volatile
 10843                           
 10844                           ; BSR set to: 61
 10845                           ;../app/app_src/application.c: 165:             U1BRGH = 0x00;
 10846  0059E6  0E00               	movlw	0
 10847  0059E8  6FF6               	movwf	246,b	;volatile
 10848                           
 10849                           ; BSR set to: 61
 10850                           ;../app/app_src/application.c: 166:             current_baud_rate = 19200;
 10851  0059EA  0E00               	movlw	0
 10852  0059EC  0101               	movlb	1	; () banked
 10853  0059EE  6F52               	movwf	_current_baud_rate& (0+255),b
 10854  0059F0  0E4B               	movlw	75
 10855  0059F2  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10856  0059F4  0E00               	movlw	0
 10857  0059F6  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10858                           
 10859                           ; BSR set to: 1
 10860                           ;../app/app_src/application.c: 167:             uart_baud_rate = UART_BAUD_19200;
 10861  0059F8  0E01               	movlw	1
 10862  0059FA  D029               	goto	L6
 10863  0059FC                     l11898:
 10864                           
 10865                           ; BSR set to: 61
 10866                           ;../app/app_src/application.c: 171:             U1CON0 &=~ (1<<7);
 10867  0059FC  9FF2               	bcf	242,7,b	;volatile
 10868                           
 10869                           ; BSR set to: 61
 10870                           ;../app/app_src/application.c: 172:             U1BRGL = 0x67;
 10871  0059FE  0E67               	movlw	103
 10872  005A00  6FF5               	movwf	245,b	;volatile
 10873                           
 10874                           ; BSR set to: 61
 10875                           ;../app/app_src/application.c: 173:             U1BRGH = 0x00;
 10876  005A02  0E00               	movlw	0
 10877  005A04  6FF6               	movwf	246,b	;volatile
 10878                           
 10879                           ; BSR set to: 61
 10880                           ;../app/app_src/application.c: 174:             current_baud_rate = 38400;
 10881  005A06  0E00               	movlw	0
 10882  005A08  0101               	movlb	1	; () banked
 10883  005A0A  6F52               	movwf	_current_baud_rate& (0+255),b
 10884  005A0C  0E96               	movlw	150
 10885  005A0E  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10886  005A10  0E00               	movlw	0
 10887  005A12  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10888                           
 10889                           ; BSR set to: 1
 10890                           ;../app/app_src/application.c: 175:             uart_baud_rate = UART_BAUD_38400;
 10891  005A14  0E02               	movlw	2
 10892  005A16  D01B               	goto	L6
 10893  005A18                     l11908:
 10894                           
 10895                           ; BSR set to: 61
 10896                           ;../app/app_src/application.c: 179:             U1CON0 |= (1<<7);
 10897  005A18  8FF2               	bsf	242,7,b	;volatile
 10898                           
 10899                           ; BSR set to: 61
 10900                           ;../app/app_src/application.c: 180:             U1BRGL = 0x14;
 10901  005A1A  0E14               	movlw	20
 10902  005A1C  6FF5               	movwf	245,b	;volatile
 10903                           
 10904                           ; BSR set to: 61
 10905                           ;../app/app_src/application.c: 181:             U1BRGH = 0x01;
 10906  005A1E  0E01               	movlw	1
 10907  005A20  6FF6               	movwf	246,b	;volatile
 10908                           
 10909                           ; BSR set to: 61
 10910                           ;../app/app_src/application.c: 182:             current_baud_rate = 57600;
 10911  005A22  0E00               	movlw	0
 10912  005A24  0101               	movlb	1	; () banked
 10913  005A26  6F52               	movwf	_current_baud_rate& (0+255),b
 10914  005A28  0EE1               	movlw	225
 10915  005A2A  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10916  005A2C  0E00               	movlw	0
 10917  005A2E  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10918                           
 10919                           ; BSR set to: 1
 10920                           ;../app/app_src/application.c: 183:             uart_baud_rate = UART_BAUD_57600;
 10921  005A30  0E03               	movlw	3
 10922  005A32  D00D               	goto	L6
 10923  005A34                     l11918:
 10924                           
 10925                           ; BSR set to: 61
 10926                           ;../app/app_src/application.c: 187:             U1CON0 |= (1<<7);
 10927  005A34  8FF2               	bsf	242,7,b	;volatile
 10928                           
 10929                           ; BSR set to: 61
 10930                           ;../app/app_src/application.c: 188:             U1BRGL = 0x89;
 10931  005A36  0E89               	movlw	137
 10932  005A38  6FF5               	movwf	245,b	;volatile
 10933                           
 10934                           ; BSR set to: 61
 10935                           ;../app/app_src/application.c: 189:             U1BRGH = 0x00;
 10936  005A3A  0E00               	movlw	0
 10937  005A3C  6FF6               	movwf	246,b	;volatile
 10938                           
 10939                           ; BSR set to: 61
 10940                           ;../app/app_src/application.c: 190:             current_baud_rate = 115200;
 10941  005A3E  0E00               	movlw	0
 10942  005A40  0101               	movlb	1	; () banked
 10943  005A42  6F52               	movwf	_current_baud_rate& (0+255),b
 10944  005A44  0EC2               	movlw	194
 10945  005A46  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10946  005A48  0E01               	movlw	1
 10947  005A4A  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10948                           
 10949                           ; BSR set to: 1
 10950                           ;../app/app_src/application.c: 191:             uart_baud_rate = UART_BAUD_115200;
 10951  005A4C  0E04               	movlw	4
 10952  005A4E                     L6:
 10953  005A4E  6F73               	movwf	_uart_baud_rate& (0+255),b
 10954                           
 10955                           ;../app/app_src/application.c: 192:             break;
 10956  005A50  D018               	goto	l11932
 10957  005A52                     l11930:
 10958                           
 10959                           ; BSR set to: 61
 10960  005A52  5004               	movf	set_uart_baud@i^0,w,c
 10961  005A54  6E02               	movwf	??_set_uart_baud^0,c
 10962  005A56  6A03               	clrf	(??_set_uart_baud+1)^0,c
 10963                           
 10964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10965                           ; Switch size 1, requested type "simple"
 10966                           ; Number of cases is 1, Range of values is 0 to 0
 10967                           ; switch strategies available:
 10968                           ; Name         Instructions Cycles
 10969                           ; simple_byte            4     3 (average)
 10970                           ;	Chosen strategy is simple_byte
 10971  005A58  5003               	movf	(??_set_uart_baud+1)^0,w,c
 10972  005A5A  0A00               	xorlw	0	; case 0
 10973  005A5C  A4D8               	btfss	status,2,c
 10974  005A5E  0012               	return	
 10975                           
 10976                           ; BSR set to: 61
 10977                           ; Switch size 1, requested type "simple"
 10978                           ; Number of cases is 5, Range of values is 0 to 4
 10979                           ; switch strategies available:
 10980                           ; Name         Instructions Cycles
 10981                           ; simple_byte           16     9 (average)
 10982                           ;	Chosen strategy is simple_byte
 10983  005A60  5002               	movf	??_set_uart_baud^0,w,c
 10984  005A62  0A00               	xorlw	0	; case 0
 10985  005A64  B4D8               	btfsc	status,2,c
 10986  005A66  D7AE               	goto	l11878
 10987  005A68  0A01               	xorlw	1	; case 1
 10988  005A6A  B4D8               	btfsc	status,2,c
 10989  005A6C  D7B9               	goto	l11888
 10990  005A6E  0A03               	xorlw	3	; case 2
 10991  005A70  B4D8               	btfsc	status,2,c
 10992  005A72  D7C4               	goto	l11898
 10993  005A74  0A01               	xorlw	1	; case 3
 10994  005A76  B4D8               	btfsc	status,2,c
 10995  005A78  D7CF               	goto	l11908
 10996  005A7A  0A07               	xorlw	7	; case 4
 10997  005A7C  A4D8               	btfss	status,2,c
 10998  005A7E  0012               	return	
 10999  005A80  D7D9               	goto	l11918
 11000  005A82                     l11932:
 11001                           
 11002                           ; BSR set to: 1
 11003                           ;../app/app_src/application.c: 196:     U1CON1 |= (1<<7);
 11004  005A82  013D               	movlb	61	; () banked
 11005  005A84  8FF3               	bsf	243,7,b	;volatile
 11006                           
 11007                           ; BSR set to: 61
 11008  005A86  0012               	return		;funcret
 11009  005A88                     __end_of_set_uart_baud:
 11010                           	opt callstack 0
 11011                           
 11012 ;; *************** function _set_parity *****************
 11013 ;; Defined at:
 11014 ;;		line 104 in file "../app/app_src/application.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  parity          1    wreg     unsigned char 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  parity          1    3[COMRAM] unsigned char 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      unsigned char 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;Total ram usage:        3 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    7
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_cmdSetParity
 11039 ;;		_bootLoadApplication
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text58
 11044  00701C                     __ptext58:
 11045                           	opt callstack 0
 11046  00701C                     _set_parity:
 11047                           	opt callstack 20
 11048                           
 11049                           ; BSR set to: 61
 11050                           ;incstack = 0
 11051                           ;set_parity@parity stored from wreg
 11052  00701C  6E04               	movwf	set_parity@parity^0,c
 11053                           
 11054                           ;../app/app_src/application.c: 104: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 105: {;../app/app_src/application.c: 106:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 11055  00701E  0E04               	movlw	4
 11056  007020  6004               	cpfslt	set_parity@parity^0,c
 11057  007022  0012               	return	
 11058  007024  0404               	decf	set_parity@parity^0,w,c
 11059  007026  B4D8               	btfsc	status,2,c
 11060  007028  0012               	return	
 11061                           
 11062                           ;../app/app_src/application.c: 109:     U1CON1 &= 0b01111111;
 11063  00702A  013D               	movlb	61	; () banked
 11064  00702C  9FF3               	bcf	243,7,b	;volatile
 11065                           
 11066                           ; BSR set to: 61
 11067                           ;../app/app_src/application.c: 110:     U1CON0 &= 0b11110000;
 11068  00702E  0EF0               	movlw	240
 11069  007030  17F2               	andwf	242,f,b	;volatile
 11070                           
 11071                           ; BSR set to: 61
 11072                           ;../app/app_src/application.c: 111:     U1CON0 |= (parity & 0b00001111);
 11073  007032  5004               	movf	set_parity@parity^0,w,c
 11074  007034  0B0F               	andlw	15
 11075  007036  13F2               	iorwf	242,f,b	;volatile
 11076                           
 11077                           ; BSR set to: 61
 11078                           ;../app/app_src/application.c: 112:     U1CON2 &=~ (0b00110000);
 11079  007038  0ECF               	movlw	207
 11080  00703A  17F4               	andwf	244,f,b	;volatile
 11081                           
 11082                           ; BSR set to: 61
 11083                           ;../app/app_src/application.c: 113:     U1CON1 |= 0b10000000;
 11084  00703C  8FF3               	bsf	243,7,b	;volatile
 11085                           
 11086                           ;../app/app_src/application.c: 114:     switch(parity){
 11087  00703E  D00C               	goto	l10614
 11088  007040                     l10606:
 11089                           
 11090                           ; BSR set to: 61
 11091                           ;../app/app_src/application.c: 116:             uart_parity = UART_8BIT_NO_PARITY;
 11092  007040  0E00               	movlw	0
 11093  007042  0101               	movlb	1	; () banked
 11094  007044  6F72               	movwf	_uart_parity& (0+255),b
 11095                           
 11096                           ;../app/app_src/application.c: 120:             break;
 11097  007046  0012               	return	
 11098  007048                     l10608:
 11099                           
 11100                           ; BSR set to: 61
 11101                           ;../app/app_src/application.c: 122:             uart_parity = UART_9BIT_ODD_PARITY;
 11102  007048  0E02               	movlw	2
 11103  00704A  0101               	movlb	1	; () banked
 11104  00704C  6F72               	movwf	_uart_parity& (0+255),b
 11105                           
 11106                           ;../app/app_src/application.c: 126:             break;
 11107  00704E  0012               	return	
 11108  007050                     l10610:
 11109                           
 11110                           ; BSR set to: 61
 11111                           ;../app/app_src/application.c: 128:             uart_parity = UART_9BIT_EVEN_PARITY;
 11112  007050  0E03               	movlw	3
 11113  007052  0101               	movlb	1	; () banked
 11114  007054  6F72               	movwf	_uart_parity& (0+255),b
 11115                           
 11116                           ;../app/app_src/application.c: 132:             break;
 11117  007056  0012               	return	
 11118  007058                     l10614:
 11119                           
 11120                           ; BSR set to: 61
 11121  007058  5004               	movf	set_parity@parity^0,w,c
 11122  00705A  6E02               	movwf	??_set_parity^0,c
 11123  00705C  6A03               	clrf	(??_set_parity+1)^0,c
 11124                           
 11125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11126                           ; Switch size 1, requested type "simple"
 11127                           ; Number of cases is 1, Range of values is 0 to 0
 11128                           ; switch strategies available:
 11129                           ; Name         Instructions Cycles
 11130                           ; simple_byte            4     3 (average)
 11131                           ;	Chosen strategy is simple_byte
 11132  00705E  5003               	movf	(??_set_parity+1)^0,w,c
 11133  007060  0A00               	xorlw	0	; case 0
 11134  007062  A4D8               	btfss	status,2,c
 11135  007064  D7ED               	goto	l10606
 11136                           
 11137                           ; BSR set to: 61
 11138                           ; Switch size 1, requested type "simple"
 11139                           ; Number of cases is 3, Range of values is 0 to 3
 11140                           ; switch strategies available:
 11141                           ; Name         Instructions Cycles
 11142                           ; simple_byte           10     6 (average)
 11143                           ;	Chosen strategy is simple_byte
 11144  007066  5002               	movf	??_set_parity^0,w,c
 11145  007068  0A00               	xorlw	0	; case 0
 11146  00706A  B4D8               	btfsc	status,2,c
 11147  00706C  D7E9               	goto	l10606
 11148  00706E  0A02               	xorlw	2	; case 2
 11149  007070  B4D8               	btfsc	status,2,c
 11150  007072  D7EA               	goto	l10608
 11151  007074  0A01               	xorlw	1	; case 3
 11152  007076  B4D8               	btfsc	status,2,c
 11153  007078  D7EB               	goto	l10610
 11154  00707A  D7E2               	goto	l10606
 11155  00707C                     __end_of_set_parity:
 11156                           	opt callstack 0
 11157                           
 11158 ;; *************** function _loadMACAddr *****************
 11159 ;; Defined at:
 11160 ;;		line 1258 in file "../app/app_src/application.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;		None
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  i               1    5[COMRAM] unsigned char 
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      void 
 11167 ;; Registers used:
 11168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 3F/2
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;Total ram usage:        1 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    8
 11181 ;; This function calls:
 11182 ;;		_DIA_ReadByte
 11183 ;; This function is called by:
 11184 ;;		_bootLoadApplication
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text59
 11189  007A28                     __ptext59:
 11190                           	opt callstack 0
 11191  007A28                     _loadMACAddr:
 11192                           	opt callstack 21
 11193                           
 11194                           ; BSR set to: 2
 11195                           ;../app/app_src/application.c: 1261:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 11196                           
 11197                           ;incstack = 0
 11198  007A28  0E00               	movlw	0
 11199  007A2A  6E06               	movwf	loadMACAddr@i^0,c
 11200  007A2C                     l12112:
 11201                           
 11202                           ;../app/app_src/application.c: 1262:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 11203  007A2C  5006               	movf	loadMACAddr@i^0,w,c
 11204  007A2E  08C7               	sublw	low (_EUIDbyte+11)
 11205  007A30  6ED9               	movwf	fsr2l,c
 11206  007A32  0E00               	movlw	0
 11207  007A34  A0D8               	btfss	status,0,c
 11208  007A36  2AE8               	incf	wreg,f,c
 11209  007A38  0801               	sublw	high (_EUIDbyte+11)
 11210  007A3A  6EDA               	movwf	fsr2h,c
 11211  007A3C  0E00               	movlw	0
 11212  007A3E  2406               	addwf	loadMACAddr@i^0,w,c
 11213  007A40  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 11214  007A42  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 11215  007A44  0E00               	movlw	0
 11216  007A46  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 11217  007A48  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 11218  007A4A  0E3F               	movlw	63
 11219  007A4C  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 11220  007A4E  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 11221  007A50  0E00               	movlw	0
 11222  007A52  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 11223  007A54  ECFE  F03F         	call	_DIA_ReadByte	;wreg free
 11224  007A58  6EDF               	movwf	indf2,c
 11225                           
 11226                           ;../app/app_src/application.c: 1263:     }
 11227  007A5A  2A06               	incf	loadMACAddr@i^0,f,c
 11228  007A5C  0E0B               	movlw	11
 11229  007A5E  6406               	cpfsgt	loadMACAddr@i^0,c
 11230  007A60  D7E5               	goto	l12112
 11231  007A62  0012               	return	
 11232  007A64                     __end_of_loadMACAddr:
 11233                           	opt callstack 0
 11234                           
 11235 ;; *************** function _DIA_ReadByte *****************
 11236 ;; Defined at:
 11237 ;;		line 212 in file "mcc_generated_files/memory.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;  flashAddr       4    1[COMRAM] unsigned long 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;		None
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  1    wreg      unsigned char 
 11244 ;; Registers used:
 11245 ;;		wreg, status,2
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/2
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;Total ram usage:        4 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:    7
 11258 ;; This function calls:
 11259 ;;		Nothing
 11260 ;; This function is called by:
 11261 ;;		_loadMACAddr
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text60
 11266  007FFC                     __ptext60:
 11267                           	opt callstack 0
 11268  007FFC                     _DIA_ReadByte:
 11269                           	opt callstack 21
 11270                           
 11271                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 11272                           
 11273                           ;incstack = 0
 11274  007FFC  0139               	movlb	57	; () banked
 11275  007FFE  51E5               	movf	229,w,b	;volsfr
 11276  008000  0B3F               	andlw	-193
 11277  008002  0940               	iorlw	64
 11278  008004  6FE5               	movwf	229,b	;volsfr
 11279                           
 11280                           ; BSR set to: 57
 11281                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 11282  008006  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 11283                           
 11284                           ; BSR set to: 57
 11285                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 11286  00800C  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 11287                           
 11288                           ; BSR set to: 57
 11289                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11290  008012  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 11291  008018  0008               	tblrd		*	;# 
 11292                           
 11293                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 11294  00801A  50F5               	movf	245,w,c	;volatile
 11295  00801C  0012               	return		;funcret
 11296  00801E                     __end_of_DIA_ReadByte:
 11297                           	opt callstack 0
 11298                           
 11299 ;; *************** function _crc16_app *****************
 11300 ;; Defined at:
 11301 ;;		line 4 in file "../app/app_src/crc.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;  dptr            2   18[COMRAM] PTR void 
 11304 ;;		 -> EUIDbyte(12), 
 11305 ;;  len             2   20[COMRAM] unsigned short 
 11306 ;;  seed            2   22[COMRAM] unsigned short 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;  i               2   28[COMRAM] unsigned short 
 11309 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 11310 ;;		 -> EUIDbyte(12), 
 11311 ;;  result          2   24[COMRAM] unsigned short 
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  2   18[COMRAM] unsigned short 
 11314 ;; Registers used:
 11315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/2
 11318 ;;		On exit  : 3F/39
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11321 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;Total ram usage:       12 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:    9
 11328 ;; This function calls:
 11329 ;;		_CRC_8BitDataWrite
 11330 ;;		_CRC_CalculatedResultGet
 11331 ;; This function is called by:
 11332 ;;		_bootLoadApplication
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text61
 11337  00691C                     __ptext61:
 11338                           	opt callstack 0
 11339  00691C                     _crc16_app:
 11340                           	opt callstack 20
 11341                           
 11342                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 11343                           
 11344                           ;incstack = 0
 11345  00691C  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 11346  006922  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 11347                           
 11348                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 11349  006928  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 11350                           
 11351                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 11352  00692E  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 11353                           
 11354                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 11355  006934  0139               	movlb	57	; () banked
 11356  006936  8F68               	bsf	104,7,b	;volatile
 11357                           
 11358                           ; BSR set to: 57
 11359                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 11360  006938  8D68               	bsf	104,6,b	;volatile
 11361                           
 11362                           ; BSR set to: 57
 11363                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 11364  00693A  0E00               	movlw	0
 11365  00693C  6E1E               	movwf	(crc16_app@i+1)^0,c
 11366  00693E  0E00               	movlw	0
 11367  006940  6E1D               	movwf	crc16_app@i^0,c
 11368  006942  D00F               	goto	l12136
 11369  006944                     l606:
 11370                           
 11371                           ; BSR set to: 57
 11372  006944  B168               	btfsc	104,0,b	;volatile
 11373  006946  D7FE               	goto	l606
 11374                           
 11375                           ; BSR set to: 57
 11376                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 11377  006948  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 11378  00694E  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 11379  006954  50DF               	movf	indf2,w,c
 11380  006956  ECDD  F041         	call	_CRC_8BitDataWrite
 11381                           
 11382                           ; BSR set to: 57
 11383                           ;../app/app_src/crc.c: 18:         ptr++;
 11384  00695A  4A1B               	infsnz	crc16_app@ptr^0,f,c
 11385  00695C  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 11386                           
 11387                           ; BSR set to: 57
 11388                           ;../app/app_src/crc.c: 19:     }
 11389  00695E  4A1D               	infsnz	crc16_app@i^0,f,c
 11390  006960  2A1E               	incf	(crc16_app@i+1)^0,f,c
 11391  006962                     l12136:
 11392                           
 11393                           ; BSR set to: 57
 11394  006962  5015               	movf	crc16_app@len^0,w,c
 11395  006964  5C1D               	subwf	crc16_app@i^0,w,c
 11396  006966  5016               	movf	(crc16_app@len+1)^0,w,c
 11397  006968  581E               	subwfb	(crc16_app@i+1)^0,w,c
 11398  00696A  A0D8               	btfss	status,0,c
 11399  00696C  D7EB               	goto	l606
 11400  00696E                     u10780:
 11401                           
 11402                           ; BSR set to: 57
 11403  00696E  BB68               	btfsc	104,5,b	;volatile
 11404  006970  D7FE               	goto	u10780
 11405                           
 11406                           ; BSR set to: 57
 11407                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 11408  006972  0E00               	movlw	0
 11409  006974  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 11410  006976  0E00               	movlw	0
 11411  006978  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 11412  00697A  0E00               	movlw	0
 11413  00697C  ECA7  F02B         	call	_CRC_CalculatedResultGet
 11414  006980  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 11415  006986  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 11416                           
 11417                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 11418  00698C  0139               	movlb	57	; () banked
 11419  00698E  9D68               	bcf	104,6,b	;volatile
 11420                           
 11421                           ; BSR set to: 57
 11422                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 11423  006990  9F68               	bcf	104,7,b	;volatile
 11424                           
 11425                           ; BSR set to: 57
 11426                           ;../app/app_src/crc.c: 25:     return(result);
 11427  006992  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 11428  006998  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 11429                           
 11430                           ; BSR set to: 57
 11431  00699E  0012               	return		;funcret
 11432  0069A0                     __end_of_crc16_app:
 11433                           	opt callstack 0
 11434                           
 11435 ;; *************** function _CRC_CalculatedResultGet *****************
 11436 ;; Defined at:
 11437 ;;		line 159 in file "mcc_generated_files/crc.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  reverse         1    wreg     _Bool 
 11440 ;;  xorValue        2    8[COMRAM] unsigned short 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  reverse         1   15[COMRAM] _Bool 
 11443 ;;  result          2   16[COMRAM] unsigned short 
 11444 ;;  mask            2   13[COMRAM] unsigned short 
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  2    8[COMRAM] unsigned short 
 11447 ;; Registers used:
 11448 ;;		wreg, status,2, status,0, cstack
 11449 ;; Tracked objects:
 11450 ;;		On entry : 3F/39
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;Total ram usage:       10 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:    8
 11461 ;; This function calls:
 11462 ;;		_CRC_ReverseValue
 11463 ;; This function is called by:
 11464 ;;		_crc16_app
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           	psect	text62
 11469  00574E                     __ptext62:
 11470                           	opt callstack 0
 11471  00574E                     _CRC_CalculatedResultGet:
 11472                           	opt callstack 20
 11473                           
 11474                           ; BSR set to: 57
 11475                           ;incstack = 0
 11476                           ;CRC_CalculatedResultGet@reverse stored from wreg
 11477  00574E  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 11478                           
 11479                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11480  005750  0139               	movlb	57	; () banked
 11481  005752  9D68               	bcf	104,6,b	;volatile
 11482                           
 11483                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11484  005754  9DA0               	bcf	160,6,b	;volatile
 11485                           
 11486                           ; BSR set to: 57
 11487                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11488  005756  5169               	movf	105,w,b	;volatile
 11489  005758  0B0F               	andlw	15
 11490  00575A  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11491  00575C  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11492  00575E  5169               	movf	105,w,b	;volatile
 11493  005760  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11494  005762  0B0F               	andlw	-241
 11495  005764  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11496  005766  6F69               	movwf	105,b	;volatile
 11497                           
 11498                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11499  005768  0E08               	movlw	8
 11500  00576A  0101               	movlb	1	; () banked
 11501  00576C  65DB               	cpfsgt	(_crcObj+1)& (0+255),b
 11502  00576E  D005               	goto	l11490
 11503                           
 11504                           ; BSR set to: 1
 11505                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11506  005770  0E00               	movlw	0
 11507  005772  0139               	movlb	57	; () banked
 11508  005774  6F61               	movwf	97,b	;volatile
 11509                           
 11510                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 11511  005776  0E00               	movlw	0
 11512  005778  D002               	goto	L7
 11513  00577A                     l11490:
 11514                           
 11515                           ; BSR set to: 1
 11516                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11517  00577A  0E00               	movlw	0
 11518  00577C  0139               	movlb	57	; () banked
 11519  00577E                     L7:
 11520  00577E  6F60               	movwf	96,b	;volatile
 11521                           
 11522                           ; BSR set to: 57
 11523                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11524  005780  8D68               	bsf	104,6,b	;volatile
 11525  005782                     l1600:
 11526                           
 11527                           ; BSR set to: 57
 11528  005782  ADA0               	btfss	160,6,b	;volatile
 11529  005784  D7FE               	goto	l1600
 11530                           
 11531                           ; BSR set to: 57
 11532                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11533  005786  9DA0               	bcf	160,6,b	;volatile
 11534                           
 11535                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11536  005788  9D68               	bcf	104,6,b	;volatile
 11537                           
 11538                           ; BSR set to: 57
 11539                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11540  00578A  0060  F768  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 11541  005790  0EFF               	movlw	255
 11542  005792  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 11543  005794  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11544  005796  5169               	movf	105,w,b	;volatile
 11545  005798  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11546  00579A  0B0F               	andlw	-241
 11547  00579C  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11548  00579E  6F69               	movwf	105,b	;volatile
 11549                           
 11550                           ; BSR set to: 57
 11551                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11552  0057A0  5163               	movf	99,w,b	;volatile
 11553  0057A2  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11554  0057A4  5162               	movf	98,w,b	;volatile
 11555  0057A6  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 11556  0057A8  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 11557                           
 11558                           ; BSR set to: 57
 11559                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11560  0057AE  0E10               	movlw	16
 11561  0057B0  0101               	movlb	1	; () banked
 11562  0057B2  61DB               	cpfslt	(_crcObj+1)& (0+255),b
 11563  0057B4  D018               	goto	l11502
 11564                           
 11565                           ; BSR set to: 1
 11566                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11567  0057B6  0060  F76C  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 11568  0057BC  0E01               	movlw	1
 11569  0057BE  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 11570  0057C0  0E00               	movlw	0
 11571  0057C2  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 11572  0057C4  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 11573  0057C6  D003               	goto	u10004
 11574  0057C8                     u10005:
 11575  0057C8  90D8               	bcf	status,0,c
 11576  0057CA  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 11577  0057CC  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 11578  0057CE                     u10004:
 11579  0057CE  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 11580  0057D0  D7FB               	goto	u10005
 11581  0057D2  0EFF               	movlw	255
 11582  0057D4  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 11583  0057D6  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 11584  0057D8  0EFF               	movlw	255
 11585  0057DA  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 11586  0057DC  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 11587                           
 11588                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11589  0057DE  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 11590  0057E0  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 11591  0057E2  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 11592  0057E4  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11593  0057E6                     l11502:
 11594                           
 11595                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11596  0057E6  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 11597  0057E8  B4D8               	btfsc	status,2,c
 11598  0057EA  D00E               	goto	l11506
 11599                           
 11600                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11601  0057EC  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 11602  0057F2  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 11603  0057F8  EC27  F039         	call	_CRC_ReverseValue	;wreg free
 11604  0057FC  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 11605  005802  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 11606  005808                     l11506:
 11607                           
 11608                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11609  005808  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 11610  00580A  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 11611  00580C  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 11612  00580E  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11613                           
 11614                           ;mcc_generated_files/crc.c: 198:     return result;
 11615  005810  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 11616  005816  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 11617  00581C  0012               	return		;funcret
 11618  00581E                     __end_of_CRC_CalculatedResultGet:
 11619                           	opt callstack 0
 11620                           
 11621 ;; *************** function _CRC_ReverseValue *****************
 11622 ;; Defined at:
 11623 ;;		line 138 in file "mcc_generated_files/crc.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;  crc             2    1[COMRAM] unsigned short 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  mask            2    6[COMRAM] unsigned short 
 11628 ;;  reverse         2    4[COMRAM] unsigned short 
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  2    1[COMRAM] unsigned short 
 11631 ;; Registers used:
 11632 ;;		wreg, status,2, status,0
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/1
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11641 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11642 ;;Total ram usage:        7 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    7
 11645 ;; This function calls:
 11646 ;;		Nothing
 11647 ;; This function is called by:
 11648 ;;		_CRC_CalculatedResultGet
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text63
 11653  00724E                     __ptext63:
 11654                           	opt callstack 0
 11655  00724E                     _CRC_ReverseValue:
 11656                           	opt callstack 20
 11657                           
 11658                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11659                           
 11660                           ;incstack = 0
 11661  00724E  0E00               	movlw	0
 11662  007250  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 11663  007252  0E01               	movlw	1
 11664  007254  6E07               	movwf	CRC_ReverseValue@mask^0,c
 11665                           
 11666                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11667  007256  0060  F76C  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 11668  00725C  0EFF               	movlw	255
 11669  00725E  2604               	addwf	??_CRC_ReverseValue^0,f,c
 11670  007260  2804               	incf	??_CRC_ReverseValue^0,w,c
 11671  007262  D003               	goto	u9030
 11672  007264                     u9035:
 11673  007264  90D8               	bcf	status,0,c
 11674  007266  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 11675  007268  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 11676  00726A                     u9030:
 11677  00726A  2EE8               	decfsz	wreg,f,c
 11678  00726C  D7FB               	goto	u9035
 11679                           
 11680                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11681  00726E  0E00               	movlw	0
 11682  007270  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 11683  007272  0E00               	movlw	0
 11684  007274  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 11685                           
 11686                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11687  007276  D00C               	goto	l1591
 11688  007278                     l1592:
 11689                           
 11690                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11691  007278  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 11692  00727A  D004               	goto	l10774
 11693                           
 11694                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11695  00727C  5007               	movf	CRC_ReverseValue@mask^0,w,c
 11696  00727E  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 11697  007280  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 11698  007282  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 11699  007284                     l10774:
 11700                           
 11701                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11702  007284  90D8               	bcf	status,0,c
 11703  007286  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 11704  007288  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 11705                           
 11706                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11707  00728A  90D8               	bcf	status,0,c
 11708  00728C  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 11709  00728E  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 11710  007290                     l1591:
 11711                           
 11712                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11713  007290  5002               	movf	CRC_ReverseValue@crc^0,w,c
 11714  007292  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 11715  007294  A4D8               	btfss	status,2,c
 11716  007296  D7F0               	goto	l1592
 11717                           
 11718                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11719  007298  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 11720  00729E  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 11721  0072A4  0012               	return		;funcret
 11722  0072A6                     __end_of_CRC_ReverseValue:
 11723                           	opt callstack 0
 11724                           
 11725 ;; *************** function _CRC_8BitDataWrite *****************
 11726 ;; Defined at:
 11727 ;;		line 125 in file "mcc_generated_files/crc.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;  data            1    wreg     unsigned char 
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;  data            1    1[COMRAM] unsigned char 
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  1    wreg      _Bool 
 11734 ;; Registers used:
 11735 ;;		wreg
 11736 ;; Tracked objects:
 11737 ;;		On entry : 3F/39
 11738 ;;		On exit  : 3F/39
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;Total ram usage:        1 bytes
 11746 ;; Hardware stack levels used:    1
 11747 ;; Hardware stack levels required when called:    7
 11748 ;; This function calls:
 11749 ;;		Nothing
 11750 ;; This function is called by:
 11751 ;;		_crc16_app
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text64
 11756  0083BA                     __ptext64:
 11757                           	opt callstack 0
 11758  0083BA                     _CRC_8BitDataWrite:
 11759                           	opt callstack 21
 11760                           
 11761                           ;incstack = 0
 11762                           ;CRC_8BitDataWrite@data stored from wreg
 11763  0083BA  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 11764                           
 11765                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11766  0083BC  0139               	movlb	57	; () banked
 11767  0083BE  B168               	btfsc	104,0,b	;volatile
 11768  0083C0  0012               	return	
 11769                           
 11770                           ; BSR set to: 57
 11771                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11772  0083C2  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 11773                           
 11774                           ; BSR set to: 57
 11775  0083C8  0012               	return		;funcret
 11776  0083CA                     __end_of_CRC_8BitDataWrite:
 11777                           	opt callstack 0
 11778                           
 11779 ;; *************** function _PHY_SetRxState *****************
 11780 ;; Defined at:
 11781 ;;		line 834 in file "../phy/sx1216/phy_src/phy.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  rx              1    wreg     _Bool 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  rx              1    0[COMRAM] _Bool 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 3F/3D
 11792 ;;		On exit  : 3F/3D
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;Total ram usage:        0 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:   13
 11802 ;; This function calls:
 11803 ;;		_receive
 11804 ;; This function is called by:
 11805 ;;		_bootLoadApplication
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text65
 11810  0084E4                     __ptext65:
 11811                           	opt callstack 0
 11812  0084E4                     _PHY_SetRxState:
 11813                           	opt callstack 16
 11814                           
 11815                           ; BSR set to: 61
 11816                           ;../phy/sx1216/phy_src/phy.c: 835:     receive(0);
 11817                           
 11818                           ; BSR set to: 57
 11819                           ;incstack = 0
 11820  0084E4  0E00               	movlw	0
 11821  0084E6  ECD6  F03C         	call	_receive
 11822                           
 11823                           ; BSR set to: 61
 11824  0084EA  0012               	return		;funcret
 11825  0084EC                     __end_of_PHY_SetRxState:
 11826                           	opt callstack 0
 11827                           
 11828 ;; *************** function _PHY_SetChannel *****************
 11829 ;; Defined at:
 11830 ;;		line 838 in file "../phy/sx1216/phy_src/phy.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  channel         1    wreg     unsigned char 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  channel         1   46[COMRAM] unsigned char 
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 3F/0
 11841 ;;		On exit  : 3F/3D
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;Total ram usage:        1 bytes
 11849 ;; Hardware stack levels used:    1
 11850 ;; Hardware stack levels required when called:   12
 11851 ;; This function calls:
 11852 ;;		_setFrequency
 11853 ;; This function is called by:
 11854 ;;		_bootLoadApplication
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           	psect	text66
 11859  0078F2                     __ptext66:
 11860                           	opt callstack 0
 11861  0078F2                     _PHY_SetChannel:
 11862                           	opt callstack 17
 11863                           
 11864                           ; BSR set to: 61
 11865                           ;incstack = 0
 11866                           ;PHY_SetChannel@channel stored from wreg
 11867  0078F2  6E2F               	movwf	PHY_SetChannel@channel^0,c
 11868                           
 11869                           ;../phy/sx1216/phy_src/phy.c: 839:     setFrequency(fhssList[channel]);
 11870  0078F4  502F               	movf	PHY_SetChannel@channel^0,w,c
 11871  0078F6  0D04               	mullw	4
 11872  0078F8  0EC9               	movlw	low _fhssList
 11873  0078FA  24F3               	addwf	243,w,c
 11874  0078FC  6EF6               	movwf	tblptrl,c
 11875  0078FE  0EFC               	movlw	high _fhssList
 11876  007900  20F4               	addwfc	244,w,c
 11877  007902  6EF7               	movwf	tblptrh,c
 11878  007904                     	if	1	;There are 3 active tblptr bytes
 11879  007904  6AF8               	clrf	tblptru,c
 11880  007906  0E00               	movlw	low (__mediumconst shr (0+16))
 11881  007908  22F8               	addwfc	tblptru,f,c
 11882  00790A                     	endif
 11883  00790A  0009               	tblrd		*+
 11884  00790C  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 11885  007912  0009               	tblrd		*+
 11886  007914  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 11887  00791A  0009               	tblrd		*+
 11888  00791C  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 11889  007922  000A               	tblrd		*-
 11890  007924  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 11891  00792A  ECE8  F021         	call	_setFrequency	;wreg free
 11892                           
 11893                           ; BSR set to: 61
 11894  00792E  0012               	return		;funcret
 11895  007930                     __end_of_PHY_SetChannel:
 11896                           	opt callstack 0
 11897                           
 11898 ;; *************** function _NWK_SetPanId *****************
 11899 ;; Defined at:
 11900 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;  panId           2    3[COMRAM] unsigned short 
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;		None
 11905 ;; Return value:  Size  Location     Type
 11906 ;;                  1    wreg      void 
 11907 ;; Registers used:
 11908 ;;		cstack
 11909 ;; Tracked objects:
 11910 ;;		On entry : 3F/0
 11911 ;;		On exit  : 3F/0
 11912 ;;		Unchanged: 3F/0
 11913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11918 ;;Total ram usage:        2 bytes
 11919 ;; Hardware stack levels used:    1
 11920 ;; Hardware stack levels required when called:    8
 11921 ;; This function calls:
 11922 ;;		_PHY_SetPanId
 11923 ;; This function is called by:
 11924 ;;		_bootLoadApplication
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           	psect	text67
 11929  0081AA                     __ptext67:
 11930                           	opt callstack 0
 11931  0081AA                     _NWK_SetPanId:
 11932                           	opt callstack 21
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 11936                           
 11937                           ; BSR set to: 61
 11938                           ;incstack = 0
 11939  0081AA  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 11940  0081B0  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 11944  0081B6  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 11945  0081BC  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 11946  0081C2  EC8C  F042         	call	_PHY_SetPanId	;wreg free
 11947                           
 11948                           ; BSR set to: 0
 11949  0081C6  0012               	return		;funcret
 11950  0081C8                     __end_of_NWK_SetPanId:
 11951                           	opt callstack 0
 11952                           
 11953 ;; *************** function _PHY_SetPanId *****************
 11954 ;; Defined at:
 11955 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;  panId           2    1[COMRAM] unsigned short 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;		None
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  1    wreg      void 
 11962 ;; Registers used:
 11963 ;;		None
 11964 ;; Tracked objects:
 11965 ;;		On entry : 3F/0
 11966 ;;		On exit  : 3F/0
 11967 ;;		Unchanged: 3F/0
 11968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11973 ;;Total ram usage:        2 bytes
 11974 ;; Hardware stack levels used:    1
 11975 ;; Hardware stack levels required when called:    7
 11976 ;; This function calls:
 11977 ;;		Nothing
 11978 ;; This function is called by:
 11979 ;;		_NWK_SetPanId
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           	psect	text68
 11984  008518                     __ptext68:
 11985                           	opt callstack 0
 11986  008518                     _PHY_SetPanId:
 11987                           	opt callstack 21
 11988                           
 11989                           ; BSR set to: 0
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;incstack = 0
 11993  008518  0012               	return		;funcret
 11994  00851A                     __end_of_PHY_SetPanId:
 11995                           	opt callstack 0
 11996                           
 11997 ;; *************** function _NWK_SetAddr *****************
 11998 ;; Defined at:
 11999 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  addr            2    3[COMRAM] unsigned short 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;		None
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 3F/0
 12010 ;;		On exit  : 3F/0
 12011 ;;		Unchanged: 3F/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;Total ram usage:        2 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:    8
 12020 ;; This function calls:
 12021 ;;		_PHY_SetShortAddr
 12022 ;; This function is called by:
 12023 ;;		_bootLoadApplication
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text69
 12028  0081C8                     __ptext69:
 12029                           	opt callstack 0
 12030  0081C8                     _NWK_SetAddr:
 12031                           	opt callstack 21
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;incstack = 0
 12038  0081C8  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 12039  0081CE  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 12043  0081D4  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 12044  0081DA  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 12045  0081E0  EC8D  F042         	call	_PHY_SetShortAddr	;wreg free
 12046                           
 12047                           ; BSR set to: 0
 12048  0081E4  0012               	return		;funcret
 12049  0081E6                     __end_of_NWK_SetAddr:
 12050                           	opt callstack 0
 12051                           
 12052 ;; *************** function _PHY_SetShortAddr *****************
 12053 ;; Defined at:
 12054 ;;		line 846 in file "../phy/sx1216/phy_src/phy.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;  addr            2    1[COMRAM] unsigned short 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      void 
 12061 ;; Registers used:
 12062 ;;		None
 12063 ;; Tracked objects:
 12064 ;;		On entry : 3F/0
 12065 ;;		On exit  : 3F/0
 12066 ;;		Unchanged: 3F/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;Total ram usage:        2 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    7
 12075 ;; This function calls:
 12076 ;;		Nothing
 12077 ;; This function is called by:
 12078 ;;		_NWK_SetAddr
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text70
 12083  00851A                     __ptext70:
 12084                           	opt callstack 0
 12085  00851A                     _PHY_SetShortAddr:
 12086                           	opt callstack 21
 12087                           
 12088                           ; BSR set to: 0
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;incstack = 0
 12092  00851A  0012               	return		;funcret
 12093  00851C                     __end_of_PHY_SetShortAddr:
 12094                           	opt callstack 0
 12095                           
 12096 ;; *************** function _DATAEE_WriteByte_Platform *****************
 12097 ;; Defined at:
 12098 ;;		line 40 in file "../app/app_src/EEPROM.c"
 12099 ;; Parameters:    Size  Location     Type
 12100 ;;  addr            2    5[COMRAM] unsigned short 
 12101 ;;  data            1    7[COMRAM] unsigned char 
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      void 
 12106 ;; Registers used:
 12107 ;;		wreg, status,2, status,0, cstack
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12113 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        3 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:    8
 12120 ;; This function calls:
 12121 ;;		_DATAEE_WriteByte
 12122 ;; This function is called by:
 12123 ;;		_cmdSetNaddr
 12124 ;;		_cmdSetAES
 12125 ;;		_cmdSetRFCH
 12126 ;;		_cmdSetTX
 12127 ;;		_cmdSetCADRSSI
 12128 ;;		_cmdBootLoad
 12129 ;;		_cmdSetSF
 12130 ;;		_bootLoadApplication
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text71
 12135  0076A2                     __ptext71:
 12136                           	opt callstack 0
 12137  0076A2                     _DATAEE_WriteByte_Platform:
 12138                           	opt callstack 19
 12139                           
 12140                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;incstack = 0
 12144  0076A2  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 12145  0076A8  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12146  0076AE  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12147  0076B4  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12148                           
 12149                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 12150  0076B8  0E00               	movlw	0
 12151  0076BA  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12152  0076BC  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12153  0076BE  0E01               	movlw	1
 12154  0076C0  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12155  0076C2  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12156  0076C4  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12157  0076CA  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12158                           
 12159                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 12160  0076CE  0E00               	movlw	0
 12161  0076D0  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12162  0076D2  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12163  0076D4  0E02               	movlw	2
 12164  0076D6  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12165  0076D8  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12166  0076DA  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12167  0076E0  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12168  0076E4  0012               	return		;funcret
 12169  0076E6                     __end_of_DATAEE_WriteByte_Platform:
 12170                           	opt callstack 0
 12171                           
 12172 ;; *************** function _DATAEE_ReadByte_Platform *****************
 12173 ;; Defined at:
 12174 ;;		line 6 in file "../app/app_src/EEPROM.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  addr            2    5[COMRAM] unsigned short 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;  copy1           1    9[COMRAM] unsigned char 
 12179 ;;  copy2           1    8[COMRAM] unsigned char 
 12180 ;;  copy3           1    7[COMRAM] unsigned char 
 12181 ;; Return value:  Size  Location     Type
 12182 ;;                  1    wreg      unsigned char 
 12183 ;; Registers used:
 12184 ;;		wreg, status,2, status,0, cstack
 12185 ;; Tracked objects:
 12186 ;;		On entry : 0/39
 12187 ;;		On exit  : 0/0
 12188 ;;		Unchanged: 0/0
 12189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;Total ram usage:        5 bytes
 12195 ;; Hardware stack levels used:    1
 12196 ;; Hardware stack levels required when called:    8
 12197 ;; This function calls:
 12198 ;;		_DATAEE_ReadByte
 12199 ;;		_DATAEE_WriteByte
 12200 ;; This function is called by:
 12201 ;;		_bootLoadApplication
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text72
 12206  004E8A                     __ptext72:
 12207                           	opt callstack 0
 12208  004E8A                     _DATAEE_ReadByte_Platform:
 12209                           	opt callstack 21
 12210                           
 12211                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 12212                           
 12213                           ;incstack = 0
 12214  004E8A  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 12215  004E90  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 12216  004E96  ECF3  F040         	call	_DATAEE_ReadByte	;wreg free
 12217  004E9A  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 12218                           
 12219                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 12220  004E9C  0E00               	movlw	0
 12221  004E9E  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12222  004EA0  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12223  004EA2  0E01               	movlw	1
 12224  004EA4  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12225  004EA6  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12226  004EA8  ECF3  F040         	call	_DATAEE_ReadByte	;wreg free
 12227  004EAC  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 12228                           
 12229                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 12230  004EAE  0E00               	movlw	0
 12231  004EB0  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12232  004EB2  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12233  004EB4  0E02               	movlw	2
 12234  004EB6  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12235  004EB8  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12236  004EBA  ECF3  F040         	call	_DATAEE_ReadByte	;wreg free
 12237  004EBE  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 12238                           
 12239                           ; BSR set to: 57
 12240                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 12241  004EC0  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12242  004EC2  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12243  004EC4  A4D8               	btfss	status,2,c
 12244  004EC6  D006               	goto	l12160
 12245                           
 12246                           ; BSR set to: 57
 12247  004EC8  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12248  004ECA  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12249  004ECC  A4D8               	btfss	status,2,c
 12250  004ECE  D002               	goto	l12160
 12251  004ED0                     u10810:
 12252                           
 12253                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 12254  004ED0  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12255  004ED2  0012               	return	
 12256  004ED4                     l12160:
 12257                           
 12258                           ; BSR set to: 57
 12259  004ED4  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12260  004ED6  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12261  004ED8  A4D8               	btfss	status,2,c
 12262  004EDA  D010               	goto	l12172
 12263                           
 12264                           ; BSR set to: 57
 12265  004EDC  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12266  004EDE  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12267  004EE0  B4D8               	btfsc	status,2,c
 12268  004EE2  D00C               	goto	l12172
 12269                           
 12270                           ; BSR set to: 57
 12271                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 12272  004EE4  0E00               	movlw	0
 12273  004EE6  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12274  004EE8  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12275  004EEA  0E02               	movlw	2
 12276  004EEC  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12277  004EEE  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12278  004EF0  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12279  004EF6  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12280  004EFA  D7EA               	goto	u10810
 12281  004EFC                     l12172:
 12282                           
 12283                           ; BSR set to: 57
 12284  004EFC  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12285  004EFE  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12286  004F00  B4D8               	btfsc	status,2,c
 12287  004F02  D011               	goto	l12184
 12288                           
 12289                           ; BSR set to: 57
 12290  004F04  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12291  004F06  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12292  004F08  A4D8               	btfss	status,2,c
 12293  004F0A  D00D               	goto	l12184
 12294                           
 12295                           ; BSR set to: 57
 12296                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 12297  004F0C  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 12298  004F12  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12299  004F18  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 12300  004F1E  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12301                           
 12302                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 12303  004F22  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12304  004F24  0012               	return	
 12305  004F26                     l12184:
 12306                           
 12307                           ; BSR set to: 57
 12308  004F26  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12309  004F28  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12310  004F2A  A4D8               	btfss	status,2,c
 12311  004F2C  D010               	goto	l12196
 12312                           
 12313                           ; BSR set to: 57
 12314  004F2E  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12315  004F30  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12316  004F32  B4D8               	btfsc	status,2,c
 12317  004F34  D00C               	goto	l12196
 12318                           
 12319                           ; BSR set to: 57
 12320                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 12321  004F36  0E00               	movlw	0
 12322  004F38  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12323  004F3A  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12324  004F3C  0E01               	movlw	1
 12325  004F3E  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12326  004F40  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12327  004F42  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12328  004F48  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12329  004F4C  D7C1               	goto	u10810
 12330  004F4E                     l12196:
 12331                           
 12332                           ; BSR set to: 57
 12333                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 12334  004F4E  0E00               	movlw	0
 12335  004F50  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12336  004F52  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12337  004F54  0E01               	movlw	1
 12338  004F56  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12339  004F58  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12340  004F5A  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12341  004F60  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12342                           
 12343                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 12344  004F64  0E00               	movlw	0
 12345  004F66  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12346  004F68  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12347  004F6A  0E02               	movlw	2
 12348  004F6C  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12349  004F6E  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12350  004F70  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12351  004F76  ECFA  F03B         	call	_DATAEE_WriteByte	;wreg free
 12352  004F7A  D7AA               	goto	u10810
 12353  004F7C                     __end_of_DATAEE_ReadByte_Platform:
 12354                           	opt callstack 0
 12355                           
 12356 ;; *************** function _DATAEE_WriteByte *****************
 12357 ;; Defined at:
 12358 ;;		line 172 in file "mcc_generated_files/memory.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  bAdd            2    1[COMRAM] unsigned short 
 12361 ;;  bData           1    3[COMRAM] unsigned char 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, status,0
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12373 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12377 ;;Total ram usage:        4 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    7
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_DATAEE_ReadByte_Platform
 12384 ;;		_DATAEE_WriteByte_Platform
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text73
 12389  0077F4                     __ptext73:
 12390                           	opt callstack 0
 12391  0077F4                     _DATAEE_WriteByte:
 12392                           	opt callstack 19
 12393                           
 12394                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12395                           
 12396                           ;incstack = 0
 12397  0077F4  0E00               	movlw	0
 12398  0077F6  BED2               	btfsc	210,7,c	;volatile
 12399  0077F8  0E01               	movlw	1
 12400  0077FA  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 12401                           
 12402                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12403  0077FC  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 12404  0077FE  0B03               	andlw	3
 12405  007800  0139               	movlb	57	; () banked
 12406  007802  6FE1               	movwf	225,b	;volatile
 12407                           
 12408                           ; BSR set to: 57
 12409                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12410  007804  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 12411                           
 12412                           ; BSR set to: 57
 12413                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12414  00780A  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 12415                           
 12416                           ; BSR set to: 57
 12417                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12418  007810  0E3F               	movlw	-193
 12419  007812  17E5               	andwf	229,f,b	;volsfr
 12420                           
 12421                           ; BSR set to: 57
 12422                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12423  007814  85E5               	bsf	229,2,b	;volsfr
 12424                           
 12425                           ; BSR set to: 57
 12426                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12427  007816  9ED2               	bcf	210,7,c	;volatile
 12428                           
 12429                           ; BSR set to: 57
 12430                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12431  007818  0E55               	movlw	85
 12432  00781A  6FE6               	movwf	230,b	;volsfr
 12433                           
 12434                           ; BSR set to: 57
 12435                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12436  00781C  0EAA               	movlw	170
 12437  00781E  6FE6               	movwf	230,b	;volsfr
 12438                           
 12439                           ; BSR set to: 57
 12440                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12441  007820  83E5               	bsf	229,1,b	;volsfr
 12442  007822                     l1180:
 12443                           
 12444                           ; BSR set to: 57
 12445                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12446  007822  B3E5               	btfsc	229,1,b	;volsfr
 12447  007824  D7FE               	goto	l1180
 12448                           
 12449                           ; BSR set to: 57
 12450                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12451  007826  95E5               	bcf	229,2,b	;volsfr
 12452                           
 12453                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12454  007828  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 12455  00782A  D002               	bra	u7795
 12456  00782C  9ED2               	bcf	210,7,c	;volatile
 12457  00782E  D001               	bra	u7796
 12458  007830                     u7795:
 12459  007830  8ED2               	bsf	210,7,c	;volatile
 12460  007832                     u7796:
 12461  007832  0012               	return		;funcret
 12462  007834                     __end_of_DATAEE_WriteByte:
 12463                           	opt callstack 0
 12464                           
 12465 ;; *************** function _DATAEE_ReadByte *****************
 12466 ;; Defined at:
 12467 ;;		line 194 in file "mcc_generated_files/memory.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  bAdd            2    1[COMRAM] unsigned short 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      unsigned char 
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/39
 12478 ;;		On exit  : 3F/39
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;Total ram usage:        2 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    7
 12488 ;; This function calls:
 12489 ;;		Nothing
 12490 ;; This function is called by:
 12491 ;;		_DATAEE_ReadByte_Platform
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text74
 12496  0081E6                     __ptext74:
 12497                           	opt callstack 0
 12498  0081E6                     _DATAEE_ReadByte:
 12499                           	opt callstack 21
 12500                           
 12501                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 12502                           
 12503                           ;incstack = 0
 12504  0081E6  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 12505  0081E8  0B03               	andlw	3
 12506  0081EA  0139               	movlb	57	; () banked
 12507  0081EC  6FE1               	movwf	225,b	;volatile
 12508                           
 12509                           ; BSR set to: 57
 12510                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12511  0081EE  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 12512                           
 12513                           ; BSR set to: 57
 12514                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 12515  0081F4  0E3F               	movlw	-193
 12516  0081F6  17E5               	andwf	229,f,b	;volsfr
 12517                           
 12518                           ; BSR set to: 57
 12519                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 12520  0081F8  81E5               	bsf	229,0,b	;volsfr
 12521                           
 12522                           ; BSR set to: 57
 12523                           ;mcc_generated_files/memory.c: 200:     __nop();
 12524  0081FA  F000               	nop	
 12525                           
 12526                           ;mcc_generated_files/memory.c: 201:     __nop();
 12527  0081FC  F000               	nop	
 12528                           
 12529                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 12530  0081FE  0139               	movlb	57	; () banked
 12531  008200  51E3               	movf	227,w,b	;volatile
 12532                           
 12533                           ; BSR set to: 57
 12534  008202  0012               	return		;funcret
 12535  008204                     __end_of_DATAEE_ReadByte:
 12536                           	opt callstack 0
 12537                           
 12538 ;; *************** function _SYS_TaskHandler *****************
 12539 ;; Defined at:
 12540 ;;		line 67 in file "../sys/sys_src/sys.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;		None
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;		None
 12545 ;; Return value:  Size  Location     Type
 12546 ;;                  1    wreg      void 
 12547 ;; Registers used:
 12548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12549 ;; Tracked objects:
 12550 ;;		On entry : 0/2
 12551 ;;		On exit  : 3F/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;Total ram usage:        0 bytes
 12559 ;; Hardware stack levels used:    1
 12560 ;; Hardware stack levels required when called:   21
 12561 ;; This function calls:
 12562 ;;		_NWK_TaskHandler
 12563 ;;		_PHY_TaskHandler
 12564 ;;		_SYS_TimerTaskHandler
 12565 ;; This function is called by:
 12566 ;;		_main
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text75
 12571  00842E                     __ptext75:
 12572                           	opt callstack 0
 12573  00842E                     _SYS_TaskHandler:
 12574                           	opt callstack 9
 12575                           
 12576                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 12577                           
 12578                           ; BSR set to: 57
 12579                           ;incstack = 0
 12580  00842E  EC7C  F042         	call	_PHY_TaskHandler	;wreg free
 12581                           
 12582                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 12583  008432  EC1E  F042         	call	_NWK_TaskHandler	;wreg free
 12584                           
 12585                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 12586  008436  EC31  F024         	call	_SYS_TimerTaskHandler	;wreg free
 12587                           
 12588                           ; BSR set to: 0
 12589  00843A  0012               	return		;funcret
 12590  00843C                     __end_of_SYS_TaskHandler:
 12591                           	opt callstack 0
 12592                           
 12593 ;; *************** function _SYS_TimerTaskHandler *****************
 12594 ;; Defined at:
 12595 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;		None
 12598 ;; Auto vars:     Size  Location     Type
 12599 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 12600 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12601 ;;  elapsed         4   29[COMRAM] unsigned long 
 12602 ;;  cnt             1   28[COMRAM] unsigned char 
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  1    wreg      void 
 12605 ;; Registers used:
 12606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 3F/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12615 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12616 ;;Total ram usage:       11 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; Hardware stack levels required when called:   10
 12619 ;; This function calls:
 12620 ;;		_nwkRxDuplicateRejectionTimerHandler
 12621 ;;		_nwkTxAckWaitTimerHandler
 12622 ;;		_nwkTxDelayTimerHandler
 12623 ;;		_placeTimer
 12624 ;; This function is called by:
 12625 ;;		_SYS_TaskHandler
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           	psect	text76
 12630  004862                     __ptext76:
 12631                           	opt callstack 0
 12632  004862                     _SYS_TimerTaskHandler:
 12633                           	opt callstack 19
 12634                           
 12635                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;incstack = 0
 12639  004862  0100               	movlb	0	; () banked
 12640  004864  51E4               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 12641  004866  11E5               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 12642  004868  B4D8               	btfsc	status,2,c
 12643  00486A  0012               	return	
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 12647                           
 12648                           ;../sys/sys_src/sysTimer.c: 119:     }
 12649  00486C  0139               	movlb	57	; () banked
 12650  00486E  9F93               	bcf	147,7,b	;volatile
 12651                           
 12652                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 12653  004870  0060  F390  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 12654                           
 12655                           ; BSR set to: 57
 12656                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 12657  004876  0E00               	movlw	0
 12658  004878  0100               	movlb	0	; () banked
 12659  00487A  6FE5               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 12660  00487C  0E00               	movlw	0
 12661  00487E  6FE4               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 12665  004880  0139               	movlb	57	; () banked
 12666  004882  8F93               	bsf	147,7,b	;volatile
 12667                           
 12668                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 12669  004884  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 12670  004886  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 12671  004888  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 12672  00488A  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 12673  00488C  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 12674                           
 12675                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12676  00488E  D04E               	goto	u15749
 12677  004890                     l15924:
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 12681  004890  0060  F380  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 12682  004896  0060  F384  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 12686  00489C  EE20 F002          	lfsr	2,2
 12687  0048A0  51E0               	movf	_timers& (0+255),w,b
 12688  0048A2  26D9               	addwf	fsr2l,f,c
 12689  0048A4  51E1               	movf	(_timers+1)& (0+255),w,b
 12690  0048A6  22DA               	addwfc	fsr2h,f,c
 12691  0048A8  50DE               	movf	postinc2,w,c
 12692  0048AA  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 12693  0048AC  50DE               	movf	postinc2,w,c
 12694  0048AE  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 12695  0048B0  50DE               	movf	postinc2,w,c
 12696  0048B2  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 12697  0048B4  50DD               	movf	postdec2,w,c
 12698  0048B6  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 12699                           
 12700                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 12701  0048B8  0060  F383  FFD9   	movff	_timers,fsr2l
 12702  0048BE  0060  F387  FFDA   	movff	_timers+1,fsr2h
 12703  0048C4  006F FF78  F0E0    	movff	postinc2,_timers
 12704  0048CA  006F FF74  F0E1    	movff	postdec2,_timers+1
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 12708  0048D0  EE20 F00A          	lfsr	2,10
 12709  0048D4  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12710  0048D6  26D9               	addwf	fsr2l,f,c
 12711  0048D8  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12712  0048DA  22DA               	addwfc	fsr2h,f,c
 12713  0048DC  04DE               	decf	postinc2,w,c
 12714  0048DE  A4D8               	btfss	status,2,c
 12715  0048E0  D008               	goto	l15932
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 12719  0048E2  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 12720  0048E8  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 12721  0048EE  ECF2  F018         	call	_placeTimer	;wreg free
 12722  0048F2                     l15932:
 12723                           
 12724                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 12725  0048F2  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 12726  0048F8  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 12727  0048FE  EE20 F00B          	lfsr	2,11
 12728  004902  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12729  004904  26D9               	addwf	fsr2l,f,c
 12730  004906  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12731  004908  22DA               	addwfc	fsr2h,f,c
 12732  00490A  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 12733  004910  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 12734  004916  D801               	call	u15748
 12735  004918  D009               	goto	u15749
 12736  00491A                     u15748:
 12737  00491A  0005               	push	
 12738  00491C  6EFA               	movwf	pclath,c
 12739  00491E  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 12740  004920  6EFD               	movwf	tosl,c
 12741  004922  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 12742  004924  6EFE               	movwf	tosh,c
 12743  004926  6AFF               	clrf	tosu,c
 12744  004928  50FA               	movf	pclath,w,c
 12745  00492A  0012               	return		;indir
 12746  00492C                     u15749:
 12747                           
 12748                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12749  00492C  0100               	movlb	0	; () banked
 12750  00492E  51E0               	movf	_timers& (0+255),w,b
 12751  004930  11E1               	iorwf	(_timers+1)& (0+255),w,b
 12752  004932  B4D8               	btfsc	status,2,c
 12753  004934  D010               	goto	u15760
 12754                           
 12755                           ; BSR set to: 0
 12756  004936  EE20 F002          	lfsr	2,2
 12757  00493A  51E0               	movf	_timers& (0+255),w,b
 12758  00493C  26D9               	addwf	fsr2l,f,c
 12759  00493E  51E1               	movf	(_timers+1)& (0+255),w,b
 12760  004940  22DA               	addwfc	fsr2h,f,c
 12761  004942  50DE               	movf	postinc2,w,c
 12762  004944  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 12763  004946  50DE               	movf	postinc2,w,c
 12764  004948  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12765  00494A  50DE               	movf	postinc2,w,c
 12766  00494C  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12767  00494E  50DE               	movf	postinc2,w,c
 12768  004950  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12769  004952  B0D8               	btfsc	status,0,c
 12770  004954  D79D               	goto	l15924
 12771  004956                     u15760:
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 12775  004956  51E0               	movf	_timers& (0+255),w,b
 12776  004958  11E1               	iorwf	(_timers+1)& (0+255),w,b
 12777  00495A  B4D8               	btfsc	status,2,c
 12778  00495C  0012               	return	
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 12782  00495E  EE20 F002          	lfsr	2,2
 12783  004962  51E0               	movf	_timers& (0+255),w,b
 12784  004964  26D9               	addwf	fsr2l,f,c
 12785  004966  51E1               	movf	(_timers+1)& (0+255),w,b
 12786  004968  22DA               	addwfc	fsr2h,f,c
 12787  00496A  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 12788  00496C  5EDE               	subwf	postinc2,f,c
 12789  00496E  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12790  004970  5ADE               	subwfb	postinc2,f,c
 12791  004972  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12792  004974  5ADE               	subwfb	postinc2,f,c
 12793  004976  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12794  004978  5ADE               	subwfb	postinc2,f,c
 12795                           
 12796                           ; BSR set to: 0
 12797  00497A  0012               	return		;funcret
 12798  00497C                     __end_of_SYS_TimerTaskHandler:
 12799                           	opt callstack 0
 12800                           
 12801 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 12802 ;; Defined at:
 12803 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12806 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 12809 ;;		 -> nwkFrameFrames(685), NULL(0), 
 12810 ;;  restart         1   21[COMRAM] _Bool 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12821 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12823 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;Total ram usage:        7 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    9
 12827 ;; This function calls:
 12828 ;;		_SYS_TimerStart
 12829 ;;		_nwkFrameNext
 12830 ;;		_nwkTxConfirm
 12831 ;; This function is called by:
 12832 ;;		_nwkTxInit
 12833 ;;		_SYS_TimerTaskHandler
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text77
 12838  006556                     __ptext77:
 12839                           	opt callstack 0
 12840  006556                     _nwkTxAckWaitTimerHandler:
 12841                           	opt callstack 19
 12842                           
 12843                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;incstack = 0
 12847  006556  0E00               	movlw	0
 12848  006558  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 12849  00655A  0E00               	movlw	0
 12850  00655C  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 12851                           
 12852                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 12853  00655E  0E00               	movlw	0
 12854  006560  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12855                           
 12856                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12857  006562  D023               	goto	l2313
 12858  006564                     l15624:
 12859                           
 12860                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 12861  006564  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 12862  00656A  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 12863  006570  0E16               	movlw	22
 12864  006572  18DE               	xorwf	postinc2,w,c
 12865  006574  A4D8               	btfss	status,2,c
 12866  006576  D019               	goto	l2313
 12867                           
 12868                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 12869  006578  0E01               	movlw	1
 12870  00657A  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12871                           
 12872                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 12873  00657C  EE20 F084          	lfsr	2,132
 12874  006580  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12875  006582  26D9               	addwf	fsr2l,f,c
 12876  006584  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12877  006586  22DA               	addwfc	fsr2h,f,c
 12878  006588  06DE               	decf	postinc2,f,c
 12879  00658A  0E00               	movlw	0
 12880  00658C  5ADD               	subwfb	postdec2,f,c
 12881  00658E  50DE               	movf	postinc2,w,c
 12882  006590  10DE               	iorwf	postinc2,w,c
 12883  006592  A4D8               	btfss	status,2,c
 12884  006594  D00A               	goto	l2313
 12885                           
 12886                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 12887  006596  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 12888  00659C  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 12889  0065A2  0E10               	movlw	16
 12890  0065A4  6E04               	movwf	nwkTxConfirm@status^0,c
 12891  0065A6  ECC8  F03F         	call	_nwkTxConfirm	;wreg free
 12892  0065AA                     l2313:
 12893                           
 12894                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12895  0065AA  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 12896  0065B0  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 12897  0065B6  EC7E  F033         	call	_nwkFrameNext	;wreg free
 12898  0065BA  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 12899  0065C0  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 12900  0065C6  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12901  0065C8  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12902  0065CA  A4D8               	btfss	status,2,c
 12903  0065CC  D7CB               	goto	l15624
 12904                           
 12905                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 12906  0065CE  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 12907  0065D0  B4D8               	btfsc	status,2,c
 12908  0065D2  0012               	return	
 12909                           
 12910                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 12911  0065D4  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 12912  0065DA  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 12913  0065E0  EC8D  F03F         	call	_SYS_TimerStart	;wreg free
 12914  0065E4  0012               	return		;funcret
 12915  0065E6                     __end_of_nwkTxAckWaitTimerHandler:
 12916                           	opt callstack 0
 12917                           
 12918 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 12919 ;; Defined at:
 12920 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12923 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12924 ;; Auto vars:     Size  Location     Type
 12925 ;;  i               1   20[COMRAM] unsigned char 
 12926 ;;  restart         1   19[COMRAM] _Bool 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  1    wreg      void 
 12929 ;; Registers used:
 12930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;Total ram usage:        4 bytes
 12941 ;; Hardware stack levels used:    1
 12942 ;; Hardware stack levels required when called:    9
 12943 ;; This function calls:
 12944 ;;		_SYS_TimerStart
 12945 ;; This function is called by:
 12946 ;;		_nwkRxInit
 12947 ;;		_SYS_TimerTaskHandler
 12948 ;; This function uses a non-reentrant model
 12949 ;;
 12950                           
 12951                           	psect	text78
 12952  007350                     __ptext78:
 12953                           	opt callstack 0
 12954  007350                     _nwkRxDuplicateRejectionTimerHandler:
 12955                           	opt callstack 19
 12956                           
 12957                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 12958                           
 12959                           ;incstack = 0
 12960  007350  0E00               	movlw	0
 12961  007352  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 12962                           
 12963                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 12964  007354  0E00               	movlw	0
 12965  007356  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 12966  007358                     l15606:
 12967                           
 12968                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 12969  007358  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 12970  00735A  0D05               	mullw	5
 12971  00735C  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 12972  00735E  24F3               	addwf	243,w,c
 12973  007360  6ED9               	movwf	fsr2l,c
 12974  007362  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 12975  007364  20F4               	addwfc	prodh,w,c
 12976  007366  6EDA               	movwf	fsr2h,c
 12977  007368  50DF               	movf	indf2,w,c
 12978  00736A  B4D8               	btfsc	status,2,c
 12979  00736C  D00B               	goto	l15612
 12980                           
 12981                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 12982  00736E  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 12983  007370  0D05               	mullw	5
 12984  007372  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 12985  007374  24F3               	addwf	243,w,c
 12986  007376  6ED9               	movwf	fsr2l,c
 12987  007378  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 12988  00737A  20F4               	addwfc	prodh,w,c
 12989  00737C  6EDA               	movwf	fsr2h,c
 12990  00737E  06DF               	decf	indf2,f,c
 12991                           
 12992                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 12993  007380  0E01               	movlw	1
 12994  007382  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 12995  007384                     l15612:
 12996                           
 12997                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 12998  007384  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 12999  007386  0E09               	movlw	9
 13000  007388  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13001  00738A  D7E6               	goto	l15606
 13002                           
 13003                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 13004  00738C  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 13005  00738E  B4D8               	btfsc	status,2,c
 13006  007390  0012               	return	
 13007                           
 13008                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 13009  007392  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 13010  007398  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 13011  00739E  EC8D  F03F         	call	_SYS_TimerStart	;wreg free
 13012  0073A2  0012               	return		;funcret
 13013  0073A4                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 13014                           	opt callstack 0
 13015                           
 13016 ;; *************** function _nwkTxDelayTimerHandler *****************
 13017 ;; Defined at:
 13018 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13021 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 13024 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13025 ;;  restart         1   21[COMRAM] _Bool 
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13039 ;;Total ram usage:        7 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:    9
 13042 ;; This function calls:
 13043 ;;		_SYS_TimerStart
 13044 ;;		_nwkFrameNext
 13045 ;; This function is called by:
 13046 ;;		_nwkTxInit
 13047 ;;		_SYS_TimerTaskHandler
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           	psect	text79
 13052  0065E6                     __ptext79:
 13053                           	opt callstack 0
 13054  0065E6                     _nwkTxDelayTimerHandler:
 13055                           	opt callstack 19
 13056                           
 13057                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 13058                           
 13059                           ;incstack = 0
 13060  0065E6  0E00               	movlw	0
 13061  0065E8  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 13062  0065EA  0E00               	movlw	0
 13063  0065EC  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 13064                           
 13065                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 13066  0065EE  0E00               	movlw	0
 13067  0065F0  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13068                           
 13069                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13070  0065F2  D021               	goto	l15648
 13071  0065F4                     l15640:
 13072                           
 13073                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 13074  0065F4  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13075  0065FA  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13076  006600  0E11               	movlw	17
 13077  006602  18DE               	xorwf	postinc2,w,c
 13078  006604  A4D8               	btfss	status,2,c
 13079  006606  D017               	goto	l15648
 13080                           
 13081                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 13082  006608  0E01               	movlw	1
 13083  00660A  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13084                           
 13085                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 13086  00660C  EE20 F084          	lfsr	2,132
 13087  006610  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13088  006612  26D9               	addwf	fsr2l,f,c
 13089  006614  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13090  006616  22DA               	addwfc	fsr2h,f,c
 13091  006618  06DE               	decf	postinc2,f,c
 13092  00661A  0E00               	movlw	0
 13093  00661C  5ADD               	subwfb	postdec2,f,c
 13094  00661E  50DE               	movf	postinc2,w,c
 13095  006620  10DE               	iorwf	postinc2,w,c
 13096  006622  A4D8               	btfss	status,2,c
 13097  006624  D008               	goto	l15648
 13098                           
 13099                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 13100  006626  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13101  00662C  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13102  006632  0E13               	movlw	19
 13103  006634  6EDF               	movwf	indf2,c
 13104  006636                     l15648:
 13105                           
 13106                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13107  006636  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 13108  00663C  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 13109  006642  EC7E  F033         	call	_nwkFrameNext	;wreg free
 13110  006646  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 13111  00664C  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 13112  006652  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13113  006654  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13114  006656  A4D8               	btfss	status,2,c
 13115  006658  D7CD               	goto	l15640
 13116                           
 13117                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 13118  00665A  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 13119  00665C  B4D8               	btfsc	status,2,c
 13120  00665E  0012               	return	
 13121                           
 13122                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 13123  006660  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 13124  006666  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 13125  00666C  EC8D  F03F         	call	_SYS_TimerStart	;wreg free
 13126  006670  0012               	return		;funcret
 13127  006672                     __end_of_nwkTxDelayTimerHandler:
 13128                           	opt callstack 0
 13129                           
 13130 ;; *************** function _nwkTxConfirm *****************
 13131 ;; Defined at:
 13132 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 13135 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13136 ;;  status          1    3[COMRAM] unsigned char 
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;		None
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  1    wreg      void 
 13141 ;; Registers used:
 13142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13148 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;Total ram usage:        3 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    7
 13155 ;; This function calls:
 13156 ;;		Nothing
 13157 ;; This function is called by:
 13158 ;;		_nwkTxAckWaitTimerHandler
 13159 ;; This function uses a non-reentrant model
 13160 ;;
 13161                           
 13162                           	psect	text80
 13163  007F90                     __ptext80:
 13164                           	opt callstack 0
 13165  007F90                     _nwkTxConfirm:
 13166                           	opt callstack 20
 13167                           
 13168                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 13169                           
 13170                           ;incstack = 0
 13171  007F90  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 13172  007F96  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 13173  007F9C  0E17               	movlw	23
 13174  007F9E  6EDF               	movwf	indf2,c
 13175                           
 13176                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 13177  007FA0  EE20 F083          	lfsr	2,131
 13178  007FA4  5002               	movf	nwkTxConfirm@frame^0,w,c
 13179  007FA6  26D9               	addwf	fsr2l,f,c
 13180  007FA8  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 13181  007FAA  22DA               	addwfc	fsr2h,f,c
 13182  007FAC  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 13183  007FB2  0012               	return		;funcret
 13184  007FB4                     __end_of_nwkTxConfirm:
 13185                           	opt callstack 0
 13186                           
 13187 ;; *************** function _PHY_TaskHandler *****************
 13188 ;; Defined at:
 13189 ;;		line 879 in file "../phy/sx1216/phy_src/phy.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;		None
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  1    wreg      void 
 13196 ;; Registers used:
 13197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/2
 13200 ;;		On exit  : 2/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;Total ram usage:        0 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:   15
 13210 ;; This function calls:
 13211 ;;		_radio_engine
 13212 ;; This function is called by:
 13213 ;;		_SYS_TaskHandler
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text81
 13218  0084F8                     __ptext81:
 13219                           	opt callstack 0
 13220  0084F8                     _PHY_TaskHandler:
 13221                           	opt callstack 14
 13222                           
 13223                           ;../phy/sx1216/phy_src/phy.c: 880:     radio_engine();
 13224                           
 13225                           ;incstack = 0
 13226  0084F8  EC7D  F022         	call	_radio_engine	;wreg free
 13227  0084FC  0012               	return		;funcret
 13228  0084FE                     __end_of_PHY_TaskHandler:
 13229                           	opt callstack 0
 13230                           
 13231 ;; *************** function _radio_engine *****************
 13232 ;; Defined at:
 13233 ;;		line 762 in file "../phy/sx1216/phy_src/phy.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;		None
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  1    wreg      void 
 13240 ;; Registers used:
 13241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/2
 13244 ;;		On exit  : 2/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13251 ;;Total ram usage:        2 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:   14
 13254 ;; This function calls:
 13255 ;;		_DIO0_Receive_ISR
 13256 ;;		_PHY_DataConf
 13257 ;;		_SX1276Read
 13258 ;;		_cad
 13259 ;;		_get_timer0base
 13260 ;;		_initRadio
 13261 ;;		_receive
 13262 ;;		_set_timer0base
 13263 ;; This function is called by:
 13264 ;;		_PHY_TaskHandler
 13265 ;; This function uses a non-reentrant model
 13266 ;;
 13267                           
 13268                           	psect	text82
 13269  0044FA                     __ptext82:
 13270                           	opt callstack 0
 13271  0044FA                     _radio_engine:
 13272                           	opt callstack 14
 13273                           
 13274                           ;../phy/sx1216/phy_src/phy.c: 763:     switch(radio_state_var){
 13275                           
 13276                           ;incstack = 0
 13277  0044FA  D073               	goto	l15710
 13278  0044FC                     l15656:
 13279                           
 13280                           ; BSR set to: 1
 13281                           ;../phy/sx1216/phy_src/phy.c: 765:             initRadio();
 13282  0044FC  EC6E  F01D         	call	_initRadio	;wreg free
 13283                           
 13284                           ; BSR set to: 1
 13285                           ;../phy/sx1216/phy_src/phy.c: 766:             radio_state_var = START_RX;
 13286  004500  0E01               	movlw	1
 13287  004502  6F64               	movwf	_radio_state_var& (0+255),b
 13288                           
 13289                           ; BSR set to: 1
 13290                           ;../phy/sx1216/phy_src/phy.c: 767:             need_radio_reset = 0;
 13291  004504  0E00               	movlw	0
 13292  004506  6F6A               	movwf	_need_radio_reset& (0+255),b
 13293                           
 13294                           ;../phy/sx1216/phy_src/phy.c: 768:             break;
 13295  004508  0012               	return	
 13296  00450A                     l15662:
 13297                           
 13298                           ; BSR set to: 1
 13299                           ;../phy/sx1216/phy_src/phy.c: 770:             if(need_radio_reset){
 13300  00450A  516A               	movf	_need_radio_reset& (0+255),w,b
 13301  00450C  B4D8               	btfsc	status,2,c
 13302  00450E  D003               	goto	l15666
 13303  004510                     u15280:
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;../phy/sx1216/phy_src/phy.c: 771:                 radio_state_var = INIT_RADIO;
 13307  004510  0E00               	movlw	0
 13308  004512  6F64               	movwf	_radio_state_var& (0+255),b
 13309                           
 13310                           ;../phy/sx1216/phy_src/phy.c: 772:                 break;
 13311  004514  0012               	return	
 13312  004516                     l15666:
 13313                           
 13314                           ; BSR set to: 1
 13315                           ;../phy/sx1216/phy_src/phy.c: 774:             receive(0);
 13316  004516  0E00               	movlw	0
 13317  004518  ECD6  F03C         	call	_receive
 13318                           
 13319                           ; BSR set to: 61
 13320                           ;../phy/sx1216/phy_src/phy.c: 775:             radio_state_var = WAIT_FOR_RX;
 13321  00451C  0E02               	movlw	2
 13322  00451E  0101               	movlb	1	; () banked
 13323  004520  6F64               	movwf	_radio_state_var& (0+255),b
 13324                           
 13325                           ;../phy/sx1216/phy_src/phy.c: 776:             break;
 13326  004522  0012               	return	
 13327  004524                     l2648:
 13328                           
 13329                           ; BSR set to: 1
 13330                           ;../phy/sx1216/phy_src/phy.c: 778:             if(PORTBbits.RB4){
 13331  004524  A8CB               	btfss	203,4,c	;volatile
 13332  004526  0012               	return	
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;../phy/sx1216/phy_src/phy.c: 779:                 radio_state_var = RX_MESSAGE;
 13336  004528  0E03               	movlw	3
 13337  00452A  6F64               	movwf	_radio_state_var& (0+255),b
 13338  00452C  0012               	return	
 13339  00452E                     l15672:
 13340                           
 13341                           ; BSR set to: 1
 13342                           ;../phy/sx1216/phy_src/phy.c: 783:             DIO0_Receive_ISR();
 13343  00452E  EC7B  F031         	call	_DIO0_Receive_ISR	;wreg free
 13344  004532                     l15674:
 13345                           
 13346                           ;../phy/sx1216/phy_src/phy.c: 784:             radio_state_var = START_RX;
 13347  004532  0E01               	movlw	1
 13348  004534  0101               	movlb	1	; () banked
 13349  004536  6F64               	movwf	_radio_state_var& (0+255),b
 13350                           
 13351                           ;../phy/sx1216/phy_src/phy.c: 785:             break;
 13352  004538  0012               	return	
 13353  00453A                     l15676:
 13354                           
 13355                           ; BSR set to: 1
 13356                           ;../phy/sx1216/phy_src/phy.c: 787:             if(!get_timer0base(&_cadBackoffTimer)){
 13357  00453A  0EF7               	movlw	low __cadBackoffTimer
 13358  00453C  6E02               	movwf	get_timer0base@timer^0,c
 13359  00453E  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13360  004540  EC39  F03F         	call	_get_timer0base	;wreg free
 13361  004544  5002               	movf	?_get_timer0base^0,w,c
 13362  004546  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13363  004548  A4D8               	btfss	status,2,c
 13364  00454A  D7F3               	goto	l15674
 13365                           
 13366                           ; BSR set to: 57
 13367                           ;../phy/sx1216/phy_src/phy.c: 788:                 if(cad()){
 13368  00454C  ECA8  F02D         	call	_cad	;wreg free
 13369  004550  0900               	iorlw	0
 13370  004552  B4D8               	btfsc	status,2,c
 13371  004554  D012               	goto	l15688
 13372                           
 13373                           ;../phy/sx1216/phy_src/phy.c: 790:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 13374  004556  0EF7               	movlw	low __cadBackoffTimer
 13375  004558  6E02               	movwf	set_timer0base@timer^0,c
 13376  00455A  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13377  00455C  0E07               	movlw	7
 13378  00455E  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13379  004560  0ED0               	movlw	208
 13380  004562  6E04               	movwf	set_timer0base@tval^0,c
 13381  004564  EC75  F040         	call	_set_timer0base	;wreg free
 13382                           
 13383                           ; BSR set to: 57
 13384                           ;../phy/sx1216/phy_src/phy.c: 792:                     radio_state_var = START_RX;
 13385  004568  0E01               	movlw	1
 13386  00456A  0101               	movlb	1	; () banked
 13387  00456C  6F64               	movwf	_radio_state_var& (0+255),b
 13388                           
 13389                           ; BSR set to: 1
 13390                           ;../phy/sx1216/phy_src/phy.c: 793:                     if(cadCounter < 10)
 13391  00456E  0E0A               	movlw	10
 13392  004570  0100               	movlb	0	; () banked
 13393  004572  61ED               	cpfslt	_cadCounter& (0+255),b
 13394  004574  0012               	return	
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;../phy/sx1216/phy_src/phy.c: 794:                     {;../phy/sx1216/phy_src/phy.c: 79
      +                          5:                         cadCounter++;
 13398  004576  2BED               	incf	_cadCounter& (0+255),f,b
 13399  004578  0012               	return	
 13400  00457A                     l15688:
 13401                           
 13402                           ;../phy/sx1216/phy_src/phy.c: 800:                 radio_state_var = START_TX;
 13403  00457A  0E06               	movlw	6
 13404  00457C  0101               	movlb	1	; () banked
 13405  00457E  6F64               	movwf	_radio_state_var& (0+255),b
 13406  004580  0012               	return	
 13407  004582                     l15692:
 13408                           
 13409                           ; BSR set to: 1
 13410                           ;../phy/sx1216/phy_src/phy.c: 809:             set_timer0base(&txTimeOut, 1000);
 13411  004582  0EF3               	movlw	low _txTimeOut
 13412  004584  6E02               	movwf	set_timer0base@timer^0,c
 13413  004586  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13414  004588  0E03               	movlw	3
 13415  00458A  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13416  00458C  0EE8               	movlw	232
 13417  00458E  6E04               	movwf	set_timer0base@tval^0,c
 13418  004590  EC75  F040         	call	_set_timer0base	;wreg free
 13419                           
 13420                           ; BSR set to: 57
 13421                           ;../phy/sx1216/phy_src/phy.c: 810:             radio_state_var = WAIT_FOR_TX;
 13422  004594  0E07               	movlw	7
 13423  004596  0101               	movlb	1	; () banked
 13424  004598  6F64               	movwf	_radio_state_var& (0+255),b
 13425                           
 13426                           ;../phy/sx1216/phy_src/phy.c: 811:             break;
 13427  00459A  0012               	return	
 13428  00459C                     l15696:
 13429                           
 13430                           ; BSR set to: 1
 13431                           ;../phy/sx1216/phy_src/phy.c: 813:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 13432  00459C  0EF3               	movlw	low _txTimeOut
 13433  00459E  6E02               	movwf	get_timer0base@timer^0,c
 13434  0045A0  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13435  0045A2  EC39  F03F         	call	_get_timer0base	;wreg free
 13436  0045A6  5002               	movf	?_get_timer0base^0,w,c
 13437  0045A8  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13438  0045AA  B4D8               	btfsc	status,2,c
 13439  0045AC  D006               	goto	u15340
 13440                           
 13441                           ; BSR set to: 57
 13442  0045AE  0E12               	movlw	18
 13443  0045B0  ECAE  F041         	call	_SX1276Read
 13444  0045B4  6E3A               	movwf	??_radio_engine^0,c
 13445  0045B6  A63A               	btfss	??_radio_engine^0,3,c
 13446  0045B8  0012               	return	
 13447  0045BA                     u15340:
 13448                           
 13449                           ;../phy/sx1216/phy_src/phy.c: 814:                 radio_state_var = START_RX;
 13450  0045BA  0E01               	movlw	1
 13451  0045BC  0101               	movlb	1	; () banked
 13452  0045BE  6F64               	movwf	_radio_state_var& (0+255),b
 13453                           
 13454                           ; BSR set to: 1
 13455                           ;../phy/sx1216/phy_src/phy.c: 815:                 if(get_timer0base(&txTimeOut)){
 13456  0045C0  0EF3               	movlw	low _txTimeOut
 13457  0045C2  6E02               	movwf	get_timer0base@timer^0,c
 13458  0045C4  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13459  0045C6  EC39  F03F         	call	_get_timer0base	;wreg free
 13460  0045CA  5002               	movf	?_get_timer0base^0,w,c
 13461  0045CC  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13462  0045CE  B4D8               	btfsc	status,2,c
 13463  0045D0  D004               	goto	l15706
 13464                           
 13465                           ; BSR set to: 57
 13466                           ;../phy/sx1216/phy_src/phy.c: 816:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 13467  0045D2  0E00               	movlw	0
 13468  0045D4  EC8A  F03D         	call	_PHY_DataConf
 13469                           
 13470                           ;../phy/sx1216/phy_src/phy.c: 817:                 }
 13471  0045D8  0012               	return	
 13472  0045DA                     l15706:
 13473                           
 13474                           ; BSR set to: 57
 13475                           ;../phy/sx1216/phy_src/phy.c: 819:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 13476  0045DA  0E02               	movlw	2
 13477  0045DC  EC8A  F03D         	call	_PHY_DataConf
 13478  0045E0  0012               	return	
 13479  0045E2                     l15710:
 13480  0045E2  0101               	movlb	1	; () banked
 13481  0045E4  5164               	movf	_radio_state_var& (0+255),w,b
 13482  0045E6  6E3A               	movwf	??_radio_engine^0,c
 13483  0045E8  6A3B               	clrf	(??_radio_engine+1)^0,c
 13484                           
 13485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13486                           ; Switch size 1, requested type "simple"
 13487                           ; Number of cases is 1, Range of values is 0 to 0
 13488                           ; switch strategies available:
 13489                           ; Name         Instructions Cycles
 13490                           ; simple_byte            4     3 (average)
 13491                           ;	Chosen strategy is simple_byte
 13492  0045EA  503B               	movf	(??_radio_engine+1)^0,w,c
 13493  0045EC  0A00               	xorlw	0	; case 0
 13494  0045EE  A4D8               	btfss	status,2,c
 13495  0045F0  D78F               	goto	u15280
 13496                           
 13497                           ; BSR set to: 1
 13498                           ; Switch size 1, requested type "simple"
 13499                           ; Number of cases is 7, Range of values is 0 to 7
 13500                           ; switch strategies available:
 13501                           ; Name         Instructions Cycles
 13502                           ; simple_byte           22    12 (average)
 13503                           ;	Chosen strategy is simple_byte
 13504  0045F2  503A               	movf	??_radio_engine^0,w,c
 13505  0045F4  0A00               	xorlw	0	; case 0
 13506  0045F6  B4D8               	btfsc	status,2,c
 13507  0045F8  D781               	goto	l15656
 13508  0045FA  0A01               	xorlw	1	; case 1
 13509  0045FC  B4D8               	btfsc	status,2,c
 13510  0045FE  D785               	goto	l15662
 13511  004600  0A03               	xorlw	3	; case 2
 13512  004602  B4D8               	btfsc	status,2,c
 13513  004604  D78F               	goto	l2648
 13514  004606  0A01               	xorlw	1	; case 3
 13515  004608  B4D8               	btfsc	status,2,c
 13516  00460A  D791               	goto	l15672
 13517  00460C  0A07               	xorlw	7	; case 4
 13518  00460E  B4D8               	btfsc	status,2,c
 13519  004610  D794               	goto	l15676
 13520  004612  0A02               	xorlw	2	; case 6
 13521  004614  B4D8               	btfsc	status,2,c
 13522  004616  D7B5               	goto	l15692
 13523  004618  0A01               	xorlw	1	; case 7
 13524  00461A  B4D8               	btfsc	status,2,c
 13525  00461C  D7BF               	goto	l15696
 13526  00461E  D778               	goto	u15280
 13527  004620                     __end_of_radio_engine:
 13528                           	opt callstack 0
 13529                           
 13530 ;; *************** function _cad *****************
 13531 ;; Defined at:
 13532 ;;		line 556 in file "../phy/sx1216/phy_src/phy.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;		None
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  RSSI            2   17[COMRAM] short 
 13537 ;;  temp            1   19[COMRAM] unsigned char 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  1    wreg      unsigned char 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13542 ;; Tracked objects:
 13543 ;;		On entry : 3F/39
 13544 ;;		On exit  : 2/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;Total ram usage:        4 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:   13
 13554 ;; This function calls:
 13555 ;;		_SX1276Read
 13556 ;;		_SX1276Write
 13557 ;;		_get_timer0base
 13558 ;;		_set_timer0base
 13559 ;;		_start_radio_cad
 13560 ;; This function is called by:
 13561 ;;		_radio_engine
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text83
 13566  005B50                     __ptext83:
 13567                           	opt callstack 0
 13568  005B50                     _cad:
 13569                           	opt callstack 14
 13570                           
 13571                           ; BSR set to: 57
 13572                           ;../phy/sx1216/phy_src/phy.c: 558:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 560:  
      +                             temp = SX1276Read(0x18);
 13573                           
 13574                           ;incstack = 0
 13575  005B50  0E18               	movlw	24
 13576  005B52  ECAE  F041         	call	_SX1276Read
 13577  005B56  6E14               	movwf	cad@temp^0,c
 13578                           
 13579                           ; BSR set to: 61
 13580                           ;../phy/sx1216/phy_src/phy.c: 561:     if((temp & 0x01) | (temp & 0x02))
 13581  005B58  0060  F050  F011   	movff	cad@temp,??_cad
 13582  005B5E  0E02               	movlw	2
 13583  005B60  1611               	andwf	??_cad^0,f,c
 13584  005B62  5014               	movf	cad@temp^0,w,c
 13585  005B64  0B01               	andlw	1
 13586  005B66  1011               	iorwf	??_cad^0,w,c
 13587  005B68  0900               	iorlw	0
 13588  005B6A  B4D8               	btfsc	status,2,c
 13589  005B6C  D002               	goto	l15022
 13590  005B6E                     u14700:
 13591                           
 13592                           ;../phy/sx1216/phy_src/phy.c: 562:     {;../phy/sx1216/phy_src/phy.c: 563:         retur
      +                          n 1;
 13593  005B6E  0E01               	movlw	1
 13594  005B70  0012               	return	
 13595  005B72                     l15022:
 13596                           
 13597                           ; BSR set to: 61
 13598                           ;../phy/sx1216/phy_src/phy.c: 565:     start_radio_cad();
 13599  005B72  ECE5  F041         	call	_start_radio_cad	;wreg free
 13600                           
 13601                           ; BSR set to: 61
 13602                           ;../phy/sx1216/phy_src/phy.c: 566:     cadDone = 0;
 13603  005B76  0E00               	movlw	0
 13604  005B78  0100               	movlb	0	; () banked
 13605  005B7A  6FEE               	movwf	_cadDone& (0+255),b
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;../phy/sx1216/phy_src/phy.c: 567:     set_timer0base(&cadTimeOut, 2000);
 13609  005B7C  0EF5               	movlw	low _cadTimeOut
 13610  005B7E  6E02               	movwf	set_timer0base@timer^0,c
 13611  005B80  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13612  005B82  0E07               	movlw	7
 13613  005B84  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13614  005B86  0ED0               	movlw	208
 13615  005B88  6E04               	movwf	set_timer0base@tval^0,c
 13616  005B8A  EC75  F040         	call	_set_timer0base	;wreg free
 13617                           
 13618                           ;../phy/sx1216/phy_src/phy.c: 569:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13619  005B8E  D029               	goto	l15056
 13620  005B90                     l15028:
 13621                           
 13622                           ; BSR set to: 57
 13623                           ;../phy/sx1216/phy_src/phy.c: 570:     {;../phy/sx1216/phy_src/phy.c: 571:         temp 
      +                          = SX1276Read(0x12);
 13624  005B90  0E12               	movlw	18
 13625  005B92  ECAE  F041         	call	_SX1276Read
 13626  005B96  6E14               	movwf	cad@temp^0,c
 13627                           
 13628                           ;../phy/sx1216/phy_src/phy.c: 572:         SX1276Write(0x12,temp);
 13629  005B98  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 13630  005B9E  0E12               	movlw	18
 13631  005BA0  ECCC  F041         	call	_SX1276Write
 13632                           
 13633                           ; BSR set to: 61
 13634                           ;../phy/sx1216/phy_src/phy.c: 573:         if(temp & 0x04)
 13635  005BA4  A414               	btfss	cad@temp^0,2,c
 13636  005BA6  D01D               	goto	l15056
 13637                           
 13638                           ; BSR set to: 61
 13639                           ;../phy/sx1216/phy_src/phy.c: 574:         {;../phy/sx1216/phy_src/phy.c: 575:          
      +                             cadDone = 1;
 13640  005BA8  0E01               	movlw	1
 13641  005BAA  0100               	movlb	0	; () banked
 13642  005BAC  6FEE               	movwf	_cadDone& (0+255),b
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;../phy/sx1216/phy_src/phy.c: 576:             if(temp & 0x01)
 13646  005BAE  B014               	btfsc	cad@temp^0,0,c
 13647  005BB0  D7DE               	goto	u14700
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;../phy/sx1216/phy_src/phy.c: 581:             {;../phy/sx1216/phy_src/phy.c: 582:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 583:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 13651  005BB2  0E1B               	movlw	27
 13652  005BB4  ECAE  F041         	call	_SX1276Read
 13653  005BB8  6E11               	movwf	??_cad^0,c
 13654  005BBA  0E63               	movlw	99
 13655  005BBC  2411               	addwf	??_cad^0,w,c
 13656  005BBE  6E12               	movwf	cad@RSSI^0,c
 13657  005BC0  6A13               	clrf	(cad@RSSI+1)^0,c
 13658  005BC2  0EFF               	movlw	255
 13659  005BC4  2213               	addwfc	(cad@RSSI+1)^0,f,c
 13660                           
 13661                           ; BSR set to: 61
 13662                           ;../phy/sx1216/phy_src/phy.c: 585:                 if(RSSI < RSSITarget)
 13663  005BC6  5013               	movf	(cad@RSSI+1)^0,w,c
 13664  005BC8  0A80               	xorlw	128
 13665  005BCA  6E11               	movwf	??_cad^0,c
 13666  005BCC  0100               	movlb	0	; () banked
 13667  005BCE  51F9               	movf	_RSSITarget& (0+255),w,b
 13668  005BD0  5C12               	subwf	cad@RSSI^0,w,c
 13669  005BD2  0E80               	movlw	128
 13670  005BD4  BFF9               	btfsc	_RSSITarget& (0+255),7,b
 13671  005BD6  0E7F               	movlw	127
 13672  005BD8  5811               	subwfb	??_cad^0,w,c
 13673  005BDA  B0D8               	btfsc	status,0,c
 13674  005BDC  D7C8               	goto	u14700
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;../phy/sx1216/phy_src/phy.c: 586:                 {;../phy/sx1216/phy_src/phy.c: 587:  
      +                                             return 0;
 13678  005BDE  0E00               	movlw	0
 13679  005BE0  0012               	return	
 13680  005BE2                     l15056:
 13681                           
 13682                           ;../phy/sx1216/phy_src/phy.c: 569:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13683  005BE2  0100               	movlb	0	; () banked
 13684  005BE4  51EE               	movf	_cadDone& (0+255),w,b
 13685  005BE6  A4D8               	btfss	status,2,c
 13686  005BE8  D009               	goto	u14750
 13687                           
 13688                           ; BSR set to: 0
 13689  005BEA  0EF5               	movlw	low _cadTimeOut
 13690  005BEC  6E02               	movwf	get_timer0base@timer^0,c
 13691  005BEE  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13692  005BF0  EC39  F03F         	call	_get_timer0base	;wreg free
 13693  005BF4  5002               	movf	?_get_timer0base^0,w,c
 13694  005BF6  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13695  005BF8  A4D8               	btfss	status,2,c
 13696  005BFA  D7CA               	goto	l15028
 13697  005BFC                     u14750:
 13698                           
 13699                           ;../phy/sx1216/phy_src/phy.c: 596:     if(!get_timer0base(&cadTimeOut))
 13700  005BFC  0EF5               	movlw	low _cadTimeOut
 13701  005BFE  6E02               	movwf	get_timer0base@timer^0,c
 13702  005C00  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13703  005C02  EC39  F03F         	call	_get_timer0base	;wreg free
 13704  005C06  5002               	movf	?_get_timer0base^0,w,c
 13705  005C08  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13706  005C0A  A4D8               	btfss	status,2,c
 13707  005C0C  0012               	return	
 13708  005C0E  D7AF               	goto	u14700
 13709  005C10                     __end_of_cad:
 13710                           	opt callstack 0
 13711                           
 13712 ;; *************** function _start_radio_cad *****************
 13713 ;; Defined at:
 13714 ;;		line 609 in file "../phy/sx1216/phy_src/phy.c"
 13715 ;; Parameters:    Size  Location     Type
 13716 ;;		None
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;		None
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      void 
 13721 ;; Registers used:
 13722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13723 ;; Tracked objects:
 13724 ;;		On entry : 3F/3D
 13725 ;;		On exit  : 3F/3D
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13732 ;;Total ram usage:        0 bytes
 13733 ;; Hardware stack levels used:    1
 13734 ;; Hardware stack levels required when called:   12
 13735 ;; This function calls:
 13736 ;;		_SX1276Write
 13737 ;;		_idle
 13738 ;; This function is called by:
 13739 ;;		_cad
 13740 ;; This function uses a non-reentrant model
 13741 ;;
 13742                           
 13743                           	psect	text84
 13744  0083CA                     __ptext84:
 13745                           	opt callstack 0
 13746  0083CA                     _start_radio_cad:
 13747                           	opt callstack 14
 13748                           
 13749                           ; BSR set to: 61
 13750                           ;../phy/sx1216/phy_src/phy.c: 611:     idle();
 13751                           
 13752                           ;incstack = 0
 13753  0083CA  EC56  F042         	call	_idle	;wreg free
 13754                           
 13755                           ;../phy/sx1216/phy_src/phy.c: 612:     SX1276Write(0x01,0x80 | 0x07);
 13756  0083CE  0E87               	movlw	135
 13757  0083D0  6E0F               	movwf	SX1276Write@data^0,c
 13758  0083D2  0E01               	movlw	1
 13759  0083D4  ECCC  F041         	call	_SX1276Write
 13760                           
 13761                           ; BSR set to: 61
 13762  0083D8  0012               	return		;funcret
 13763  0083DA                     __end_of_start_radio_cad:
 13764                           	opt callstack 0
 13765                           
 13766 ;; *************** function _set_timer0base *****************
 13767 ;; Defined at:
 13768 ;;		line 35 in file "../hal/hal_src/Timers.c"
 13769 ;; Parameters:    Size  Location     Type
 13770 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13771 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13772 ;;		 -> ATTimeoutTimer(2), 
 13773 ;;  tval            2    3[COMRAM] unsigned short 
 13774 ;; Auto vars:     Size  Location     Type
 13775 ;;		None
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  1    wreg      void 
 13778 ;; Registers used:
 13779 ;;		fsr2l, fsr2h
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 3F/39
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13789 ;;Total ram usage:        4 bytes
 13790 ;; Hardware stack levels used:    1
 13791 ;; Hardware stack levels required when called:    7
 13792 ;; This function calls:
 13793 ;;		Nothing
 13794 ;; This function is called by:
 13795 ;;		_processATCommand
 13796 ;;		_cad
 13797 ;;		_radio_engine
 13798 ;; This function uses a non-reentrant model
 13799 ;;
 13800                           
 13801                           	psect	text85
 13802  0080EA                     __ptext85:
 13803                           	opt callstack 0
 13804  0080EA                     _set_timer0base:
 13805                           	opt callstack 22
 13806                           
 13807                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 13808                           
 13809                           ; BSR set to: 61
 13810                           ;incstack = 0
 13811  0080EA  0139               	movlb	57	; () banked
 13812  0080EC  9F93               	bcf	147,7,b	;volatile
 13813                           
 13814                           ; BSR set to: 57
 13815                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 13816  0080EE  0060  F00B  FFD9   	movff	set_timer0base@timer,fsr2l
 13817  0080F4  0060  F00F  FFDA   	movff	set_timer0base@timer+1,fsr2h
 13818  0080FA  0060  F013  FFDE   	movff	set_timer0base@tval,postinc2
 13819  008100  0060  F017  FFDD   	movff	set_timer0base@tval+1,postdec2
 13820                           
 13821                           ; BSR set to: 57
 13822                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 13823  008106  8F93               	bsf	147,7,b	;volatile
 13824                           
 13825                           ; BSR set to: 57
 13826  008108  0012               	return		;funcret
 13827  00810A                     __end_of_set_timer0base:
 13828                           	opt callstack 0
 13829                           
 13830 ;; *************** function _get_timer0base *****************
 13831 ;; Defined at:
 13832 ;;		line 27 in file "../hal/hal_src/Timers.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13835 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13836 ;;		 -> ATTimeoutTimer(2), 
 13837 ;; Auto vars:     Size  Location     Type
 13838 ;;  tval            2    3[COMRAM] unsigned short 
 13839 ;; Return value:  Size  Location     Type
 13840 ;;                  2    1[COMRAM] unsigned short 
 13841 ;; Registers used:
 13842 ;;		fsr2l, fsr2h
 13843 ;; Tracked objects:
 13844 ;;		On entry : 0/0
 13845 ;;		On exit  : 3F/39
 13846 ;;		Unchanged: 0/0
 13847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;Total ram usage:        4 bytes
 13853 ;; Hardware stack levels used:    1
 13854 ;; Hardware stack levels required when called:    7
 13855 ;; This function calls:
 13856 ;;		Nothing
 13857 ;; This function is called by:
 13858 ;;		_processATCommand
 13859 ;;		_cad
 13860 ;;		_radio_engine
 13861 ;; This function uses a non-reentrant model
 13862 ;;
 13863                           
 13864                           	psect	text86
 13865  007E72                     __ptext86:
 13866                           	opt callstack 0
 13867  007E72                     _get_timer0base:
 13868                           	opt callstack 22
 13869                           
 13870                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 13871                           
 13872                           ; BSR set to: 57
 13873                           ;incstack = 0
 13874  007E72  0139               	movlb	57	; () banked
 13875  007E74  9F93               	bcf	147,7,b	;volatile
 13876                           
 13877                           ; BSR set to: 57
 13878                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 13879  007E76  0060  F00B  FFD9   	movff	get_timer0base@timer,fsr2l
 13880  007E7C  0060  F00F  FFDA   	movff	get_timer0base@timer+1,fsr2h
 13881  007E82  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 13882  007E88  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 13883                           
 13884                           ; BSR set to: 57
 13885                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 13886  007E8E  8F93               	bsf	147,7,b	;volatile
 13887                           
 13888                           ; BSR set to: 57
 13889                           ;../hal/hal_src/Timers.c: 32:     return tval;
 13890  007E90  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 13891  007E96  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 13892                           
 13893                           ; BSR set to: 57
 13894  007E9C  0012               	return		;funcret
 13895  007E9E                     __end_of_get_timer0base:
 13896                           	opt callstack 0
 13897                           
 13898 ;; *************** function _PHY_DataConf *****************
 13899 ;; Defined at:
 13900 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  status          1    wreg     unsigned char 
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;  status          1    4[COMRAM] unsigned char 
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  1    wreg      void 
 13907 ;; Registers used:
 13908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13909 ;; Tracked objects:
 13910 ;;		On entry : 3F/39
 13911 ;;		On exit  : 3F/1
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;Total ram usage:        1 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    8
 13921 ;; This function calls:
 13922 ;;		_nwkTxConvertPhyStatus
 13923 ;; This function is called by:
 13924 ;;		_radio_engine
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           	psect	text87
 13929  007B14                     __ptext87:
 13930                           	opt callstack 0
 13931  007B14                     _PHY_DataConf:
 13932                           	opt callstack 19
 13933                           
 13934                           ; BSR set to: 57
 13935                           ;incstack = 0
 13936                           ;PHY_DataConf@status stored from wreg
 13937  007B14  6E05               	movwf	PHY_DataConf@status^0,c
 13938                           
 13939                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 13940  007B16  0101               	movlb	1	; () banked
 13941  007B18  EE20 F083          	lfsr	2,131
 13942  007B1C  515B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 13943  007B1E  26D9               	addwf	fsr2l,f,c
 13944  007B20  515C               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 13945  007B22  22DA               	addwfc	fsr2h,f,c
 13946  007B24  5005               	movf	PHY_DataConf@status^0,w,c
 13947  007B26  ECE1  F03D         	call	_nwkTxConvertPhyStatus
 13948  007B2A  6EDF               	movwf	indf2,c
 13949                           
 13950                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 13951  007B2C  0060  F56F  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 13952  007B32  0060  F573  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 13953  007B38  0E15               	movlw	21
 13954  007B3A  6EDF               	movwf	indf2,c
 13955                           
 13956                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 13957  007B3C  0E00               	movlw	0
 13958  007B3E  0101               	movlb	1	; () banked
 13959  007B40  6F5B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 13960  007B42  0E00               	movlw	0
 13961  007B44  6F5C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 13962                           
 13963                           ; BSR set to: 1
 13964                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 13965  007B46  0726               	decf	(_nwkIb+38)& (0+255),f,b
 13966  007B48  A0D8               	btfss	status,0,c
 13967  007B4A  0727               	decf	(_nwkIb+39)& (0+255),f,b
 13968                           
 13969                           ; BSR set to: 1
 13970  007B4C  0012               	return		;funcret
 13971  007B4E                     __end_of_PHY_DataConf:
 13972                           	opt callstack 0
 13973                           
 13974 ;; *************** function _nwkTxConvertPhyStatus *****************
 13975 ;; Defined at:
 13976 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;  status          1    wreg     unsigned char 
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;  status          1    3[COMRAM] unsigned char 
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1    wreg      unsigned char 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2, status,0
 13985 ;; Tracked objects:
 13986 ;;		On entry : 3F/1
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;Total ram usage:        3 bytes
 13995 ;; Hardware stack levels used:    1
 13996 ;; Hardware stack levels required when called:    7
 13997 ;; This function calls:
 13998 ;;		Nothing
 13999 ;; This function is called by:
 14000 ;;		_PHY_DataConf
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text88
 14005  007BC2                     __ptext88:
 14006                           	opt callstack 0
 14007  007BC2                     _nwkTxConvertPhyStatus:
 14008                           	opt callstack 19
 14009                           
 14010                           ; BSR set to: 1
 14011                           ;incstack = 0
 14012                           ;nwkTxConvertPhyStatus@status stored from wreg
 14013  007BC2  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 14014                           
 14015                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 14016  007BC4  D008               	goto	l10264
 14017  007BC6                     l10246:
 14018                           
 14019                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 14020  007BC6  0E00               	movlw	0
 14021  007BC8  0012               	return	
 14022  007BCA                     l10250:
 14023                           
 14024                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 14025  007BCA  0E20               	movlw	32
 14026  007BCC  0012               	return	
 14027  007BCE                     l10254:
 14028                           
 14029                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 14030  007BCE  0E21               	movlw	33
 14031  007BD0  0012               	return	
 14032  007BD2                     l10258:
 14033                           
 14034                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 14035  007BD2  0E01               	movlw	1
 14036  007BD4  0012               	return	
 14037  007BD6                     l10264:
 14038  007BD6  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 14039  007BD8  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 14040  007BDA  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 14041                           
 14042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14043                           ; Switch size 1, requested type "simple"
 14044                           ; Number of cases is 1, Range of values is 0 to 0
 14045                           ; switch strategies available:
 14046                           ; Name         Instructions Cycles
 14047                           ; simple_byte            4     3 (average)
 14048                           ;	Chosen strategy is simple_byte
 14049  007BDC  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 14050  007BDE  0A00               	xorlw	0	; case 0
 14051  007BE0  A4D8               	btfss	status,2,c
 14052  007BE2  D7F7               	goto	l10258
 14053                           
 14054                           ; Switch size 1, requested type "simple"
 14055                           ; Number of cases is 3, Range of values is 0 to 2
 14056                           ; switch strategies available:
 14057                           ; Name         Instructions Cycles
 14058                           ; simple_byte           10     6 (average)
 14059                           ;	Chosen strategy is simple_byte
 14060  007BE4  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 14061  007BE6  0A00               	xorlw	0	; case 0
 14062  007BE8  B4D8               	btfsc	status,2,c
 14063  007BEA  D7ED               	goto	l10246
 14064  007BEC  0A01               	xorlw	1	; case 1
 14065  007BEE  B4D8               	btfsc	status,2,c
 14066  007BF0  D7EC               	goto	l10250
 14067  007BF2  0A03               	xorlw	3	; case 2
 14068  007BF4  B4D8               	btfsc	status,2,c
 14069  007BF6  D7EB               	goto	l10254
 14070  007BF8  D7EC               	goto	l10258
 14071  007BFA                     __end_of_nwkTxConvertPhyStatus:
 14072                           	opt callstack 0
 14073                           
 14074 ;; *************** function _DIO0_Receive_ISR *****************
 14075 ;; Defined at:
 14076 ;;		line 662 in file "../phy/sx1216/phy_src/phy.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;		None
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;  ind             5   26[COMRAM] struct PHY_DataInd_t
 14081 ;;  packetLength    1   24[COMRAM] unsigned char 
 14082 ;;  irqFlags        1   25[COMRAM] unsigned char 
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      void 
 14085 ;; Registers used:
 14086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/1
 14089 ;;		On exit  : 3F/3D
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14093 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14095 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14096 ;;Total ram usage:        7 bytes
 14097 ;; Hardware stack levels used:    1
 14098 ;; Hardware stack levels required when called:   13
 14099 ;; This function calls:
 14100 ;;		_PHY_DataInd
 14101 ;;		_SX1276Read
 14102 ;;		_SX1276ReadBuffer
 14103 ;;		_SX1276Write
 14104 ;;		_receive
 14105 ;; This function is called by:
 14106 ;;		_radio_engine
 14107 ;; This function uses a non-reentrant model
 14108 ;;
 14109                           
 14110                           	psect	text89
 14111  0062F6                     __ptext89:
 14112                           	opt callstack 0
 14113  0062F6                     _DIO0_Receive_ISR:
 14114                           	opt callstack 14
 14115                           
 14116                           ;../phy/sx1216/phy_src/phy.c: 664:     uint8_t irqFlags = SX1276Read(0x12);
 14117                           
 14118                           ;incstack = 0
 14119  0062F6  0E12               	movlw	18
 14120  0062F8  ECAE  F041         	call	_SX1276Read
 14121  0062FC  6E1A               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 14122                           
 14123                           ;../phy/sx1216/phy_src/phy.c: 667:     SX1276Write(0x12, irqFlags);
 14124  0062FE  0060  F068  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14125  006304  0E12               	movlw	18
 14126  006306  ECCC  F041         	call	_SX1276Write
 14127                           
 14128                           ;../phy/sx1216/phy_src/phy.c: 668:     SX1276Write(0x12, irqFlags);
 14129  00630A  0060  F068  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14130  006310  0E12               	movlw	18
 14131  006312  ECCC  F041         	call	_SX1276Write
 14132                           
 14133                           ; BSR set to: 61
 14134                           ;../phy/sx1216/phy_src/phy.c: 670:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 14135  006316  AA1A               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 14136                           
 14137                           ; BSR set to: 61
 14138  006318  AC1A               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 14139  00631A  D037               	goto	l15086
 14140                           
 14141                           ; BSR set to: 61
 14142  00631C  BE1A               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 14143  00631E  D035               	goto	l15086
 14144                           
 14145                           ; BSR set to: 61
 14146                           ;../phy/sx1216/phy_src/phy.c: 671:     {;../phy/sx1216/phy_src/phy.c: 672:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 673:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 676:         packetLength = SX1276Read(0x13);
 14147  006320  0E13               	movlw	19
 14148  006322  ECAE  F041         	call	_SX1276Read
 14149  006326  6E19               	movwf	DIO0_Receive_ISR@packetLength^0,c
 14150                           
 14151                           ;../phy/sx1216/phy_src/phy.c: 679:         SX1276Write(0x0D, SX1276Read(0x10));
 14152  006328  0E10               	movlw	16
 14153  00632A  ECAE  F041         	call	_SX1276Read
 14154  00632E  6E0F               	movwf	SX1276Write@data^0,c
 14155  006330  0E0D               	movlw	13
 14156  006332  ECCC  F041         	call	_SX1276Write
 14157                           
 14158                           ;../phy/sx1216/phy_src/phy.c: 680:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 14159  006336  0E40               	movlw	low _phyRxBuffer
 14160  006338  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 14161  00633A  0E03               	movlw	high _phyRxBuffer
 14162  00633C  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 14163  00633E  0060  F064  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 14164  006344  0E00               	movlw	0
 14165  006346  ECA1  F03F         	call	_SX1276ReadBuffer
 14166                           
 14167                           ;../phy/sx1216/phy_src/phy.c: 682:         SNR = SX1276Read(0x19);
 14168  00634A  0E19               	movlw	25
 14169  00634C  ECAE  F041         	call	_SX1276Read
 14170  006350  0101               	movlb	1	; () banked
 14171  006352  6F67               	movwf	_SNR& (0+255),b
 14172                           
 14173                           ;../phy/sx1216/phy_src/phy.c: 683:         packetRSSI = SX1276Read(0x1A);
 14174  006354  0E1A               	movlw	26
 14175  006356  ECAE  F041         	call	_SX1276Read
 14176  00635A  0101               	movlb	1	; () banked
 14177  00635C  6F68               	movwf	_packetRSSI& (0+255),b
 14178                           
 14179                           ; BSR set to: 1
 14180                           ;../phy/sx1216/phy_src/phy.c: 684:         ind.data = phyRxBuffer;
 14181  00635E  0E40               	movlw	low _phyRxBuffer
 14182  006360  6E1B               	movwf	DIO0_Receive_ISR@ind^0,c
 14183  006362  0E03               	movlw	high _phyRxBuffer
 14184  006364  6E1C               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 14185                           
 14186                           ; BSR set to: 1
 14187                           ;../phy/sx1216/phy_src/phy.c: 685:         ind.size = packetLength;
 14188  006366  0060  F064  F01D   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 14189                           
 14190                           ; BSR set to: 1
 14191                           ;../phy/sx1216/phy_src/phy.c: 686:         ind.lqi = phyRxBuffer[packetLength];
 14192  00636C  0E40               	movlw	low _phyRxBuffer
 14193  00636E  2419               	addwf	DIO0_Receive_ISR@packetLength^0,w,c
 14194  006370  6ED9               	movwf	fsr2l,c
 14195  006372  6ADA               	clrf	fsr2h,c
 14196  006374  0E03               	movlw	high _phyRxBuffer
 14197  006376  22DA               	addwfc	fsr2h,f,c
 14198  006378  50DF               	movf	indf2,w,c
 14199  00637A  6E1E               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 14200                           
 14201                           ; BSR set to: 1
 14202                           ;../phy/sx1216/phy_src/phy.c: 687:         ind.rssi = packetRSSI + (-157);
 14203  00637C  5168               	movf	_packetRSSI& (0+255),w,b
 14204  00637E  0F63               	addlw	99
 14205  006380  6E1F               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 14206                           
 14207                           ; BSR set to: 1
 14208                           ;../phy/sx1216/phy_src/phy.c: 688:         PHY_DataInd(&ind);
 14209  006382  0E1B               	movlw	low DIO0_Receive_ISR@ind
 14210  006384  6E13               	movwf	PHY_DataInd@ind^0,c
 14211  006386  EC52  F021         	call	_PHY_DataInd	;wreg free
 14212  00638A                     l15086:
 14213                           
 14214                           ;../phy/sx1216/phy_src/phy.c: 691:     receive(0);
 14215  00638A  0E00               	movlw	0
 14216  00638C  ECD6  F03C         	call	_receive
 14217                           
 14218                           ; BSR set to: 61
 14219  006390  0012               	return		;funcret
 14220  006392                     __end_of_DIO0_Receive_ISR:
 14221                           	opt callstack 0
 14222                           
 14223 ;; *************** function _PHY_DataInd *****************
 14224 ;; Defined at:
 14225 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 14226 ;; Parameters:    Size  Location     Type
 14227 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 14228 ;;		 -> DIO0_Receive_ISR@ind(5), 
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 14231 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      void 
 14234 ;; Registers used:
 14235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 3F/1
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14241 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;Total ram usage:        6 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:    9
 14248 ;; This function calls:
 14249 ;;		_memcpy
 14250 ;;		_nwkFrameAlloc
 14251 ;; This function is called by:
 14252 ;;		_DIO0_Receive_ISR
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text90
 14257  0042A4                     __ptext90:
 14258                           	opt callstack 0
 14259  0042A4                     _PHY_DataInd:
 14260                           	opt callstack 17
 14261                           
 14262                           ; BSR set to: 1
 14263                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 14264                           
 14265                           ; BSR set to: 61
 14266                           ;incstack = 0
 14267  0042A4  5013               	movf	PHY_DataInd@ind^0,w,c
 14268  0042A6  6ED9               	movwf	fsr2l,c
 14269  0042A8  6ADA               	clrf	fsr2h,c
 14270  0042AA  EE10 F001          	lfsr	1,1
 14271  0042AE  50DE               	movf	postinc2,w,c
 14272  0042B0  26E1               	addwf	fsr1l,f,c
 14273  0042B2  50DD               	movf	postdec2,w,c
 14274  0042B4  22E2               	addwfc	fsr1h,f,c
 14275  0042B6  0E88               	movlw	136
 14276  0042B8  18E6               	xorwf	postinc1,w,c
 14277  0042BA  A4D8               	btfss	status,2,c
 14278  0042BC  0012               	return	
 14279                           
 14280                           ; BSR set to: 1
 14281  0042BE  5013               	movf	PHY_DataInd@ind^0,w,c
 14282  0042C0  6ED9               	movwf	fsr2l,c
 14283  0042C2  6ADA               	clrf	fsr2h,c
 14284  0042C4  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 14285  0042CA  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 14286  0042D0  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 14287  0042D6  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 14288  0042DC  0E61               	movlw	97
 14289  0042DE  18DE               	xorwf	postinc2,w,c
 14290  0042E0  B4D8               	btfsc	status,2,c
 14291  0042E2  D013               	goto	u13330
 14292                           
 14293                           ; BSR set to: 1
 14294  0042E4  5013               	movf	PHY_DataInd@ind^0,w,c
 14295  0042E6  6ED9               	movwf	fsr2l,c
 14296  0042E8  6ADA               	clrf	fsr2h,c
 14297  0042EA  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 14298  0042F0  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 14299  0042F6  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 14300  0042FC  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 14301  004302  0E41               	movlw	65
 14302  004304  18DE               	xorwf	postinc2,w,c
 14303  004306  A4D8               	btfss	status,2,c
 14304  004308  0012               	return	
 14305  00430A                     u13330:
 14306                           
 14307                           ; BSR set to: 1
 14308  00430A  5013               	movf	PHY_DataInd@ind^0,w,c
 14309  00430C  6ED9               	movwf	fsr2l,c
 14310  00430E  6ADA               	clrf	fsr2h,c
 14311  004310  0E02               	movlw	2
 14312  004312  26D9               	addwf	fsr2l,f,c
 14313  004314  0E10               	movlw	16
 14314  004316  60DF               	cpfslt	indf2,c
 14315  004318  D001               	goto	l14290
 14316  00431A  0012               	return	
 14317  00431C                     l14290:
 14318                           
 14319                           ; BSR set to: 1
 14320                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 14321  00431C  EC22  F02F         	call	_nwkFrameAlloc	;wreg free
 14322  004320  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 14323  004326  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 14324  00432C  5017               	movf	PHY_DataInd@frame^0,w,c
 14325  00432E  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 14326  004330  B4D8               	btfsc	status,2,c
 14327  004332  0012               	return	
 14328                           
 14329                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 14330  004334  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 14331  00433A  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 14332  004340  0E20               	movlw	32
 14333  004342  6EDF               	movwf	indf2,c
 14334                           
 14335                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 14336  004344  5013               	movf	PHY_DataInd@ind^0,w,c
 14337  004346  6ED9               	movwf	fsr2l,c
 14338  004348  6ADA               	clrf	fsr2h,c
 14339  00434A  0E02               	movlw	2
 14340  00434C  26D9               	addwf	fsr2l,f,c
 14341  00434E  EE10 F001          	lfsr	1,1
 14342  004352  5017               	movf	PHY_DataInd@frame^0,w,c
 14343  004354  26E1               	addwf	fsr1l,f,c
 14344  004356  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 14345  004358  22E2               	addwfc	fsr1h,f,c
 14346  00435A  006F FF7F FFE7     	movff	indf2,indf1
 14347                           
 14348                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 14349  004360  5013               	movf	PHY_DataInd@ind^0,w,c
 14350  004362  6ED9               	movwf	fsr2l,c
 14351  004364  6ADA               	clrf	fsr2h,c
 14352  004366  0E03               	movlw	3
 14353  004368  26D9               	addwf	fsr2l,f,c
 14354  00436A  EE10 F083          	lfsr	1,131
 14355  00436E  5017               	movf	PHY_DataInd@frame^0,w,c
 14356  004370  26E1               	addwf	fsr1l,f,c
 14357  004372  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 14358  004374  22E2               	addwfc	fsr1h,f,c
 14359  004376  006F FF7F FFE7     	movff	indf2,indf1
 14360                           
 14361                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 14362  00437C  5013               	movf	PHY_DataInd@ind^0,w,c
 14363  00437E  6ED9               	movwf	fsr2l,c
 14364  004380  6ADA               	clrf	fsr2h,c
 14365  004382  0E04               	movlw	4
 14366  004384  26D9               	addwf	fsr2l,f,c
 14367  004386  EE10 F084          	lfsr	1,132
 14368  00438A  5017               	movf	PHY_DataInd@frame^0,w,c
 14369  00438C  26E1               	addwf	fsr1l,f,c
 14370  00438E  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 14371  004390  22E2               	addwfc	fsr1h,f,c
 14372  004392  006F FF7F FFE7     	movff	indf2,indf1
 14373                           
 14374                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 14375  004398  0E02               	movlw	2
 14376  00439A  2417               	addwf	PHY_DataInd@frame^0,w,c
 14377  00439C  6E08               	movwf	memcpy@d1^0,c
 14378  00439E  0E00               	movlw	0
 14379  0043A0  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 14380  0043A2  6E09               	movwf	(memcpy@d1+1)^0,c
 14381  0043A4  5013               	movf	PHY_DataInd@ind^0,w,c
 14382  0043A6  6ED9               	movwf	fsr2l,c
 14383  0043A8  6ADA               	clrf	fsr2h,c
 14384  0043AA  006F FF78  F00A    	movff	postinc2,memcpy@s1
 14385  0043B0  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 14386  0043B6  5013               	movf	PHY_DataInd@ind^0,w,c
 14387  0043B8  6ED9               	movwf	fsr2l,c
 14388  0043BA  6ADA               	clrf	fsr2h,c
 14389  0043BC  0E02               	movlw	2
 14390  0043BE  26D9               	addwf	fsr2l,f,c
 14391  0043C0  50DF               	movf	indf2,w,c
 14392  0043C2  6E14               	movwf	??_PHY_DataInd^0,c
 14393  0043C4  5014               	movf	??_PHY_DataInd^0,w,c
 14394  0043C6  6E0C               	movwf	memcpy@n^0,c
 14395  0043C8  6A0D               	clrf	(memcpy@n+1)^0,c
 14396  0043CA  ECD0  F035         	call	_memcpy	;wreg free
 14397  0043CE  0012               	return		;funcret
 14398  0043D0                     __end_of_PHY_DataInd:
 14399                           	opt callstack 0
 14400                           
 14401 ;; *************** function _NWK_TaskHandler *****************
 14402 ;; Defined at:
 14403 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;		None
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;		None
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1    wreg      void 
 14410 ;; Registers used:
 14411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14412 ;; Tracked objects:
 14413 ;;		On entry : 2/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14421 ;;Total ram usage:        0 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:   20
 14424 ;; This function calls:
 14425 ;;		_nwkDataReqTaskHandler
 14426 ;;		_nwkRxTaskHandler
 14427 ;;		_nwkTxTaskHandler
 14428 ;; This function is called by:
 14429 ;;		_SYS_TaskHandler
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text91
 14434  00843C                     __ptext91:
 14435                           	opt callstack 0
 14436  00843C                     _NWK_TaskHandler:
 14437                           	opt callstack 9
 14438                           
 14439                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 14440                           
 14441                           ;incstack = 0
 14442  00843C  EC7C  F02F         	call	_nwkRxTaskHandler	;wreg free
 14443                           
 14444                           ; BSR set to: 1
 14445                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 14446  008440  EC09  F017         	call	_nwkTxTaskHandler	;wreg free
 14447                           
 14448                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 14449  008444  EC11  F035         	call	_nwkDataReqTaskHandler	;wreg free
 14450  008448  0012               	return		;funcret
 14451  00844A                     __end_of_NWK_TaskHandler:
 14452                           	opt callstack 0
 14453                           
 14454 ;; *************** function _nwkTxTaskHandler *****************
 14455 ;; Defined at:
 14456 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;		None
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 14461 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14462 ;; Return value:  Size  Location     Type
 14463 ;;                  1    wreg      void 
 14464 ;; Registers used:
 14465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14466 ;; Tracked objects:
 14467 ;;		On entry : 3F/1
 14468 ;;		On exit  : 0/0
 14469 ;;		Unchanged: 0/0
 14470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14475 ;;Total ram usage:        4 bytes
 14476 ;; Hardware stack levels used:    1
 14477 ;; Hardware stack levels required when called:   13
 14478 ;; This function calls:
 14479 ;;		_PHY_DataReq
 14480 ;;		_SYS_TimerStart
 14481 ;;		_nwkDataReqTxConf
 14482 ;;		_nwkFrameFree
 14483 ;;		_nwkFrameNext
 14484 ;;		_nwkRouteFrameSent
 14485 ;; This function is called by:
 14486 ;;		_NWK_TaskHandler
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text92
 14491  002E12                     __ptext92:
 14492                           	opt callstack 0
 14493  002E12                     _nwkTxTaskHandler:
 14494                           	opt callstack 15
 14495                           
 14496                           ; BSR set to: 1
 14497                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 14498                           
 14499                           ;incstack = 0
 14500  002E12  0E00               	movlw	0
 14501  002E14  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 14502  002E16  0E00               	movlw	0
 14503  002E18  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 14504                           
 14505                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 14506  002E1A  D0E0               	goto	l15564
 14507  002E1C                     l15518:
 14508                           
 14509                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 14510  002E1C  EE20 F084          	lfsr	2,132
 14511  002E20  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14512  002E22  26D9               	addwf	fsr2l,f,c
 14513  002E24  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14514  002E26  22DA               	addwfc	fsr2h,f,c
 14515  002E28  50DE               	movf	postinc2,w,c
 14516  002E2A  10DE               	iorwf	postinc2,w,c
 14517  002E2C  B4D8               	btfsc	status,2,c
 14518  002E2E  D00F               	goto	l15524
 14519                           
 14520                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 14521  002E30  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14522  002E36  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14523  002E3C  0E11               	movlw	17
 14524  002E3E  6EDF               	movwf	indf2,c
 14525                           
 14526                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 14527  002E40  0E95               	movlw	low _nwkTxDelayTimer
 14528  002E42  6E10               	movwf	SYS_TimerStart@timer^0,c
 14529  002E44  0E01               	movlw	high _nwkTxDelayTimer
 14530  002E46  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 14531  002E48  EC8D  F03F         	call	_SYS_TimerStart	;wreg free
 14532                           
 14533                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 14534  002E4C  D0C7               	goto	l15564
 14535  002E4E                     l15524:
 14536                           
 14537                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 14538  002E4E  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14539  002E54  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14540  002E5A  0E13               	movlw	19
 14541  002E5C  D065               	goto	L9
 14542  002E5E                     l15526:
 14543                           
 14544                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 14545  002E5E  0101               	movlb	1	; () banked
 14546  002E60  515B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 14547  002E62  115C               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 14548  002E64  A4D8               	btfss	status,2,c
 14549  002E66  D0BA               	goto	l15564
 14550                           
 14551                           ; BSR set to: 1
 14552                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 14553  002E68  0060  F058  F15B   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 14554  002E6E  0060  F05C  F15C   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 14555                           
 14556                           ; BSR set to: 1
 14557                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 14558  002E74  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14559  002E7A  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14560  002E80  0E14               	movlw	20
 14561  002E82  6EDF               	movwf	indf2,c
 14562                           
 14563                           ; BSR set to: 1
 14564                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 14565  002E84  0E02               	movlw	2
 14566  002E86  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 14567  002E88  6E11               	movwf	PHY_DataReq@data^0,c
 14568  002E8A  0E00               	movlw	0
 14569  002E8C  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 14570  002E8E  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 14571  002E90  EE20 F001          	lfsr	2,1
 14572  002E94  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14573  002E96  26D9               	addwf	fsr2l,f,c
 14574  002E98  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14575  002E9A  22DA               	addwfc	fsr2h,f,c
 14576  002E9C  50DF               	movf	indf2,w,c
 14577  002E9E  6E13               	movwf	PHY_DataReq@size^0,c
 14578  002EA0  ECCB  F038         	call	_PHY_DataReq	;wreg free
 14579                           
 14580                           ; BSR set to: 1
 14581                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 14582  002EA4  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 14583  002EA6  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 14584  002EA8  D099               	goto	l15564
 14585  002EAA                     l15536:
 14586                           
 14587                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 14588  002EAA  EE20 F083          	lfsr	2,131
 14589  002EAE  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14590  002EB0  26D9               	addwf	fsr2l,f,c
 14591  002EB2  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14592  002EB4  22DA               	addwfc	fsr2h,f,c
 14593  002EB6  50DF               	movf	indf2,w,c
 14594  002EB8  A4D8               	btfss	status,2,c
 14595  002EBA  D02F               	goto	l15548
 14596                           
 14597                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 14598  002EBC  EE20 F00D          	lfsr	2,13
 14599  002EC0  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14600  002EC2  26D9               	addwf	fsr2l,f,c
 14601  002EC4  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14602  002EC6  22DA               	addwfc	fsr2h,f,c
 14603  002EC8  0101               	movlb	1	; () banked
 14604  002ECA  5100               	movf	_nwkIb& (0+255),w,b
 14605  002ECC  18DE               	xorwf	postinc2,w,c
 14606  002ECE  E125               	bnz	l15550
 14607  002ED0  5101               	movf	(_nwkIb+1)& (0+255),w,b
 14608  002ED2  18DE               	xorwf	postinc2,w,c
 14609  002ED4  A4D8               	btfss	status,2,c
 14610  002ED6  D021               	goto	l15548
 14611                           
 14612                           ; BSR set to: 1
 14613  002ED8  EE20 F00B          	lfsr	2,11
 14614  002EDC  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14615  002EDE  26D9               	addwf	fsr2l,f,c
 14616  002EE0  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14617  002EE2  22DA               	addwfc	fsr2h,f,c
 14618  002EE4  A0DF               	btfss	indf2,0,c
 14619  002EE6  D019               	goto	l15548
 14620                           
 14621                           ; BSR set to: 1
 14622                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 14623  002EE8  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14624  002EEE  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14625  002EF4  0E16               	movlw	22
 14626  002EF6  6EDF               	movwf	indf2,c
 14627                           
 14628                           ; BSR set to: 1
 14629                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 14630  002EF8  EE20 F084          	lfsr	2,132
 14631  002EFC  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14632  002EFE  26D9               	addwf	fsr2l,f,c
 14633  002F00  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14634  002F02  22DA               	addwfc	fsr2h,f,c
 14635  002F04  0E06               	movlw	6
 14636  002F06  6EDE               	movwf	postinc2,c
 14637  002F08  0E00               	movlw	0
 14638  002F0A  6EDD               	movwf	postdec2,c
 14639                           
 14640                           ; BSR set to: 1
 14641                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 14642  002F0C  0EA2               	movlw	low _nwkTxAckWaitTimer
 14643  002F0E  6E10               	movwf	SYS_TimerStart@timer^0,c
 14644  002F10  0E01               	movlw	high _nwkTxAckWaitTimer
 14645  002F12  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 14646  002F14  EC8D  F03F         	call	_SYS_TimerStart	;wreg free
 14647                           
 14648                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 14649  002F18  D061               	goto	l15564
 14650  002F1A                     l15548:
 14651  002F1A                     l15550:
 14652                           
 14653                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 14654  002F1A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14655  002F20  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14656  002F26  0E17               	movlw	23
 14657  002F28                     L9:
 14658  002F28  6EDF               	movwf	indf2,c
 14659  002F2A  D058               	goto	l15564
 14660  002F2C                     l15552:
 14661                           
 14662                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 14663  002F2C  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 14664  002F32  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 14665  002F38  ECBE  F027         	call	_nwkRouteFrameSent	;wreg free
 14666                           
 14667                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 14668  002F3C  EE20 F087          	lfsr	2,135
 14669  002F40  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14670  002F42  26D9               	addwf	fsr2l,f,c
 14671  002F44  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14672  002F46  22DA               	addwfc	fsr2h,f,c
 14673  002F48  50DE               	movf	postinc2,w,c
 14674  002F4A  10DE               	iorwf	postinc2,w,c
 14675  002F4C  A4D8               	btfss	status,2,c
 14676  002F4E  D009               	goto	l15558
 14677                           
 14678                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 14679  002F50  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 14680  002F56  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 14681  002F5C  EC1D  F041         	call	_nwkFrameFree	;wreg free
 14682  002F60  D03D               	goto	l15564
 14683  002F62                     l15558:
 14684                           
 14685                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 14686  002F62  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 14687  002F68  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 14688  002F6E  EE20 F087          	lfsr	2,135
 14689  002F72  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14690  002F74  26D9               	addwf	fsr2l,f,c
 14691  002F76  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14692  002F78  22DA               	addwfc	fsr2h,f,c
 14693  002F7A  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 14694  002F80  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 14695  002F86  D801               	call	u15148
 14696  002F88  D029               	goto	l15564
 14697  002F8A                     u15148:
 14698  002F8A  0005               	push	
 14699  002F8C  6EFA               	movwf	pclath,c
 14700  002F8E  5014               	movf	??_nwkTxTaskHandler^0,w,c
 14701  002F90  6EFD               	movwf	tosl,c
 14702  002F92  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 14703  002F94  6EFE               	movwf	tosh,c
 14704  002F96  6AFF               	clrf	tosu,c
 14705  002F98  50FA               	movf	pclath,w,c
 14706  002F9A  0012               	return		;indir
 14707  002F9C                     l15562:
 14708  002F9C  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14709  002FA2  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14710  002FA8  50DF               	movf	indf2,w,c
 14711  002FAA  6E14               	movwf	??_nwkTxTaskHandler^0,c
 14712  002FAC  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 14713                           
 14714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14715                           ; Switch size 1, requested type "simple"
 14716                           ; Number of cases is 1, Range of values is 0 to 0
 14717                           ; switch strategies available:
 14718                           ; Name         Instructions Cycles
 14719                           ; simple_byte            4     3 (average)
 14720                           ;	Chosen strategy is simple_byte
 14721  002FAE  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 14722  002FB0  0A00               	xorlw	0	; case 0
 14723  002FB2  A4D8               	btfss	status,2,c
 14724  002FB4  D013               	goto	l15564
 14725                           
 14726                           ; Switch size 1, requested type "simple"
 14727                           ; Number of cases is 6, Range of values is 18 to 23
 14728                           ; switch strategies available:
 14729                           ; Name         Instructions Cycles
 14730                           ; simple_byte           19    10 (average)
 14731                           ;	Chosen strategy is simple_byte
 14732  002FB6  5014               	movf	??_nwkTxTaskHandler^0,w,c
 14733  002FB8  0A12               	xorlw	18	; case 18
 14734  002FBA  B4D8               	btfsc	status,2,c
 14735  002FBC  D72F               	goto	l15518
 14736  002FBE  0A01               	xorlw	1	; case 19
 14737  002FC0  B4D8               	btfsc	status,2,c
 14738  002FC2  D74D               	goto	l15526
 14739  002FC4  0A07               	xorlw	7	; case 20
 14740  002FC6  B4D8               	btfsc	status,2,c
 14741  002FC8  D009               	goto	l15564
 14742  002FCA  0A01               	xorlw	1	; case 21
 14743  002FCC  B4D8               	btfsc	status,2,c
 14744  002FCE  D76D               	goto	l15536
 14745  002FD0  0A03               	xorlw	3	; case 22
 14746  002FD2  B4D8               	btfsc	status,2,c
 14747  002FD4  D003               	goto	l15564
 14748  002FD6  0A01               	xorlw	1	; case 23
 14749  002FD8  B4D8               	btfsc	status,2,c
 14750  002FDA  D7A8               	goto	l15552
 14751  002FDC                     l15564:
 14752                           
 14753                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 14754  002FDC  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 14755  002FE2  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 14756  002FE8  EC7E  F033         	call	_nwkFrameNext	;wreg free
 14757  002FEC  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 14758  002FF2  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 14759  002FF8  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14760  002FFA  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 14761  002FFC  B4D8               	btfsc	status,2,c
 14762  002FFE  0012               	return	
 14763  003000  D7CD               	goto	l15562
 14764  003002                     __end_of_nwkTxTaskHandler:
 14765                           	opt callstack 0
 14766                           
 14767 ;; *************** function _nwkRouteFrameSent *****************
 14768 ;; Defined at:
 14769 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 14770 ;; Parameters:    Size  Location     Type
 14771 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 14772 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14773 ;; Auto vars:     Size  Location     Type
 14774 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 14775 ;;		 -> nwkRouteTable(70), NULL(0), 
 14776 ;; Return value:  Size  Location     Type
 14777 ;;                  1    wreg      void 
 14778 ;; Registers used:
 14779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14780 ;; Tracked objects:
 14781 ;;		On entry : 0/1
 14782 ;;		On exit  : 0/0
 14783 ;;		Unchanged: 0/0
 14784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14789 ;;Total ram usage:        6 bytes
 14790 ;; Hardware stack levels used:    1
 14791 ;; Hardware stack levels required when called:    8
 14792 ;; This function calls:
 14793 ;;		_NWK_RouteFindEntry
 14794 ;;		_NWK_RouteFreeEntry
 14795 ;;		_nwkRouteNormalizeRanks
 14796 ;; This function is called by:
 14797 ;;		_nwkTxTaskHandler
 14798 ;; This function uses a non-reentrant model
 14799 ;;
 14800                           
 14801                           	psect	text93
 14802  004F7C                     __ptext93:
 14803                           	opt callstack 0
 14804  004F7C                     _nwkRouteFrameSent:
 14805                           	opt callstack 19
 14806                           
 14807                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 14808                           
 14809                           ;incstack = 0
 14810  004F7C  EE20 F00F          	lfsr	2,15
 14811  004F80  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 14812  004F82  26D9               	addwf	fsr2l,f,c
 14813  004F84  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 14814  004F86  22DA               	addwfc	fsr2h,f,c
 14815  004F88  28DE               	incf	postinc2,w,c
 14816  004F8A  E103               	bnz	l14852
 14817  004F8C  28DE               	incf	postinc2,w,c
 14818  004F8E  B4D8               	btfsc	status,2,c
 14819  004F90  0012               	return	
 14820  004F92                     l14852:
 14821                           
 14822                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 14823  004F92  EE20 F00F          	lfsr	2,15
 14824  004F96  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 14825  004F98  26D9               	addwf	fsr2l,f,c
 14826  004F9A  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 14827  004F9C  22DA               	addwfc	fsr2h,f,c
 14828  004F9E  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 14829  004FA4  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 14830  004FAA  EE20 F00B          	lfsr	2,11
 14831  004FAE  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 14832  004FB0  26D9               	addwf	fsr2l,f,c
 14833  004FB2  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 14834  004FB4  22DA               	addwfc	fsr2h,f,c
 14835  004FB6  0E00               	movlw	0
 14836  004FB8  B6DF               	btfsc	indf2,3,c
 14837  004FBA  0E01               	movlw	1
 14838  004FBC  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 14839  004FBE  EC18  F037         	call	_NWK_RouteFindEntry	;wreg free
 14840  004FC2  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 14841  004FC8  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 14842                           
 14843                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 14844  004FCE  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 14845  004FD0  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 14846  004FD2  B4D8               	btfsc	status,2,c
 14847  004FD4  0012               	return	
 14848  004FD6  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 14849  004FDC  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 14850  004FE2  B0DF               	btfsc	indf2,0,c
 14851  004FE4  0012               	return	
 14852                           
 14853                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 14854  004FE6  EE20 F083          	lfsr	2,131
 14855  004FEA  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 14856  004FEC  26D9               	addwf	fsr2l,f,c
 14857  004FEE  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 14858  004FF0  22DA               	addwfc	fsr2h,f,c
 14859  004FF2  50DF               	movf	indf2,w,c
 14860  004FF4  A4D8               	btfss	status,2,c
 14861  004FF6  D017               	goto	l14866
 14862                           
 14863                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 14864  004FF8  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 14865  004FFE  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 14866  005004  50DF               	movf	indf2,w,c
 14867  005006  0B0F               	andlw	-241
 14868  005008  0930               	iorlw	48
 14869  00500A  6EDF               	movwf	indf2,c
 14870                           
 14871                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 14872  00500C  EE20 F005          	lfsr	2,5
 14873  005010  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 14874  005012  26D9               	addwf	fsr2l,f,c
 14875  005014  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 14876  005016  22DA               	addwfc	fsr2h,f,c
 14877  005018  2ADF               	incf	indf2,f,c
 14878  00501A  28DE               	incf	postinc2,w,c
 14879  00501C  A4D8               	btfss	status,2,c
 14880  00501E  0012               	return	
 14881                           
 14882                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 14883  005020  ECA7  F03D         	call	_nwkRouteNormalizeRanks	;wreg free
 14884  005024  0012               	return	
 14885  005026                     l14866:
 14886                           
 14887                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 14888  005026  0E01               	movlw	1
 14889  005028  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 14890  00502A  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 14891  005030  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 14892  005036  38DF               	swapf	indf2,w,c
 14893  005038  0B0F               	andlw	15
 14894  00503A  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 14895  00503C  500A               	movf	??_nwkRouteFrameSent^0,w,c
 14896  00503E  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 14897  005040  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 14898  005042  50DF               	movf	indf2,w,c
 14899  005044  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 14900  005046  0B0F               	andlw	-241
 14901  005048  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 14902  00504A  6EDF               	movwf	indf2,c
 14903  00504C  38DF               	swapf	indf2,w,c
 14904  00504E  0B0F               	andlw	15
 14905  005050  0900               	iorlw	0
 14906  005052  A4D8               	btfss	status,2,c
 14907  005054  0012               	return	
 14908                           
 14909                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 14910  005056  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 14911  00505C  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 14912  005062  EC50  F03E         	call	_NWK_RouteFreeEntry	;wreg free
 14913  005066  0012               	return		;funcret
 14914  005068                     __end_of_nwkRouteFrameSent:
 14915                           	opt callstack 0
 14916                           
 14917 ;; *************** function _nwkRouteNormalizeRanks *****************
 14918 ;; Defined at:
 14919 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 14920 ;; Parameters:    Size  Location     Type
 14921 ;;		None
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;  i               1    2[COMRAM] unsigned char 
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  1    wreg      void 
 14926 ;; Registers used:
 14927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/1
 14930 ;;		On exit  : 0/0
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14937 ;;Total ram usage:        2 bytes
 14938 ;; Hardware stack levels used:    1
 14939 ;; Hardware stack levels required when called:    7
 14940 ;; This function calls:
 14941 ;;		Nothing
 14942 ;; This function is called by:
 14943 ;;		_nwkRouteFrameSent
 14944 ;; This function uses a non-reentrant model
 14945 ;;
 14946                           
 14947                           	psect	text94
 14948  007B4E                     __ptext94:
 14949                           	opt callstack 0
 14950  007B4E                     _nwkRouteNormalizeRanks:
 14951                           	opt callstack 19
 14952                           
 14953                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 14954                           
 14955                           ;incstack = 0
 14956  007B4E  0E00               	movlw	0
 14957  007B50  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 14958  007B52                     l9998:
 14959                           
 14960                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 14961  007B52  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 14962  007B54  0D07               	mullw	7
 14963  007B56  0E89               	movlw	low (_nwkRouteTable+5)
 14964  007B58  24F3               	addwf	243,w,c
 14965  007B5A  6ED9               	movwf	fsr2l,c
 14966  007B5C  0E02               	movlw	high (_nwkRouteTable+5)
 14967  007B5E  20F4               	addwfc	prodh,w,c
 14968  007B60  6EDA               	movwf	fsr2h,c
 14969  007B62  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 14970  007B64  0D07               	mullw	7
 14971  007B66  0E89               	movlw	low (_nwkRouteTable+5)
 14972  007B68  24F3               	addwf	243,w,c
 14973  007B6A  6EE1               	movwf	fsr1l,c
 14974  007B6C  0E02               	movlw	high (_nwkRouteTable+5)
 14975  007B6E  20F4               	addwfc	prodh,w,c
 14976  007B70  6EE2               	movwf	fsr1h,c
 14977  007B72  50E7               	movf	indf1,w,c
 14978  007B74  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 14979  007B76  90D8               	bcf	status,0,c
 14980  007B78  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 14981  007B7A  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 14982  007B7C  6EDF               	movwf	indf2,c
 14983  007B7E  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 14984  007B80  0E09               	movlw	9
 14985  007B82  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 14986  007B84  D7E6               	goto	l9998
 14987  007B86  0012               	return	
 14988  007B88                     __end_of_nwkRouteNormalizeRanks:
 14989                           	opt callstack 0
 14990                           
 14991 ;; *************** function _nwkDataReqTxConf *****************
 14992 ;; Defined at:
 14993 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 14996 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 14999 ;;		 -> NULL(0), tx_buffer(524), 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      void 
 15002 ;; Registers used:
 15003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/1
 15006 ;;		On exit  : 3F/1
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15013 ;;Total ram usage:        6 bytes
 15014 ;; Hardware stack levels used:    1
 15015 ;; Hardware stack levels required when called:    8
 15016 ;; This function calls:
 15017 ;;		_nwkFrameFree
 15018 ;; This function is called by:
 15019 ;;		_nwkDataReqSendFrame
 15020 ;;		_nwkTxTaskHandler
 15021 ;; This function uses a non-reentrant model
 15022 ;;
 15023                           
 15024                           	psect	text95
 15025  0061AE                     __ptext95:
 15026                           	opt callstack 0
 15027  0061AE                     _nwkDataReqTxConf:
 15028                           	opt callstack 19
 15029                           
 15030                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 15031                           
 15032                           ;incstack = 0
 15033  0061AE  0060  F388  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 15034  0061B4  0060  F38C  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 15035  0061BA  D040               	goto	l14844
 15036  0061BC                     l14836:
 15037                           
 15038                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 15039  0061BC  EE20 F002          	lfsr	2,2
 15040  0061C0  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15041  0061C2  26D9               	addwf	fsr2l,f,c
 15042  0061C4  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15043  0061C6  22DA               	addwfc	fsr2h,f,c
 15044  0061C8  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 15045  0061CA  18DE               	xorwf	postinc2,w,c
 15046  0061CC  E12B               	bnz	l14842
 15047  0061CE  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 15048  0061D0  18DE               	xorwf	postinc2,w,c
 15049  0061D2  A4D8               	btfss	status,2,c
 15050  0061D4  D027               	goto	l14842
 15051                           
 15052                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 15053  0061D6  EE20 F083          	lfsr	2,131
 15054  0061DA  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 15055  0061DC  26D9               	addwf	fsr2l,f,c
 15056  0061DE  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 15057  0061E0  22DA               	addwfc	fsr2h,f,c
 15058  0061E2  EE10 F011          	lfsr	1,17
 15059  0061E6  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15060  0061E8  26E1               	addwf	fsr1l,f,c
 15061  0061EA  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15062  0061EC  22E2               	addwfc	fsr1h,f,c
 15063  0061EE  006F FF7F FFE7     	movff	indf2,indf1
 15064                           
 15065                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 15066  0061F4  EE20 F086          	lfsr	2,134
 15067  0061F8  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 15068  0061FA  26D9               	addwf	fsr2l,f,c
 15069  0061FC  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 15070  0061FE  22DA               	addwfc	fsr2h,f,c
 15071  006200  EE10 F012          	lfsr	1,18
 15072  006204  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15073  006206  26E1               	addwf	fsr1l,f,c
 15074  006208  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15075  00620A  22E2               	addwfc	fsr1h,f,c
 15076  00620C  006F FF7F FFE7     	movff	indf2,indf1
 15077                           
 15078                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 15079  006212  EE20 F004          	lfsr	2,4
 15080  006216  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15081  006218  26D9               	addwf	fsr2l,f,c
 15082  00621A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15083  00621C  22DA               	addwfc	fsr2h,f,c
 15084  00621E  0E02               	movlw	2
 15085  006220  6EDF               	movwf	indf2,c
 15086                           
 15087                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 15088  006222  D010               	goto	u14290
 15089  006224                     l14842:
 15090                           
 15091                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 15092  006224  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 15093  00622A  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 15094  006230  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 15095  006236  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 15096  00623C                     l14844:
 15097  00623C  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15098  00623E  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 15099  006240  A4D8               	btfss	status,2,c
 15100  006242  D7BC               	goto	l14836
 15101  006244                     u14290:
 15102                           
 15103                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 15104  006244  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 15105  00624A  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 15106  006250  EC1D  F041         	call	_nwkFrameFree	;wreg free
 15107                           
 15108                           ; BSR set to: 1
 15109  006254  0012               	return		;funcret
 15110  006256                     __end_of_nwkDataReqTxConf:
 15111                           	opt callstack 0
 15112                           
 15113 ;; *************** function _PHY_DataReq *****************
 15114 ;; Defined at:
 15115 ;;		line 862 in file "../phy/sx1216/phy_src/phy.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;  data            2   16[COMRAM] PTR unsigned char 
 15118 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 15119 ;;  size            1   18[COMRAM] unsigned char 
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      void 
 15124 ;; Registers used:
 15125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15126 ;; Tracked objects:
 15127 ;;		On entry : 3F/1
 15128 ;;		On exit  : 3F/1
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15134 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15135 ;;Total ram usage:        3 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:   12
 15138 ;; This function calls:
 15139 ;;		_SPI1_ExchangeByte
 15140 ;;		_SPI1_WriteBlock
 15141 ;;		_SX1276Write
 15142 ;;		_explicitHeaderMode
 15143 ;;		_idle
 15144 ;; This function is called by:
 15145 ;;		_nwkTxTaskHandler
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text96
 15150  007196                     __ptext96:
 15151                           	opt callstack 0
 15152  007196                     _PHY_DataReq:
 15153                           	opt callstack 15
 15154                           
 15155                           ; BSR set to: 1
 15156                           ;../phy/sx1216/phy_src/phy.c: 863:     idle();
 15157                           
 15158                           ; BSR set to: 1
 15159                           ;incstack = 0
 15160  007196  EC56  F042         	call	_idle	;wreg free
 15161                           
 15162                           ;../phy/sx1216/phy_src/phy.c: 864:     explicitHeaderMode();
 15163  00719A  EC6A  F041         	call	_explicitHeaderMode	;wreg free
 15164                           
 15165                           ;../phy/sx1216/phy_src/phy.c: 866:     SX1276Write(0x0E, 0x0);
 15166  00719E  0E00               	movlw	0
 15167  0071A0  6E0F               	movwf	SX1276Write@data^0,c
 15168  0071A2  0E0E               	movlw	14
 15169  0071A4  ECCC  F041         	call	_SX1276Write
 15170                           
 15171                           ;../phy/sx1216/phy_src/phy.c: 867:     SX1276Write(0x0D, 0x00);
 15172  0071A8  0E00               	movlw	0
 15173  0071AA  6E0F               	movwf	SX1276Write@data^0,c
 15174  0071AC  0E0D               	movlw	13
 15175  0071AE  ECCC  F041         	call	_SX1276Write
 15176                           
 15177                           ;../phy/sx1216/phy_src/phy.c: 868:     SX1276Write(0x22, size);
 15178  0071B2  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 15179  0071B8  0E22               	movlw	34
 15180  0071BA  ECCC  F041         	call	_SX1276Write
 15181                           
 15182                           ; BSR set to: 61
 15183  0071BE  9CBC               	bcf	188,6,c	;volatile
 15184                           
 15185                           ; BSR set to: 61
 15186                           ;../phy/sx1216/phy_src/phy.c: 871:     SPI1_ExchangeByte(0x00 | 0x80);
 15187  0071C0  0E80               	movlw	128
 15188  0071C2  EC44  F041         	call	_SPI1_ExchangeByte
 15189                           
 15190                           ; BSR set to: 61
 15191                           ;../phy/sx1216/phy_src/phy.c: 872:     SPI1_WriteBlock(data,size);
 15192  0071C6  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 15193  0071CC  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 15194  0071D2  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 15195  0071D8  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 15196  0071DA  EC86  F03E         	call	_SPI1_WriteBlock	;wreg free
 15197                           
 15198                           ; BSR set to: 61
 15199  0071DE  8CBC               	bsf	188,6,c	;volatile
 15200                           
 15201                           ; BSR set to: 61
 15202                           ;../phy/sx1216/phy_src/phy.c: 874:     SX1276Write(0x01,
 15203  0071E0  0E83               	movlw	131
 15204  0071E2  6E0F               	movwf	SX1276Write@data^0,c
 15205  0071E4  0E01               	movlw	1
 15206  0071E6  ECCC  F041         	call	_SX1276Write
 15207                           
 15208                           ; BSR set to: 61
 15209                           ;../phy/sx1216/phy_src/phy.c: 876:     radio_state_var = START_TX;
 15210  0071EA  0E06               	movlw	6
 15211  0071EC  0101               	movlb	1	; () banked
 15212  0071EE  6F64               	movwf	_radio_state_var& (0+255),b
 15213                           
 15214                           ; BSR set to: 1
 15215  0071F0  0012               	return		;funcret
 15216  0071F2                     __end_of_PHY_DataReq:
 15217                           	opt callstack 0
 15218                           
 15219 ;; *************** function _idle *****************
 15220 ;; Defined at:
 15221 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;		None
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 3/3D
 15232 ;;		On exit  : 3F/3D
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15239 ;;Total ram usage:        0 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:   11
 15242 ;; This function calls:
 15243 ;;		_SX1276Write
 15244 ;; This function is called by:
 15245 ;;		_start_radio_cad
 15246 ;;		_PHY_DataReq
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           	psect	text97
 15251  0084AC                     __ptext97:
 15252                           	opt callstack 0
 15253  0084AC                     _idle:
 15254                           	opt callstack 14
 15255                           
 15256                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 15257                           
 15258                           ; BSR set to: 1
 15259                           ;incstack = 0
 15260  0084AC  0E81               	movlw	129
 15261  0084AE  6E0F               	movwf	SX1276Write@data^0,c
 15262  0084B0  0E01               	movlw	1
 15263  0084B2  ECCC  F041         	call	_SX1276Write
 15264                           
 15265                           ; BSR set to: 61
 15266  0084B6  0012               	return		;funcret
 15267  0084B8                     __end_of_idle:
 15268                           	opt callstack 0
 15269                           
 15270 ;; *************** function _nwkRxTaskHandler *****************
 15271 ;; Defined at:
 15272 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;  frame           2    2[BANK1 ] PTR struct NwkFrame_t
 15277 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15282 ;; Tracked objects:
 15283 ;;		On entry : 2/0
 15284 ;;		On exit  : 3F/1
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15288 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15289 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15290 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15291 ;;Total ram usage:        4 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; Hardware stack levels required when called:   19
 15294 ;; This function calls:
 15295 ;;		_nwkFrameFree
 15296 ;;		_nwkFrameNext
 15297 ;;		_nwkRouteFrame
 15298 ;;		_nwkRxHandleIndication
 15299 ;;		_nwkRxHandleReceivedFrame
 15300 ;; This function is called by:
 15301 ;;		_NWK_TaskHandler
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305                           	psect	text98
 15306  005EF8                     __ptext98:
 15307                           	opt callstack 0
 15308  005EF8                     _nwkRxTaskHandler:
 15309                           	opt callstack 9
 15310                           
 15311                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 15312                           
 15313                           ; BSR set to: 61
 15314                           ;incstack = 0
 15315  005EF8  0E00               	movlw	0
 15316  005EFA  0101               	movlb	1	; () banked
 15317  005EFC  6FFE               	movwf	nwkRxTaskHandler@frame& (0+255),b
 15318  005EFE  0E00               	movlw	0
 15319  005F00  6FFF               	movwf	(nwkRxTaskHandler@frame+1)& (0+255),b
 15320                           
 15321                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15322  005F02  D03E               	goto	l15508
 15323  005F04                     l15496:
 15324                           
 15325                           ; BSR set to: 1
 15326                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 15327  005F04  0060  F7F8  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 15328  005F0A  0060  F7FC  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 15329  005F10  EC92  F009         	call	_nwkRxHandleReceivedFrame	;wreg free
 15330                           
 15331                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 15332  005F14  D035               	goto	l15508
 15333  005F16                     l15498:
 15334                           
 15335                           ; BSR set to: 1
 15336                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 15337  005F16  0060  F7F8  F0D5   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 15338  005F1C  0060  F7FC  F0D6   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 15339  005F22  EC77  F02C         	call	_nwkRxHandleIndication	;wreg free
 15340                           
 15341                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 15342  005F26  D02C               	goto	l15508
 15343  005F28                     l15500:
 15344                           
 15345                           ; BSR set to: 1
 15346                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 15347  005F28  0060  F7F8  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 15348  005F2E  0060  F7FC  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 15349  005F34  EC3C  F02B         	call	_nwkRouteFrame	;wreg free
 15350                           
 15351                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 15352  005F38  D023               	goto	l15508
 15353  005F3A                     l15502:
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 15357  005F3A  0060  F7F8  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 15358  005F40  0060  F7FC  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 15359  005F46  EC1D  F041         	call	_nwkFrameFree	;wreg free
 15360                           
 15361                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 15362  005F4A  D01A               	goto	l15508
 15363  005F4C                     l15506:
 15364                           
 15365                           ; BSR set to: 1
 15366  005F4C  0060  F7FB  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 15367  005F52  0060  F7FF  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 15368  005F58  50DF               	movf	indf2,w,c
 15369  005F5A  6FFC               	movwf	??_nwkRxTaskHandler& (0+255),b
 15370  005F5C  6BFD               	clrf	(??_nwkRxTaskHandler+1)& (0+255),b
 15371                           
 15372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15373                           ; Switch size 1, requested type "simple"
 15374                           ; Number of cases is 1, Range of values is 0 to 0
 15375                           ; switch strategies available:
 15376                           ; Name         Instructions Cycles
 15377                           ; simple_byte            4     3 (average)
 15378                           ;	Chosen strategy is simple_byte
 15379  005F5E  51FD               	movf	(??_nwkRxTaskHandler+1)& (0+255),w,b
 15380  005F60  0A00               	xorlw	0	; case 0
 15381  005F62  A4D8               	btfss	status,2,c
 15382  005F64  D00D               	goto	l15508
 15383                           
 15384                           ; BSR set to: 1
 15385                           ; Switch size 1, requested type "simple"
 15386                           ; Number of cases is 4, Range of values is 32 to 36
 15387                           ; switch strategies available:
 15388                           ; Name         Instructions Cycles
 15389                           ; simple_byte           13     7 (average)
 15390                           ;	Chosen strategy is simple_byte
 15391  005F66  51FC               	movf	??_nwkRxTaskHandler& (0+255),w,b
 15392  005F68  0A20               	xorlw	32	; case 32
 15393  005F6A  B4D8               	btfsc	status,2,c
 15394  005F6C  D7CB               	goto	l15496
 15395  005F6E  0A02               	xorlw	2	; case 34
 15396  005F70  B4D8               	btfsc	status,2,c
 15397  005F72  D7D1               	goto	l15498
 15398  005F74  0A01               	xorlw	1	; case 35
 15399  005F76  B4D8               	btfsc	status,2,c
 15400  005F78  D7D7               	goto	l15500
 15401  005F7A  0A07               	xorlw	7	; case 36
 15402  005F7C  B4D8               	btfsc	status,2,c
 15403  005F7E  D7DD               	goto	l15502
 15404  005F80                     l15508:
 15405                           
 15406                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15407  005F80  0060  F7F8  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 15408  005F86  0060  F7FC  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 15409  005F8C  EC7E  F033         	call	_nwkFrameNext	;wreg free
 15410  005F90  0060  F008  F1FE   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 15411  005F96  0060  F00C  F1FF   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 15412  005F9C  0101               	movlb	1	; () banked
 15413  005F9E  51FE               	movf	nwkRxTaskHandler@frame& (0+255),w,b
 15414  005FA0  11FF               	iorwf	(nwkRxTaskHandler@frame+1)& (0+255),w,b
 15415  005FA2  B4D8               	btfsc	status,2,c
 15416  005FA4  0012               	return	
 15417  005FA6  D7D2               	goto	l15506
 15418  005FA8                     __end_of_nwkRxTaskHandler:
 15419                           	opt callstack 0
 15420                           
 15421 ;; *************** function _nwkRxHandleReceivedFrame *****************
 15422 ;; Defined at:
 15423 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 15426 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 15429 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 15430 ;;  member          1   45[COMRAM] _Bool 
 15431 ;;  broadcast       1   44[COMRAM] _Bool 
 15432 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 15433 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  1    wreg      void 
 15436 ;; Registers used:
 15437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15438 ;; Tracked objects:
 15439 ;;		On entry : 2/1
 15440 ;;		On exit  : 0/0
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15444 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;Total ram usage:       10 bytes
 15448 ;; Hardware stack levels used:    1
 15449 ;; Hardware stack levels required when called:   10
 15450 ;; This function calls:
 15451 ;;		_NWK_GroupIsMember
 15452 ;;		_nwkRouteFrameReceived
 15453 ;;		_nwkRxRejectDuplicate
 15454 ;;		_nwkTxBroadcastFrame
 15455 ;; This function is called by:
 15456 ;;		_nwkRxTaskHandler
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           	psect	text99
 15461  001324                     __ptext99:
 15462                           	opt callstack 0
 15463  001324                     _nwkRxHandleReceivedFrame:
 15464                           	opt callstack 17
 15465                           
 15466                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 15467                           
 15468                           ; BSR set to: 1
 15469                           ;incstack = 0
 15470  001324  0E02               	movlw	2
 15471  001326  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 15472  001328  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 15473  00132A  0E00               	movlw	0
 15474  00132C  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 15475  00132E  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 15476                           
 15477                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 15478  001330  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15479  001336  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15480  00133C  0E24               	movlw	36
 15481  00133E  6EDF               	movwf	indf2,c
 15482                           
 15483                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 15484  001340  EE20 F009          	lfsr	2,9
 15485  001344  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15486  001346  26D9               	addwf	fsr2l,f,c
 15487  001348  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15488  00134A  22DA               	addwfc	fsr2h,f,c
 15489  00134C  B2DF               	btfsc	indf2,1,c
 15490  00134E  0012               	return	
 15491                           
 15492                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 15493  001350  EE20 F009          	lfsr	2,9
 15494  001354  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15495  001356  26D9               	addwf	fsr2l,f,c
 15496  001358  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15497  00135A  22DA               	addwfc	fsr2h,f,c
 15498  00135C  A6DF               	btfss	indf2,3,c
 15499  00135E  D008               	goto	l14896
 15500  001360  EE20 F009          	lfsr	2,9
 15501  001364  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15502  001366  26D9               	addwf	fsr2l,f,c
 15503  001368  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15504  00136A  22DA               	addwfc	fsr2h,f,c
 15505  00136C  B0DF               	btfsc	indf2,0,c
 15506  00136E  0012               	return	
 15507  001370                     l14896:
 15508                           
 15509                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 15510  001370  EE20 F003          	lfsr	2,3
 15511  001374  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15512  001376  26D9               	addwf	fsr2l,f,c
 15513  001378  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15514  00137A  22DA               	addwfc	fsr2h,f,c
 15515  00137C  28DE               	incf	postinc2,w,c
 15516  00137E  E125               	bnz	l14906
 15517  001380  28DE               	incf	postinc2,w,c
 15518  001382  A4D8               	btfss	status,2,c
 15519  001384  D022               	goto	l14906
 15520                           
 15521                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 15522  001386  EE20 F00D          	lfsr	2,13
 15523  00138A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15524  00138C  26D9               	addwf	fsr2l,f,c
 15525  00138E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15526  001390  22DA               	addwfc	fsr2h,f,c
 15527  001392  0101               	movlb	1	; () banked
 15528  001394  5100               	movf	_nwkIb& (0+255),w,b
 15529  001396  18DE               	xorwf	postinc2,w,c
 15530  001398  E104               	bnz	u14410
 15531  00139A  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15532  00139C  18DE               	xorwf	postinc2,w,c
 15533  00139E  B4D8               	btfsc	status,2,c
 15534  0013A0  D00B               	goto	u14420
 15535  0013A2                     u14410:
 15536                           
 15537                           ; BSR set to: 1
 15538  0013A2  EE20 F00D          	lfsr	2,13
 15539  0013A6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15540  0013A8  26D9               	addwf	fsr2l,f,c
 15541  0013AA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15542  0013AC  22DA               	addwfc	fsr2h,f,c
 15543  0013AE  28DE               	incf	postinc2,w,c
 15544  0013B0  E102               	bnz	u14421
 15545  0013B2  28DE               	incf	postinc2,w,c
 15546  0013B4  A4D8               	btfss	status,2,c
 15547  0013B6                     u14421:
 15548  0013B6  0012               	return	
 15549  0013B8                     u14420:
 15550                           
 15551                           ; BSR set to: 1
 15552                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 15553  0013B8  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15554  0013BE  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15555  0013C4  0E22               	movlw	34
 15556  0013C6  6EDF               	movwf	indf2,c
 15557  0013C8  0012               	return	
 15558  0013CA                     l14906:
 15559                           
 15560                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 15561  0013CA  EE20 F00D          	lfsr	2,13
 15562  0013CE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15563  0013D0  26D9               	addwf	fsr2l,f,c
 15564  0013D2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15565  0013D4  22DA               	addwfc	fsr2h,f,c
 15566  0013D6  28DE               	incf	postinc2,w,c
 15567  0013D8  E10B               	bnz	l14912
 15568  0013DA  28DE               	incf	postinc2,w,c
 15569  0013DC  A4D8               	btfss	status,2,c
 15570  0013DE  D008               	goto	l14912
 15571  0013E0  EE20 F009          	lfsr	2,9
 15572  0013E4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15573  0013E6  26D9               	addwf	fsr2l,f,c
 15574  0013E8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15575  0013EA  22DA               	addwfc	fsr2h,f,c
 15576  0013EC  B0DF               	btfsc	indf2,0,c
 15577  0013EE  0012               	return	
 15578  0013F0                     l14912:
 15579                           
 15580                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 15581  0013F0  EE20 F00B          	lfsr	2,11
 15582  0013F4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15583  0013F6  26D9               	addwf	fsr2l,f,c
 15584  0013F8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15585  0013FA  22DA               	addwfc	fsr2h,f,c
 15586  0013FC  0101               	movlb	1	; () banked
 15587  0013FE  5100               	movf	_nwkIb& (0+255),w,b
 15588  001400  18DE               	xorwf	postinc2,w,c
 15589  001402  E104               	bnz	l14916
 15590  001404  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15591  001406  18DE               	xorwf	postinc2,w,c
 15592  001408  B4D8               	btfsc	status,2,c
 15593  00140A  0012               	return	
 15594  00140C                     l14916:
 15595                           
 15596                           ; BSR set to: 1
 15597                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 15598  00140C  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 15599  001412  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 15600  001418  EC01  F018         	call	_nwkRouteFrameReceived	;wreg free
 15601                           
 15602                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 15603  00141C  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 15604  001422  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 15605  001428  ECE8  F011         	call	_nwkRxRejectDuplicate	;wreg free
 15606  00142C  0900               	iorlw	0
 15607  00142E  A4D8               	btfss	status,2,c
 15608  001430  0012               	return	
 15609                           
 15610                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 15611  001432  EE20 F009          	lfsr	2,9
 15612  001436  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15613  001438  26D9               	addwf	fsr2l,f,c
 15614  00143A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15615  00143C  22DA               	addwfc	fsr2h,f,c
 15616  00143E  A6DF               	btfss	indf2,3,c
 15617  001440  D0C7               	goto	l14954
 15618                           
 15619                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 15620  001442  EE20 F081          	lfsr	2,129
 15621  001446  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 15622  001448  26D9               	addwf	fsr2l,f,c
 15623  00144A  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 15624  00144C  22DA               	addwfc	fsr2h,f,c
 15625  00144E  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 15626  001454  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 15627                           
 15628                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 15629  00145A  EE20 F00D          	lfsr	2,13
 15630  00145E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15631  001460  26D9               	addwf	fsr2l,f,c
 15632  001462  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15633  001464  22DA               	addwfc	fsr2h,f,c
 15634  001466  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 15635  00146C  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 15636  001472  EC09  F03F         	call	_NWK_GroupIsMember	;wreg free
 15637  001476  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 15638                           
 15639                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 15640  001478  0E00               	movlw	0
 15641  00147A  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 15642                           
 15643                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 15644  00147C  EE20 F005          	lfsr	2,5
 15645  001480  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15646  001482  26D9               	addwf	fsr2l,f,c
 15647  001484  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15648  001486  22DA               	addwfc	fsr2h,f,c
 15649  001488  28DE               	incf	postinc2,w,c
 15650  00148A  E16C               	bnz	l14936
 15651  00148C  28DE               	incf	postinc2,w,c
 15652  00148E  A4D8               	btfss	status,2,c
 15653  001490  D069               	goto	l14936
 15654                           
 15655                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 15656  001492  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 15657  001494  B4D8               	btfsc	status,2,c
 15658  001496  D031               	goto	l14934
 15659                           
 15660                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 15661  001498  EE20 F001          	lfsr	2,1
 15662  00149C  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 15663  00149E  26D9               	addwf	fsr2l,f,c
 15664  0014A0  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 15665  0014A2  22DA               	addwfc	fsr2h,f,c
 15666  0014A4  50DF               	movf	indf2,w,c
 15667  0014A6  0B0F               	andlw	15
 15668  0014A8  0900               	iorlw	0
 15669  0014AA  B4D8               	btfsc	status,2,c
 15670  0014AC  D002               	goto	u14500
 15671  0014AE  0E01               	movlw	1
 15672  0014B0  D001               	goto	u14510
 15673  0014B2                     u14500:
 15674  0014B2  0E00               	movlw	0
 15675  0014B4                     u14510:
 15676  0014B4  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 15677                           
 15678                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 15679  0014B6  0E01               	movlw	1
 15680  0014B8  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 15681  0014BA  EE20 F001          	lfsr	2,1
 15682  0014BE  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 15683  0014C0  26D9               	addwf	fsr2l,f,c
 15684  0014C2  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 15685  0014C4  22DA               	addwfc	fsr2h,f,c
 15686  0014C6  50DF               	movf	indf2,w,c
 15687  0014C8  0B0F               	andlw	15
 15688  0014CA  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 15689  0014CC  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 15690  0014CE  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 15691  0014D0  50DF               	movf	indf2,w,c
 15692  0014D2  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 15693  0014D4  0BF0               	andlw	-16
 15694  0014D6  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 15695  0014D8  6EDF               	movwf	indf2,c
 15696                           
 15697                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 15698  0014DA  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 15699  0014E0  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 15700  0014E6  38DF               	swapf	indf2,w,c
 15701  0014E8  0B0F               	andlw	15
 15702  0014EA  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 15703  0014EC  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 15704  0014F2  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 15705  0014F8  D030               	goto	L11
 15706  0014FA                     l14934:
 15707                           
 15708                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 15709  0014FA  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 15710  001500  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 15711  001506  50DF               	movf	indf2,w,c
 15712  001508  0B0F               	andlw	15
 15713  00150A  0900               	iorlw	0
 15714  00150C  B4D8               	btfsc	status,2,c
 15715  00150E  D002               	goto	u14520
 15716  001510  0E01               	movlw	1
 15717  001512  D001               	goto	u14530
 15718  001514                     u14520:
 15719  001514  0E00               	movlw	0
 15720  001516                     u14530:
 15721  001516  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 15722                           
 15723                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 15724  001518  0E01               	movlw	1
 15725  00151A  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 15726  00151C  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 15727  001522  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 15728  001528  50DF               	movf	indf2,w,c
 15729  00152A  0B0F               	andlw	15
 15730  00152C  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 15731  00152E  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 15732  001530  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 15733  001532  50DF               	movf	indf2,w,c
 15734  001534  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 15735  001536  0BF0               	andlw	-16
 15736  001538  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 15737  00153A  6EDF               	movwf	indf2,c
 15738                           
 15739                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 15740  00153C  EE20 F001          	lfsr	2,1
 15741  001540  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 15742  001542  26D9               	addwf	fsr2l,f,c
 15743  001544  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 15744  001546  22DA               	addwfc	fsr2h,f,c
 15745  001548  38DF               	swapf	indf2,w,c
 15746  00154A  0B0F               	andlw	15
 15747  00154C  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 15748  00154E  EE20 F001          	lfsr	2,1
 15749  001552  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 15750  001554  26D9               	addwf	fsr2l,f,c
 15751  001556  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 15752  001558  22DA               	addwfc	fsr2h,f,c
 15753  00155A                     L11:
 15754  00155A  50DF               	movf	indf2,w,c
 15755  00155C  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 15756  00155E  0BF0               	andlw	-16
 15757  001560  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 15758  001562  D014               	goto	L10
 15759  001564                     l14936:
 15760                           
 15761                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 15762  001564  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 15763  001566  B4D8               	btfsc	status,2,c
 15764  001568  D00A               	goto	l14942
 15765                           
 15766                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 15767  00156A  0E01               	movlw	1
 15768  00156C  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 15769                           
 15770                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 15771  00156E  EE20 F009          	lfsr	2,9
 15772  001572  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15773  001574  26D9               	addwf	fsr2l,f,c
 15774  001576  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15775  001578  22DA               	addwfc	fsr2h,f,c
 15776  00157A  84DF               	bsf	indf2,2,c
 15777                           
 15778                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 15779  00157C  D008               	goto	l14944
 15780  00157E                     l14942:
 15781                           
 15782                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 15783  00157E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15784  001584  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15785  00158A  0E23               	movlw	35
 15786  00158C                     L10:
 15787  00158C  6EDF               	movwf	indf2,c
 15788  00158E                     l14944:
 15789                           
 15790                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 15791  00158E  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 15792  001590  B4D8               	btfsc	status,2,c
 15793  001592  D008               	goto	l14948
 15794                           
 15795                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 15796  001594  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 15797  00159A  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 15798  0015A0  EC16  F020         	call	_nwkTxBroadcastFrame	;wreg free
 15799  0015A4                     l14948:
 15800                           
 15801                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 15802  0015A4  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 15803  0015A6  B4D8               	btfsc	status,2,c
 15804  0015A8  0012               	return	
 15805                           
 15806                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 15807  0015AA  EE20 F081          	lfsr	2,129
 15808  0015AE  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 15809  0015B0  26D9               	addwf	fsr2l,f,c
 15810  0015B2  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 15811  0015B4  22DA               	addwfc	fsr2h,f,c
 15812  0015B6  0E02               	movlw	2
 15813  0015B8  26DE               	addwf	postinc2,f,c
 15814  0015BA  0E00               	movlw	0
 15815  0015BC  22DD               	addwfc	postdec2,f,c
 15816                           
 15817                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 15818  0015BE  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15819  0015C4  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15820  0015CA  0E22               	movlw	34
 15821  0015CC  6EDF               	movwf	indf2,c
 15822  0015CE  0012               	return	
 15823  0015D0                     l14954:
 15824                           
 15825                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 15826  0015D0  EE20 F005          	lfsr	2,5
 15827  0015D4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15828  0015D6  26D9               	addwf	fsr2l,f,c
 15829  0015D8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15830  0015DA  22DA               	addwfc	fsr2h,f,c
 15831  0015DC  28DE               	incf	postinc2,w,c
 15832  0015DE  E121               	bnz	l14962
 15833  0015E0  28DE               	incf	postinc2,w,c
 15834  0015E2  A4D8               	btfss	status,2,c
 15835  0015E4  D01E               	goto	l14962
 15836  0015E6  EE20 F00D          	lfsr	2,13
 15837  0015EA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15838  0015EC  26D9               	addwf	fsr2l,f,c
 15839  0015EE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15840  0015F0  22DA               	addwfc	fsr2h,f,c
 15841  0015F2  0101               	movlb	1	; () banked
 15842  0015F4  5100               	movf	_nwkIb& (0+255),w,b
 15843  0015F6  18DE               	xorwf	postinc2,w,c
 15844  0015F8  E104               	bnz	u14580
 15845  0015FA  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15846  0015FC  18DE               	xorwf	postinc2,w,c
 15847  0015FE  B4D8               	btfsc	status,2,c
 15848  001600  D010               	goto	l14962
 15849  001602                     u14580:
 15850                           
 15851                           ; BSR set to: 1
 15852  001602  EE20 F009          	lfsr	2,9
 15853  001606  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15854  001608  26D9               	addwf	fsr2l,f,c
 15855  00160A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15856  00160C  22DA               	addwfc	fsr2h,f,c
 15857  00160E  B4DF               	btfsc	indf2,2,c
 15858  001610  D008               	goto	l14962
 15859                           
 15860                           ; BSR set to: 1
 15861                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 15862  001612  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 15863  001618  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 15864  00161E  EC16  F020         	call	_nwkTxBroadcastFrame	;wreg free
 15865  001622                     l14962:
 15866                           
 15867                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 15868  001622  EE20 F00D          	lfsr	2,13
 15869  001626  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15870  001628  26D9               	addwf	fsr2l,f,c
 15871  00162A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15872  00162C  22DA               	addwfc	fsr2h,f,c
 15873  00162E  0101               	movlb	1	; () banked
 15874  001630  5100               	movf	_nwkIb& (0+255),w,b
 15875  001632  18DE               	xorwf	postinc2,w,c
 15876  001634  E104               	bnz	u14600
 15877  001636  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15878  001638  18DE               	xorwf	postinc2,w,c
 15879  00163A  B4D8               	btfsc	status,2,c
 15880  00163C  D00B               	goto	u14610
 15881  00163E                     u14600:
 15882                           
 15883                           ; BSR set to: 1
 15884  00163E  EE20 F00D          	lfsr	2,13
 15885  001642  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15886  001644  26D9               	addwf	fsr2l,f,c
 15887  001646  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15888  001648  22DA               	addwfc	fsr2h,f,c
 15889  00164A  28DE               	incf	postinc2,w,c
 15890  00164C  E10C               	bnz	l14968
 15891  00164E  28DE               	incf	postinc2,w,c
 15892  001650  A4D8               	btfss	status,2,c
 15893  001652  D009               	goto	l14968
 15894  001654                     u14610:
 15895                           
 15896                           ; BSR set to: 1
 15897                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 15898  001654  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15899  00165A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15900  001660  0E22               	movlw	34
 15901  001662  6EDF               	movwf	indf2,c
 15902                           
 15903                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 15904  001664  0012               	return	
 15905  001666                     l14968:
 15906                           
 15907                           ; BSR set to: 1
 15908  001666  EE20 F005          	lfsr	2,5
 15909  00166A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15910  00166C  26D9               	addwf	fsr2l,f,c
 15911  00166E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15912  001670  22DA               	addwfc	fsr2h,f,c
 15913  001672  5100               	movf	_nwkIb& (0+255),w,b
 15914  001674  18DE               	xorwf	postinc2,w,c
 15915  001676  E10C               	bnz	l2126
 15916  001678  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15917  00167A  18DE               	xorwf	postinc2,w,c
 15918  00167C  A4D8               	btfss	status,2,c
 15919  00167E  0012               	return	
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 15923  001680  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15924  001686  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15925  00168C  0E23               	movlw	35
 15926  00168E  6EDF               	movwf	indf2,c
 15927  001690                     l2126:
 15928  001690  0012               	return		;funcret
 15929  001692                     __end_of_nwkRxHandleReceivedFrame:
 15930                           	opt callstack 0
 15931                           
 15932 ;; *************** function _nwkTxBroadcastFrame *****************
 15933 ;; Defined at:
 15934 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 15937 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 15940 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15941 ;; Return value:  Size  Location     Type
 15942 ;;                  1    wreg      void 
 15943 ;; Registers used:
 15944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/1
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15954 ;;Total ram usage:        5 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; Hardware stack levels required when called:    9
 15957 ;; This function calls:
 15958 ;;		_memcpy
 15959 ;;		_nwkFrameAlloc
 15960 ;;		_rand
 15961 ;; This function is called by:
 15962 ;;		_nwkRxHandleReceivedFrame
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text100
 15967  00402C                     __ptext100:
 15968                           	opt callstack 0
 15969  00402C                     _nwkTxBroadcastFrame:
 15970                           	opt callstack 17
 15971                           
 15972                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 15973                           
 15974                           ;incstack = 0
 15975  00402C  EC22  F02F         	call	_nwkFrameAlloc	;wreg free
 15976  004030  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 15977  004036  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 15978  00403C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 15979  00403E  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 15980  004040  B4D8               	btfsc	status,2,c
 15981  004042  0012               	return	
 15982                           
 15983                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 15984  004044  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 15985  00404A  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 15986  004050  0E12               	movlw	18
 15987  004052  6EDF               	movwf	indf2,c
 15988                           
 15989                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 15990  004054  EE20 F001          	lfsr	2,1
 15991  004058  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 15992  00405A  26D9               	addwf	fsr2l,f,c
 15993  00405C  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 15994  00405E  22DA               	addwfc	fsr2h,f,c
 15995  004060  EE10 F001          	lfsr	1,1
 15996  004064  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 15997  004066  26E1               	addwf	fsr1l,f,c
 15998  004068  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 15999  00406A  22E2               	addwfc	fsr1h,f,c
 16000  00406C  006F FF7F FFE7     	movff	indf2,indf1
 16001                           
 16002                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 16003  004072  EE20 F083          	lfsr	2,131
 16004  004076  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16005  004078  26D9               	addwf	fsr2l,f,c
 16006  00407A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16007  00407C  22DA               	addwfc	fsr2h,f,c
 16008  00407E  0E00               	movlw	0
 16009  004080  6EDF               	movwf	indf2,c
 16010                           
 16011                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 16012  004082  ECBE  F024         	call	_rand	;wreg free
 16013  004086  0E07               	movlw	7
 16014  004088  161A               	andwf	?_rand^0,f,c
 16015  00408A  0E00               	movlw	0
 16016  00408C  161B               	andwf	(?_rand+1)^0,f,c
 16017  00408E  0E01               	movlw	1
 16018  004090  261A               	addwf	?_rand^0,f,c
 16019  004092  0E00               	movlw	0
 16020  004094  221B               	addwfc	(?_rand+1)^0,f,c
 16021  004096  EE20 F084          	lfsr	2,132
 16022  00409A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16023  00409C  26D9               	addwf	fsr2l,f,c
 16024  00409E  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16025  0040A0  22DA               	addwfc	fsr2h,f,c
 16026  0040A2  0060  F06B  FFDE   	movff	?_rand,postinc2
 16027  0040A8  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 16028                           
 16029                           ; BSR set to: 1
 16030                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 16031  0040AE  EE20 F087          	lfsr	2,135
 16032  0040B2  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16033  0040B4  26D9               	addwf	fsr2l,f,c
 16034  0040B6  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16035  0040B8  22DA               	addwfc	fsr2h,f,c
 16036  0040BA  0E00               	movlw	0
 16037  0040BC  6EDE               	movwf	postinc2,c
 16038  0040BE  0E00               	movlw	0
 16039  0040C0  6EDD               	movwf	postdec2,c
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 16043  0040C2  0E02               	movlw	2
 16044  0040C4  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 16045  0040C6  6E08               	movwf	memcpy@d1^0,c
 16046  0040C8  0E00               	movlw	0
 16047  0040CA  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16048  0040CC  6E09               	movwf	(memcpy@d1+1)^0,c
 16049  0040CE  0E02               	movlw	2
 16050  0040D0  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 16051  0040D2  6E0A               	movwf	memcpy@s1^0,c
 16052  0040D4  0E00               	movlw	0
 16053  0040D6  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16054  0040D8  6E0B               	movwf	(memcpy@s1+1)^0,c
 16055  0040DA  EE20 F001          	lfsr	2,1
 16056  0040DE  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 16057  0040E0  26D9               	addwf	fsr2l,f,c
 16058  0040E2  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16059  0040E4  22DA               	addwfc	fsr2h,f,c
 16060  0040E6  50DF               	movf	indf2,w,c
 16061  0040E8  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 16062  0040EA  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 16063  0040EC  6E0C               	movwf	memcpy@n^0,c
 16064  0040EE  6A0D               	clrf	(memcpy@n+1)^0,c
 16065  0040F0  ECD0  F035         	call	_memcpy	;wreg free
 16066                           
 16067                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 16068  0040F4  EE20 F002          	lfsr	2,2
 16069  0040F8  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16070  0040FA  26D9               	addwf	fsr2l,f,c
 16071  0040FC  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16072  0040FE  22DA               	addwfc	fsr2h,f,c
 16073  004100  0E41               	movlw	65
 16074  004102  6EDE               	movwf	postinc2,c
 16075  004104  0E88               	movlw	136
 16076  004106  6EDD               	movwf	postdec2,c
 16077                           
 16078                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 16079  004108  EE20 F007          	lfsr	2,7
 16080  00410C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16081  00410E  26D9               	addwf	fsr2l,f,c
 16082  004110  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16083  004112  22DA               	addwfc	fsr2h,f,c
 16084  004114  0EFF               	movlw	255
 16085  004116  6EDE               	movwf	postinc2,c
 16086  004118  0EFF               	movlw	255
 16087  00411A  6EDD               	movwf	postdec2,c
 16088                           
 16089                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 16090  00411C  EE20 F005          	lfsr	2,5
 16091  004120  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 16092  004122  26D9               	addwf	fsr2l,f,c
 16093  004124  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16094  004126  22DA               	addwfc	fsr2h,f,c
 16095  004128  EE10 F005          	lfsr	1,5
 16096  00412C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16097  00412E  26E1               	addwf	fsr1l,f,c
 16098  004130  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16099  004132  22E2               	addwfc	fsr1h,f,c
 16100  004134  006F FF7B FFE6     	movff	postinc2,postinc1
 16101  00413A  006F FF77 FFE5     	movff	postdec2,postdec1
 16102                           
 16103                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 16104  004140  EE20 F009          	lfsr	2,9
 16105  004144  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16106  004146  26D9               	addwf	fsr2l,f,c
 16107  004148  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16108  00414A  22DA               	addwfc	fsr2h,f,c
 16109  00414C  0060  F403  FFDE   	movff	_nwkIb,postinc2
 16110  004152  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 16111                           
 16112                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 16113  004158  0101               	movlb	1	; () banked
 16114  00415A  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 16115  00415C  EE20 F004          	lfsr	2,4
 16116  004160  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16117  004162  26D9               	addwf	fsr2l,f,c
 16118  004164  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16119  004166  22DA               	addwfc	fsr2h,f,c
 16120  004168  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 16121  00416E  0012               	return		;funcret
 16122  004170                     __end_of_nwkTxBroadcastFrame:
 16123                           	opt callstack 0
 16124                           
 16125 ;; *************** function _nwkRxRejectDuplicate *****************
 16126 ;; Defined at:
 16127 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 16130 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16131 ;; Auto vars:     Size  Location     Type
 16132 ;;  shift           1   23[COMRAM] unsigned char 
 16133 ;;  diff            1   25[COMRAM] unsigned char 
 16134 ;;  i               1   24[COMRAM] unsigned char 
 16135 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 16136 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 16137 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 16138 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 16139 ;; Return value:  Size  Location     Type
 16140 ;;                  1    wreg      _Bool 
 16141 ;; Registers used:
 16142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16143 ;; Tracked objects:
 16144 ;;		On entry : 0/1
 16145 ;;		On exit  : 0/0
 16146 ;;		Unchanged: 0/0
 16147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16149 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16150 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16151 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16152 ;;Total ram usage:       13 bytes
 16153 ;; Hardware stack levels used:    1
 16154 ;; Hardware stack levels required when called:    9
 16155 ;; This function calls:
 16156 ;;		_SYS_TimerStart
 16157 ;;		_nwkRouteRemove
 16158 ;; This function is called by:
 16159 ;;		_nwkRxHandleReceivedFrame
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           	psect	text101
 16164  0023D0                     __ptext101:
 16165                           	opt callstack 0
 16166  0023D0                     _nwkRxRejectDuplicate:
 16167                           	opt callstack 17
 16168                           
 16169                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 16170                           
 16171                           ;incstack = 0
 16172  0023D0  0E00               	movlw	0
 16173  0023D2  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 16174  0023D4  0E00               	movlw	0
 16175  0023D6  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 16176                           
 16177                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 16178  0023D8  0E00               	movlw	0
 16179  0023DA  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 16180  0023DC                     l14336:
 16181                           
 16182                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 16183  0023DC  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 16184  0023DE  0D05               	mullw	5
 16185  0023E0  0EC0               	movlw	low _nwkRxDuplicateRejectionTable
 16186  0023E2  24F3               	addwf	243,w,c
 16187  0023E4  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 16188  0023E6  0E03               	movlw	high _nwkRxDuplicateRejectionTable
 16189  0023E8  20F4               	addwfc	prodh,w,c
 16190  0023EA  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 16191                           
 16192                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 16193  0023EC  EE20 F004          	lfsr	2,4
 16194  0023F0  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16195  0023F2  26D9               	addwf	fsr2l,f,c
 16196  0023F4  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16197  0023F6  22DA               	addwfc	fsr2h,f,c
 16198  0023F8  50DF               	movf	indf2,w,c
 16199  0023FA  B4D8               	btfsc	status,2,c
 16200  0023FC  D0B3               	goto	l14376
 16201  0023FE  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 16202  002404  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 16203  00240A  EE10 F00B          	lfsr	1,11
 16204  00240E  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16205  002410  26E1               	addwf	fsr1l,f,c
 16206  002412  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16207  002414  22E2               	addwfc	fsr1h,f,c
 16208  002416  50DE               	movf	postinc2,w,c
 16209  002418  18E6               	xorwf	postinc1,w,c
 16210  00241A  E103               	bnz	u13391
 16211  00241C  50DE               	movf	postinc2,w,c
 16212  00241E  18E6               	xorwf	postinc1,w,c
 16213  002420  A4D8               	btfss	status,2,c
 16214  002422                     u13391:
 16215  002422  D0A0               	goto	l14376
 16216                           
 16217                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 16218  002424  EE20 F00A          	lfsr	2,10
 16219  002428  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16220  00242A  26D9               	addwf	fsr2l,f,c
 16221  00242C  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16222  00242E  22DA               	addwfc	fsr2h,f,c
 16223  002430  50DF               	movf	indf2,w,c
 16224  002432  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 16225  002434  EE20 F002          	lfsr	2,2
 16226  002438  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16227  00243A  26D9               	addwf	fsr2l,f,c
 16228  00243C  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16229  00243E  22DA               	addwfc	fsr2h,f,c
 16230  002440  50DF               	movf	indf2,w,c
 16231  002442  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 16232  002444  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 16233  002446  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 16234  002448  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 16235                           
 16236                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 16237  00244A  0E08               	movlw	8
 16238  00244C  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 16239  00244E  D055               	goto	l14364
 16240                           
 16241                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 16242  002450  EE20 F003          	lfsr	2,3
 16243  002454  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16244  002456  26D9               	addwf	fsr2l,f,c
 16245  002458  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16246  00245A  22DA               	addwfc	fsr2h,f,c
 16247  00245C  50DF               	movf	indf2,w,c
 16248  00245E  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 16249  002460  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 16250  002466  0E01               	movlw	1
 16251  002468  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 16252  00246A  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 16253  00246C  D002               	goto	u13414
 16254  00246E                     u13415:
 16255  00246E  90D8               	bcf	status,0,c
 16256  002470  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 16257  002472                     u13414:
 16258  002472  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 16259  002474  D7FC               	goto	u13415
 16260  002476  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 16261  002478  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 16262  00247A  0900               	iorlw	0
 16263  00247C  B4D8               	btfsc	status,2,c
 16264  00247E  D028               	goto	l14356
 16265                           
 16266                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 16267  002480  EE20 F005          	lfsr	2,5
 16268  002484  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16269  002486  26D9               	addwf	fsr2l,f,c
 16270  002488  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16271  00248A  22DA               	addwfc	fsr2h,f,c
 16272  00248C  0101               	movlb	1	; () banked
 16273  00248E  5100               	movf	_nwkIb& (0+255),w,b
 16274  002490  18DE               	xorwf	postinc2,w,c
 16275  002492  E11C               	bnz	l14352
 16276  002494  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16277  002496  18DE               	xorwf	postinc2,w,c
 16278  002498  A4D8               	btfss	status,2,c
 16279  00249A  D018               	goto	l14352
 16280                           
 16281                           ; BSR set to: 1
 16282                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 16283  00249C  EE20 F00D          	lfsr	2,13
 16284  0024A0  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16285  0024A2  26D9               	addwf	fsr2l,f,c
 16286  0024A4  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16287  0024A6  22DA               	addwfc	fsr2h,f,c
 16288  0024A8  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 16289  0024AE  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 16290  0024B4  EE20 F009          	lfsr	2,9
 16291  0024B8  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16292  0024BA  26D9               	addwf	fsr2l,f,c
 16293  0024BC  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16294  0024BE  22DA               	addwfc	fsr2h,f,c
 16295  0024C0  0E00               	movlw	0
 16296  0024C2  B6DF               	btfsc	indf2,3,c
 16297  0024C4  0E01               	movlw	1
 16298  0024C6  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 16299  0024C8  EC32  F03D         	call	_nwkRouteRemove	;wreg free
 16300  0024CC                     l14352:
 16301                           
 16302                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 16303  0024CC  0E01               	movlw	1
 16304  0024CE  0012               	return	
 16305  0024D0                     l14356:
 16306                           
 16307                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 16308  0024D0  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 16309  0024D6  0E01               	movlw	1
 16310  0024D8  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 16311  0024DA  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 16312  0024DC  D002               	goto	u13444
 16313  0024DE                     u13445:
 16314  0024DE  90D8               	bcf	status,0,c
 16315  0024E0  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 16316  0024E2                     u13444:
 16317  0024E2  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 16318  0024E4  D7FC               	goto	u13445
 16319  0024E6  EE20 F003          	lfsr	2,3
 16320  0024EA  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16321  0024EC  26D9               	addwf	fsr2l,f,c
 16322  0024EE  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16323  0024F0  22DA               	addwfc	fsr2h,f,c
 16324  0024F2  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 16325  0024F4  12DF               	iorwf	indf2,f,c
 16326  0024F6                     l14358:
 16327                           
 16328                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 16329  0024F6  0E00               	movlw	0
 16330  0024F8  0012               	return	
 16331  0024FA                     l14364:
 16332                           
 16333                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 16334  0024FA  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 16335  0024FC  0800               	sublw	0
 16336  0024FE  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 16337                           
 16338                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 16339  002500  EE20 F00A          	lfsr	2,10
 16340  002504  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16341  002506  26D9               	addwf	fsr2l,f,c
 16342  002508  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16343  00250A  22DA               	addwfc	fsr2h,f,c
 16344  00250C  EE10 F002          	lfsr	1,2
 16345  002510  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16346  002512  26E1               	addwf	fsr1l,f,c
 16347  002514  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16348  002516  22E2               	addwfc	fsr1h,f,c
 16349  002518  006F FF7F FFE7     	movff	indf2,indf1
 16350                           
 16351                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 16352  00251E  EE20 F003          	lfsr	2,3
 16353  002522  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16354  002524  26D9               	addwf	fsr2l,f,c
 16355  002526  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16356  002528  22DA               	addwfc	fsr2h,f,c
 16357  00252A  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 16358  002530  EE10 F003          	lfsr	1,3
 16359  002534  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16360  002536  26E1               	addwf	fsr1l,f,c
 16361  002538  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16362  00253A  22E2               	addwfc	fsr1h,f,c
 16363  00253C  50E7               	movf	indf1,w,c
 16364  00253E  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 16365  002540  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 16366  002542  D002               	goto	u13454
 16367  002544                     u13455:
 16368  002544  90D8               	bcf	status,0,c
 16369  002546  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 16370  002548                     u13454:
 16371  002548  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 16372  00254A  D7FC               	goto	u13455
 16373  00254C  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 16374  00254E  0901               	iorlw	1
 16375  002550  6EDF               	movwf	indf2,c
 16376                           
 16377                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 16378  002552  EE20 F004          	lfsr	2,4
 16379  002556  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16380  002558  26D9               	addwf	fsr2l,f,c
 16381  00255A  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16382  00255C  22DA               	addwfc	fsr2h,f,c
 16383  00255E  0E01               	movlw	1
 16384  002560  6EDF               	movwf	indf2,c
 16385  002562  D7C9               	goto	l14358
 16386  002564                     l14376:
 16387                           
 16388                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 16389  002564  EE20 F004          	lfsr	2,4
 16390  002568  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16391  00256A  26D9               	addwf	fsr2l,f,c
 16392  00256C  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16393  00256E  22DA               	addwfc	fsr2h,f,c
 16394  002570  50DF               	movf	indf2,w,c
 16395  002572  A4D8               	btfss	status,2,c
 16396  002574  D006               	goto	l14380
 16397                           
 16398                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 16399  002576  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 16400  00257C  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 16401  002582                     l14380:
 16402                           
 16403                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 16404  002582  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 16405  002584  0E09               	movlw	9
 16406  002586  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 16407  002588  D729               	goto	l14336
 16408                           
 16409                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 16410  00258A  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16411  00258C  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16412  00258E  B4D8               	btfsc	status,2,c
 16413  002590  D79D               	goto	l14352
 16414                           
 16415                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 16416  002592  EE20 F00B          	lfsr	2,11
 16417  002596  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16418  002598  26D9               	addwf	fsr2l,f,c
 16419  00259A  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16420  00259C  22DA               	addwfc	fsr2h,f,c
 16421  00259E  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 16422  0025A4  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 16423  0025AA  006F FF7B FFE6     	movff	postinc2,postinc1
 16424  0025B0  006F FF77 FFE5     	movff	postdec2,postdec1
 16425                           
 16426                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 16427  0025B6  EE20 F00A          	lfsr	2,10
 16428  0025BA  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16429  0025BC  26D9               	addwf	fsr2l,f,c
 16430  0025BE  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16431  0025C0  22DA               	addwfc	fsr2h,f,c
 16432  0025C2  EE10 F002          	lfsr	1,2
 16433  0025C6  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16434  0025C8  26E1               	addwf	fsr1l,f,c
 16435  0025CA  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16436  0025CC  22E2               	addwfc	fsr1h,f,c
 16437  0025CE  006F FF7F FFE7     	movff	indf2,indf1
 16438                           
 16439                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 16440  0025D4  EE20 F003          	lfsr	2,3
 16441  0025D8  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16442  0025DA  26D9               	addwf	fsr2l,f,c
 16443  0025DC  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16444  0025DE  22DA               	addwfc	fsr2h,f,c
 16445  0025E0  0E01               	movlw	1
 16446  0025E2  6EDF               	movwf	indf2,c
 16447                           
 16448                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 16449  0025E4  EE20 F004          	lfsr	2,4
 16450  0025E8  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16451  0025EA  26D9               	addwf	fsr2l,f,c
 16452  0025EC  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16453  0025EE  22DA               	addwfc	fsr2h,f,c
 16454  0025F0  0E01               	movlw	1
 16455  0025F2  6EDF               	movwf	indf2,c
 16456                           
 16457                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 16458  0025F4  0EAF               	movlw	low _nwkRxDuplicateRejectionTimer
 16459  0025F6  6E10               	movwf	SYS_TimerStart@timer^0,c
 16460  0025F8  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 16461  0025FA  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 16462  0025FC  EC8D  F03F         	call	_SYS_TimerStart	;wreg free
 16463  002600  D77A               	goto	l14358
 16464  002602                     __end_of_nwkRxRejectDuplicate:
 16465                           	opt callstack 0
 16466                           
 16467 ;; *************** function _SYS_TimerStart *****************
 16468 ;; Defined at:
 16469 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 16470 ;; Parameters:    Size  Location     Type
 16471 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 16472 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      void 
 16477 ;; Registers used:
 16478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16488 ;;Total ram usage:        2 bytes
 16489 ;; Hardware stack levels used:    1
 16490 ;; Hardware stack levels required when called:    8
 16491 ;; This function calls:
 16492 ;;		_SYS_TimerStarted
 16493 ;;		_placeTimer
 16494 ;; This function is called by:
 16495 ;;		_nwkRxDuplicateRejectionTimerHandler
 16496 ;;		_nwkRxRejectDuplicate
 16497 ;;		_nwkTxAckWaitTimerHandler
 16498 ;;		_nwkTxDelayTimerHandler
 16499 ;;		_nwkTxTaskHandler
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text102
 16504  007F1A                     __ptext102:
 16505                           	opt callstack 0
 16506  007F1A                     _SYS_TimerStart:
 16507                           	opt callstack 19
 16508                           
 16509                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 16510                           
 16511                           ;incstack = 0
 16512  007F1A  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 16513  007F20  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 16514  007F26  EC73  F03B         	call	_SYS_TimerStarted	;wreg free
 16515  007F2A  0900               	iorlw	0
 16516  007F2C  A4D8               	btfss	status,2,c
 16517  007F2E  0012               	return	
 16518                           
 16519                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 16520  007F30  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 16521  007F36  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 16522  007F3C  ECF2  F018         	call	_placeTimer	;wreg free
 16523  007F40  0012               	return		;funcret
 16524  007F42                     __end_of_SYS_TimerStart:
 16525                           	opt callstack 0
 16526                           
 16527 ;; *************** function _placeTimer *****************
 16528 ;; Defined at:
 16529 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 16530 ;; Parameters:    Size  Location     Type
 16531 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 16532 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16533 ;; Auto vars:     Size  Location     Type
 16534 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 16535 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16536 ;;  timeout         4    7[COMRAM] unsigned long 
 16537 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 16538 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16539 ;; Return value:  Size  Location     Type
 16540 ;;                  1    wreg      void 
 16541 ;; Registers used:
 16542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16543 ;; Tracked objects:
 16544 ;;		On entry : 0/0
 16545 ;;		On exit  : 0/0
 16546 ;;		Unchanged: 0/0
 16547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16549 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16551 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16552 ;;Total ram usage:       14 bytes
 16553 ;; Hardware stack levels used:    1
 16554 ;; Hardware stack levels required when called:    7
 16555 ;; This function calls:
 16556 ;;		Nothing
 16557 ;; This function is called by:
 16558 ;;		_SYS_TimerStart
 16559 ;;		_SYS_TimerTaskHandler
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           	psect	text103
 16564  0031E4                     __ptext103:
 16565                           	opt callstack 0
 16566  0031E4                     _placeTimer:
 16567                           	opt callstack 21
 16568                           
 16569                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 16570                           
 16571                           ;incstack = 0
 16572  0031E4  0100               	movlb	0	; () banked
 16573  0031E6  51E0               	movf	_timers& (0+255),w,b
 16574  0031E8  11E1               	iorwf	(_timers+1)& (0+255),w,b
 16575  0031EA  B4D8               	btfsc	status,2,c
 16576  0031EC  D0A8               	goto	l13946
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 16580  0031EE  0E00               	movlw	0
 16581  0031F0  6E0C               	movwf	placeTimer@prev^0,c
 16582  0031F2  0E00               	movlw	0
 16583  0031F4  6E0D               	movwf	(placeTimer@prev+1)^0,c
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 16587  0031F6  EE20 F006          	lfsr	2,6
 16588  0031FA  5002               	movf	placeTimer@timer^0,w,c
 16589  0031FC  26D9               	addwf	fsr2l,f,c
 16590  0031FE  5003               	movf	(placeTimer@timer+1)^0,w,c
 16591  003200  22DA               	addwfc	fsr2h,f,c
 16592  003202  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 16593  003208  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 16594  00320E  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 16595  003214  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 16599  00321A  0060  F380  F00E   	movff	_timers,placeTimer@t
 16600  003220  0060  F384  F00F   	movff	_timers+1,placeTimer@t+1
 16601  003226  D03F               	goto	l13932
 16602  003228                     l13922:
 16603                           
 16604                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 16605  003228  EE20 F002          	lfsr	2,2
 16606  00322C  500E               	movf	placeTimer@t^0,w,c
 16607  00322E  26D9               	addwf	fsr2l,f,c
 16608  003230  500F               	movf	(placeTimer@t+1)^0,w,c
 16609  003232  22DA               	addwfc	fsr2h,f,c
 16610  003234  50DE               	movf	postinc2,w,c
 16611  003236  5C08               	subwf	placeTimer@timeout^0,w,c
 16612  003238  50DE               	movf	postinc2,w,c
 16613  00323A  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 16614  00323C  50DE               	movf	postinc2,w,c
 16615  00323E  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 16616  003240  50DE               	movf	postinc2,w,c
 16617  003242  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 16618  003244  B0D8               	btfsc	status,0,c
 16619  003246  D00F               	goto	l13928
 16620                           
 16621                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 16622  003248  EE20 F002          	lfsr	2,2
 16623  00324C  500E               	movf	placeTimer@t^0,w,c
 16624  00324E  26D9               	addwf	fsr2l,f,c
 16625  003250  500F               	movf	(placeTimer@t+1)^0,w,c
 16626  003252  22DA               	addwfc	fsr2h,f,c
 16627  003254  5008               	movf	placeTimer@timeout^0,w,c
 16628  003256  5EDE               	subwf	postinc2,f,c
 16629  003258  5009               	movf	(placeTimer@timeout+1)^0,w,c
 16630  00325A  5ADE               	subwfb	postinc2,f,c
 16631  00325C  500A               	movf	(placeTimer@timeout+2)^0,w,c
 16632  00325E  5ADE               	subwfb	postinc2,f,c
 16633  003260  500B               	movf	(placeTimer@timeout+3)^0,w,c
 16634  003262  5ADE               	subwfb	postinc2,f,c
 16635                           
 16636                           ;../sys/sys_src/sysTimer.c: 158:          break;
 16637  003264  D024               	goto	u13000
 16638  003266                     l13928:
 16639                           
 16640                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 16641  003266  EE20 F002          	lfsr	2,2
 16642  00326A  500E               	movf	placeTimer@t^0,w,c
 16643  00326C  26D9               	addwf	fsr2l,f,c
 16644  00326E  500F               	movf	(placeTimer@t+1)^0,w,c
 16645  003270  22DA               	addwfc	fsr2h,f,c
 16646  003272  50DE               	movf	postinc2,w,c
 16647  003274  5E08               	subwf	placeTimer@timeout^0,f,c
 16648  003276  50DE               	movf	postinc2,w,c
 16649  003278  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 16650  00327A  50DE               	movf	postinc2,w,c
 16651  00327C  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 16652  00327E  50DD               	movf	postdec2,w,c
 16653  003280  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 16654                           
 16655                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 16656  003282  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 16657  003288  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 16658                           
 16659                           ;../sys/sys_src/sysTimer.c: 164:     }
 16660  00328E  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 16661  003294  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 16662  00329A  006F FF78  F00E    	movff	postinc2,placeTimer@t
 16663  0032A0  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 16664  0032A6                     l13932:
 16665  0032A6  500E               	movf	placeTimer@t^0,w,c
 16666  0032A8  100F               	iorwf	(placeTimer@t+1)^0,w,c
 16667  0032AA  A4D8               	btfss	status,2,c
 16668  0032AC  D7BD               	goto	l13922
 16669  0032AE                     u13000:
 16670                           
 16671                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 16672  0032AE  EE20 F002          	lfsr	2,2
 16673  0032B2  5002               	movf	placeTimer@timer^0,w,c
 16674  0032B4  26D9               	addwf	fsr2l,f,c
 16675  0032B6  5003               	movf	(placeTimer@timer+1)^0,w,c
 16676  0032B8  22DA               	addwfc	fsr2h,f,c
 16677  0032BA  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 16678  0032C0  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 16679  0032C6  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 16680  0032CC  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 16681                           
 16682                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 16683  0032D2  500C               	movf	placeTimer@prev^0,w,c
 16684  0032D4  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 16685  0032D6  B4D8               	btfsc	status,2,c
 16686  0032D8  D01F               	goto	l13942
 16687                           
 16688                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 16689  0032DA  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 16690  0032E0  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 16691  0032E6  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 16692  0032EC  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 16693  0032F2  006F FF7B FFE6     	movff	postinc2,postinc1
 16694  0032F8  006F FF77 FFE5     	movff	postdec2,postdec1
 16695                           
 16696                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 16697  0032FE  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 16698  003304  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 16699  00330A  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 16700  003310  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 16701                           
 16702                           ;../sys/sys_src/sysTimer.c: 172:     }
 16703  003316  0012               	return	
 16704  003318                     l13942:
 16705                           
 16706                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 16707  003318  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 16708  00331E  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 16709  003324  0060  F383  FFDE   	movff	_timers,postinc2
 16710  00332A  0060  F387  FFDD   	movff	_timers+1,postdec2
 16711  003330                     l13944:
 16712                           
 16713                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 16714  003330  0060  F008  F0E0   	movff	placeTimer@timer,_timers
 16715  003336  0060  F00C  F0E1   	movff	placeTimer@timer+1,_timers+1
 16716  00333C  0012               	return	
 16717  00333E                     l13946:
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 16721  00333E  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 16722  003344  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 16723  00334A  0E00               	movlw	0
 16724  00334C  6EDE               	movwf	postinc2,c
 16725  00334E  0E00               	movlw	0
 16726  003350  6EDD               	movwf	postdec2,c
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 16730  003352  EE20 F006          	lfsr	2,6
 16731  003356  5002               	movf	placeTimer@timer^0,w,c
 16732  003358  26D9               	addwf	fsr2l,f,c
 16733  00335A  5003               	movf	(placeTimer@timer+1)^0,w,c
 16734  00335C  22DA               	addwfc	fsr2h,f,c
 16735  00335E  EE10 F002          	lfsr	1,2
 16736  003362  5002               	movf	placeTimer@timer^0,w,c
 16737  003364  26E1               	addwf	fsr1l,f,c
 16738  003366  5003               	movf	(placeTimer@timer+1)^0,w,c
 16739  003368  22E2               	addwfc	fsr1h,f,c
 16740  00336A  006F FF7B FFE6     	movff	postinc2,postinc1
 16741  003370  006F FF7B FFE6     	movff	postinc2,postinc1
 16742  003376  006F FF7B FFE6     	movff	postinc2,postinc1
 16743  00337C  006F FF7B FFE6     	movff	postinc2,postinc1
 16744  003382  D7D6               	goto	l13944
 16745  003384                     __end_of_placeTimer:
 16746                           	opt callstack 0
 16747                           
 16748 ;; *************** function _SYS_TimerStarted *****************
 16749 ;; Defined at:
 16750 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 16753 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16754 ;; Auto vars:     Size  Location     Type
 16755 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 16756 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16757 ;; Return value:  Size  Location     Type
 16758 ;;                  1    wreg      _Bool 
 16759 ;; Registers used:
 16760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/0
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16770 ;;Total ram usage:        4 bytes
 16771 ;; Hardware stack levels used:    1
 16772 ;; Hardware stack levels required when called:    7
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_SYS_TimerStart
 16777 ;; This function uses a non-reentrant model
 16778 ;;
 16779                           
 16780                           	psect	text104
 16781  0076E6                     __ptext104:
 16782                           	opt callstack 0
 16783  0076E6                     _SYS_TimerStarted:
 16784                           	opt callstack 19
 16785                           
 16786                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 16787                           
 16788                           ;incstack = 0
 16789  0076E6  0060  F380  F004   	movff	_timers,SYS_TimerStarted@t
 16790  0076EC  0060  F384  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 16791  0076F2  D015               	goto	l13908
 16792  0076F4                     l13900:
 16793                           
 16794                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 16795  0076F4  5002               	movf	SYS_TimerStarted@timer^0,w,c
 16796  0076F6  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 16797  0076F8  E106               	bnz	l13906
 16798  0076FA  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 16799  0076FC  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 16800  0076FE  A4D8               	btfss	status,2,c
 16801  007700  D002               	goto	l13906
 16802                           
 16803                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 16804  007702  0E01               	movlw	1
 16805  007704  0012               	return	
 16806  007706                     l13906:
 16807  007706  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 16808  00770C  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 16809  007712  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 16810  007718  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 16811  00771E                     l13908:
 16812  00771E  5004               	movf	SYS_TimerStarted@t^0,w,c
 16813  007720  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 16814  007722  A4D8               	btfss	status,2,c
 16815  007724  D7E7               	goto	l13900
 16816                           
 16817                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 16818  007726  0E00               	movlw	0
 16819  007728  0012               	return		;funcret
 16820  00772A                     __end_of_SYS_TimerStarted:
 16821                           	opt callstack 0
 16822                           
 16823 ;; *************** function _nwkRouteFrameReceived *****************
 16824 ;; Defined at:
 16825 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 16828 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;  discovery       1   16[COMRAM] _Bool 
 16831 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 16832 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16833 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 16834 ;;		 -> nwkRouteTable(70), NULL(0), 
 16835 ;; Return value:  Size  Location     Type
 16836 ;;                  1    wreg      void 
 16837 ;; Registers used:
 16838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16839 ;; Tracked objects:
 16840 ;;		On entry : 3F/1
 16841 ;;		On exit  : 0/0
 16842 ;;		Unchanged: 0/0
 16843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16845 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16846 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16847 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16848 ;;Total ram usage:       12 bytes
 16849 ;; Hardware stack levels used:    1
 16850 ;; Hardware stack levels required when called:    8
 16851 ;; This function calls:
 16852 ;;		_NWK_RouteFindEntry
 16853 ;;		_NWK_RouteNewEntry
 16854 ;; This function is called by:
 16855 ;;		_nwkRxHandleReceivedFrame
 16856 ;; This function uses a non-reentrant model
 16857 ;;
 16858                           
 16859                           	psect	text105
 16860  003002                     __ptext105:
 16861                           	opt callstack 0
 16862  003002                     _nwkRouteFrameReceived:
 16863                           	opt callstack 18
 16864                           
 16865                           ; BSR set to: 1
 16866                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 16867                           
 16868                           ;incstack = 0
 16869  003002  0E02               	movlw	2
 16870  003004  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 16871  003006  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 16872  003008  0E00               	movlw	0
 16873  00300A  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 16874  00300C  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 16875                           
 16876                           ; BSR set to: 1
 16877                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 16878  00300E  EE20 F007          	lfsr	2,7
 16879  003012  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16880  003014  26D9               	addwf	fsr2l,f,c
 16881  003016  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16882  003018  22DA               	addwfc	fsr2h,f,c
 16883  00301A  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 16884  003020  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 16885  003026  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 16886  003028  D015               	goto	l14224
 16887                           
 16888                           ; BSR set to: 1
 16889  00302A  EE20 F00B          	lfsr	2,11
 16890  00302E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16891  003030  26D9               	addwf	fsr2l,f,c
 16892  003032  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16893  003034  22DA               	addwfc	fsr2h,f,c
 16894  003036  EE10 F007          	lfsr	1,7
 16895  00303A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16896  00303C  26E1               	addwf	fsr1l,f,c
 16897  00303E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16898  003040  22E2               	addwfc	fsr1h,f,c
 16899  003042  50DE               	movf	postinc2,w,c
 16900  003044  18E6               	xorwf	postinc1,w,c
 16901  003046  E105               	bnz	u13200
 16902  003048  50DE               	movf	postinc2,w,c
 16903  00304A  18E6               	xorwf	postinc1,w,c
 16904  00304C  A4D8               	btfss	status,2,c
 16905  00304E  0012               	return	
 16906  003050  D001               	goto	l14224
 16907  003052                     u13200:
 16908  003052  0012               	return	
 16909  003054                     l14224:
 16910                           
 16911                           ; BSR set to: 1
 16912                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 16913  003054  EE20 F003          	lfsr	2,3
 16914  003058  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16915  00305A  26D9               	addwf	fsr2l,f,c
 16916  00305C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16917  00305E  22DA               	addwfc	fsr2h,f,c
 16918  003060  28DE               	incf	postinc2,w,c
 16919  003062  E103               	bnz	l14228
 16920  003064  28DE               	incf	postinc2,w,c
 16921  003066  B4D8               	btfsc	status,2,c
 16922  003068  0012               	return	
 16923  00306A                     l14228:
 16924                           
 16925                           ; BSR set to: 1
 16926                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 16927  00306A  EE20 F00B          	lfsr	2,11
 16928  00306E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16929  003070  26D9               	addwf	fsr2l,f,c
 16930  003072  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16931  003074  22DA               	addwfc	fsr2h,f,c
 16932  003076  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 16933  00307C  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 16934  003082  0E00               	movlw	0
 16935  003084  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 16936  003086  EC18  F037         	call	_NWK_RouteFindEntry	;wreg free
 16937  00308A  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 16938  003090  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 16939                           
 16940                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 16941  003096  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 16942  003098  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 16943  00309A  B4D8               	btfsc	status,2,c
 16944  00309C  D067               	goto	l14250
 16945                           
 16946                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 16947  00309E  0E00               	movlw	0
 16948  0030A0  6E12               	movwf	_nwkRouteFrameReceived$4119^0,c
 16949  0030A2  EE20 F005          	lfsr	2,5
 16950  0030A6  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16951  0030A8  26D9               	addwf	fsr2l,f,c
 16952  0030AA  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16953  0030AC  22DA               	addwfc	fsr2h,f,c
 16954  0030AE  28DE               	incf	postinc2,w,c
 16955  0030B0  E113               	bnz	l1933
 16956  0030B2  28DE               	incf	postinc2,w,c
 16957  0030B4  A4D8               	btfss	status,2,c
 16958  0030B6  D010               	goto	l1933
 16959  0030B8  EE20 F00D          	lfsr	2,13
 16960  0030BC  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16961  0030BE  26D9               	addwf	fsr2l,f,c
 16962  0030C0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16963  0030C2  22DA               	addwfc	fsr2h,f,c
 16964  0030C4  0101               	movlb	1	; () banked
 16965  0030C6  5100               	movf	_nwkIb& (0+255),w,b
 16966  0030C8  18DE               	xorwf	postinc2,w,c
 16967  0030CA  E106               	bnz	l1933
 16968  0030CC  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16969  0030CE  18DE               	xorwf	postinc2,w,c
 16970  0030D0  A4D8               	btfss	status,2,c
 16971  0030D2  D002               	goto	l1933
 16972                           
 16973                           ; BSR set to: 1
 16974  0030D4  0E01               	movlw	1
 16975  0030D6  6E12               	movwf	_nwkRouteFrameReceived$4119^0,c
 16976  0030D8                     l1933:
 16977  0030D8  5012               	movf	_nwkRouteFrameReceived$4119^0,w,c
 16978  0030DA  B4D8               	btfsc	status,2,c
 16979  0030DC  D002               	goto	u13250
 16980  0030DE  0E01               	movlw	1
 16981  0030E0  D001               	goto	u13260
 16982  0030E2                     u13250:
 16983  0030E2  0E00               	movlw	0
 16984  0030E4                     u13260:
 16985  0030E4  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 16986                           
 16987                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 16988  0030E6  EE20 F007          	lfsr	2,7
 16989  0030EA  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 16990  0030EC  26D9               	addwf	fsr2l,f,c
 16991  0030EE  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 16992  0030F0  22DA               	addwfc	fsr2h,f,c
 16993  0030F2  EE10 F003          	lfsr	1,3
 16994  0030F6  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 16995  0030F8  26E1               	addwf	fsr1l,f,c
 16996  0030FA  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 16997  0030FC  22E2               	addwfc	fsr1h,f,c
 16998  0030FE  50DE               	movf	postinc2,w,c
 16999  003100  18E6               	xorwf	postinc1,w,c
 17000  003102  E104               	bnz	u13270
 17001  003104  50DE               	movf	postinc2,w,c
 17002  003106  18E6               	xorwf	postinc1,w,c
 17003  003108  B4D8               	btfsc	status,2,c
 17004  00310A  D010               	goto	u13280
 17005  00310C                     u13270:
 17006  00310C  EE20 F083          	lfsr	2,131
 17007  003110  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 17008  003112  26D9               	addwf	fsr2l,f,c
 17009  003114  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 17010  003116  22DA               	addwfc	fsr2h,f,c
 17011  003118  EE10 F006          	lfsr	1,6
 17012  00311C  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17013  00311E  26E1               	addwf	fsr1l,f,c
 17014  003120  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17015  003122  22E2               	addwfc	fsr1h,f,c
 17016  003124  50DE               	movf	postinc2,w,c
 17017  003126  5CE6               	subwf	postinc1,w,c
 17018  003128  A0D8               	btfss	status,0,c
 17019  00312A  D003               	goto	u13290
 17020  00312C                     u13280:
 17021  00312C  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 17022  00312E  B4D8               	btfsc	status,2,c
 17023  003130  D049               	goto	l14256
 17024  003132                     u13290:
 17025                           
 17026                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 17027  003132  EE20 F007          	lfsr	2,7
 17028  003136  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17029  003138  26D9               	addwf	fsr2l,f,c
 17030  00313A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17031  00313C  22DA               	addwfc	fsr2h,f,c
 17032  00313E  EE10 F003          	lfsr	1,3
 17033  003142  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17034  003144  26E1               	addwf	fsr1l,f,c
 17035  003146  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17036  003148  22E2               	addwfc	fsr1h,f,c
 17037  00314A  006F FF7B FFE6     	movff	postinc2,postinc1
 17038  003150  006F FF77 FFE5     	movff	postdec2,postdec1
 17039                           
 17040                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 17041  003156  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 17042  00315C  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 17043  003162  50DF               	movf	indf2,w,c
 17044  003164  0B0F               	andlw	-241
 17045  003166  0930               	iorlw	48
 17046  003168  6EDF               	movwf	indf2,c
 17047  00316A  D02C               	goto	l14256
 17048  00316C                     l14250:
 17049                           
 17050                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 17051  00316C  EC44  F02D         	call	_NWK_RouteNewEntry	;wreg free
 17052  003170  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 17053  003176  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 17054                           
 17055                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 17056  00317C  EE20 F00B          	lfsr	2,11
 17057  003180  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17058  003182  26D9               	addwf	fsr2l,f,c
 17059  003184  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17060  003186  22DA               	addwfc	fsr2h,f,c
 17061  003188  EE10 F001          	lfsr	1,1
 17062  00318C  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17063  00318E  26E1               	addwf	fsr1l,f,c
 17064  003190  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17065  003192  22E2               	addwfc	fsr1h,f,c
 17066  003194  006F FF7B FFE6     	movff	postinc2,postinc1
 17067  00319A  006F FF77 FFE5     	movff	postdec2,postdec1
 17068                           
 17069                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 17070  0031A0  EE20 F007          	lfsr	2,7
 17071  0031A4  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17072  0031A6  26D9               	addwf	fsr2l,f,c
 17073  0031A8  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17074  0031AA  22DA               	addwfc	fsr2h,f,c
 17075  0031AC  EE10 F003          	lfsr	1,3
 17076  0031B0  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17077  0031B2  26E1               	addwf	fsr1l,f,c
 17078  0031B4  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17079  0031B6  22E2               	addwfc	fsr1h,f,c
 17080  0031B8  006F FF7B FFE6     	movff	postinc2,postinc1
 17081  0031BE  006F FF77 FFE5     	movff	postdec2,postdec1
 17082  0031C4                     l14256:
 17083                           
 17084                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 17085  0031C4  EE20 F083          	lfsr	2,131
 17086  0031C8  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 17087  0031CA  26D9               	addwf	fsr2l,f,c
 17088  0031CC  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 17089  0031CE  22DA               	addwfc	fsr2h,f,c
 17090  0031D0  EE10 F006          	lfsr	1,6
 17091  0031D4  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17092  0031D6  26E1               	addwf	fsr1l,f,c
 17093  0031D8  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17094  0031DA  22E2               	addwfc	fsr1h,f,c
 17095  0031DC  006F FF7F FFE7     	movff	indf2,indf1
 17096  0031E2  0012               	return		;funcret
 17097  0031E4                     __end_of_nwkRouteFrameReceived:
 17098                           	opt callstack 0
 17099                           
 17100 ;; *************** function _NWK_RouteNewEntry *****************
 17101 ;; Defined at:
 17102 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;		None
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;  i               1    5[COMRAM] unsigned char 
 17107 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 17108 ;;		 -> nwkRouteTable(70), NULL(0), 
 17109 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 17110 ;;		 -> nwkRouteTable(70), 
 17111 ;; Return value:  Size  Location     Type
 17112 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 17113 ;; Registers used:
 17114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17115 ;; Tracked objects:
 17116 ;;		On entry : 0/1
 17117 ;;		On exit  : 0/0
 17118 ;;		Unchanged: 0/0
 17119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17121 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17123 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17124 ;;Total ram usage:        9 bytes
 17125 ;; Hardware stack levels used:    1
 17126 ;; Hardware stack levels required when called:    7
 17127 ;; This function calls:
 17128 ;;		Nothing
 17129 ;; This function is called by:
 17130 ;;		_nwkRouteFrameReceived
 17131 ;; This function uses a non-reentrant model
 17132 ;;
 17133                           
 17134                           	psect	text106
 17135  005A88                     __ptext106:
 17136                           	opt callstack 0
 17137  005A88                     _NWK_RouteNewEntry:
 17138                           	opt callstack 18
 17139                           
 17140                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 17141                           
 17142                           ;incstack = 0
 17143  005A88  0E84               	movlw	low _nwkRouteTable
 17144  005A8A  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 17145  005A8C  0E02               	movlw	high _nwkRouteTable
 17146  005A8E  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 17147                           
 17148                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 17149  005A90  0E00               	movlw	0
 17150  005A92  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 17151  005A94  0E00               	movlw	0
 17152  005A96  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 17153                           
 17154                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 17155  005A98  0E00               	movlw	0
 17156  005A9A  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 17157  005A9C                     l14062:
 17158                           
 17159                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 17160  005A9C  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 17161  005AA2  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 17162  005AA8  B0DF               	btfsc	indf2,0,c
 17163  005AAA  D02A               	goto	l14076
 17164                           
 17165                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 17166  005AAC  EE20 F005          	lfsr	2,5
 17167  005AB0  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 17168  005AB2  26D9               	addwf	fsr2l,f,c
 17169  005AB4  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 17170  005AB6  22DA               	addwfc	fsr2h,f,c
 17171  005AB8  50DF               	movf	indf2,w,c
 17172  005ABA  A4D8               	btfss	status,2,c
 17173  005ABC  D007               	goto	l14070
 17174                           
 17175                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 17176  005ABE  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 17177  005AC4  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 17178                           
 17179                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 17180  005ACA  D022               	goto	u13160
 17181  005ACC                     l14070:
 17182                           
 17183                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 17184  005ACC  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 17185  005ACE  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 17186  005AD0  B4D8               	btfsc	status,2,c
 17187  005AD2  D010               	goto	u13150
 17188  005AD4  EE20 F005          	lfsr	2,5
 17189  005AD8  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 17190  005ADA  26D9               	addwf	fsr2l,f,c
 17191  005ADC  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 17192  005ADE  22DA               	addwfc	fsr2h,f,c
 17193  005AE0  EE10 F005          	lfsr	1,5
 17194  005AE4  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 17195  005AE6  26E1               	addwf	fsr1l,f,c
 17196  005AE8  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 17197  005AEA  22E2               	addwfc	fsr1h,f,c
 17198  005AEC  50DE               	movf	postinc2,w,c
 17199  005AEE  5CE6               	subwf	postinc1,w,c
 17200  005AF0  B0D8               	btfsc	status,0,c
 17201  005AF2  D006               	goto	l14076
 17202  005AF4                     u13150:
 17203                           
 17204                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 17205  005AF4  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 17206  005AFA  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 17207  005B00                     l14076:
 17208  005B00  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 17209  005B02  0E07               	movlw	7
 17210  005B04  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 17211  005B06  0E00               	movlw	0
 17212  005B08  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 17213  005B0A  0E09               	movlw	9
 17214  005B0C  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 17215  005B0E  D7C6               	goto	l14062
 17216  005B10                     u13160:
 17217                           
 17218                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 17219  005B10  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 17220  005B16  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 17221  005B1C  92DF               	bcf	indf2,1,c
 17222                           
 17223                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 17224  005B1E  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 17225  005B24  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 17226  005B2A  50DF               	movf	indf2,w,c
 17227  005B2C  0B0F               	andlw	-241
 17228  005B2E  0930               	iorlw	48
 17229  005B30  6EDF               	movwf	indf2,c
 17230                           
 17231                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 17232  005B32  EE20 F005          	lfsr	2,5
 17233  005B36  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 17234  005B38  26D9               	addwf	fsr2l,f,c
 17235  005B3A  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 17236  005B3C  22DA               	addwfc	fsr2h,f,c
 17237  005B3E  0E80               	movlw	128
 17238  005B40  6EDF               	movwf	indf2,c
 17239                           
 17240                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 17241  005B42  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 17242  005B48  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 17243  005B4E  0012               	return		;funcret
 17244  005B50                     __end_of_NWK_RouteNewEntry:
 17245                           	opt callstack 0
 17246                           
 17247 ;; *************** function _nwkRxHandleIndication *****************
 17248 ;; Defined at:
 17249 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  frame           2  117[BANK0 ] PTR struct NwkFrame_t
 17252 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17253 ;; Auto vars:     Size  Location     Type
 17254 ;;  ack             1  121[BANK0 ] _Bool 
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  1    wreg      void 
 17257 ;; Registers used:
 17258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17259 ;; Tracked objects:
 17260 ;;		On entry : 2/1
 17261 ;;		On exit  : 0/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17266 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17267 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17268 ;;Total ram usage:        5 bytes
 17269 ;; Hardware stack levels used:    1
 17270 ;; Hardware stack levels required when called:   18
 17271 ;; This function calls:
 17272 ;;		_nwkRxIndicateFrame
 17273 ;;		_nwkRxSendAck
 17274 ;; This function is called by:
 17275 ;;		_nwkRxTaskHandler
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           	psect	text107
 17280  0058EE                     __ptext107:
 17281                           	opt callstack 0
 17282  0058EE                     _nwkRxHandleIndication:
 17283                           	opt callstack 9
 17284                           
 17285                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 17286                           
 17287                           ;incstack = 0
 17288  0058EE  0E00               	movlw	0
 17289  0058F0  0101               	movlb	1	; () banked
 17290  0058F2  6F61               	movwf	_nwkRxAckControl& (0+255),b
 17291                           
 17292                           ; BSR set to: 1
 17293                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 17294  0058F4  0060  F354  F0BB   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 17295  0058FA  0060  F358  F0BC   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 17296  005900  EC0B  F015         	call	_nwkRxIndicateFrame	;wreg free
 17297  005904  0100               	movlb	0	; () banked
 17298  005906  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 17302  005908  EE20 F00B          	lfsr	2,11
 17303  00590C  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17304  00590E  26D9               	addwf	fsr2l,f,c
 17305  005910  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17306  005912  22DA               	addwfc	fsr2h,f,c
 17307  005914  B0DF               	btfsc	indf2,0,c
 17308  005916  D002               	goto	l14980
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 17312  005918  0E00               	movlw	0
 17313  00591A  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17314  00591C                     l14980:
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 17318  00591C  EE20 F007          	lfsr	2,7
 17319  005920  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17320  005922  26D9               	addwf	fsr2l,f,c
 17321  005924  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17322  005926  22DA               	addwfc	fsr2h,f,c
 17323  005928  28DE               	incf	postinc2,w,c
 17324  00592A  E11C               	bnz	l14988
 17325  00592C  28DE               	incf	postinc2,w,c
 17326  00592E  A4D8               	btfss	status,2,c
 17327  005930  D019               	goto	l14988
 17328                           
 17329                           ; BSR set to: 0
 17330  005932  EE20 F00F          	lfsr	2,15
 17331  005936  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17332  005938  26D9               	addwf	fsr2l,f,c
 17333  00593A  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17334  00593C  22DA               	addwfc	fsr2h,f,c
 17335  00593E  0101               	movlb	1	; () banked
 17336  005940  5100               	movf	_nwkIb& (0+255),w,b
 17337  005942  18DE               	xorwf	postinc2,w,c
 17338  005944  E10F               	bnz	l14988
 17339  005946  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17340  005948  18DE               	xorwf	postinc2,w,c
 17341  00594A  A4D8               	btfss	status,2,c
 17342  00594C  D00B               	goto	l14988
 17343                           
 17344                           ; BSR set to: 1
 17345  00594E  0100               	movlb	0	; () banked
 17346  005950  EE20 F00B          	lfsr	2,11
 17347  005954  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17348  005956  26D9               	addwf	fsr2l,f,c
 17349  005958  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17350  00595A  22DA               	addwfc	fsr2h,f,c
 17351  00595C  B6DF               	btfsc	indf2,3,c
 17352  00595E  D002               	goto	l14988
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 17356  005960  0E01               	movlw	1
 17357  005962  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17358  005964                     l14988:
 17359                           
 17360                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 17361  005964  0100               	movlb	0	; () banked
 17362  005966  EE20 F005          	lfsr	2,5
 17363  00596A  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17364  00596C  26D9               	addwf	fsr2l,f,c
 17365  00596E  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17366  005970  22DA               	addwfc	fsr2h,f,c
 17367  005972  28DE               	incf	postinc2,w,c
 17368  005974  E105               	bnz	l14992
 17369  005976  28DE               	incf	postinc2,w,c
 17370  005978  A4D8               	btfss	status,2,c
 17371  00597A  D002               	goto	l14992
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 17375  00597C  0E00               	movlw	0
 17376  00597E  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17377  005980                     l14992:
 17378                           
 17379                           ; BSR set to: 0
 17380                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 17381  005980  0101               	movlb	1	; () banked
 17382  005982  2900               	incf	_nwkIb& (0+255),w,b
 17383  005984  E106               	bnz	l2184
 17384  005986  2901               	incf	(_nwkIb+1)& (0+255),w,b
 17385  005988  A4D8               	btfss	status,2,c
 17386  00598A  D003               	goto	l2184
 17387                           
 17388                           ; BSR set to: 1
 17389                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 17390  00598C  0E00               	movlw	0
 17391  00598E  0100               	movlb	0	; () banked
 17392  005990  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17393  005992                     l2184:
 17394                           
 17395                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 17396  005992  0100               	movlb	0	; () banked
 17397  005994  51D9               	movf	nwkRxHandleIndication@ack& (0+255),w,b
 17398  005996  B4D8               	btfsc	status,2,c
 17399  005998  D008               	goto	l14998
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 17403  00599A  0060  F354  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 17404  0059A0  0060  F358  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 17405  0059A6  EC4D  F026         	call	_nwkRxSendAck	;wreg free
 17406  0059AA                     l14998:
 17407                           
 17408                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 17409  0059AA  0060  F357  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 17410  0059B0  0060  F35B  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 17411  0059B6  0E24               	movlw	36
 17412  0059B8  6EDF               	movwf	indf2,c
 17413  0059BA  0012               	return		;funcret
 17414  0059BC                     __end_of_nwkRxHandleIndication:
 17415                           	opt callstack 0
 17416                           
 17417 ;; *************** function _nwkRxSendAck *****************
 17418 ;; Defined at:
 17419 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 17420 ;; Parameters:    Size  Location     Type
 17421 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 17422 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 17425 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17426 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 17427 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  1    wreg      void 
 17430 ;; Registers used:
 17431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17432 ;; Tracked objects:
 17433 ;;		On entry : 3F/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17440 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17441 ;;Total ram usage:        6 bytes
 17442 ;; Hardware stack levels used:    1
 17443 ;; Hardware stack levels required when called:   11
 17444 ;; This function calls:
 17445 ;;		_nwkFrameAlloc
 17446 ;;		_nwkFrameCommandInit
 17447 ;;		_nwkTxFrame
 17448 ;; This function is called by:
 17449 ;;		_nwkRxHandleIndication
 17450 ;; This function uses a non-reentrant model
 17451 ;;
 17452                           
 17453                           	psect	text108
 17454  004C9A                     __ptext108:
 17455                           	opt callstack 0
 17456  004C9A                     _nwkRxSendAck:
 17457                           	opt callstack 15
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 17461                           
 17462                           ;incstack = 0
 17463  004C9A  EC22  F02F         	call	_nwkFrameAlloc	;wreg free
 17464  004C9E  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 17465  004CA4  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 17466  004CAA  502E               	movf	nwkRxSendAck@ack^0,w,c
 17467  004CAC  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 17468  004CAE  B4D8               	btfsc	status,2,c
 17469  004CB0  0012               	return	
 17470                           
 17471                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 17472  004CB2  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 17473  004CB8  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 17474  004CBE  EC1A  F03C         	call	_nwkFrameCommandInit	;wreg free
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 17478  004CC2  EE20 F001          	lfsr	2,1
 17479  004CC6  502E               	movf	nwkRxSendAck@ack^0,w,c
 17480  004CC8  26D9               	addwf	fsr2l,f,c
 17481  004CCA  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17482  004CCC  22DA               	addwfc	fsr2h,f,c
 17483  004CCE  0E03               	movlw	3
 17484  004CD0  26DF               	addwf	indf2,f,c
 17485                           
 17486                           ; BSR set to: 1
 17487                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 17488  004CD2  EE20 F087          	lfsr	2,135
 17489  004CD6  502E               	movf	nwkRxSendAck@ack^0,w,c
 17490  004CD8  26D9               	addwf	fsr2l,f,c
 17491  004CDA  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17492  004CDC  22DA               	addwfc	fsr2h,f,c
 17493  004CDE  0E00               	movlw	0
 17494  004CE0  6EDE               	movwf	postinc2,c
 17495  004CE2  0E00               	movlw	0
 17496  004CE4  6EDD               	movwf	postdec2,c
 17497                           
 17498                           ; BSR set to: 1
 17499                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 17500  004CE6  EE20 F00B          	lfsr	2,11
 17501  004CEA  502A               	movf	nwkRxSendAck@frame^0,w,c
 17502  004CEC  26D9               	addwf	fsr2l,f,c
 17503  004CEE  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 17504  004CF0  22DA               	addwfc	fsr2h,f,c
 17505  004CF2  EE10 F00B          	lfsr	1,11
 17506  004CF6  502E               	movf	nwkRxSendAck@ack^0,w,c
 17507  004CF8  26E1               	addwf	fsr1l,f,c
 17508  004CFA  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17509  004CFC  22E2               	addwfc	fsr1h,f,c
 17510  004CFE  B2DF               	btfsc	indf2,1,c
 17511  004D00  D002               	bra	u13375
 17512  004D02  92E7               	bcf	indf1,1,c
 17513  004D04  D001               	bra	u13376
 17514  004D06                     u13375:
 17515  004D06  82E7               	bsf	indf1,1,c
 17516  004D08                     u13376:
 17517                           
 17518                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 17519  004D08  EE20 F00D          	lfsr	2,13
 17520  004D0C  502A               	movf	nwkRxSendAck@frame^0,w,c
 17521  004D0E  26D9               	addwf	fsr2l,f,c
 17522  004D10  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 17523  004D12  22DA               	addwfc	fsr2h,f,c
 17524  004D14  EE10 F00F          	lfsr	1,15
 17525  004D18  502E               	movf	nwkRxSendAck@ack^0,w,c
 17526  004D1A  26E1               	addwf	fsr1l,f,c
 17527  004D1C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17528  004D1E  22E2               	addwfc	fsr1h,f,c
 17529  004D20  006F FF7B FFE6     	movff	postinc2,postinc1
 17530  004D26  006F FF77 FFE5     	movff	postdec2,postdec1
 17531                           
 17532                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 17533  004D2C  EE20 F081          	lfsr	2,129
 17534  004D30  502E               	movf	nwkRxSendAck@ack^0,w,c
 17535  004D32  26D9               	addwf	fsr2l,f,c
 17536  004D34  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17537  004D36  22DA               	addwfc	fsr2h,f,c
 17538  004D38  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 17539  004D3E  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 17540                           
 17541                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 17542  004D44  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 17543  004D4A  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 17544  004D50  0E00               	movlw	0
 17545  004D52  6EDF               	movwf	indf2,c
 17546                           
 17547                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 17548  004D54  EE20 F002          	lfsr	2,2
 17549  004D58  502C               	movf	nwkRxSendAck@command^0,w,c
 17550  004D5A  26D9               	addwf	fsr2l,f,c
 17551  004D5C  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 17552  004D5E  22DA               	addwfc	fsr2h,f,c
 17553  004D60  0060  F587  FFDF   	movff	_nwkRxAckControl,indf2
 17554                           
 17555                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 17556  004D66  EE20 F00C          	lfsr	2,12
 17557  004D6A  502A               	movf	nwkRxSendAck@frame^0,w,c
 17558  004D6C  26D9               	addwf	fsr2l,f,c
 17559  004D6E  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 17560  004D70  22DA               	addwfc	fsr2h,f,c
 17561  004D72  EE10 F001          	lfsr	1,1
 17562  004D76  502C               	movf	nwkRxSendAck@command^0,w,c
 17563  004D78  26E1               	addwf	fsr1l,f,c
 17564  004D7A  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 17565  004D7C  22E2               	addwfc	fsr1h,f,c
 17566  004D7E  006F FF7F FFE7     	movff	indf2,indf1
 17567                           
 17568                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 17569  004D84  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 17570  004D8A  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 17571  004D90  EC87  F01A         	call	_nwkTxFrame	;wreg free
 17572  004D94  0012               	return		;funcret
 17573  004D96                     __end_of_nwkRxSendAck:
 17574                           	opt callstack 0
 17575                           
 17576 ;; *************** function _nwkRxIndicateFrame *****************
 17577 ;; Defined at:
 17578 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  frame           2   91[BANK0 ] PTR struct NwkFrame_t
 17581 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17582 ;; Auto vars:     Size  Location     Type
 17583 ;;  ind            12  105[BANK0 ] struct NWK_DataInd_t
 17584 ;;  header          2  103[BANK0 ] PTR __pack struct NwkFra
 17585 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1    wreg      _Bool 
 17588 ;; Registers used:
 17589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17590 ;; Tracked objects:
 17591 ;;		On entry : 3F/1
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17596 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17598 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17599 ;;Total ram usage:       26 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; Hardware stack levels required when called:   17
 17602 ;; This function calls:
 17603 ;;		_appDataInd
 17604 ;;		_nwkRxServiceDataInd
 17605 ;;		nwkFrame@nwkFramePayloadSize
 17606 ;; This function is called by:
 17607 ;;		_nwkRxHandleIndication
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text109
 17612  002A16                     __ptext109:
 17613                           	opt callstack 0
 17614  002A16                     _nwkRxIndicateFrame:
 17615                           	opt callstack 9
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 17619                           
 17620                           ;incstack = 0
 17621  002A16  0E02               	movlw	2
 17622  002A18  0100               	movlb	0	; () banked
 17623  002A1A  25BB               	addwf	nwkRxIndicateFrame@frame& (0+255),w,b
 17624  002A1C  6FC7               	movwf	nwkRxIndicateFrame@header& (0+255),b
 17625  002A1E  0E00               	movlw	0
 17626  002A20  21BC               	addwfc	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 17627  002A22  6FC8               	movwf	(nwkRxIndicateFrame@header+1)& (0+255),b
 17628                           
 17629                           ; BSR set to: 0
 17630                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 17631  002A24  EE20 F00F          	lfsr	2,15
 17632  002A28  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17633  002A2A  26D9               	addwf	fsr2l,f,c
 17634  002A2C  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17635  002A2E  22DA               	addwfc	fsr2h,f,c
 17636  002A30  38DF               	swapf	223,w,c
 17637  002A32  0B0F               	andlw	15
 17638  002A34  6FBD               	movwf	??_nwkRxIndicateFrame& (0+255),b
 17639  002A36  51BD               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 17640  002A38  0D02               	mullw	2
 17641  002A3A  0E06               	movlw	low (_nwkIb+6)
 17642  002A3C  24F3               	addwf	243,w,c
 17643  002A3E  6ED9               	movwf	fsr2l,c
 17644  002A40  0E01               	movlw	high (_nwkIb+6)
 17645  002A42  20F4               	addwfc	prodh,w,c
 17646  002A44  6EDA               	movwf	fsr2h,c
 17647  002A46  50DE               	movf	postinc2,w,c
 17648  002A48  10DE               	iorwf	postinc2,w,c
 17649  002A4A  A4D8               	btfss	status,2,c
 17650  002A4C  D002               	goto	l14436
 17651                           
 17652                           ; BSR set to: 0
 17653                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 17654  002A4E  0E00               	movlw	0
 17655  002A50  0012               	return	
 17656  002A52                     l14436:
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 17660  002A52  EE20 F00B          	lfsr	2,11
 17661  002A56  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17662  002A58  26D9               	addwf	fsr2l,f,c
 17663  002A5A  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17664  002A5C  22DA               	addwfc	fsr2h,f,c
 17665  002A5E  006F FF78  F0C9    	movff	postinc2,nwkRxIndicateFrame@ind
 17666  002A64  006F FF74  F0CA    	movff	postdec2,nwkRxIndicateFrame@ind+1
 17667                           
 17668                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 17669  002A6A  EE20 F00D          	lfsr	2,13
 17670  002A6E  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17671  002A70  26D9               	addwf	fsr2l,f,c
 17672  002A72  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17673  002A74  22DA               	addwfc	fsr2h,f,c
 17674  002A76  006F FF78  F0CB    	movff	postinc2,nwkRxIndicateFrame@ind+2
 17675  002A7C  006F FF74  F0CC    	movff	postdec2,nwkRxIndicateFrame@ind+3
 17676                           
 17677                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 17678  002A82  EE20 F00F          	lfsr	2,15
 17679  002A86  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17680  002A88  26D9               	addwf	fsr2l,f,c
 17681  002A8A  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17682  002A8C  22DA               	addwfc	fsr2h,f,c
 17683  002A8E  50DF               	movf	223,w,c
 17684  002A90  0B0F               	andlw	15
 17685  002A92  6FCD               	movwf	(nwkRxIndicateFrame@ind+4)& (0+255),b
 17686                           
 17687                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 17688  002A94  EE20 F00F          	lfsr	2,15
 17689  002A98  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17690  002A9A  26D9               	addwf	fsr2l,f,c
 17691  002A9C  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17692  002A9E  22DA               	addwfc	fsr2h,f,c
 17693  002AA0  38DF               	swapf	223,w,c
 17694  002AA2  0B0F               	andlw	15
 17695  002AA4  6FCE               	movwf	(nwkRxIndicateFrame@ind+5)& (0+255),b
 17696                           
 17697                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 17698  002AA6  EE20 F081          	lfsr	2,129
 17699  002AAA  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 17700  002AAC  26D9               	addwf	fsr2l,f,c
 17701  002AAE  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 17702  002AB0  22DA               	addwfc	fsr2h,f,c
 17703  002AB2  006F FF78  F0D0    	movff	postinc2,nwkRxIndicateFrame@ind+7
 17704  002AB8  006F FF74  F0D1    	movff	postdec2,nwkRxIndicateFrame@ind+8
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 17708  002ABE  0060  F2EC  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4705
 17709  002AC4  0060  F2F0  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4705+1
 17710  002ACA  EC4F  F03F         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 17711  002ACE  6FD2               	movwf	(nwkRxIndicateFrame@ind+9)& (0+255),b
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 17715  002AD0  EE20 F083          	lfsr	2,131
 17716  002AD4  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 17717  002AD6  26D9               	addwf	fsr2l,f,c
 17718  002AD8  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 17719  002ADA  22DA               	addwfc	fsr2h,f,c
 17720  002ADC  50DF               	movf	indf2,w,c
 17721  002ADE  6FD3               	movwf	(nwkRxIndicateFrame@ind+10)& (0+255),b
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 17725  002AE0  EE20 F084          	lfsr	2,132
 17726  002AE4  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 17727  002AE6  26D9               	addwf	fsr2l,f,c
 17728  002AE8  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 17729  002AEA  22DA               	addwfc	fsr2h,f,c
 17730  002AEC  50DF               	movf	indf2,w,c
 17731  002AEE  6FD4               	movwf	(nwkRxIndicateFrame@ind+11)& (0+255),b
 17732                           
 17733                           ; BSR set to: 0
 17734                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 17735  002AF0  EE20 F009          	lfsr	2,9
 17736  002AF4  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17737  002AF6  26D9               	addwf	fsr2l,f,c
 17738  002AF8  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17739  002AFA  22DA               	addwfc	fsr2h,f,c
 17740  002AFC  0E00               	movlw	0
 17741  002AFE  B0DF               	btfsc	indf2,0,c
 17742  002B00  0E01               	movlw	1
 17743  002B02  6FCF               	movwf	(nwkRxIndicateFrame@ind+6)& (0+255),b
 17744                           
 17745                           ; BSR set to: 0
 17746                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 17747  002B04  EE20 F009          	lfsr	2,9
 17748  002B08  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17749  002B0A  26D9               	addwf	fsr2l,f,c
 17750  002B0C  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17751  002B0E  22DA               	addwfc	fsr2h,f,c
 17752  002B10  B2DF               	btfsc	indf2,1,c
 17753  002B12  D002               	goto	l14450
 17754                           
 17755                           ; BSR set to: 0
 17756  002B14  0E00               	movlw	0
 17757  002B16  D001               	goto	L12
 17758  002B18                     l14450:
 17759                           
 17760                           ; BSR set to: 0
 17761  002B18  0E02               	movlw	2
 17762  002B1A                     L12:
 17763  002B1A  6FC1               	movwf	_nwkRxIndicateFrame$5152& (0+255),b
 17764                           
 17765                           ; BSR set to: 0
 17766  002B1C  51C1               	movf	_nwkRxIndicateFrame$5152& (0+255),w,b
 17767  002B1E  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 17771  002B20  EE20 F009          	lfsr	2,9
 17772  002B24  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17773  002B26  26D9               	addwf	fsr2l,f,c
 17774  002B28  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17775  002B2A  22DA               	addwfc	fsr2h,f,c
 17776  002B2C  B4DF               	btfsc	indf2,2,c
 17777  002B2E  D002               	goto	l14458
 17778                           
 17779                           ; BSR set to: 0
 17780  002B30  0E00               	movlw	0
 17781  002B32  D001               	goto	L13
 17782  002B34                     l14458:
 17783                           
 17784                           ; BSR set to: 0
 17785  002B34  0E20               	movlw	32
 17786  002B36                     L13:
 17787  002B36  6FC2               	movwf	_nwkRxIndicateFrame$5153& (0+255),b
 17788                           
 17789                           ; BSR set to: 0
 17790  002B38  51C2               	movf	_nwkRxIndicateFrame$5153& (0+255),w,b
 17791  002B3A  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 17795  002B3C  EE20 F009          	lfsr	2,9
 17796  002B40  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17797  002B42  26D9               	addwf	fsr2l,f,c
 17798  002B44  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17799  002B46  22DA               	addwfc	fsr2h,f,c
 17800  002B48  B6DF               	btfsc	indf2,3,c
 17801  002B4A  D002               	goto	l14466
 17802                           
 17803                           ; BSR set to: 0
 17804  002B4C  0E00               	movlw	0
 17805  002B4E  D001               	goto	L14
 17806  002B50                     l14466:
 17807                           
 17808                           ; BSR set to: 0
 17809  002B50  0E40               	movlw	64
 17810  002B52                     L14:
 17811  002B52  6FC3               	movwf	_nwkRxIndicateFrame$5154& (0+255),b
 17812                           
 17813                           ; BSR set to: 0
 17814  002B54  51C3               	movf	_nwkRxIndicateFrame$5154& (0+255),w,b
 17815  002B56  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 17816                           
 17817                           ; BSR set to: 0
 17818                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 17819  002B58  EE20 F00D          	lfsr	2,13
 17820  002B5C  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17821  002B5E  26D9               	addwf	fsr2l,f,c
 17822  002B60  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17823  002B62  22DA               	addwfc	fsr2h,f,c
 17824  002B64  28DE               	incf	postinc2,w,c
 17825  002B66  E103               	bnz	u13540
 17826  002B68  28DE               	incf	postinc2,w,c
 17827  002B6A  B4D8               	btfsc	status,2,c
 17828  002B6C  D002               	goto	l14474
 17829  002B6E                     u13540:
 17830                           
 17831                           ; BSR set to: 0
 17832  002B6E  0E00               	movlw	0
 17833  002B70  D001               	goto	L15
 17834  002B72                     l14474:
 17835                           
 17836                           ; BSR set to: 0
 17837  002B72  0E04               	movlw	4
 17838  002B74                     L15:
 17839  002B74  6FC4               	movwf	_nwkRxIndicateFrame$5155& (0+255),b
 17840                           
 17841                           ; BSR set to: 0
 17842  002B76  51C4               	movf	_nwkRxIndicateFrame$5155& (0+255),w,b
 17843  002B78  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 17847  002B7A  EE20 F007          	lfsr	2,7
 17848  002B7E  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17849  002B80  26D9               	addwf	fsr2l,f,c
 17850  002B82  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17851  002B84  22DA               	addwfc	fsr2h,f,c
 17852  002B86  EE10 F00B          	lfsr	1,11
 17853  002B8A  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17854  002B8C  26E1               	addwf	fsr1l,f,c
 17855  002B8E  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17856  002B90  22E2               	addwfc	fsr1h,f,c
 17857  002B92  50DE               	movf	postinc2,w,c
 17858  002B94  18E6               	xorwf	postinc1,w,c
 17859  002B96  E104               	bnz	u13550
 17860  002B98  50DE               	movf	postinc2,w,c
 17861  002B9A  18E6               	xorwf	postinc1,w,c
 17862  002B9C  B4D8               	btfsc	status,2,c
 17863  002B9E  D002               	goto	l14482
 17864  002BA0                     u13550:
 17865                           
 17866                           ; BSR set to: 0
 17867  002BA0  0E00               	movlw	0
 17868  002BA2  D001               	goto	L16
 17869  002BA4                     l14482:
 17870                           
 17871                           ; BSR set to: 0
 17872  002BA4  0E08               	movlw	8
 17873  002BA6                     L16:
 17874  002BA6  6FC5               	movwf	_nwkRxIndicateFrame$5156& (0+255),b
 17875                           
 17876                           ; BSR set to: 0
 17877  002BA8  51C5               	movf	_nwkRxIndicateFrame$5156& (0+255),w,b
 17878  002BAA  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 17882  002BAC  EE20 F003          	lfsr	2,3
 17883  002BB0  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17884  002BB2  26D9               	addwf	fsr2l,f,c
 17885  002BB4  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17886  002BB6  22DA               	addwfc	fsr2h,f,c
 17887  002BB8  28DE               	incf	postinc2,w,c
 17888  002BBA  E103               	bnz	u13560
 17889  002BBC  28DE               	incf	postinc2,w,c
 17890  002BBE  B4D8               	btfsc	status,2,c
 17891  002BC0  D002               	goto	l14490
 17892  002BC2                     u13560:
 17893                           
 17894                           ; BSR set to: 0
 17895  002BC2  0E00               	movlw	0
 17896  002BC4  D001               	goto	L17
 17897  002BC6                     l14490:
 17898                           
 17899                           ; BSR set to: 0
 17900  002BC6  0E10               	movlw	16
 17901  002BC8                     L17:
 17902  002BC8  6FC6               	movwf	_nwkRxIndicateFrame$5157& (0+255),b
 17903                           
 17904                           ; BSR set to: 0
 17905  002BCA  51C6               	movf	_nwkRxIndicateFrame$5157& (0+255),w,b
 17906  002BCC  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 17910  002BCE  0EC9               	movlw	low nwkRxIndicateFrame@ind
 17911  002BD0  6F76               	movwf	nwkRxServiceDataInd@ind& (0+255),b
 17912  002BD2  EE20 F00F          	lfsr	2,15
 17913  002BD6  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 17914  002BD8  26D9               	addwf	fsr2l,f,c
 17915  002BDA  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 17916  002BDC  22DA               	addwfc	fsr2h,f,c
 17917  002BDE  38DF               	swapf	223,w,c
 17918  002BE0  0B0F               	andlw	15
 17919  002BE2  6FBD               	movwf	??_nwkRxIndicateFrame& (0+255),b
 17920  002BE4  51BD               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 17921  002BE6  0D02               	mullw	2
 17922  002BE8  0E06               	movlw	low (_nwkIb+6)
 17923  002BEA  24F3               	addwf	243,w,c
 17924  002BEC  6ED9               	movwf	fsr2l,c
 17925  002BEE  0E01               	movlw	high (_nwkIb+6)
 17926  002BF0  20F4               	addwfc	prodh,w,c
 17927  002BF2  6EDA               	movwf	fsr2h,c
 17928  002BF4  006F FF78  F0BE    	movff	postinc2,??_nwkRxIndicateFrame+1
 17929  002BFA  006F FF74  F0BF    	movff	postdec2,??_nwkRxIndicateFrame+2
 17930  002C00  D801               	call	u13578
 17931  002C02  0012               	return	
 17932  002C04                     u13578:
 17933  002C04  0005               	push	
 17934  002C06  6EFA               	movwf	pclath,c
 17935  002C08  51BE               	movf	(??_nwkRxIndicateFrame+1)& (0+255),w,b
 17936  002C0A  6EFD               	movwf	tosl,c
 17937  002C0C  51BF               	movf	(??_nwkRxIndicateFrame+2)& (0+255),w,b
 17938  002C0E  6EFE               	movwf	tosh,c
 17939  002C10  6AFF               	clrf	tosu,c
 17940  002C12  50FA               	movf	pclath,w,c
 17941  002C14  0012               	return		;indir
 17942  002C16                     __end_of_nwkRxIndicateFrame:
 17943                           	opt callstack 0
 17944                           
 17945 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 17946 ;; Defined at:
 17947 ;;		line 134 in file "../nwk/nwk_inc\nwkFrame.h"
 17948 ;; Parameters:    Size  Location     Type
 17949 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 17950 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;		None
 17953 ;; Return value:  Size  Location     Type
 17954 ;;                  1    wreg      unsigned char 
 17955 ;; Registers used:
 17956 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17957 ;; Tracked objects:
 17958 ;;		On entry : 3F/0
 17959 ;;		On exit  : 3F/0
 17960 ;;		Unchanged: 3F/0
 17961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17966 ;;Total ram usage:        4 bytes
 17967 ;; Hardware stack levels used:    1
 17968 ;; Hardware stack levels required when called:    7
 17969 ;; This function calls:
 17970 ;;		Nothing
 17971 ;; This function is called by:
 17972 ;;		_nwkRxIndicateFrame
 17973 ;; This function uses a non-reentrant model
 17974 ;;
 17975                           
 17976                           	psect	text110
 17977  007E9E                     __ptext110:
 17978                           	opt callstack 0
 17979  007E9E                     nwkFrame@nwkFramePayloadSize:
 17980                           	opt callstack 18
 17981                           
 17982                           ; BSR set to: 0
 17983                           
 17984                           ;incstack = 0
 17985  007E9E  EE20 F081          	lfsr	2,129
 17986  007EA2  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 17987  007EA4  26D9               	addwf	fsr2l,f,c
 17988  007EA6  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4705+1)^0,w,c
 17989  007EA8  22DA               	addwfc	fsr2h,f,c
 17990  007EAA  50DF               	movf	indf2,w,c
 17991  007EAC  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 17992  007EAE  EE20 F001          	lfsr	2,1
 17993  007EB2  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 17994  007EB4  26D9               	addwf	fsr2l,f,c
 17995  007EB6  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4705+1)^0,w,c
 17996  007EB8  22DA               	addwfc	fsr2h,f,c
 17997  007EBA  50DF               	movf	indf2,w,c
 17998  007EBC  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 17999  007EBE  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 18000  007EC0  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 18001  007EC2  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 18002  007EC4  0F02               	addlw	2
 18003                           
 18004                           ; BSR set to: 0
 18005  007EC6  0012               	return		;funcret
 18006  007EC8                     __end_ofnwkFrame@nwkFramePayloadSize:
 18007                           	opt callstack 0
 18008                           
 18009 ;; *************** function _appDataInd *****************
 18010 ;; Defined at:
 18011 ;;		line 45 in file "../app/app_src/application.c"
 18012 ;; Parameters:    Size  Location     Type
 18013 ;;  ind             1   22[BANK0 ] PTR struct NWK_DataInd_t
 18014 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18015 ;; Auto vars:     Size  Location     Type
 18016 ;;  i               1   90[BANK0 ] unsigned char 
 18017 ;;  data           65   23[BANK0 ] unsigned char [65]
 18018 ;;  dataptr         2   88[BANK0 ] PTR unsigned char 
 18019 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      _Bool 
 18022 ;; Registers used:
 18023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : 3F/0
 18026 ;;		On exit  : 3F/1
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18029 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;Total ram usage:       69 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:   16
 18036 ;; This function calls:
 18037 ;;		_memset
 18038 ;;		_printf
 18039 ;; This function is called by:
 18040 ;;		_bootLoadApplication
 18041 ;;		_nwkRxIndicateFrame
 18042 ;; This function uses a non-reentrant model
 18043 ;;
 18044                           
 18045                           	psect	text111
 18046  0069A0                     __ptext111:
 18047                           	opt callstack 0
 18048  0069A0                     _appDataInd:
 18049                           	opt callstack 9
 18050                           
 18051                           ; BSR set to: 0
 18052                           ;../app/app_src/application.c: 45: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 46: {;../app/app_src/application.c: 48:     uint8_t data[64 + 1];;.
      +                          ./app/app_src/application.c: 49:     uint8_t* dataptr = ind->data;
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;incstack = 0
 18056  0069A0  5176               	movf	appDataInd@ind& (0+255),w,b
 18057  0069A2  6ED9               	movwf	fsr2l,c
 18058  0069A4  6ADA               	clrf	fsr2h,c
 18059  0069A6  0E07               	movlw	7
 18060  0069A8  26D9               	addwf	fsr2l,f,c
 18061  0069AA  006F FF78  F0B8    	movff	postinc2,appDataInd@dataptr
 18062  0069B0  006F FF74  F0B9    	movff	postdec2,appDataInd@dataptr+1
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;../app/app_src/application.c: 50:     memset(data, 0 , sizeof(data));
 18066  0069B6  0E77               	movlw	low appDataInd@data
 18067  0069B8  6E02               	movwf	memset@dest^0,c
 18068  0069BA  6A03               	clrf	(memset@dest+1)^0,c
 18069  0069BC  0E00               	movlw	0
 18070  0069BE  6E05               	movwf	(memset@c+1)^0,c
 18071  0069C0  0E00               	movlw	0
 18072  0069C2  6E04               	movwf	memset@c^0,c
 18073  0069C4  0E00               	movlw	0
 18074  0069C6  6E07               	movwf	(memset@n+1)^0,c
 18075  0069C8  0E41               	movlw	65
 18076  0069CA  6E06               	movwf	memset@n^0,c
 18077  0069CC  ECC9  F01E         	call	_memset	;wreg free
 18078                           
 18079                           ;../app/app_src/application.c: 51:     for(uint8_t i = 0; i < 64; i++){
 18080  0069D0  0E00               	movlw	0
 18081  0069D2  0100               	movlb	0	; () banked
 18082  0069D4  6FBA               	movwf	appDataInd@i& (0+255),b
 18083  0069D6                     l13962:
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;../app/app_src/application.c: 52:         data[i] = *dataptr++;
 18087  0069D6  0060  F2E3  FFD9   	movff	appDataInd@dataptr,fsr2l
 18088  0069DC  0060  F2E7  FFDA   	movff	appDataInd@dataptr+1,fsr2h
 18089  0069E2  51BA               	movf	appDataInd@i& (0+255),w,b
 18090  0069E4  0F77               	addlw	low appDataInd@data
 18091  0069E6  6EE1               	movwf	fsr1l,c
 18092  0069E8  6AE2               	clrf	fsr1h,c
 18093  0069EA  006F FF7F FFE7     	movff	indf2,indf1
 18094                           
 18095                           ; BSR set to: 0
 18096  0069F0  4BB8               	infsnz	appDataInd@dataptr& (0+255),f,b
 18097  0069F2  2BB9               	incf	(appDataInd@dataptr+1)& (0+255),f,b
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;../app/app_src/application.c: 53:     }
 18101  0069F4  2BBA               	incf	appDataInd@i& (0+255),f,b
 18102                           
 18103                           ; BSR set to: 0
 18104  0069F6  0E3F               	movlw	63
 18105  0069F8  65BA               	cpfsgt	appDataInd@i& (0+255),b
 18106  0069FA  D7ED               	goto	l13962
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;../app/app_src/application.c: 54:     printf("RX:%04X:%s\r\n", ind->srcAddr, data);
 18110  0069FC  0E8D               	movlw	low STR_1
 18111  0069FE  6E55               	movwf	printf@fmt^0,c
 18112  006A00  0EFE               	movlw	high STR_1
 18113  006A02  6E56               	movwf	(printf@fmt+1)^0,c
 18114  006A04  5176               	movf	appDataInd@ind& (0+255),w,b
 18115  006A06  6ED9               	movwf	fsr2l,c
 18116  006A08  6ADA               	clrf	fsr2h,c
 18117  006A0A  006F FF78  F057    	movff	postinc2,?_printf+2
 18118  006A10  006F FF74  F058    	movff	postdec2,?_printf+3
 18119  006A16  0E77               	movlw	low appDataInd@data
 18120  006A18  6E59               	movwf	(?_printf+4)^0,c
 18121  006A1A  EC0F  F040         	call	_printf	;wreg free
 18122                           
 18123                           ; BSR set to: 1
 18124                           ;../app/app_src/application.c: 55:     return 1;
 18125  006A1E  0E01               	movlw	1
 18126                           
 18127                           ; BSR set to: 1
 18128  006A20  0012               	return		;funcret
 18129  006A22                     __end_of_appDataInd:
 18130                           	opt callstack 0
 18131                           
 18132 ;; *************** function _nwkRxServiceDataInd *****************
 18133 ;; Defined at:
 18134 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 18135 ;; Parameters:    Size  Location     Type
 18136 ;;  ind             1   22[BANK0 ] PTR struct NWK_DataInd_t
 18137 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18138 ;; Auto vars:     Size  Location     Type
 18139 ;;		None
 18140 ;; Return value:  Size  Location     Type
 18141 ;;                  1    wreg      _Bool 
 18142 ;; Registers used:
 18143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18144 ;; Tracked objects:
 18145 ;;		On entry : 3F/0
 18146 ;;		On exit  : 0/0
 18147 ;;		Unchanged: 0/0
 18148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18149 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18151 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18153 ;;Total ram usage:        5 bytes
 18154 ;; Hardware stack levels used:    1
 18155 ;; Hardware stack levels required when called:   10
 18156 ;; This function calls:
 18157 ;;		_nwkRouteErrorReceived
 18158 ;;		_nwkTxAckReceived
 18159 ;; This function is called by:
 18160 ;;		_nwkRxInit
 18161 ;;		_nwkRxIndicateFrame
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           
 18165                           	psect	text112
 18166  006CEC                     __ptext112:
 18167                           	opt callstack 0
 18168  006CEC                     _nwkRxServiceDataInd:
 18169                           	opt callstack 15
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 18173                           
 18174                           ; BSR set to: 1
 18175                           ;incstack = 0
 18176  006CEC  5176               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 18177  006CEE  6ED9               	movwf	fsr2l,c
 18178  006CF0  6ADA               	clrf	fsr2h,c
 18179  006CF2  0E09               	movlw	9
 18180  006CF4  26D9               	addwf	fsr2l,f,c
 18181  006CF6  50DF               	movf	indf2,w,c
 18182  006CF8  A4D8               	btfss	status,2,c
 18183  006CFA  D00E               	goto	l14120
 18184  006CFC                     u13180:
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 18188  006CFC  0E00               	movlw	0
 18189  006CFE  0012               	return	
 18190  006D00                     l14106:
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 18194  006D00  0060  F1D8  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 18195  006D06  EC08  F02E         	call	_nwkTxAckReceived	;wreg free
 18196  006D0A  0012               	return	
 18197  006D0C                     l14110:
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 18201  006D0C  0060  F1D8  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 18202  006D12  ECF9  F038         	call	_nwkRouteErrorReceived	;wreg free
 18203  006D16  0012               	return	
 18204  006D18                     l14120:
 18205                           
 18206                           ; BSR set to: 0
 18207  006D18  5176               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 18208  006D1A  6ED9               	movwf	fsr2l,c
 18209  006D1C  6ADA               	clrf	fsr2h,c
 18210  006D1E  0E07               	movlw	7
 18211  006D20  26D9               	addwf	fsr2l,f,c
 18212  006D22  006F FF78  F077    	movff	postinc2,??_nwkRxServiceDataInd
 18213  006D28  006F FF74  F078    	movff	postdec2,??_nwkRxServiceDataInd+1
 18214  006D2E  0060  F1DF  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 18215  006D34  0060  F1E3  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 18216  006D3A  50DF               	movf	indf2,w,c
 18217  006D3C  6F79               	movwf	(??_nwkRxServiceDataInd+2)& (0+255),b
 18218  006D3E  6B7A               	clrf	(??_nwkRxServiceDataInd+3)& (0+255),b
 18219                           
 18220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18221                           ; Switch size 1, requested type "simple"
 18222                           ; Number of cases is 1, Range of values is 0 to 0
 18223                           ; switch strategies available:
 18224                           ; Name         Instructions Cycles
 18225                           ; simple_byte            4     3 (average)
 18226                           ;	Chosen strategy is simple_byte
 18227  006D40  517A               	movf	(??_nwkRxServiceDataInd+3)& (0+255),w,b
 18228  006D42  0A00               	xorlw	0	; case 0
 18229  006D44  A4D8               	btfss	status,2,c
 18230  006D46  D7DA               	goto	u13180
 18231                           
 18232                           ; BSR set to: 0
 18233                           ; Switch size 1, requested type "simple"
 18234                           ; Number of cases is 2, Range of values is 0 to 1
 18235                           ; switch strategies available:
 18236                           ; Name         Instructions Cycles
 18237                           ; simple_byte            7     4 (average)
 18238                           ;	Chosen strategy is simple_byte
 18239  006D48  5179               	movf	(??_nwkRxServiceDataInd+2)& (0+255),w,b
 18240  006D4A  0A00               	xorlw	0	; case 0
 18241  006D4C  B4D8               	btfsc	status,2,c
 18242  006D4E  D7D8               	goto	l14106
 18243  006D50  0A01               	xorlw	1	; case 1
 18244  006D52  B4D8               	btfsc	status,2,c
 18245  006D54  D7DB               	goto	l14110
 18246  006D56  D7D2               	goto	u13180
 18247  006D58                     __end_of_nwkRxServiceDataInd:
 18248                           	opt callstack 0
 18249                           
 18250 ;; *************** function _nwkTxAckReceived *****************
 18251 ;; Defined at:
 18252 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 18253 ;; Parameters:    Size  Location     Type
 18254 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 18255 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18256 ;; Auto vars:     Size  Location     Type
 18257 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 18258 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18259 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 18260 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18261 ;; Return value:  Size  Location     Type
 18262 ;;                  1    wreg      _Bool 
 18263 ;; Registers used:
 18264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18265 ;; Tracked objects:
 18266 ;;		On entry : 3F/0
 18267 ;;		On exit  : 0/0
 18268 ;;		Unchanged: 0/0
 18269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18270 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18274 ;;Total ram usage:        7 bytes
 18275 ;; Hardware stack levels used:    1
 18276 ;; Hardware stack levels required when called:    8
 18277 ;; This function calls:
 18278 ;;		_nwkFrameNext
 18279 ;; This function is called by:
 18280 ;;		_nwkRxServiceDataInd
 18281 ;; This function uses a non-reentrant model
 18282 ;;
 18283                           
 18284                           	psect	text113
 18285  005C10                     __ptext113:
 18286                           	opt callstack 0
 18287  005C10                     _nwkTxAckReceived:
 18288                           	opt callstack 16
 18289                           
 18290                           ; BSR set to: 0
 18291                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 18292                           
 18293                           ;incstack = 0
 18294  005C10  5008               	movf	nwkTxAckReceived@ind^0,w,c
 18295  005C12  6ED9               	movwf	fsr2l,c
 18296  005C14  6ADA               	clrf	fsr2h,c
 18297  005C16  0E07               	movlw	7
 18298  005C18  26D9               	addwf	fsr2l,f,c
 18299  005C1A  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 18300  005C20  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 18301                           
 18302                           ; BSR set to: 0
 18303                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 18304  005C26  0E00               	movlw	0
 18305  005C28  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 18306  005C2A  0E00               	movlw	0
 18307  005C2C  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 18311  005C2E  5008               	movf	nwkTxAckReceived@ind^0,w,c
 18312  005C30  6ED9               	movwf	fsr2l,c
 18313  005C32  6ADA               	clrf	fsr2h,c
 18314  005C34  0E09               	movlw	9
 18315  005C36  26D9               	addwf	fsr2l,f,c
 18316  005C38  0E03               	movlw	3
 18317  005C3A  18DE               	xorwf	postinc2,w,c
 18318  005C3C  B4D8               	btfsc	status,2,c
 18319  005C3E  D035               	goto	l13880
 18320  005C40                     u12910:
 18321                           
 18322                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 18323  005C40  0E00               	movlw	0
 18324  005C42  0012               	return	
 18325  005C44                     l13868:
 18326                           
 18327                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 18328  005C44  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 18329  005C4A  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 18330  005C50  0E16               	movlw	22
 18331  005C52  18DE               	xorwf	postinc2,w,c
 18332  005C54  A4D8               	btfss	status,2,c
 18333  005C56  D029               	goto	l13880
 18334  005C58  EE20 F001          	lfsr	2,1
 18335  005C5C  500B               	movf	nwkTxAckReceived@command^0,w,c
 18336  005C5E  26D9               	addwf	fsr2l,f,c
 18337  005C60  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 18338  005C62  22DA               	addwfc	fsr2h,f,c
 18339  005C64  EE10 F00C          	lfsr	1,12
 18340  005C68  500D               	movf	nwkTxAckReceived@frame^0,w,c
 18341  005C6A  26E1               	addwf	fsr1l,f,c
 18342  005C6C  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 18343  005C6E  22E2               	addwfc	fsr1h,f,c
 18344  005C70  50DE               	movf	postinc2,w,c
 18345  005C72  18E6               	xorwf	postinc1,w,c
 18346  005C74  A4D8               	btfss	status,2,c
 18347  005C76  D019               	goto	l13880
 18348                           
 18349                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 18350  005C78  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 18351  005C7E  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 18352  005C84  0E17               	movlw	23
 18353  005C86  6EDF               	movwf	indf2,c
 18354                           
 18355                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 18356  005C88  EE20 F002          	lfsr	2,2
 18357  005C8C  500B               	movf	nwkTxAckReceived@command^0,w,c
 18358  005C8E  26D9               	addwf	fsr2l,f,c
 18359  005C90  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 18360  005C92  22DA               	addwfc	fsr2h,f,c
 18361  005C94  EE10 F086          	lfsr	1,134
 18362  005C98  500D               	movf	nwkTxAckReceived@frame^0,w,c
 18363  005C9A  26E1               	addwf	fsr1l,f,c
 18364  005C9C  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 18365  005C9E  22E2               	addwfc	fsr1h,f,c
 18366  005CA0  006F FF7F FFE7     	movff	indf2,indf1
 18367                           
 18368                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 18369  005CA6  0E01               	movlw	1
 18370  005CA8  0012               	return	
 18371  005CAA                     l13880:
 18372                           
 18373                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 18374  005CAA  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 18375  005CB0  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 18376  005CB6  EC7E  F033         	call	_nwkFrameNext	;wreg free
 18377  005CBA  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 18378  005CC0  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 18379  005CC6  500D               	movf	nwkTxAckReceived@frame^0,w,c
 18380  005CC8  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 18381  005CCA  B4D8               	btfsc	status,2,c
 18382  005CCC  D7B9               	goto	u12910
 18383  005CCE  D7BA               	goto	l13868
 18384  005CD0                     __end_of_nwkTxAckReceived:
 18385                           	opt callstack 0
 18386                           
 18387 ;; *************** function _nwkFrameNext *****************
 18388 ;; Defined at:
 18389 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 18392 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18393 ;; Auto vars:     Size  Location     Type
 18394 ;;		None
 18395 ;; Return value:  Size  Location     Type
 18396 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 18397 ;; Registers used:
 18398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18399 ;; Tracked objects:
 18400 ;;		On entry : 0/0
 18401 ;;		On exit  : 0/0
 18402 ;;		Unchanged: 0/0
 18403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18408 ;;Total ram usage:        6 bytes
 18409 ;; Hardware stack levels used:    1
 18410 ;; Hardware stack levels required when called:    7
 18411 ;; This function calls:
 18412 ;;		Nothing
 18413 ;; This function is called by:
 18414 ;;		_nwkRxTaskHandler
 18415 ;;		_nwkTxAckReceived
 18416 ;;		_nwkTxAckWaitTimerHandler
 18417 ;;		_nwkTxDelayTimerHandler
 18418 ;;		_nwkTxTaskHandler
 18419 ;; This function uses a non-reentrant model
 18420 ;;
 18421                           
 18422                           	psect	text114
 18423  0066FC                     __ptext114:
 18424                           	opt callstack 0
 18425  0066FC                     _nwkFrameNext:
 18426                           	opt callstack 20
 18427                           
 18428                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 18429                           
 18430                           ;incstack = 0
 18431  0066FC  5002               	movf	nwkFrameNext@frame^0,w,c
 18432  0066FE  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 18433  006700  A4D8               	btfss	status,2,c
 18434  006702  D026               	goto	l13726
 18435                           
 18436                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 18437  006704  0EBD               	movlw	low _nwkFrameFrames
 18438  006706  6E02               	movwf	nwkFrameNext@frame^0,c
 18439  006708  0E05               	movlw	high _nwkFrameFrames
 18440  00670A  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 18441                           
 18442                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 18443                           
 18444                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 18445  00670C  0EAD               	movlw	173
 18446  00670E  6E04               	movwf	??_nwkFrameNext^0,c
 18447  006710  0E02               	movlw	2
 18448  006712  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 18449  006714  0EBD               	movlw	low _nwkFrameFrames
 18450  006716  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 18451  006718  0E05               	movlw	high _nwkFrameFrames
 18452  00671A  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 18453  00671C  5004               	movf	??_nwkFrameNext^0,w,c
 18454  00671E  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 18455  006720  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 18456  006722  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 18457  006724  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 18458  006726  5C02               	subwf	nwkFrameNext@frame^0,w,c
 18459  006728  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 18460  00672A  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 18461  00672C  B0D8               	btfsc	status,0,c
 18462  00672E  D026               	goto	u12720
 18463  006730                     l13720:
 18464                           
 18465                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 18466  006730  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 18467  006736  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 18468  00673C  50DF               	movf	indf2,w,c
 18469  00673E  B4D8               	btfsc	status,2,c
 18470  006740  D007               	goto	l13726
 18471                           
 18472                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 18473  006742  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 18474  006748  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 18475  00674E  0012               	return	
 18476  006750                     l13726:
 18477                           
 18478                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 18479  006750  0E89               	movlw	137
 18480  006752  2602               	addwf	nwkFrameNext@frame^0,f,c
 18481  006754  0E00               	movlw	0
 18482  006756  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 18483  006758  0EAD               	movlw	173
 18484  00675A  6E04               	movwf	??_nwkFrameNext^0,c
 18485  00675C  0E02               	movlw	2
 18486  00675E  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 18487  006760  0EBD               	movlw	low _nwkFrameFrames
 18488  006762  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 18489  006764  0E05               	movlw	high _nwkFrameFrames
 18490  006766  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 18491  006768  5004               	movf	??_nwkFrameNext^0,w,c
 18492  00676A  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 18493  00676C  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 18494  00676E  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 18495  006770  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 18496  006772  5C02               	subwf	nwkFrameNext@frame^0,w,c
 18497  006774  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 18498  006776  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 18499  006778  A0D8               	btfss	status,0,c
 18500  00677A  D7DA               	goto	l13720
 18501  00677C                     u12720:
 18502                           
 18503                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 18504  00677C  0E00               	movlw	0
 18505  00677E  6E02               	movwf	?_nwkFrameNext^0,c
 18506  006780  0E00               	movlw	0
 18507  006782  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 18508  006784  0012               	return		;funcret
 18509  006786                     __end_of_nwkFrameNext:
 18510                           	opt callstack 0
 18511                           
 18512 ;; *************** function _nwkRouteErrorReceived *****************
 18513 ;; Defined at:
 18514 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 18517 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18518 ;; Auto vars:     Size  Location     Type
 18519 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 18520 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18521 ;; Return value:  Size  Location     Type
 18522 ;;                  1    wreg      _Bool 
 18523 ;; Registers used:
 18524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18525 ;; Tracked objects:
 18526 ;;		On entry : 3F/0
 18527 ;;		On exit  : 0/0
 18528 ;;		Unchanged: 0/0
 18529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18530 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18533 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18534 ;;Total ram usage:        4 bytes
 18535 ;; Hardware stack levels used:    1
 18536 ;; Hardware stack levels required when called:    9
 18537 ;; This function calls:
 18538 ;;		_nwkRouteRemove
 18539 ;; This function is called by:
 18540 ;;		_nwkRxServiceDataInd
 18541 ;; This function uses a non-reentrant model
 18542 ;;
 18543                           
 18544                           	psect	text115
 18545  0071F2                     __ptext115:
 18546                           	opt callstack 0
 18547  0071F2                     _nwkRouteErrorReceived:
 18548                           	opt callstack 15
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 18552                           
 18553                           ;incstack = 0
 18554  0071F2  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 18555  0071F4  6ED9               	movwf	fsr2l,c
 18556  0071F6  6ADA               	clrf	fsr2h,c
 18557  0071F8  0E07               	movlw	7
 18558  0071FA  26D9               	addwf	fsr2l,f,c
 18559  0071FC  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 18560  007202  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 18561                           
 18562                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 18563  007208  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 18564  00720A  6ED9               	movwf	fsr2l,c
 18565  00720C  6ADA               	clrf	fsr2h,c
 18566  00720E  0E09               	movlw	9
 18567  007210  26D9               	addwf	fsr2l,f,c
 18568  007212  0E06               	movlw	6
 18569  007214  18DE               	xorwf	postinc2,w,c
 18570  007216  B4D8               	btfsc	status,2,c
 18571  007218  D002               	goto	l13852
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 18575  00721A  0E00               	movlw	0
 18576  00721C  0012               	return	
 18577  00721E                     l13852:
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 18581  00721E  EE20 F003          	lfsr	2,3
 18582  007222  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 18583  007224  26D9               	addwf	fsr2l,f,c
 18584  007226  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 18585  007228  22DA               	addwfc	fsr2h,f,c
 18586  00722A  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 18587  007230  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 18588  007236  EE20 F005          	lfsr	2,5
 18589  00723A  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 18590  00723C  26D9               	addwf	fsr2l,f,c
 18591  00723E  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 18592  007240  22DA               	addwfc	fsr2h,f,c
 18593  007242  50DF               	movf	indf2,w,c
 18594  007244  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 18595  007246  EC32  F03D         	call	_nwkRouteRemove	;wreg free
 18596                           
 18597                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 18598  00724A  0E01               	movlw	1
 18599  00724C  0012               	return		;funcret
 18600  00724E                     __end_of_nwkRouteErrorReceived:
 18601                           	opt callstack 0
 18602                           
 18603 ;; *************** function _nwkRouteRemove *****************
 18604 ;; Defined at:
 18605 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;  dst             2    7[COMRAM] unsigned short 
 18608 ;;  multicast       1    9[COMRAM] unsigned char 
 18609 ;; Auto vars:     Size  Location     Type
 18610 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 18611 ;;		 -> nwkRouteTable(70), NULL(0), 
 18612 ;; Return value:  Size  Location     Type
 18613 ;;                  1    wreg      void 
 18614 ;; Registers used:
 18615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18616 ;; Tracked objects:
 18617 ;;		On entry : 3E/1
 18618 ;;		On exit  : 0/0
 18619 ;;		Unchanged: 0/0
 18620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18621 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18624 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18625 ;;Total ram usage:        5 bytes
 18626 ;; Hardware stack levels used:    1
 18627 ;; Hardware stack levels required when called:    8
 18628 ;; This function calls:
 18629 ;;		_NWK_RouteFindEntry
 18630 ;;		_NWK_RouteFreeEntry
 18631 ;; This function is called by:
 18632 ;;		_nwkRouteErrorReceived
 18633 ;;		_nwkRxRejectDuplicate
 18634 ;; This function uses a non-reentrant model
 18635 ;;
 18636                           
 18637                           	psect	text116
 18638  007A64                     __ptext116:
 18639                           	opt callstack 0
 18640  007A64                     _nwkRouteRemove:
 18641                           	opt callstack 17
 18642                           
 18643                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 18644                           
 18645                           ;incstack = 0
 18646  007A64  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 18647  007A6A  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 18648  007A70  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 18649  007A76  EC18  F037         	call	_NWK_RouteFindEntry	;wreg free
 18650  007A7A  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 18651  007A80  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 18652                           
 18653                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 18654  007A86  500B               	movf	nwkRouteRemove@entry^0,w,c
 18655  007A88  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 18656  007A8A  B4D8               	btfsc	status,2,c
 18657  007A8C  0012               	return	
 18658                           
 18659                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 18660  007A8E  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 18661  007A94  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 18662  007A9A  EC50  F03E         	call	_NWK_RouteFreeEntry	;wreg free
 18663  007A9E  0012               	return		;funcret
 18664  007AA0                     __end_of_nwkRouteRemove:
 18665                           	opt callstack 0
 18666                           
 18667 ;; *************** function _NWK_RouteFreeEntry *****************
 18668 ;; Defined at:
 18669 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 18670 ;; Parameters:    Size  Location     Type
 18671 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 18672 ;;		 -> nwkRouteTable(70), NULL(0), 
 18673 ;; Auto vars:     Size  Location     Type
 18674 ;;		None
 18675 ;; Return value:  Size  Location     Type
 18676 ;;                  1    wreg      void 
 18677 ;; Registers used:
 18678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18679 ;; Tracked objects:
 18680 ;;		On entry : 0/1
 18681 ;;		On exit  : 0/0
 18682 ;;		Unchanged: 0/0
 18683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18688 ;;Total ram usage:        2 bytes
 18689 ;; Hardware stack levels used:    1
 18690 ;; Hardware stack levels required when called:    7
 18691 ;; This function calls:
 18692 ;;		Nothing
 18693 ;; This function is called by:
 18694 ;;		_nwkRouteRemove
 18695 ;;		_nwkRouteFrameSent
 18696 ;; This function uses a non-reentrant model
 18697 ;;
 18698                           
 18699                           	psect	text117
 18700  007CA0                     __ptext117:
 18701                           	opt callstack 0
 18702  007CA0                     _NWK_RouteFreeEntry:
 18703                           	opt callstack 19
 18704                           
 18705                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 18706                           
 18707                           ;incstack = 0
 18708  007CA0  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 18709  007CA6  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 18710  007CAC  B0DF               	btfsc	indf2,0,c
 18711  007CAE  0012               	return	
 18712                           
 18713                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 18714  007CB0  EE20 F001          	lfsr	2,1
 18715  007CB4  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 18716  007CB6  26D9               	addwf	fsr2l,f,c
 18717  007CB8  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 18718  007CBA  22DA               	addwfc	fsr2h,f,c
 18719  007CBC  0EFF               	movlw	255
 18720  007CBE  6EDE               	movwf	postinc2,c
 18721  007CC0  0EFF               	movlw	255
 18722  007CC2  6EDD               	movwf	postdec2,c
 18723                           
 18724                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 18725  007CC4  EE20 F005          	lfsr	2,5
 18726  007CC8  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 18727  007CCA  26D9               	addwf	fsr2l,f,c
 18728  007CCC  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 18729  007CCE  22DA               	addwfc	fsr2h,f,c
 18730  007CD0  0E00               	movlw	0
 18731  007CD2  6EDF               	movwf	indf2,c
 18732  007CD4  0012               	return		;funcret
 18733  007CD6                     __end_of_NWK_RouteFreeEntry:
 18734                           	opt callstack 0
 18735                           
 18736 ;; *************** function _printf *****************
 18737 ;; Defined at:
 18738 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
 18741 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 18742 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 18743 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 18744 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 18745 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 18746 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 18747 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 18748 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 18749 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 18750 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 18751 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 18752 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  ret             2    0        int 
 18755 ;;  ap              1   92[COMRAM] PTR void [1]
 18756 ;;		 -> ?_printf(2), 
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  2   84[COMRAM] int 
 18759 ;; Registers used:
 18760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18761 ;; Tracked objects:
 18762 ;;		On entry : 0/0
 18763 ;;		On exit  : 3F/1
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18766 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18770 ;;Total ram usage:        9 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; Hardware stack levels required when called:   15
 18773 ;; This function calls:
 18774 ;;		_vfprintf
 18775 ;; This function is called by:
 18776 ;;		_appDataInd
 18777 ;;		_cmdSend
 18778 ;;		_cmdBcast
 18779 ;;		_cmdAddr
 18780 ;;		_cmdSetAddr
 18781 ;;		_cmdNaddr
 18782 ;;		_cmdSetNaddr
 18783 ;;		_cmdMac
 18784 ;;		_cmdSetSink
 18785 ;;		_cmdSetAES
 18786 ;;		_cmdGetCAD
 18787 ;;		_cmdRstCAD
 18788 ;;		_cmdGetMode
 18789 ;;		_cmdGetRFCH
 18790 ;;		_cmdSetRFCH
 18791 ;;		_cmdGetTX
 18792 ;;		_cmdSetTX
 18793 ;;		_cmdGetCADRSSI
 18794 ;;		_cmdSetCADRSSI
 18795 ;;		_cmdSetParity
 18796 ;;		_cmdBootLoad
 18797 ;;		_cmdGetSF
 18798 ;;		_cmdSetSF
 18799 ;;		_print_hop_table
 18800 ;;		_set_hop_table_ttl
 18801 ;;		_executeATCommand
 18802 ;;		_sendInfo
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           	psect	text118
 18807  00801E                     __ptext118:
 18808                           	opt callstack 0
 18809  00801E                     _printf:
 18810                           	opt callstack 12
 18811                           
 18812                           ;incstack = 0
 18813  00801E  0E57               	movlw	low (?_printf+2)
 18814  008020  6E5D               	movwf	printf@ap^0,c
 18815  008022  0E00               	movlw	0
 18816  008024  6E4E               	movwf	vfprintf@fp^0,c
 18817  008026  0E00               	movlw	0
 18818  008028  6E4F               	movwf	(vfprintf@fp+1)^0,c
 18819  00802A  0060  F154  F050   	movff	printf@fmt,vfprintf@fmt
 18820  008030  0060  F158  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 18821  008036  0E5D               	movlw	low printf@ap
 18822  008038  6E52               	movwf	vfprintf@ap^0,c
 18823  00803A  EC7D  F037         	call	_vfprintf	;wreg free
 18824                           
 18825                           ; BSR set to: 1
 18826  00803E  0012               	return		;funcret
 18827  008040                     __end_of_printf:
 18828                           	opt callstack 0
 18829                           
 18830 ;; *************** function _vfprintf *****************
 18831 ;; Defined at:
 18832 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18833 ;; Parameters:    Size  Location     Type
 18834 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 18835 ;;		 -> NULL(0), 
 18836 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 18837 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 18838 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 18839 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 18840 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 18841 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 18842 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 18843 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 18844 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 18845 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 18846 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 18847 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 18848 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 18849 ;;  ap              1   81[COMRAM] PTR PTR void 
 18850 ;;		 -> printf@ap(1), 
 18851 ;; Auto vars:     Size  Location     Type
 18852 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 18853 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 18854 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 18855 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 18856 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 18857 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 18858 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 18859 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 18860 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 18861 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 18862 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 18863 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 18864 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 18865 ;; Return value:  Size  Location     Type
 18866 ;;                  2   77[COMRAM] int 
 18867 ;; Registers used:
 18868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 3F/1
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18874 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;Total ram usage:        7 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:   14
 18881 ;; This function calls:
 18882 ;;		_vfpfcnvrt
 18883 ;; This function is called by:
 18884 ;;		_printf
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           	psect	text119
 18889  006EFA                     __ptext119:
 18890                           	opt callstack 0
 18891  006EFA                     _vfprintf:
 18892                           	opt callstack 12
 18893                           
 18894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 18895                           
 18896                           ; BSR set to: 1
 18897                           ;incstack = 0
 18898  006EFA  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 18899  006F00  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 18900                           
 18901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 18902  006F06  0E00               	movlw	0
 18903  006F08  0101               	movlb	1	; () banked
 18904  006F0A  6F5A               	movwf	(_nout+1)& (0+255),b
 18905  006F0C  0E00               	movlw	0
 18906  006F0E  6F59               	movwf	_nout& (0+255),b
 18907                           
 18908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 18909  006F10  D012               	goto	l13778
 18910  006F12                     l13776:
 18911                           
 18912                           ; BSR set to: 1
 18913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 18914  006F12  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 18915  006F18  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 18916  006F1E  0E53               	movlw	low vfprintf@cfmt
 18917  006F20  6E48               	movwf	vfpfcnvrt@fmt^0,c
 18918  006F22  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 18919  006F28  EC20  F003         	call	_vfpfcnvrt	;wreg free
 18920  006F2C  5046               	movf	?_vfpfcnvrt^0,w,c
 18921  006F2E  0101               	movlb	1	; () banked
 18922  006F30  2759               	addwf	_nout& (0+255),f,b
 18923  006F32  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 18924  006F34  235A               	addwfc	(_nout+1)& (0+255),f,b
 18925  006F36                     l13778:
 18926                           
 18927                           ; BSR set to: 1
 18928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 18929  006F36  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 18930  006F3C  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 18931  006F42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18932  006F42  6AF8               	clrf	tblptru,c
 18933  006F44                     	endif
 18934  006F44                     	if	0	;tblptru may be non-zero
 18935  006F44                     	endif
 18936  006F44  0008               	tblrd		*
 18937  006F46  50F5               	movf	tablat,w,c
 18938  006F48  0900               	iorlw	0
 18939  006F4A  A4D8               	btfss	status,2,c
 18940  006F4C  D7E2               	goto	l13776
 18941                           
 18942                           ; BSR set to: 1
 18943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 18944  006F4E  0060  F564  F04E   	movff	_nout,?_vfprintf
 18945  006F54  0060  F568  F04F   	movff	_nout+1,?_vfprintf+1
 18946                           
 18947                           ; BSR set to: 1
 18948  006F5A  0012               	return		;funcret
 18949  006F5C                     __end_of_vfprintf:
 18950                           	opt callstack 0
 18951                           
 18952 ;; *************** function _vfpfcnvrt *****************
 18953 ;; Defined at:
 18954 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 18957 ;;		 -> NULL(0), 
 18958 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 18959 ;;		 -> vfprintf@cfmt(2), 
 18960 ;;  ap              1   72[COMRAM] PTR PTR void 
 18961 ;;		 -> printf@ap(1), 
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;  llu             8   14[BANK0 ] unsigned long long 
 18964 ;;  ll              8    0[BANK0 ] long long 
 18965 ;;  f               4    0        long long 
 18966 ;;  vp              3    0        PTR void 
 18967 ;;  ct              3    0        unsigned char [3]
 18968 ;;  done            2   10[BANK0 ] int 
 18969 ;;  i               2    0        int 
 18970 ;;  cp              1    9[BANK0 ] PTR unsigned char 
 18971 ;;		 -> ?_printf(2), appDataInd@data(65), 
 18972 ;;  c               1    8[BANK0 ] unsigned char 
 18973 ;; Return value:  Size  Location     Type
 18974 ;;                  2   69[COMRAM] int 
 18975 ;; Registers used:
 18976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18977 ;; Tracked objects:
 18978 ;;		On entry : 0/1
 18979 ;;		On exit  : 0/0
 18980 ;;		Unchanged: 0/0
 18981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18983 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18984 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18985 ;;      Totals:         8      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18986 ;;Total ram usage:       30 bytes
 18987 ;; Hardware stack levels used:    1
 18988 ;; Hardware stack levels required when called:   13
 18989 ;; This function calls:
 18990 ;;		_atoi
 18991 ;;		_dtoa
 18992 ;;		_fputc
 18993 ;;		_isdigit
 18994 ;;		_stoa
 18995 ;;		_utoa
 18996 ;;		_xtoa
 18997 ;; This function is called by:
 18998 ;;		_vfprintf
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text120
 19003  000640                     __ptext120:
 19004                           	opt callstack 0
 19005  000640                     _vfpfcnvrt:
 19006                           	opt callstack 12
 19007                           
 19008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 19009                           
 19010                           ; BSR set to: 1
 19011                           ;incstack = 0
 19012  000640  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19013  000642  6ED9               	movwf	fsr2l,c
 19014  000644  6ADA               	clrf	fsr2h,c
 19015  000646  006F FF7B FFF6     	movff	postinc2,tblptrl
 19016  00064C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19017  000652                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19018  000652  6AF8               	clrf	tblptru,c
 19019  000654                     	endif
 19020  000654                     	if	0	;tblptru may be non-zero
 19021  000654                     	endif
 19022  000654  0008               	tblrd		*
 19023  000656  50F5               	movf	tablat,w,c
 19024  000658  0A25               	xorlw	37
 19025  00065A  A4D8               	btfss	status,2,c
 19026  00065C  D24C               	goto	l13698
 19027                           
 19028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 19029  00065E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19030  000660  6ED9               	movwf	fsr2l,c
 19031  000662  6ADA               	clrf	fsr2h,c
 19032  000664  2ADE               	incf	postinc2,f,c
 19033  000666  0E00               	movlw	0
 19034  000668  22DD               	addwfc	postdec2,f,c
 19035                           
 19036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 19037  00066A  0E00               	movlw	0
 19038  00066C  0100               	movlb	0	; () banked
 19039  00066E  6FDB               	movwf	(_width+1)& (0+255),b
 19040  000670  0E00               	movlw	0
 19041  000672  6FDA               	movwf	_width& (0+255),b
 19042  000674  C0DA  F0DE         	movff	_width,_flags
 19043  000678  C0DB  F0DF         	movff	_width+1,_flags+1
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 19047  00067C  69DC               	setf	_prec& (0+255),b
 19048  00067E  69DD               	setf	(_prec+1)& (0+255),b
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 19052  000680  0E00               	movlw	0
 19053  000682  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 19054  000684  0E00               	movlw	0
 19055  000686  D013               	goto	L18
 19056  000688                     l13586:
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 19060  000688  81DE               	bsf	_flags& (0+255),0,b
 19061  00068A                     l13588:
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 19065  00068A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19066  00068C  6ED9               	movwf	fsr2l,c
 19067  00068E  6ADA               	clrf	fsr2h,c
 19068  000690  2ADE               	incf	postinc2,f,c
 19069  000692  0E00               	movlw	0
 19070  000694  22DD               	addwfc	postdec2,f,c
 19071                           
 19072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 19073  000696  D030               	goto	l13612
 19074  000698                     l13590:
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 19078  000698  83DE               	bsf	_flags& (0+255),1,b
 19079  00069A  D7F7               	goto	l13588
 19080  00069C                     l13594:
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 19084  00069C  85DE               	bsf	_flags& (0+255),2,b
 19085  00069E  D7F5               	goto	l13588
 19086  0006A0                     l13598:
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 19090  0006A0  87DE               	bsf	_flags& (0+255),3,b
 19091  0006A2  D7F3               	goto	l13588
 19092  0006A4                     l13602:
 19093                           
 19094                           ; BSR set to: 0
 19095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 19096  0006A4  89DE               	bsf	_flags& (0+255),4,b
 19097  0006A6  D7F1               	goto	l13588
 19098  0006A8                     l13606:
 19099                           
 19100                           ; BSR set to: 0
 19101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 19102  0006A8  0E00               	movlw	0
 19103  0006AA  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 19104  0006AC  0E01               	movlw	1
 19105  0006AE                     L18:
 19106  0006AE  6F6A               	movwf	vfpfcnvrt@done& (0+255),b
 19107                           
 19108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 19109  0006B0  D023               	goto	l13612
 19110  0006B2                     l13610:
 19111                           
 19112                           ; BSR set to: 0
 19113  0006B2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19114  0006B4  6ED9               	movwf	fsr2l,c
 19115  0006B6  6ADA               	clrf	fsr2h,c
 19116  0006B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 19117  0006BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 19118  0006C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19119  0006C4  6AF8               	clrf	tblptru,c
 19120  0006C6                     	endif
 19121  0006C6                     	if	0	;tblptru may be non-zero
 19122  0006C6                     	endif
 19123  0006C6  0008               	tblrd		*
 19124  0006C8  50F5               	movf	tablat,w,c
 19125  0006CA  6E4A               	movwf	??_vfpfcnvrt^0,c
 19126  0006CC  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 19127                           
 19128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19129                           ; Switch size 1, requested type "simple"
 19130                           ; Number of cases is 1, Range of values is 0 to 0
 19131                           ; switch strategies available:
 19132                           ; Name         Instructions Cycles
 19133                           ; simple_byte            4     3 (average)
 19134                           ;	Chosen strategy is simple_byte
 19135  0006CE  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 19136  0006D0  0A00               	xorlw	0	; case 0
 19137  0006D2  A4D8               	btfss	status,2,c
 19138  0006D4  D7E9               	goto	l13606
 19139                           
 19140                           ; BSR set to: 0
 19141                           ; Switch size 1, requested type "simple"
 19142                           ; Number of cases is 5, Range of values is 32 to 48
 19143                           ; switch strategies available:
 19144                           ; Name         Instructions Cycles
 19145                           ; simple_byte           16     9 (average)
 19146                           ;	Chosen strategy is simple_byte
 19147  0006D6  504A               	movf	??_vfpfcnvrt^0,w,c
 19148  0006D8  0A20               	xorlw	32	; case 32
 19149  0006DA  B4D8               	btfsc	status,2,c
 19150  0006DC  D7E1               	goto	l13598
 19151  0006DE  0A03               	xorlw	3	; case 35
 19152  0006E0  B4D8               	btfsc	status,2,c
 19153  0006E2  D7E0               	goto	l13602
 19154  0006E4  0A08               	xorlw	8	; case 43
 19155  0006E6  B4D8               	btfsc	status,2,c
 19156  0006E8  D7D9               	goto	l13594
 19157  0006EA  0A06               	xorlw	6	; case 45
 19158  0006EC  B4D8               	btfsc	status,2,c
 19159  0006EE  D7CC               	goto	l13586
 19160  0006F0  0A1D               	xorlw	29	; case 48
 19161  0006F2  B4D8               	btfsc	status,2,c
 19162  0006F4  D7D1               	goto	l13590
 19163  0006F6  D7D8               	goto	l13606
 19164  0006F8                     l13612:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 19168  0006F8  516A               	movf	vfpfcnvrt@done& (0+255),w,b
 19169  0006FA  116B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 19170  0006FC  B4D8               	btfsc	status,2,c
 19171  0006FE  D7D9               	goto	l13610
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 19175  000700  B1DE               	btfsc	_flags& (0+255),0,b
 19176                           
 19177                           ; BSR set to: 0
 19178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 19179  000702  93DE               	bcf	_flags& (0+255),1,b
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 19183  000704  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19184  000706  6ED9               	movwf	fsr2l,c
 19185  000708  6ADA               	clrf	fsr2h,c
 19186  00070A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19187  000710  006F FF77 FFF7     	movff	postdec2,tblptrh
 19188  000716                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19189  000716  6AF8               	clrf	tblptru,c
 19190  000718                     	endif
 19191  000718                     	if	0	;tblptru may be non-zero
 19192  000718                     	endif
 19193  000718  0008               	tblrd		*
 19194  00071A  50F5               	movf	tablat,w,c
 19195  00071C  0A2A               	xorlw	42
 19196  00071E  A4D8               	btfss	status,2,c
 19197  000720  D01C               	goto	l13626
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 19201  000722  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19202  000724  6ED9               	movwf	fsr2l,c
 19203  000726  6ADA               	clrf	fsr2h,c
 19204  000728  2ADE               	incf	postinc2,f,c
 19205  00072A  0E00               	movlw	0
 19206  00072C  22DD               	addwfc	postdec2,f,c
 19207                           
 19208                           ; BSR set to: 0
 19209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 19210  00072E  5049               	movf	vfpfcnvrt@ap^0,w,c
 19211  000730  6ED9               	movwf	fsr2l,c
 19212  000732  6ADA               	clrf	fsr2h,c
 19213  000734  0E02               	movlw	2
 19214  000736  26DF               	addwf	indf2,f,c
 19215  000738  5CDF               	subwf	indf2,w,c
 19216  00073A  6ED9               	movwf	fsr2l,c
 19217  00073C  6ADA               	clrf	fsr2h,c
 19218  00073E  006F FF78  F0DA    	movff	postinc2,_width
 19219  000744  006F FF78  F0DB    	movff	postinc2,_width+1
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 19223  00074A  AFDB               	btfss	(_width+1)& (0+255),7,b
 19224  00074C  D044               	goto	u12610
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 19228  00074E  81DE               	bsf	_flags& (0+255),0,b
 19229                           
 19230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 19231  000750  6DDA               	negf	_width& (0+255),b
 19232  000752  1FDB               	comf	(_width+1)& (0+255),f,b
 19233  000754  B0D8               	btfsc	status,0,c
 19234  000756  2BDB               	incf	(_width+1)& (0+255),f,b
 19235  000758  D03E               	goto	u12610
 19236  00075A                     l13626:
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 19240  00075A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19241  00075C  6ED9               	movwf	fsr2l,c
 19242  00075E  6ADA               	clrf	fsr2h,c
 19243  000760  006F FF78  F009    	movff	postinc2,atoi@s
 19244  000766  006F FF74  F00A    	movff	postdec2,atoi@s+1
 19245  00076C  EC04  F01C         	call	_atoi	;wreg free
 19246  000770  0060  F024  F0DA   	movff	?_atoi,_width
 19247  000776  0060  F028  F0DB   	movff	?_atoi+1,_width+1
 19248                           
 19249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 19250  00077C  D006               	goto	l13630
 19251  00077E                     l13628:
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 19255  00077E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19256  000780  6ED9               	movwf	fsr2l,c
 19257  000782  6ADA               	clrf	fsr2h,c
 19258  000784  2ADE               	incf	postinc2,f,c
 19259  000786  0E00               	movlw	0
 19260  000788  22DD               	addwfc	postdec2,f,c
 19261  00078A                     l13630:
 19262  00078A  0ED0               	movlw	208
 19263  00078C  6E4A               	movwf	??_vfpfcnvrt^0,c
 19264  00078E  0EFF               	movlw	255
 19265  000790  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 19266  000792  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19267  000794  6ED9               	movwf	fsr2l,c
 19268  000796  6ADA               	clrf	fsr2h,c
 19269  000798  006F FF7B FFF6     	movff	postinc2,tblptrl
 19270  00079E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19271  0007A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19272  0007A4  6AF8               	clrf	tblptru,c
 19273  0007A6                     	endif
 19274  0007A6                     	if	0	;tblptru may be non-zero
 19275  0007A6                     	endif
 19276  0007A6  0008               	tblrd		*
 19277  0007A8  50F5               	movf	tablat,w,c
 19278  0007AA  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 19279  0007AC  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 19280  0007AE  504A               	movf	??_vfpfcnvrt^0,w,c
 19281  0007B0  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 19282  0007B2  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 19283  0007B4  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 19284  0007B6  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 19285  0007B8  E106               	bnz	u12590
 19286  0007BA  0E0A               	movlw	10
 19287  0007BC  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 19288  0007BE  B0D8               	btfsc	status,0,c
 19289  0007C0  D002               	goto	u12590
 19290  0007C2  0E01               	movlw	1
 19291  0007C4  D001               	goto	u12600
 19292  0007C6                     u12590:
 19293  0007C6  0E00               	movlw	0
 19294  0007C8                     u12600:
 19295  0007C8  0100               	movlb	0	; () banked
 19296  0007CA  6F6C               	movwf	_vfpfcnvrt$7244& (0+255),b
 19297  0007CC  6B6D               	clrf	(_vfpfcnvrt$7244+1)& (0+255),b
 19298                           
 19299                           ; BSR set to: 0
 19300  0007CE  516C               	movf	_vfpfcnvrt$7244& (0+255),w,b
 19301  0007D0  116D               	iorwf	(_vfpfcnvrt$7244+1)& (0+255),w,b
 19302  0007D2  A4D8               	btfss	status,2,c
 19303  0007D4  D7D4               	goto	l13628
 19304  0007D6                     u12610:
 19305                           
 19306                           ; BSR set to: 0
 19307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 19308  0007D6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19309  0007D8  6ED9               	movwf	fsr2l,c
 19310  0007DA  6ADA               	clrf	fsr2h,c
 19311  0007DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19312  0007E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19313  0007E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19314  0007E8  6AF8               	clrf	tblptru,c
 19315  0007EA                     	endif
 19316  0007EA                     	if	0	;tblptru may be non-zero
 19317  0007EA                     	endif
 19318  0007EA  0008               	tblrd		*
 19319  0007EC  50F5               	movf	tablat,w,c
 19320  0007EE  0A64               	xorlw	100
 19321  0007F0  B4D8               	btfsc	status,2,c
 19322  0007F2  D00F               	goto	u12630
 19323                           
 19324                           ; BSR set to: 0
 19325  0007F4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19326  0007F6  6ED9               	movwf	fsr2l,c
 19327  0007F8  6ADA               	clrf	fsr2h,c
 19328  0007FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19329  000800  006F FF77 FFF7     	movff	postdec2,tblptrh
 19330  000806                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19331  000806  6AF8               	clrf	tblptru,c
 19332  000808                     	endif
 19333  000808                     	if	0	;tblptru may be non-zero
 19334  000808                     	endif
 19335  000808  0008               	tblrd		*
 19336  00080A  50F5               	movf	tablat,w,c
 19337  00080C  0A69               	xorlw	105
 19338  00080E  A4D8               	btfss	status,2,c
 19339  000810  D044               	goto	l13648
 19340  000812                     u12630:
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 19344  000812  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19345  000814  6ED9               	movwf	fsr2l,c
 19346  000816  6ADA               	clrf	fsr2h,c
 19347  000818  2ADE               	incf	postinc2,f,c
 19348  00081A  0E00               	movlw	0
 19349  00081C  22DD               	addwfc	postdec2,f,c
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 19353  00081E  5049               	movf	vfpfcnvrt@ap^0,w,c
 19354  000820  6ED9               	movwf	fsr2l,c
 19355  000822  6ADA               	clrf	fsr2h,c
 19356  000824  50DF               	movf	indf2,w,c
 19357  000826  2ADF               	incf	indf2,f,c
 19358  000828  2ADF               	incf	indf2,f,c
 19359  00082A  6ED9               	movwf	fsr2l,c
 19360  00082C  6ADA               	clrf	fsr2h,c
 19361  00082E  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 19362  000834  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 19363  00083A  0E00               	movlw	0
 19364  00083C  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 19365  00083E  0EFF               	movlw	-1
 19366  000840  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 19367  000842  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 19368  000844  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 19369  000846  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 19370  000848  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 19371  00084A  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 19375  00084C  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 19376  000852  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 19377  000858  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 19378  00085E  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 19379  000864  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 19380  00086A  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 19381  000870  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 19382  000876  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 19383  00087C  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 19384  000882  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 19385  000888  ECE2  F00C         	call	_dtoa	;wreg free
 19386  00088C  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 19387  000892  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 19388  000898  0012               	return	
 19389  00089A                     l13648:
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 19393  00089A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19394  00089C  6ED9               	movwf	fsr2l,c
 19395  00089E  6ADA               	clrf	fsr2h,c
 19396  0008A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19397  0008A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19398  0008AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19399  0008AC  6AF8               	clrf	tblptru,c
 19400  0008AE                     	endif
 19401  0008AE                     	if	0	;tblptru may be non-zero
 19402  0008AE                     	endif
 19403  0008AE  0008               	tblrd		*
 19404  0008B0  50F5               	movf	tablat,w,c
 19405  0008B2  0A73               	xorlw	115
 19406  0008B4  A4D8               	btfss	status,2,c
 19407  0008B6  D022               	goto	l13658
 19408                           
 19409                           ; BSR set to: 0
 19410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 19411  0008B8  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19412  0008BA  6ED9               	movwf	fsr2l,c
 19413  0008BC  6ADA               	clrf	fsr2h,c
 19414  0008BE  2ADE               	incf	postinc2,f,c
 19415  0008C0  0E00               	movlw	0
 19416  0008C2  22DD               	addwfc	postdec2,f,c
 19417                           
 19418                           ; BSR set to: 0
 19419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 19420  0008C4  5049               	movf	vfpfcnvrt@ap^0,w,c
 19421  0008C6  6ED9               	movwf	fsr2l,c
 19422  0008C8  6ADA               	clrf	fsr2h,c
 19423  0008CA  2ADF               	incf	indf2,f,c
 19424  0008CC  04DF               	decf	indf2,w,c
 19425  0008CE  6ED9               	movwf	fsr2l,c
 19426  0008D0  6ADA               	clrf	fsr2h,c
 19427  0008D2  006F FF78  F069    	movff	postinc2,vfpfcnvrt@cp
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 19431  0008D8  0060  F118  F00D   	movff	vfpfcnvrt@fp,stoa@fp
 19432  0008DE  0060  F11C  F00E   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 19433  0008E4  0060  F1A4  F00F   	movff	vfpfcnvrt@cp,stoa@s
 19434  0008EA  EC73  F01F         	call	_stoa	;wreg free
 19435  0008EE  0060  F034  F046   	movff	?_stoa,?_vfpfcnvrt
 19436  0008F4  0060  F038  F047   	movff	?_stoa+1,?_vfpfcnvrt+1
 19437  0008FA  0012               	return	
 19438  0008FC                     l13658:
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 19442  0008FC  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19443  0008FE  6ED9               	movwf	fsr2l,c
 19444  000900  6ADA               	clrf	fsr2h,c
 19445  000902  006F FF7B FFF6     	movff	postinc2,tblptrl
 19446  000908  006F FF77 FFF7     	movff	postdec2,tblptrh
 19447  00090E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19448  00090E  6AF8               	clrf	tblptru,c
 19449  000910                     	endif
 19450  000910                     	if	0	;tblptru may be non-zero
 19451  000910                     	endif
 19452  000910  0008               	tblrd		*
 19453  000912  50F5               	movf	tablat,w,c
 19454  000914  0A75               	xorlw	117
 19455  000916  A4D8               	btfss	status,2,c
 19456  000918  D047               	goto	l13668
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 19460  00091A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19461  00091C  6ED9               	movwf	fsr2l,c
 19462  00091E  6ADA               	clrf	fsr2h,c
 19463  000920  2ADE               	incf	postinc2,f,c
 19464  000922  0E00               	movlw	0
 19465  000924  22DD               	addwfc	postdec2,f,c
 19466                           
 19467                           ; BSR set to: 0
 19468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 19469  000926  5049               	movf	vfpfcnvrt@ap^0,w,c
 19470  000928  6ED9               	movwf	fsr2l,c
 19471  00092A  6ADA               	clrf	fsr2h,c
 19472  00092C  50DF               	movf	indf2,w,c
 19473  00092E  2ADF               	incf	indf2,f,c
 19474  000930  2ADF               	incf	indf2,f,c
 19475  000932  6ED9               	movwf	fsr2l,c
 19476  000934  6ADA               	clrf	fsr2h,c
 19477  000936  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 19478  00093C  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 19479  000942  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 19480  000948  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 19481  00094E  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 19482  000950  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 19483  000952  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 19484  000954  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 19485  000956  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 19486  000958  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 19490  00095A  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 19491  000960  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 19492  000966  0060  F1B8  F021   	movff	vfpfcnvrt@llu,utoa@d
 19493  00096C  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 19494  000972  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 19495  000978  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 19496  00097E  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 19497  000984  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 19498  00098A  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 19499  000990  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 19500  000996  EC01  F013         	call	_utoa	;wreg free
 19501  00099A  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 19502  0009A0  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 19503  0009A6  0012               	return	
 19504  0009A8                     l13668:
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 19508  0009A8  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19509  0009AA  6ED9               	movwf	fsr2l,c
 19510  0009AC  6ADA               	clrf	fsr2h,c
 19511  0009AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19512  0009B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19513  0009BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19514  0009BA  6AF8               	clrf	tblptru,c
 19515  0009BC                     	endif
 19516  0009BC                     	if	0	;tblptru may be non-zero
 19517  0009BC                     	endif
 19518  0009BC  0008               	tblrd		*
 19519  0009BE  50F5               	movf	tablat,w,c
 19520  0009C0  0A78               	xorlw	120
 19521  0009C2  B4D8               	btfsc	status,2,c
 19522  0009C4  D00F               	goto	u12670
 19523                           
 19524                           ; BSR set to: 0
 19525  0009C6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19526  0009C8  6ED9               	movwf	fsr2l,c
 19527  0009CA  6ADA               	clrf	fsr2h,c
 19528  0009CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19529  0009D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19530  0009D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19531  0009D8  6AF8               	clrf	tblptru,c
 19532  0009DA                     	endif
 19533  0009DA                     	if	0	;tblptru may be non-zero
 19534  0009DA                     	endif
 19535  0009DA  0008               	tblrd		*
 19536  0009DC  50F5               	movf	tablat,w,c
 19537  0009DE  0A58               	xorlw	88
 19538  0009E0  A4D8               	btfss	status,2,c
 19539  0009E2  D058               	goto	l13682
 19540  0009E4                     u12670:
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 19544  0009E4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19545  0009E6  6ED9               	movwf	fsr2l,c
 19546  0009E8  6ADA               	clrf	fsr2h,c
 19547  0009EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19548  0009F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19549  0009F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19550  0009F6  6AF8               	clrf	tblptru,c
 19551  0009F8                     	endif
 19552  0009F8                     	if	0	;tblptru may be non-zero
 19553  0009F8                     	endif
 19554  0009F8  0008               	tblrd		*
 19555  0009FA  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 19559  000A00  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19560  000A02  6ED9               	movwf	fsr2l,c
 19561  000A04  6ADA               	clrf	fsr2h,c
 19562  000A06  2ADE               	incf	postinc2,f,c
 19563  000A08  0E00               	movlw	0
 19564  000A0A  22DD               	addwfc	postdec2,f,c
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 19568  000A0C  5049               	movf	vfpfcnvrt@ap^0,w,c
 19569  000A0E  6ED9               	movwf	fsr2l,c
 19570  000A10  6ADA               	clrf	fsr2h,c
 19571  000A12  50DF               	movf	indf2,w,c
 19572  000A14  2ADF               	incf	indf2,f,c
 19573  000A16  2ADF               	incf	indf2,f,c
 19574  000A18  6ED9               	movwf	fsr2l,c
 19575  000A1A  6ADA               	clrf	fsr2h,c
 19576  000A1C  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 19577  000A22  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 19578  000A28  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 19579  000A2E  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 19580  000A34  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 19581  000A36  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 19582  000A38  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 19583  000A3A  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 19584  000A3C  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 19585  000A3E  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 19586                           
 19587                           ; BSR set to: 0
 19588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 19589  000A40  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 19590  000A46  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 19591  000A4C  0060  F1B8  F021   	movff	vfpfcnvrt@llu,xtoa@d
 19592  000A52  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 19593  000A58  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 19594  000A5E  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 19595  000A64  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 19596  000A6A  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 19597  000A70  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 19598  000A76  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 19599  000A7C  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 19600  000A82  EC3A  F00E         	call	_xtoa	;wreg free
 19601  000A86  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 19602  000A8C  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 19603  000A92  0012               	return	
 19604  000A94                     l13682:
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 19608  000A94  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19609  000A96  6ED9               	movwf	fsr2l,c
 19610  000A98  6ADA               	clrf	fsr2h,c
 19611  000A9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19612  000AA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19613  000AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19614  000AA6  6AF8               	clrf	tblptru,c
 19615  000AA8                     	endif
 19616  000AA8                     	if	0	;tblptru may be non-zero
 19617  000AA8                     	endif
 19618  000AA8  0008               	tblrd		*
 19619  000AAA  50F5               	movf	tablat,w,c
 19620  000AAC  0A25               	xorlw	37
 19621  000AAE  A4D8               	btfss	status,2,c
 19622  000AB0  D017               	goto	l13692
 19623                           
 19624                           ; BSR set to: 0
 19625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 19626  000AB2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19627  000AB4  6ED9               	movwf	fsr2l,c
 19628  000AB6  6ADA               	clrf	fsr2h,c
 19629  000AB8  2ADE               	incf	postinc2,f,c
 19630  000ABA  0E00               	movlw	0
 19631  000ABC  22DD               	addwfc	postdec2,f,c
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 19635  000ABE  0E00               	movlw	0
 19636  000AC0  6E05               	movwf	(fputc@c+1)^0,c
 19637  000AC2  0E25               	movlw	37
 19638  000AC4  6E04               	movwf	fputc@c^0,c
 19639  000AC6  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 19640  000ACC  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 19641  000AD2  ECAC  F036         	call	_fputc	;wreg free
 19642  000AD6                     l13688:
 19643                           
 19644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 19645  000AD6  0E00               	movlw	0
 19646  000AD8  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 19647  000ADA  0E01               	movlw	1
 19648  000ADC  6E46               	movwf	?_vfpfcnvrt^0,c
 19649  000ADE  0012               	return	
 19650  000AE0                     l13692:
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 19654  000AE0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19655  000AE2  6ED9               	movwf	fsr2l,c
 19656  000AE4  6ADA               	clrf	fsr2h,c
 19657  000AE6  2ADE               	incf	postinc2,f,c
 19658  000AE8  0E00               	movlw	0
 19659  000AEA  22DD               	addwfc	postdec2,f,c
 19660                           
 19661                           ; BSR set to: 0
 19662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 19663  000AEC  0E00               	movlw	0
 19664  000AEE  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 19665  000AF0  0E00               	movlw	0
 19666  000AF2  6E46               	movwf	?_vfpfcnvrt^0,c
 19667  000AF4  0012               	return	
 19668  000AF6                     l13698:
 19669                           
 19670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 19671  000AF6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19672  000AF8  6ED9               	movwf	fsr2l,c
 19673  000AFA  6ADA               	clrf	fsr2h,c
 19674  000AFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19675  000B02  006F FF77 FFF7     	movff	postdec2,tblptrh
 19676  000B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19677  000B08  6AF8               	clrf	tblptru,c
 19678  000B0A                     	endif
 19679  000B0A                     	if	0	;tblptru may be non-zero
 19680  000B0A                     	endif
 19681  000B0A  0008               	tblrd		*
 19682  000B0C  50F5               	movf	tablat,w,c
 19683  000B0E  6E04               	movwf	fputc@c^0,c
 19684  000B10  6A05               	clrf	(fputc@c+1)^0,c
 19685  000B12  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 19686  000B18  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 19687  000B1E  ECAC  F036         	call	_fputc	;wreg free
 19688                           
 19689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 19690  000B22  5048               	movf	vfpfcnvrt@fmt^0,w,c
 19691  000B24  6ED9               	movwf	fsr2l,c
 19692  000B26  6ADA               	clrf	fsr2h,c
 19693  000B28  2ADE               	incf	postinc2,f,c
 19694  000B2A  0E00               	movlw	0
 19695  000B2C  22DD               	addwfc	postdec2,f,c
 19696  000B2E  D7D3               	goto	l13688
 19697  000B30                     __end_of_vfpfcnvrt:
 19698                           	opt callstack 0
 19699                           
 19700 ;; *************** function _xtoa *****************
 19701 ;; Defined at:
 19702 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 19705 ;;		 -> NULL(0), 
 19706 ;;  d               8   32[COMRAM] unsigned long long 
 19707 ;;  x               1   40[COMRAM] unsigned char 
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;  n               8   57[COMRAM] unsigned long long 
 19710 ;;  c               2   67[COMRAM] int 
 19711 ;;  i               2   65[COMRAM] int 
 19712 ;;  w               2   55[COMRAM] int 
 19713 ;;  p               2   53[COMRAM] int 
 19714 ;; Return value:  Size  Location     Type
 19715 ;;                  2   30[COMRAM] int 
 19716 ;; Registers used:
 19717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19718 ;; Tracked objects:
 19719 ;;		On entry : 3F/0
 19720 ;;		On exit  : 0/0
 19721 ;;		Unchanged: 0/0
 19722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19723 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19724 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19725 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19726 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19727 ;;Total ram usage:       39 bytes
 19728 ;; Hardware stack levels used:    1
 19729 ;; Hardware stack levels required when called:   12
 19730 ;; This function calls:
 19731 ;;		_isalpha
 19732 ;;		_isupper
 19733 ;;		_pad
 19734 ;;		_toupper
 19735 ;; This function is called by:
 19736 ;;		_vfpfcnvrt
 19737 ;; This function uses a non-reentrant model
 19738 ;;
 19739                           
 19740                           	psect	text121
 19741  001C74                     __ptext121:
 19742                           	opt callstack 0
 19743  001C74                     _xtoa:
 19744                           	opt callstack 12
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 19748                           
 19749                           ;incstack = 0
 19750  001C74  AFDD               	btfss	(_prec+1)& (0+255),7,b
 19751                           
 19752                           ; BSR set to: 0
 19753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 19754  001C76  93DE               	bcf	_flags& (0+255),1,b
 19755                           
 19756                           ; BSR set to: 0
 19757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 19758  001C78  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 19759  001C7A  D005               	goto	u12250
 19760  001C7C  51DD               	movf	(_prec+1)& (0+255),w,b
 19761  001C7E  E108               	bnz	l3134
 19762  001C80  05DC               	decf	_prec& (0+255),w,b
 19763  001C82  B0D8               	btfsc	status,0,c
 19764  001C84  D005               	goto	l3134
 19765  001C86                     u12250:
 19766                           
 19767                           ; BSR set to: 0
 19768  001C86  0E00               	movlw	0
 19769  001C88  6E37               	movwf	(xtoa@p+1)^0,c
 19770  001C8A  0E01               	movlw	1
 19771  001C8C  6E36               	movwf	xtoa@p^0,c
 19772  001C8E  D006               	goto	l3136
 19773  001C90                     l3134:
 19774                           
 19775                           ; BSR set to: 0
 19776  001C90  0060  F370  F036   	movff	_prec,xtoa@p
 19777  001C96  0060  F374  F037   	movff	_prec+1,xtoa@p+1
 19778  001C9C                     l3136:
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 19782  001C9C  0060  F368  F038   	movff	_width,xtoa@w
 19783  001CA2  0060  F36C  F039   	movff	_width+1,xtoa@w+1
 19784                           
 19785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 19786  001CA8  A9DE               	btfss	_flags& (0+255),4,b
 19787  001CAA  D004               	goto	l13440
 19788                           
 19789                           ; BSR set to: 0
 19790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 19791  001CAC  0EFE               	movlw	254
 19792  001CAE  2638               	addwf	xtoa@w^0,f,c
 19793  001CB0  0EFF               	movlw	255
 19794  001CB2  2239               	addwfc	(xtoa@w+1)^0,f,c
 19795  001CB4                     l13440:
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 19799  001CB4  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 19800  001CBA  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 19801  001CC0  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 19802  001CC6  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 19803  001CCC  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 19804  001CD2  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 19805  001CD8  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 19806  001CDE  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 19810  001CE4  0E00               	movlw	0
 19811  001CE6  6E43               	movwf	(xtoa@i+1)^0,c
 19812  001CE8  0E1F               	movlw	31
 19813  001CEA  6E42               	movwf	xtoa@i^0,c
 19814                           
 19815                           ; BSR set to: 0
 19816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 19817  001CEC  0E00               	movlw	0
 19818  001CEE  0101               	movlb	1	; () banked
 19819  001CF0  6F94               	movwf	(_dbuf+31)& (0+255),b
 19820                           
 19821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19822  001CF2  D0A8               	goto	l13476
 19823  001CF4                     l13446:
 19824                           
 19825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 19826  001CF4  0642               	decf	xtoa@i^0,f,c
 19827  001CF6  A0D8               	btfss	status,0,c
 19828  001CF8  0643               	decf	(xtoa@i+1)^0,f,c
 19829                           
 19830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 19831  001CFA  0E0F               	movlw	15
 19832  001CFC  143A               	andwf	xtoa@n^0,w,c
 19833  001CFE  6E44               	movwf	xtoa@c^0,c
 19834  001D00  6A45               	clrf	(xtoa@c+1)^0,c
 19835                           
 19836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 19837  001D02  BE45               	btfsc	(xtoa@c+1)^0,7,c
 19838  001D04  D008               	goto	l13454
 19839  001D06  5045               	movf	(xtoa@c+1)^0,w,c
 19840  001D08  E104               	bnz	u12270
 19841  001D0A  0E0A               	movlw	10
 19842  001D0C  5C44               	subwf	xtoa@c^0,w,c
 19843  001D0E  A0D8               	btfss	status,0,c
 19844  001D10  D002               	goto	l13454
 19845  001D12                     u12270:
 19846  001D12  0E57               	movlw	87
 19847  001D14  D001               	goto	L19
 19848  001D16                     l13454:
 19849  001D16  0E30               	movlw	48
 19850  001D18                     L19:
 19851  001D18  2444               	addwf	xtoa@c^0,w,c
 19852  001D1A  6E44               	movwf	xtoa@c^0,c
 19853  001D1C  0E00               	movlw	0
 19854  001D1E  2045               	addwfc	(xtoa@c+1)^0,w,c
 19855  001D20  6E45               	movwf	(xtoa@c+1)^0,c
 19856                           
 19857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 19858  001D22  0EBF               	movlw	191
 19859  001D24  6E2A               	movwf	??_xtoa^0,c
 19860  001D26  0EFF               	movlw	255
 19861  001D28  6E2B               	movwf	(??_xtoa+1)^0,c
 19862  001D2A  5029               	movf	xtoa@x^0,w,c
 19863  001D2C  6E2C               	movwf	(??_xtoa+2)^0,c
 19864  001D2E  6A2D               	clrf	(??_xtoa+3)^0,c
 19865  001D30  502A               	movf	??_xtoa^0,w,c
 19866  001D32  262C               	addwf	(??_xtoa+2)^0,f,c
 19867  001D34  502B               	movf	(??_xtoa+1)^0,w,c
 19868  001D36  222D               	addwfc	(??_xtoa+3)^0,f,c
 19869  001D38  502D               	movf	(??_xtoa+3)^0,w,c
 19870  001D3A  E106               	bnz	u12280
 19871  001D3C  0E1A               	movlw	26
 19872  001D3E  5C2C               	subwf	(??_xtoa+2)^0,w,c
 19873  001D40  B0D8               	btfsc	status,0,c
 19874  001D42  D002               	goto	u12280
 19875  001D44  0E01               	movlw	1
 19876  001D46  D001               	goto	u12290
 19877  001D48                     u12280:
 19878  001D48  0E00               	movlw	0
 19879  001D4A                     u12290:
 19880  001D4A  6E32               	movwf	_xtoa$7229^0,c
 19881  001D4C  6A33               	clrf	(_xtoa$7229+1)^0,c
 19882  001D4E  5032               	movf	_xtoa$7229^0,w,c
 19883  001D50  1033               	iorwf	(_xtoa$7229+1)^0,w,c
 19884  001D52  B4D8               	btfsc	status,2,c
 19885  001D54  D02B               	goto	l13468
 19886  001D56  0E9F               	movlw	159
 19887  001D58  6E2A               	movwf	??_xtoa^0,c
 19888  001D5A  0EFF               	movlw	255
 19889  001D5C  6E2B               	movwf	(??_xtoa+1)^0,c
 19890  001D5E  0E20               	movlw	32
 19891  001D60  1044               	iorwf	xtoa@c^0,w,c
 19892  001D62  6E2C               	movwf	(??_xtoa+2)^0,c
 19893  001D64  0E00               	movlw	0
 19894  001D66  1045               	iorwf	(xtoa@c+1)^0,w,c
 19895  001D68  6E2D               	movwf	(??_xtoa+3)^0,c
 19896  001D6A  502A               	movf	??_xtoa^0,w,c
 19897  001D6C  262C               	addwf	(??_xtoa+2)^0,f,c
 19898  001D6E  502B               	movf	(??_xtoa+1)^0,w,c
 19899  001D70  222D               	addwfc	(??_xtoa+3)^0,f,c
 19900  001D72  502D               	movf	(??_xtoa+3)^0,w,c
 19901  001D74  E106               	bnz	u12310
 19902  001D76  0E1A               	movlw	26
 19903  001D78  5C2C               	subwf	(??_xtoa+2)^0,w,c
 19904  001D7A  B0D8               	btfsc	status,0,c
 19905  001D7C  D002               	goto	u12310
 19906  001D7E  0E01               	movlw	1
 19907  001D80  D001               	goto	u12320
 19908  001D82                     u12310:
 19909  001D82  0E00               	movlw	0
 19910  001D84                     u12320:
 19911  001D84  6E34               	movwf	_xtoa$7230^0,c
 19912  001D86  6A35               	clrf	(_xtoa$7230+1)^0,c
 19913  001D88  5034               	movf	_xtoa$7230^0,w,c
 19914  001D8A  1035               	iorwf	(_xtoa$7230+1)^0,w,c
 19915  001D8C  B4D8               	btfsc	status,2,c
 19916  001D8E  D00E               	goto	l13468
 19917                           
 19918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 19919  001D90  0060  F110  F008   	movff	xtoa@c,toupper@c
 19920  001D96  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 19921  001D9C  ECD2  F039         	call	_toupper	;wreg free
 19922  001DA0  0060  F020  F044   	movff	?_toupper,xtoa@c
 19923  001DA6  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 19924  001DAC                     l13468:
 19925                           
 19926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 19927  001DAC  0E75               	movlw	low _dbuf
 19928  001DAE  2442               	addwf	xtoa@i^0,w,c
 19929  001DB0  6ED9               	movwf	fsr2l,c
 19930  001DB2  0E01               	movlw	high _dbuf
 19931  001DB4  2043               	addwfc	(xtoa@i+1)^0,w,c
 19932  001DB6  6EDA               	movwf	fsr2h,c
 19933  001DB8  0060  F113  FFDF   	movff	xtoa@c,indf2
 19934                           
 19935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 19936  001DBE  0636               	decf	xtoa@p^0,f,c
 19937  001DC0  A0D8               	btfss	status,0,c
 19938  001DC2  0637               	decf	(xtoa@p+1)^0,f,c
 19939                           
 19940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 19941  001DC4  0638               	decf	xtoa@w^0,f,c
 19942  001DC6  A0D8               	btfss	status,0,c
 19943  001DC8  0639               	decf	(xtoa@w+1)^0,f,c
 19944                           
 19945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 19946  001DCA  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 19947  001DD0  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 19948  001DD6  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 19949  001DDC  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 19950  001DE2  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 19951  001DE8  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 19952  001DEE  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 19953  001DF4  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 19954  001DFA  0E05               	movlw	5
 19955  001DFC  D009               	goto	u12340
 19956  001DFE                     u12345:
 19957  001DFE  90D8               	bcf	status,0,c
 19958  001E00  3231               	rrcf	(??_xtoa+7)^0,f,c
 19959  001E02  3230               	rrcf	(??_xtoa+6)^0,f,c
 19960  001E04  322F               	rrcf	(??_xtoa+5)^0,f,c
 19961  001E06  322E               	rrcf	(??_xtoa+4)^0,f,c
 19962  001E08  322D               	rrcf	(??_xtoa+3)^0,f,c
 19963  001E0A  322C               	rrcf	(??_xtoa+2)^0,f,c
 19964  001E0C  322B               	rrcf	(??_xtoa+1)^0,f,c
 19965  001E0E  322A               	rrcf	??_xtoa^0,f,c
 19966  001E10                     u12340:
 19967  001E10  2EE8               	decfsz	wreg,f,c
 19968  001E12  D7F5               	goto	u12345
 19969  001E14  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 19970  001E1A  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 19971  001E20  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 19972  001E26  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 19973  001E2C  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 19974  001E32  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 19975  001E38  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 19976  001E3E  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 19977  001E44                     l13476:
 19978                           
 19979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19980  001E44  BE43               	btfsc	(xtoa@i+1)^0,7,c
 19981  001E46  D021               	goto	u12390
 19982  001E48  5043               	movf	(xtoa@i+1)^0,w,c
 19983  001E4A  E104               	bnz	u12350
 19984  001E4C  0E02               	movlw	2
 19985  001E4E  5C42               	subwf	xtoa@i^0,w,c
 19986  001E50  A0D8               	btfss	status,0,c
 19987  001E52  D01B               	goto	u12390
 19988  001E54                     u12350:
 19989  001E54  503A               	movf	xtoa@n^0,w,c
 19990  001E56  103B               	iorwf	(xtoa@n+1)^0,w,c
 19991  001E58  103C               	iorwf	(xtoa@n+2)^0,w,c
 19992  001E5A  103D               	iorwf	(xtoa@n+3)^0,w,c
 19993  001E5C  103E               	iorwf	(xtoa@n+4)^0,w,c
 19994  001E5E  103F               	iorwf	(xtoa@n+5)^0,w,c
 19995  001E60  1040               	iorwf	(xtoa@n+6)^0,w,c
 19996  001E62  1041               	iorwf	(xtoa@n+7)^0,w,c
 19997  001E64  A4D8               	btfss	status,2,c
 19998  001E66  D746               	goto	l13446
 19999  001E68  BE37               	btfsc	(xtoa@p+1)^0,7,c
 20000  001E6A  D005               	goto	u12370
 20001  001E6C  5037               	movf	(xtoa@p+1)^0,w,c
 20002  001E6E  E102               	bnz	u12371
 20003  001E70  0436               	decf	xtoa@p^0,w,c
 20004  001E72  B0D8               	btfsc	status,0,c
 20005  001E74                     u12371:
 20006  001E74  D73F               	goto	l13446
 20007  001E76                     u12370:
 20008  001E76  BE39               	btfsc	(xtoa@w+1)^0,7,c
 20009  001E78  D008               	goto	u12390
 20010  001E7A  5039               	movf	(xtoa@w+1)^0,w,c
 20011  001E7C  E103               	bnz	u12380
 20012  001E7E  0438               	decf	xtoa@w^0,w,c
 20013  001E80  A0D8               	btfss	status,0,c
 20014  001E82  D003               	goto	u12390
 20015  001E84                     u12380:
 20016  001E84  0100               	movlb	0	; () banked
 20017  001E86  B3DE               	btfsc	_flags& (0+255),1,b
 20018  001E88  D735               	goto	l13446
 20019  001E8A                     u12390:
 20020                           
 20021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 20022  001E8A  0100               	movlb	0	; () banked
 20023  001E8C  A9DE               	btfss	_flags& (0+255),4,b
 20024  001E8E  D017               	goto	l13492
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 20028  001E90  0642               	decf	xtoa@i^0,f,c
 20029  001E92  A0D8               	btfss	status,0,c
 20030  001E94  0643               	decf	(xtoa@i+1)^0,f,c
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 20034  001E96  0E75               	movlw	low _dbuf
 20035  001E98  2442               	addwf	xtoa@i^0,w,c
 20036  001E9A  6ED9               	movwf	fsr2l,c
 20037  001E9C  0E01               	movlw	high _dbuf
 20038  001E9E  2043               	addwfc	(xtoa@i+1)^0,w,c
 20039  001EA0  6EDA               	movwf	fsr2h,c
 20040  001EA2  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 20044  001EA8  0642               	decf	xtoa@i^0,f,c
 20045  001EAA  A0D8               	btfss	status,0,c
 20046  001EAC  0643               	decf	(xtoa@i+1)^0,f,c
 20047                           
 20048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 20049  001EAE  0E75               	movlw	low _dbuf
 20050  001EB0  2442               	addwf	xtoa@i^0,w,c
 20051  001EB2  6ED9               	movwf	fsr2l,c
 20052  001EB4  0E01               	movlw	high _dbuf
 20053  001EB6  2043               	addwfc	(xtoa@i+1)^0,w,c
 20054  001EB8  6EDA               	movwf	fsr2h,c
 20055  001EBA  0E30               	movlw	48
 20056  001EBC  6EDF               	movwf	indf2,c
 20057  001EBE                     l13492:
 20058                           
 20059                           ; BSR set to: 0
 20060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 20061  001EBE  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 20062  001EC4  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 20063  001ECA  0E75               	movlw	low _dbuf
 20064  001ECC  2442               	addwf	xtoa@i^0,w,c
 20065  001ECE  6E16               	movwf	pad@buf^0,c
 20066  001ED0  0E01               	movlw	high _dbuf
 20067  001ED2  2043               	addwfc	(xtoa@i+1)^0,w,c
 20068  001ED4  6E17               	movwf	(pad@buf+1)^0,c
 20069  001ED6  0060  F0E0  F018   	movff	xtoa@w,pad@p
 20070  001EDC  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 20071  001EE2  ECC7  F02E         	call	_pad	;wreg free
 20072  001EE6  0060  F050  F01F   	movff	?_pad,?_xtoa
 20073  001EEC  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 20074  001EF2  0012               	return		;funcret
 20075  001EF4                     __end_of_xtoa:
 20076                           	opt callstack 0
 20077                           
 20078 ;; *************** function _toupper *****************
 20079 ;; Defined at:
 20080 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 20081 ;; Parameters:    Size  Location     Type
 20082 ;;  c               2    7[COMRAM] int 
 20083 ;; Auto vars:     Size  Location     Type
 20084 ;;		None
 20085 ;; Return value:  Size  Location     Type
 20086 ;;                  2    7[COMRAM] int 
 20087 ;; Registers used:
 20088 ;;		wreg, status,2, status,0
 20089 ;; Tracked objects:
 20090 ;;		On entry : 0/0
 20091 ;;		On exit  : 0/0
 20092 ;;		Unchanged: 0/0
 20093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20097 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20098 ;;Total ram usage:        8 bytes
 20099 ;; Hardware stack levels used:    1
 20100 ;; Hardware stack levels required when called:    8
 20101 ;; This function calls:
 20102 ;;		_islower
 20103 ;; This function is called by:
 20104 ;;		_xtoa
 20105 ;;		___strtoxl
 20106 ;; This function uses a non-reentrant model
 20107 ;;
 20108                           
 20109                           	psect	text122
 20110  0073A4                     __ptext122:
 20111                           	opt callstack 0
 20112  0073A4                     _toupper:
 20113                           	opt callstack 15
 20114                           
 20115                           ;incstack = 0
 20116  0073A4  0E9F               	movlw	159
 20117  0073A6  6E0A               	movwf	??_toupper^0,c
 20118  0073A8  0EFF               	movlw	255
 20119  0073AA  6E0B               	movwf	(??_toupper+1)^0,c
 20120  0073AC  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 20121  0073B2  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 20122  0073B8  500A               	movf	??_toupper^0,w,c
 20123  0073BA  260C               	addwf	(??_toupper+2)^0,f,c
 20124  0073BC  500B               	movf	(??_toupper+1)^0,w,c
 20125  0073BE  220D               	addwfc	(??_toupper+3)^0,f,c
 20126  0073C0  500D               	movf	(??_toupper+3)^0,w,c
 20127  0073C2  E106               	bnz	u11660
 20128  0073C4  0E1A               	movlw	26
 20129  0073C6  5C0C               	subwf	(??_toupper+2)^0,w,c
 20130  0073C8  B0D8               	btfsc	status,0,c
 20131  0073CA  D002               	goto	u11660
 20132  0073CC  0E01               	movlw	1
 20133  0073CE  D001               	goto	u11670
 20134  0073D0                     u11660:
 20135  0073D0  0E00               	movlw	0
 20136  0073D2                     u11670:
 20137  0073D2  6E0E               	movwf	_toupper$7870^0,c
 20138  0073D4  6A0F               	clrf	(_toupper$7870+1)^0,c
 20139  0073D6  500E               	movf	_toupper$7870^0,w,c
 20140  0073D8  100F               	iorwf	(_toupper$7870+1)^0,w,c
 20141  0073DA  B4D8               	btfsc	status,2,c
 20142  0073DC  D005               	goto	l4039
 20143  0073DE  0E5F               	movlw	95
 20144  0073E0  1408               	andwf	toupper@c^0,w,c
 20145  0073E2  6E08               	movwf	?_toupper^0,c
 20146  0073E4  6A09               	clrf	(?_toupper+1)^0,c
 20147  0073E6  0012               	return	
 20148  0073E8                     l4039:
 20149  0073E8  0060  F020  F008   	movff	toupper@c,?_toupper
 20150  0073EE  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 20151  0073F4  0012               	return		;funcret
 20152  0073F6                     __end_of_toupper:
 20153                           	opt callstack 0
 20154                           
 20155 ;; *************** function _islower *****************
 20156 ;; Defined at:
 20157 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;  c               2    1[COMRAM] int 
 20160 ;; Auto vars:     Size  Location     Type
 20161 ;;		None
 20162 ;; Return value:  Size  Location     Type
 20163 ;;                  2    1[COMRAM] int 
 20164 ;; Registers used:
 20165 ;;		wreg, status,2, status,0
 20166 ;; Tracked objects:
 20167 ;;		On entry : 0/0
 20168 ;;		On exit  : 0/0
 20169 ;;		Unchanged: 0/0
 20170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20174 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20175 ;;Total ram usage:        6 bytes
 20176 ;; Hardware stack levels used:    1
 20177 ;; Hardware stack levels required when called:    7
 20178 ;; This function calls:
 20179 ;;		Nothing
 20180 ;; This function is called by:
 20181 ;;		_toupper
 20182 ;; This function uses a non-reentrant model
 20183 ;;
 20184                           
 20185                           	psect	text123
 20186  007D42                     __ptext123:
 20187                           	opt callstack 0
 20188  007D42                     _islower:
 20189                           	opt callstack 15
 20190                           
 20191                           ;incstack = 0
 20192  007D42  0E9F               	movlw	159
 20193  007D44  6E04               	movwf	??_islower^0,c
 20194  007D46  0EFF               	movlw	255
 20195  007D48  6E05               	movwf	(??_islower+1)^0,c
 20196  007D4A  0060  F008  F006   	movff	islower@c,??_islower+2
 20197  007D50  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 20198  007D56  5004               	movf	??_islower^0,w,c
 20199  007D58  2606               	addwf	(??_islower+2)^0,f,c
 20200  007D5A  5005               	movf	(??_islower+1)^0,w,c
 20201  007D5C  2207               	addwfc	(??_islower+3)^0,f,c
 20202  007D5E  5007               	movf	(??_islower+3)^0,w,c
 20203  007D60  E106               	bnz	u11550
 20204  007D62  0E1A               	movlw	26
 20205  007D64  5C06               	subwf	(??_islower+2)^0,w,c
 20206  007D66  B0D8               	btfsc	status,0,c
 20207  007D68  D002               	goto	u11550
 20208  007D6A  0E01               	movlw	1
 20209  007D6C  D001               	goto	u11560
 20210  007D6E                     u11550:
 20211  007D6E  0E00               	movlw	0
 20212  007D70                     u11560:
 20213  007D70  6E02               	movwf	?_islower^0,c
 20214  007D72  6A03               	clrf	(?_islower+1)^0,c
 20215  007D74  0012               	return		;funcret
 20216  007D76                     __end_of_islower:
 20217                           	opt callstack 0
 20218                           
 20219 ;; *************** function _isupper *****************
 20220 ;; Defined at:
 20221 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 20222 ;; Parameters:    Size  Location     Type
 20223 ;;  c               2    1[COMRAM] int 
 20224 ;; Auto vars:     Size  Location     Type
 20225 ;;		None
 20226 ;; Return value:  Size  Location     Type
 20227 ;;                  2    1[COMRAM] int 
 20228 ;; Registers used:
 20229 ;;		wreg, status,2, status,0
 20230 ;; Tracked objects:
 20231 ;;		On entry : 0/0
 20232 ;;		On exit  : 0/0
 20233 ;;		Unchanged: 0/0
 20234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20239 ;;Total ram usage:        6 bytes
 20240 ;; Hardware stack levels used:    1
 20241 ;; Hardware stack levels required when called:    7
 20242 ;; This function calls:
 20243 ;;		Nothing
 20244 ;; This function is called by:
 20245 ;;		_xtoa
 20246 ;; This function uses a non-reentrant model
 20247 ;;
 20248                           
 20249                           	psect	text124
 20250  007D76                     __ptext124:
 20251                           	opt callstack 0
 20252  007D76                     _isupper:
 20253                           	opt callstack 16
 20254                           
 20255                           ;incstack = 0
 20256  007D76  0EBF               	movlw	191
 20257  007D78  6E04               	movwf	??_isupper^0,c
 20258  007D7A  0EFF               	movlw	255
 20259  007D7C  6E05               	movwf	(??_isupper+1)^0,c
 20260  007D7E  0060  F008  F006   	movff	isupper@c,??_isupper+2
 20261  007D84  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 20262  007D8A  5004               	movf	??_isupper^0,w,c
 20263  007D8C  2606               	addwf	(??_isupper+2)^0,f,c
 20264  007D8E  5005               	movf	(??_isupper+1)^0,w,c
 20265  007D90  2207               	addwfc	(??_isupper+3)^0,f,c
 20266  007D92  5007               	movf	(??_isupper+3)^0,w,c
 20267  007D94  E106               	bnz	u11620
 20268  007D96  0E1A               	movlw	26
 20269  007D98  5C06               	subwf	(??_isupper+2)^0,w,c
 20270  007D9A  B0D8               	btfsc	status,0,c
 20271  007D9C  D002               	goto	u11620
 20272  007D9E  0E01               	movlw	1
 20273  007DA0  D001               	goto	u11630
 20274  007DA2                     u11620:
 20275  007DA2  0E00               	movlw	0
 20276  007DA4                     u11630:
 20277  007DA4  6E02               	movwf	?_isupper^0,c
 20278  007DA6  6A03               	clrf	(?_isupper+1)^0,c
 20279  007DA8  0012               	return		;funcret
 20280  007DAA                     __end_of_isupper:
 20281                           	opt callstack 0
 20282                           
 20283 ;; *************** function _isalpha *****************
 20284 ;; Defined at:
 20285 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 20286 ;; Parameters:    Size  Location     Type
 20287 ;;  c               2    1[COMRAM] int 
 20288 ;; Auto vars:     Size  Location     Type
 20289 ;;		None
 20290 ;; Return value:  Size  Location     Type
 20291 ;;                  2    1[COMRAM] int 
 20292 ;; Registers used:
 20293 ;;		wreg, status,2, status,0
 20294 ;; Tracked objects:
 20295 ;;		On entry : 0/0
 20296 ;;		On exit  : 0/0
 20297 ;;		Unchanged: 0/0
 20298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20301 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;Total ram usage:        6 bytes
 20304 ;; Hardware stack levels used:    1
 20305 ;; Hardware stack levels required when called:    7
 20306 ;; This function calls:
 20307 ;;		Nothing
 20308 ;; This function is called by:
 20309 ;;		_xtoa
 20310 ;;		___strtoxl
 20311 ;; This function uses a non-reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text125
 20315  007DAA                     __ptext125:
 20316                           	opt callstack 0
 20317  007DAA                     _isalpha:
 20318                           	opt callstack 16
 20319                           
 20320                           ;incstack = 0
 20321  007DAA  0E9F               	movlw	159
 20322  007DAC  6E04               	movwf	??_isalpha^0,c
 20323  007DAE  0EFF               	movlw	255
 20324  007DB0  6E05               	movwf	(??_isalpha+1)^0,c
 20325  007DB2  0E20               	movlw	32
 20326  007DB4  1002               	iorwf	isalpha@c^0,w,c
 20327  007DB6  6E06               	movwf	(??_isalpha+2)^0,c
 20328  007DB8  0E00               	movlw	0
 20329  007DBA  1003               	iorwf	(isalpha@c+1)^0,w,c
 20330  007DBC  6E07               	movwf	(??_isalpha+3)^0,c
 20331  007DBE  5004               	movf	??_isalpha^0,w,c
 20332  007DC0  2606               	addwf	(??_isalpha+2)^0,f,c
 20333  007DC2  5005               	movf	(??_isalpha+1)^0,w,c
 20334  007DC4  2207               	addwfc	(??_isalpha+3)^0,f,c
 20335  007DC6  5007               	movf	(??_isalpha+3)^0,w,c
 20336  007DC8  E106               	bnz	u11640
 20337  007DCA  0E1A               	movlw	26
 20338  007DCC  5C06               	subwf	(??_isalpha+2)^0,w,c
 20339  007DCE  B0D8               	btfsc	status,0,c
 20340  007DD0  D002               	goto	u11640
 20341  007DD2  0E01               	movlw	1
 20342  007DD4  D001               	goto	u11650
 20343  007DD6                     u11640:
 20344  007DD6  0E00               	movlw	0
 20345  007DD8                     u11650:
 20346  007DD8  6E02               	movwf	?_isalpha^0,c
 20347  007DDA  6A03               	clrf	(?_isalpha+1)^0,c
 20348  007DDC  0012               	return		;funcret
 20349  007DDE                     __end_of_isalpha:
 20350                           	opt callstack 0
 20351                           
 20352 ;; *************** function _utoa *****************
 20353 ;; Defined at:
 20354 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20355 ;; Parameters:    Size  Location     Type
 20356 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 20357 ;;		 -> NULL(0), 
 20358 ;;  d               8   32[COMRAM] unsigned long long 
 20359 ;; Auto vars:     Size  Location     Type
 20360 ;;  n               8   52[COMRAM] unsigned long long 
 20361 ;;  i               2   60[COMRAM] int 
 20362 ;;  w               2   50[COMRAM] int 
 20363 ;;  p               2   48[COMRAM] int 
 20364 ;; Return value:  Size  Location     Type
 20365 ;;                  2   30[COMRAM] int 
 20366 ;; Registers used:
 20367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20368 ;; Tracked objects:
 20369 ;;		On entry : 3F/0
 20370 ;;		On exit  : 0/0
 20371 ;;		Unchanged: 0/0
 20372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20373 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20374 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20375 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20376 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20377 ;;Total ram usage:       32 bytes
 20378 ;; Hardware stack levels used:    1
 20379 ;; Hardware stack levels required when called:   12
 20380 ;; This function calls:
 20381 ;;		___lodiv
 20382 ;;		___lomod
 20383 ;;		_pad
 20384 ;; This function is called by:
 20385 ;;		_vfpfcnvrt
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389                           	psect	text126
 20390  002602                     __ptext126:
 20391                           	opt callstack 0
 20392  002602                     _utoa:
 20393                           	opt callstack 12
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 20397                           
 20398                           ;incstack = 0
 20399  002602  AFDD               	btfss	(_prec+1)& (0+255),7,b
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 20403  002604  93DE               	bcf	_flags& (0+255),1,b
 20404                           
 20405                           ; BSR set to: 0
 20406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 20407  002606  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 20408  002608  D005               	goto	u12180
 20409  00260A  51DD               	movf	(_prec+1)& (0+255),w,b
 20410  00260C  E108               	bnz	l3119
 20411  00260E  05DC               	decf	_prec& (0+255),w,b
 20412  002610  B0D8               	btfsc	status,0,c
 20413  002612  D005               	goto	l3119
 20414  002614                     u12180:
 20415                           
 20416                           ; BSR set to: 0
 20417  002614  0E00               	movlw	0
 20418  002616  6E32               	movwf	(utoa@p+1)^0,c
 20419  002618  0E01               	movlw	1
 20420  00261A  6E31               	movwf	utoa@p^0,c
 20421  00261C  D006               	goto	l3121
 20422  00261E                     l3119:
 20423                           
 20424                           ; BSR set to: 0
 20425  00261E  0060  F370  F031   	movff	_prec,utoa@p
 20426  002624  0060  F374  F032   	movff	_prec+1,utoa@p+1
 20427  00262A                     l3121:
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 20431  00262A  0060  F368  F033   	movff	_width,utoa@w
 20432  002630  0060  F36C  F034   	movff	_width+1,utoa@w+1
 20433                           
 20434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 20435  002636  0060  F084  F035   	movff	utoa@d,utoa@n
 20436  00263C  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 20437  002642  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 20438  002648  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 20439  00264E  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 20440  002654  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 20441  00265A  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 20442  002660  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 20446  002666  0E00               	movlw	0
 20447  002668  6E3E               	movwf	(utoa@i+1)^0,c
 20448  00266A  0E1F               	movlw	31
 20449  00266C  6E3D               	movwf	utoa@i^0,c
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 20453  00266E  0E00               	movlw	0
 20454  002670  0101               	movlb	1	; () banked
 20455  002672  6F94               	movwf	(_dbuf+31)& (0+255),b
 20456                           
 20457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20458  002674  D096               	goto	l13416
 20459  002676                     l13406:
 20460                           
 20461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 20462  002676  063D               	decf	utoa@i^0,f,c
 20463  002678  A0D8               	btfss	status,0,c
 20464  00267A  063E               	decf	(utoa@i+1)^0,f,c
 20465                           
 20466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 20467  00267C  0E75               	movlw	low _dbuf
 20468  00267E  243D               	addwf	utoa@i^0,w,c
 20469  002680  6ED9               	movwf	fsr2l,c
 20470  002682  0E01               	movlw	high _dbuf
 20471  002684  203E               	addwfc	(utoa@i+1)^0,w,c
 20472  002686  6EDA               	movwf	fsr2h,c
 20473  002688  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 20474  00268E  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 20475  002694  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 20476  00269A  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 20477  0026A0  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 20478  0026A6  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 20479  0026AC  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 20480  0026B2  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 20481  0026B8  0E0A               	movlw	10
 20482  0026BA  6E0A               	movwf	___lomod@divisor^0,c
 20483  0026BC  0E00               	movlw	0
 20484  0026BE  6E0B               	movwf	(___lomod@divisor+1)^0,c
 20485  0026C0  0E00               	movlw	0
 20486  0026C2  6E0C               	movwf	(___lomod@divisor+2)^0,c
 20487  0026C4  0E00               	movlw	0
 20488  0026C6  6E0D               	movwf	(___lomod@divisor+3)^0,c
 20489  0026C8  0E00               	movlw	0
 20490  0026CA  6E0E               	movwf	(___lomod@divisor+4)^0,c
 20491  0026CC  0E00               	movlw	0
 20492  0026CE  6E0F               	movwf	(___lomod@divisor+5)^0,c
 20493  0026D0  0E00               	movlw	0
 20494  0026D2  6E10               	movwf	(___lomod@divisor+6)^0,c
 20495  0026D4  0E00               	movlw	0
 20496  0026D6  6E11               	movwf	(___lomod@divisor+7)^0,c
 20497  0026D8  EC68  F02E         	call	___lomod	;wreg free
 20498  0026DC  0060  F008  F029   	movff	?___lomod,??_utoa
 20499  0026E2  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 20500  0026E8  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 20501  0026EE  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 20502  0026F4  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 20503  0026FA  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 20504  002700  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 20505  002706  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 20506  00270C  5029               	movf	??_utoa^0,w,c
 20507  00270E  0F30               	addlw	48
 20508  002710  6EDF               	movwf	indf2,c
 20509                           
 20510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 20511  002712  0631               	decf	utoa@p^0,f,c
 20512  002714  A0D8               	btfss	status,0,c
 20513  002716  0632               	decf	(utoa@p+1)^0,f,c
 20514                           
 20515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 20516  002718  0633               	decf	utoa@w^0,f,c
 20517  00271A  A0D8               	btfss	status,0,c
 20518  00271C  0634               	decf	(utoa@w+1)^0,f,c
 20519                           
 20520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 20521  00271E  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 20522  002724  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 20523  00272A  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 20524  002730  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 20525  002736  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 20526  00273C  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 20527  002742  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 20528  002748  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 20529  00274E  0E0A               	movlw	10
 20530  002750  6E0A               	movwf	___lodiv@divisor^0,c
 20531  002752  0E00               	movlw	0
 20532  002754  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 20533  002756  0E00               	movlw	0
 20534  002758  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 20535  00275A  0E00               	movlw	0
 20536  00275C  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 20537  00275E  0E00               	movlw	0
 20538  002760  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 20539  002762  0E00               	movlw	0
 20540  002764  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 20541  002766  0E00               	movlw	0
 20542  002768  6E10               	movwf	(___lodiv@divisor+6)^0,c
 20543  00276A  0E00               	movlw	0
 20544  00276C  6E11               	movwf	(___lodiv@divisor+7)^0,c
 20545  00276E  EC88  F029         	call	___lodiv	;wreg free
 20546  002772  0060  F008  F035   	movff	?___lodiv,utoa@n
 20547  002778  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 20548  00277E  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 20549  002784  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 20550  00278A  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 20551  002790  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 20552  002796  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 20553  00279C  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 20554  0027A2                     l13416:
 20555                           
 20556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20557  0027A2  503D               	movf	utoa@i^0,w,c
 20558  0027A4  103E               	iorwf	(utoa@i+1)^0,w,c
 20559  0027A6  B4D8               	btfsc	status,2,c
 20560  0027A8  D01B               	goto	u12230
 20561  0027AA  5035               	movf	utoa@n^0,w,c
 20562  0027AC  1036               	iorwf	(utoa@n+1)^0,w,c
 20563  0027AE  1037               	iorwf	(utoa@n+2)^0,w,c
 20564  0027B0  1038               	iorwf	(utoa@n+3)^0,w,c
 20565  0027B2  1039               	iorwf	(utoa@n+4)^0,w,c
 20566  0027B4  103A               	iorwf	(utoa@n+5)^0,w,c
 20567  0027B6  103B               	iorwf	(utoa@n+6)^0,w,c
 20568  0027B8  103C               	iorwf	(utoa@n+7)^0,w,c
 20569  0027BA  A4D8               	btfss	status,2,c
 20570  0027BC  D75C               	goto	l13406
 20571  0027BE  BE32               	btfsc	(utoa@p+1)^0,7,c
 20572  0027C0  D005               	goto	u12210
 20573  0027C2  5032               	movf	(utoa@p+1)^0,w,c
 20574  0027C4  E102               	bnz	u12211
 20575  0027C6  0431               	decf	utoa@p^0,w,c
 20576  0027C8  B0D8               	btfsc	status,0,c
 20577  0027CA                     u12211:
 20578  0027CA  D755               	goto	l13406
 20579  0027CC                     u12210:
 20580  0027CC  BE34               	btfsc	(utoa@w+1)^0,7,c
 20581  0027CE  D008               	goto	u12230
 20582  0027D0  5034               	movf	(utoa@w+1)^0,w,c
 20583  0027D2  E103               	bnz	u12220
 20584  0027D4  0433               	decf	utoa@w^0,w,c
 20585  0027D6  A0D8               	btfss	status,0,c
 20586  0027D8  D003               	goto	u12230
 20587  0027DA                     u12220:
 20588  0027DA  0100               	movlb	0	; () banked
 20589  0027DC  B3DE               	btfsc	_flags& (0+255),1,b
 20590  0027DE  D74B               	goto	l13406
 20591  0027E0                     u12230:
 20592                           
 20593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 20594  0027E0  0060  F07C  F014   	movff	utoa@fp,pad@fp
 20595  0027E6  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 20596  0027EC  0E75               	movlw	low _dbuf
 20597  0027EE  243D               	addwf	utoa@i^0,w,c
 20598  0027F0  6E16               	movwf	pad@buf^0,c
 20599  0027F2  0E01               	movlw	high _dbuf
 20600  0027F4  203E               	addwfc	(utoa@i+1)^0,w,c
 20601  0027F6  6E17               	movwf	(pad@buf+1)^0,c
 20602  0027F8  0060  F0CC  F018   	movff	utoa@w,pad@p
 20603  0027FE  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 20604  002804  ECC7  F02E         	call	_pad	;wreg free
 20605  002808  0060  F050  F01F   	movff	?_pad,?_utoa
 20606  00280E  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 20607  002814  0012               	return		;funcret
 20608  002816                     __end_of_utoa:
 20609                           	opt callstack 0
 20610                           
 20611 ;; *************** function ___lomod *****************
 20612 ;; Defined at:
 20613 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 20614 ;; Parameters:    Size  Location     Type
 20615 ;;  dividend        8    1[COMRAM] unsigned long long 
 20616 ;;  divisor         8    9[COMRAM] unsigned long long 
 20617 ;; Auto vars:     Size  Location     Type
 20618 ;;  counter         1   17[COMRAM] unsigned char 
 20619 ;; Return value:  Size  Location     Type
 20620 ;;                  8    1[COMRAM] unsigned long long 
 20621 ;; Registers used:
 20622 ;;		wreg, status,2, status,0
 20623 ;; Tracked objects:
 20624 ;;		On entry : 0/1
 20625 ;;		On exit  : 0/0
 20626 ;;		Unchanged: 0/0
 20627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20628 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20631 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20632 ;;Total ram usage:       17 bytes
 20633 ;; Hardware stack levels used:    1
 20634 ;; Hardware stack levels required when called:    7
 20635 ;; This function calls:
 20636 ;;		Nothing
 20637 ;; This function is called by:
 20638 ;;		_utoa
 20639 ;; This function uses a non-reentrant model
 20640 ;;
 20641                           
 20642                           	psect	text127
 20643  005CD0                     __ptext127:
 20644                           	opt callstack 0
 20645  005CD0                     ___lomod:
 20646                           	opt callstack 16
 20647                           
 20648                           ;incstack = 0
 20649  005CD0  500A               	movf	___lomod@divisor^0,w,c
 20650  005CD2  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 20651  005CD4  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 20652  005CD6  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 20653  005CD8  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 20654  005CDA  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 20655  005CDC  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 20656  005CDE  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 20657  005CE0  B4D8               	btfsc	status,2,c
 20658  005CE2  D03C               	goto	l3651
 20659  005CE4  0E01               	movlw	1
 20660  005CE6  6E12               	movwf	___lomod@counter^0,c
 20661  005CE8  D00A               	goto	l13268
 20662  005CEA                     l13266:
 20663  005CEA  90D8               	bcf	status,0,c
 20664  005CEC  360A               	rlcf	___lomod@divisor^0,f,c
 20665  005CEE  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 20666  005CF0  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 20667  005CF2  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 20668  005CF4  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 20669  005CF6  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 20670  005CF8  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 20671  005CFA  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 20672  005CFC  2A12               	incf	___lomod@counter^0,f,c
 20673  005CFE                     l13268:
 20674  005CFE  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 20675  005D00  D7F4               	goto	l13266
 20676  005D02                     u11890:
 20677  005D02  500A               	movf	___lomod@divisor^0,w,c
 20678  005D04  5C02               	subwf	___lomod@dividend^0,w,c
 20679  005D06  500B               	movf	(___lomod@divisor+1)^0,w,c
 20680  005D08  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 20681  005D0A  500C               	movf	(___lomod@divisor+2)^0,w,c
 20682  005D0C  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 20683  005D0E  500D               	movf	(___lomod@divisor+3)^0,w,c
 20684  005D10  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 20685  005D12  500E               	movf	(___lomod@divisor+4)^0,w,c
 20686  005D14  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 20687  005D16  500F               	movf	(___lomod@divisor+5)^0,w,c
 20688  005D18  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 20689  005D1A  5010               	movf	(___lomod@divisor+6)^0,w,c
 20690  005D1C  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 20691  005D1E  5011               	movf	(___lomod@divisor+7)^0,w,c
 20692  005D20  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 20693  005D22  A0D8               	btfss	status,0,c
 20694  005D24  D010               	goto	l13274
 20695  005D26  500A               	movf	___lomod@divisor^0,w,c
 20696  005D28  5E02               	subwf	___lomod@dividend^0,f,c
 20697  005D2A  500B               	movf	(___lomod@divisor+1)^0,w,c
 20698  005D2C  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 20699  005D2E  500C               	movf	(___lomod@divisor+2)^0,w,c
 20700  005D30  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 20701  005D32  500D               	movf	(___lomod@divisor+3)^0,w,c
 20702  005D34  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 20703  005D36  500E               	movf	(___lomod@divisor+4)^0,w,c
 20704  005D38  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 20705  005D3A  500F               	movf	(___lomod@divisor+5)^0,w,c
 20706  005D3C  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 20707  005D3E  5010               	movf	(___lomod@divisor+6)^0,w,c
 20708  005D40  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 20709  005D42  5011               	movf	(___lomod@divisor+7)^0,w,c
 20710  005D44  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 20711  005D46                     l13274:
 20712  005D46  90D8               	bcf	status,0,c
 20713  005D48  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 20714  005D4A  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 20715  005D4C  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 20716  005D4E  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 20717  005D50  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 20718  005D52  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 20719  005D54  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 20720  005D56  320A               	rrcf	___lomod@divisor^0,f,c
 20721  005D58  2E12               	decfsz	___lomod@counter^0,f,c
 20722  005D5A  D7D3               	goto	u11890
 20723  005D5C                     l3651:
 20724  005D5C  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 20725  005D62  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 20726  005D68  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 20727  005D6E  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 20728  005D74  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 20729  005D7A  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 20730  005D80  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 20731  005D86  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 20732  005D8C  0012               	return		;funcret
 20733  005D8E                     __end_of___lomod:
 20734                           	opt callstack 0
 20735                           
 20736 ;; *************** function ___lodiv *****************
 20737 ;; Defined at:
 20738 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 20739 ;; Parameters:    Size  Location     Type
 20740 ;;  dividend        8    1[COMRAM] unsigned long long 
 20741 ;;  divisor         8    9[COMRAM] unsigned long long 
 20742 ;; Auto vars:     Size  Location     Type
 20743 ;;  quotient        8   17[COMRAM] unsigned long long 
 20744 ;;  counter         1   25[COMRAM] unsigned char 
 20745 ;; Return value:  Size  Location     Type
 20746 ;;                  8    1[COMRAM] unsigned long long 
 20747 ;; Registers used:
 20748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20749 ;; Tracked objects:
 20750 ;;		On entry : 0/1
 20751 ;;		On exit  : 0/0
 20752 ;;		Unchanged: 0/0
 20753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20754 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20755 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20757 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20758 ;;Total ram usage:       25 bytes
 20759 ;; Hardware stack levels used:    1
 20760 ;; Hardware stack levels required when called:    7
 20761 ;; This function calls:
 20762 ;;		Nothing
 20763 ;; This function is called by:
 20764 ;;		_utoa
 20765 ;; This function uses a non-reentrant model
 20766 ;;
 20767                           
 20768                           	psect	text128
 20769  005310                     __ptext128:
 20770                           	opt callstack 0
 20771  005310                     ___lodiv:
 20772                           	opt callstack 16
 20773                           
 20774                           ;incstack = 0
 20775  005310  EE20  F012         	lfsr	2,___lodiv@quotient
 20776  005314  0E07               	movlw	7
 20777  005316                     u11841:
 20778  005316  6ADE               	clrf	postinc2,c
 20779  005318  06E8               	decf	wreg,f,c
 20780  00531A  E2FD               	bc	u11841
 20781  00531C  500A               	movf	___lodiv@divisor^0,w,c
 20782  00531E  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 20783  005320  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 20784  005322  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 20785  005324  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 20786  005326  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 20787  005328  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 20788  00532A  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 20789  00532C  B4D8               	btfsc	status,2,c
 20790  00532E  D046               	goto	l3641
 20791  005330  0E01               	movlw	1
 20792  005332  6E1A               	movwf	___lodiv@counter^0,c
 20793  005334  D00A               	goto	l13248
 20794  005336                     l13246:
 20795  005336  90D8               	bcf	status,0,c
 20796  005338  360A               	rlcf	___lodiv@divisor^0,f,c
 20797  00533A  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 20798  00533C  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 20799  00533E  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 20800  005340  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 20801  005342  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 20802  005344  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 20803  005346  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 20804  005348  2A1A               	incf	___lodiv@counter^0,f,c
 20805  00534A                     l13248:
 20806  00534A  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 20807  00534C  D7F4               	goto	l13246
 20808  00534E                     u11860:
 20809  00534E  90D8               	bcf	status,0,c
 20810  005350  3612               	rlcf	___lodiv@quotient^0,f,c
 20811  005352  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 20812  005354  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 20813  005356  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 20814  005358  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 20815  00535A  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 20816  00535C  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 20817  00535E  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 20818  005360  500A               	movf	___lodiv@divisor^0,w,c
 20819  005362  5C02               	subwf	___lodiv@dividend^0,w,c
 20820  005364  500B               	movf	(___lodiv@divisor+1)^0,w,c
 20821  005366  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 20822  005368  500C               	movf	(___lodiv@divisor+2)^0,w,c
 20823  00536A  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 20824  00536C  500D               	movf	(___lodiv@divisor+3)^0,w,c
 20825  00536E  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 20826  005370  500E               	movf	(___lodiv@divisor+4)^0,w,c
 20827  005372  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 20828  005374  500F               	movf	(___lodiv@divisor+5)^0,w,c
 20829  005376  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 20830  005378  5010               	movf	(___lodiv@divisor+6)^0,w,c
 20831  00537A  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 20832  00537C  5011               	movf	(___lodiv@divisor+7)^0,w,c
 20833  00537E  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 20834  005380  A0D8               	btfss	status,0,c
 20835  005382  D011               	goto	l13258
 20836  005384  500A               	movf	___lodiv@divisor^0,w,c
 20837  005386  5E02               	subwf	___lodiv@dividend^0,f,c
 20838  005388  500B               	movf	(___lodiv@divisor+1)^0,w,c
 20839  00538A  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 20840  00538C  500C               	movf	(___lodiv@divisor+2)^0,w,c
 20841  00538E  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 20842  005390  500D               	movf	(___lodiv@divisor+3)^0,w,c
 20843  005392  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 20844  005394  500E               	movf	(___lodiv@divisor+4)^0,w,c
 20845  005396  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 20846  005398  500F               	movf	(___lodiv@divisor+5)^0,w,c
 20847  00539A  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 20848  00539C  5010               	movf	(___lodiv@divisor+6)^0,w,c
 20849  00539E  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 20850  0053A0  5011               	movf	(___lodiv@divisor+7)^0,w,c
 20851  0053A2  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 20852  0053A4  8012               	bsf	___lodiv@quotient^0,0,c
 20853  0053A6                     l13258:
 20854  0053A6  90D8               	bcf	status,0,c
 20855  0053A8  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 20856  0053AA  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 20857  0053AC  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 20858  0053AE  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 20859  0053B0  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 20860  0053B2  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 20861  0053B4  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 20862  0053B6  320A               	rrcf	___lodiv@divisor^0,f,c
 20863  0053B8  2E1A               	decfsz	___lodiv@counter^0,f,c
 20864  0053BA  D7C9               	goto	u11860
 20865  0053BC                     l3641:
 20866  0053BC  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 20867  0053C2  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 20868  0053C8  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 20869  0053CE  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 20870  0053D4  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 20871  0053DA  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 20872  0053E0  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 20873  0053E6  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 20874  0053EC  0012               	return		;funcret
 20875  0053EE                     __end_of___lodiv:
 20876                           	opt callstack 0
 20877                           
 20878 ;; *************** function _stoa *****************
 20879 ;; Defined at:
 20880 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20881 ;; Parameters:    Size  Location     Type
 20882 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 20883 ;;		 -> NULL(0), 
 20884 ;;  s               1   14[COMRAM] PTR unsigned char 
 20885 ;;		 -> ?_printf(2), appDataInd@data(65), 
 20886 ;; Auto vars:     Size  Location     Type
 20887 ;;  nuls            7   16[COMRAM] unsigned char [7]
 20888 ;;  l               2   30[COMRAM] int 
 20889 ;;  p               2   28[COMRAM] int 
 20890 ;;  w               2   25[COMRAM] int 
 20891 ;;  i               2   23[COMRAM] int 
 20892 ;;  cp              1   27[COMRAM] PTR unsigned char 
 20893 ;;		 -> ?_printf(2), stoa@nuls(7), appDataInd@data(65), 
 20894 ;; Return value:  Size  Location     Type
 20895 ;;                  2   12[COMRAM] int 
 20896 ;; Registers used:
 20897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20898 ;; Tracked objects:
 20899 ;;		On entry : 3F/0
 20900 ;;		On exit  : 0/0
 20901 ;;		Unchanged: 0/0
 20902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20904 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20906 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20907 ;;Total ram usage:       20 bytes
 20908 ;; Hardware stack levels used:    1
 20909 ;; Hardware stack levels required when called:   10
 20910 ;; This function calls:
 20911 ;;		_fputc
 20912 ;;		_strlen
 20913 ;; This function is called by:
 20914 ;;		_vfpfcnvrt
 20915 ;; This function uses a non-reentrant model
 20916 ;;
 20917                           
 20918                           	psect	text129
 20919  003EE6                     __ptext129:
 20920                           	opt callstack 0
 20921  003EE6                     _stoa:
 20922                           	opt callstack 14
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 20926                           
 20927                           ;incstack = 0
 20928  003EE6  EE20  F1EE         	lfsr	2,stoa@F1139
 20929  003EEA  EE10  F011         	lfsr	1,stoa@nuls
 20930  003EEE  0E06               	movlw	6
 20931  003EF0                     u12081:
 20932  003EF0  006F FF6F FFE3     	movff	plusw2,plusw1
 20933  003EF6  06E8               	decf	wreg,f,c
 20934  003EF8  E2FB               	bc	u12081
 20935                           
 20936                           ; BSR set to: 0
 20937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 20938  003EFA  0060  F03C  F01C   	movff	stoa@s,stoa@cp
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 20942  003F00  501C               	movf	stoa@cp^0,w,c
 20943  003F02  A4D8               	btfss	status,2,c
 20944  003F04  D002               	goto	l13360
 20945                           
 20946                           ; BSR set to: 0
 20947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 20948  003F06  0E11               	movlw	low stoa@nuls
 20949  003F08  6E1C               	movwf	stoa@cp^0,c
 20950  003F0A                     l13360:
 20951                           
 20952                           ; BSR set to: 0
 20953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 20954  003F0A  0060  F070  F002   	movff	stoa@cp,strlen@s
 20955  003F10  6A03               	clrf	(strlen@s+1)^0,c
 20956  003F12  EC24  F03A         	call	_strlen	;wreg free
 20957  003F16  0060  F008  F01F   	movff	?_strlen,stoa@l
 20958  003F1C  0060  F00C  F020   	movff	?_strlen+1,stoa@l+1
 20959                           
 20960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 20961  003F22  0060  F370  F01D   	movff	_prec,stoa@p
 20962  003F28  0060  F374  F01E   	movff	_prec+1,stoa@p+1
 20963                           
 20964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 20965  003F2E  BE1E               	btfsc	(stoa@p+1)^0,7,c
 20966  003F30  D010               	goto	l3100
 20967  003F32  501F               	movf	stoa@l^0,w,c
 20968  003F34  5C1D               	subwf	stoa@p^0,w,c
 20969  003F36  501E               	movf	(stoa@p+1)^0,w,c
 20970  003F38  0A80               	xorlw	128
 20971  003F3A  6E10               	movwf	??_stoa^0,c
 20972  003F3C  5020               	movf	(stoa@l+1)^0,w,c
 20973  003F3E  0A80               	xorlw	128
 20974  003F40  5810               	subwfb	??_stoa^0,w,c
 20975  003F42  B0D8               	btfsc	status,0,c
 20976  003F44  D006               	goto	l3100
 20977  003F46  0060  F074  F01F   	movff	stoa@p,stoa@l
 20978  003F4C  0060  F078  F020   	movff	stoa@p+1,stoa@l+1
 20979  003F52                     l3100:
 20980                           
 20981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 20982  003F52  0060  F07C  F01D   	movff	stoa@l,stoa@p
 20983  003F58  0060  F080  F01E   	movff	stoa@l+1,stoa@p+1
 20984                           
 20985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 20986  003F5E  0060  F368  F01A   	movff	_width,stoa@w
 20987  003F64  0060  F36C  F01B   	movff	_width+1,stoa@w+1
 20988                           
 20989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 20990  003F6A  0100               	movlb	0	; () banked
 20991  003F6C  A1DE               	btfss	_flags& (0+255),0,b
 20992  003F6E  D00F               	goto	l13374
 20993  003F70  D018               	goto	u12130
 20994  003F72                     l13370:
 20995                           
 20996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 20997  003F72  0E00               	movlw	0
 20998  003F74  6E05               	movwf	(fputc@c+1)^0,c
 20999  003F76  0E20               	movlw	32
 21000  003F78  6E04               	movwf	fputc@c^0,c
 21001  003F7A  0060  F034  F006   	movff	stoa@fp,fputc@fp
 21002  003F80  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 21003  003F86  ECAC  F036         	call	_fputc	;wreg free
 21004                           
 21005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 21006  003F8A  4A1F               	infsnz	stoa@l^0,f,c
 21007  003F8C  2A20               	incf	(stoa@l+1)^0,f,c
 21008  003F8E                     l13374:
 21009                           
 21010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 21011  003F8E  501A               	movf	stoa@w^0,w,c
 21012  003F90  5C1F               	subwf	stoa@l^0,w,c
 21013  003F92  5020               	movf	(stoa@l+1)^0,w,c
 21014  003F94  0A80               	xorlw	128
 21015  003F96  6E10               	movwf	??_stoa^0,c
 21016  003F98  501B               	movf	(stoa@w+1)^0,w,c
 21017  003F9A  0A80               	xorlw	128
 21018  003F9C  5810               	subwfb	??_stoa^0,w,c
 21019  003F9E  A0D8               	btfss	status,0,c
 21020  003FA0  D7E8               	goto	l13370
 21021  003FA2                     u12130:
 21022                           
 21023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 21024  003FA2  0E00               	movlw	0
 21025  003FA4  6E19               	movwf	(stoa@i+1)^0,c
 21026  003FA6  0E00               	movlw	0
 21027  003FA8  6E18               	movwf	stoa@i^0,c
 21028                           
 21029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 21030  003FAA  D013               	goto	l13384
 21031  003FAC                     l13378:
 21032                           
 21033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 21034  003FAC  501C               	movf	stoa@cp^0,w,c
 21035  003FAE  6ED9               	movwf	fsr2l,c
 21036  003FB0  6ADA               	clrf	fsr2h,c
 21037  003FB2  50DF               	movf	indf2,w,c
 21038  003FB4  6E10               	movwf	??_stoa^0,c
 21039  003FB6  5010               	movf	??_stoa^0,w,c
 21040  003FB8  6E04               	movwf	fputc@c^0,c
 21041  003FBA  6A05               	clrf	(fputc@c+1)^0,c
 21042  003FBC  0060  F034  F006   	movff	stoa@fp,fputc@fp
 21043  003FC2  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 21044  003FC8  ECAC  F036         	call	_fputc	;wreg free
 21045                           
 21046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 21047  003FCC  2A1C               	incf	stoa@cp^0,f,c
 21048                           
 21049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 21050  003FCE  4A18               	infsnz	stoa@i^0,f,c
 21051  003FD0  2A19               	incf	(stoa@i+1)^0,f,c
 21052  003FD2                     l13384:
 21053                           
 21054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 21055  003FD2  501D               	movf	stoa@p^0,w,c
 21056  003FD4  5C18               	subwf	stoa@i^0,w,c
 21057  003FD6  5019               	movf	(stoa@i+1)^0,w,c
 21058  003FD8  0A80               	xorlw	128
 21059  003FDA  6E10               	movwf	??_stoa^0,c
 21060  003FDC  501E               	movf	(stoa@p+1)^0,w,c
 21061  003FDE  0A80               	xorlw	128
 21062  003FE0  5810               	subwfb	??_stoa^0,w,c
 21063  003FE2  A0D8               	btfss	status,0,c
 21064  003FE4  D7E3               	goto	l13378
 21065                           
 21066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 21067  003FE6  0100               	movlb	0	; () banked
 21068  003FE8  B1DE               	btfsc	_flags& (0+255),0,b
 21069  003FEA  D00F               	goto	l13392
 21070  003FEC  D018               	goto	u12160
 21071  003FEE                     l13388:
 21072                           
 21073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 21074  003FEE  0E00               	movlw	0
 21075  003FF0  6E05               	movwf	(fputc@c+1)^0,c
 21076  003FF2  0E20               	movlw	32
 21077  003FF4  6E04               	movwf	fputc@c^0,c
 21078  003FF6  0060  F034  F006   	movff	stoa@fp,fputc@fp
 21079  003FFC  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 21080  004002  ECAC  F036         	call	_fputc	;wreg free
 21081                           
 21082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 21083  004006  4A1F               	infsnz	stoa@l^0,f,c
 21084  004008  2A20               	incf	(stoa@l+1)^0,f,c
 21085  00400A                     l13392:
 21086                           
 21087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 21088  00400A  501A               	movf	stoa@w^0,w,c
 21089  00400C  5C1F               	subwf	stoa@l^0,w,c
 21090  00400E  5020               	movf	(stoa@l+1)^0,w,c
 21091  004010  0A80               	xorlw	128
 21092  004012  6E10               	movwf	??_stoa^0,c
 21093  004014  501B               	movf	(stoa@w+1)^0,w,c
 21094  004016  0A80               	xorlw	128
 21095  004018  5810               	subwfb	??_stoa^0,w,c
 21096  00401A  A0D8               	btfss	status,0,c
 21097  00401C  D7E8               	goto	l13388
 21098  00401E                     u12160:
 21099                           
 21100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 21101                           
 21102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
 21103  00401E  0060  F07C  F00D   	movff	stoa@l,?_stoa
 21104  004024  0060  F080  F00E   	movff	stoa@l+1,?_stoa+1
 21105  00402A  0012               	return		;funcret
 21106  00402C                     __end_of_stoa:
 21107                           	opt callstack 0
 21108                           
 21109 ;; *************** function _dtoa *****************
 21110 ;; Defined at:
 21111 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21112 ;; Parameters:    Size  Location     Type
 21113 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 21114 ;;		 -> NULL(0), 
 21115 ;;  d               8   32[COMRAM] long long 
 21116 ;; Auto vars:     Size  Location     Type
 21117 ;;  n               8   56[COMRAM] long long 
 21118 ;;  i               2   64[COMRAM] int 
 21119 ;;  s               2   54[COMRAM] int 
 21120 ;;  w               2   52[COMRAM] int 
 21121 ;;  p               2   50[COMRAM] int 
 21122 ;; Return value:  Size  Location     Type
 21123 ;;                  2   30[COMRAM] int 
 21124 ;; Registers used:
 21125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21126 ;; Tracked objects:
 21127 ;;		On entry : 3F/0
 21128 ;;		On exit  : 0/0
 21129 ;;		Unchanged: 0/0
 21130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21131 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21132 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21133 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21134 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21135 ;;Total ram usage:       36 bytes
 21136 ;; Hardware stack levels used:    1
 21137 ;; Hardware stack levels required when called:   12
 21138 ;; This function calls:
 21139 ;;		___aodiv
 21140 ;;		___aomod
 21141 ;;		_abs
 21142 ;;		_pad
 21143 ;; This function is called by:
 21144 ;;		_vfpfcnvrt
 21145 ;; This function uses a non-reentrant model
 21146 ;;
 21147                           
 21148                           	psect	text130
 21149  0019C4                     __ptext130:
 21150                           	opt callstack 0
 21151  0019C4                     _dtoa:
 21152                           	opt callstack 12
 21153                           
 21154                           ; BSR set to: 0
 21155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 21156                           
 21157                           ;incstack = 0
 21158  0019C4  0060  F084  F039   	movff	dtoa@d,dtoa@n
 21159  0019CA  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 21160  0019D0  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 21161  0019D6  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 21162  0019DC  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 21163  0019E2  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 21164  0019E8  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 21165  0019EE  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 21166                           
 21167                           ; BSR set to: 0
 21168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 21169  0019F4  AE40               	btfss	(dtoa@n+7)^0,7,c
 21170  0019F6  D002               	goto	u11930
 21171  0019F8  0E01               	movlw	1
 21172  0019FA  D001               	goto	u11940
 21173  0019FC                     u11930:
 21174  0019FC  0E00               	movlw	0
 21175  0019FE                     u11940:
 21176  0019FE  6E37               	movwf	dtoa@s^0,c
 21177  001A00  6A38               	clrf	(dtoa@s+1)^0,c
 21178                           
 21179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 21180  001A02  5037               	movf	dtoa@s^0,w,c
 21181  001A04  1038               	iorwf	(dtoa@s+1)^0,w,c
 21182  001A06  B4D8               	btfsc	status,2,c
 21183  001A08  D010               	goto	l13296
 21184                           
 21185                           ; BSR set to: 0
 21186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 21187  001A0A  1E40               	comf	(dtoa@n+7)^0,f,c
 21188  001A0C  1E3F               	comf	(dtoa@n+6)^0,f,c
 21189  001A0E  1E3E               	comf	(dtoa@n+5)^0,f,c
 21190  001A10  1E3D               	comf	(dtoa@n+4)^0,f,c
 21191  001A12  1E3C               	comf	(dtoa@n+3)^0,f,c
 21192  001A14  1E3B               	comf	(dtoa@n+2)^0,f,c
 21193  001A16  1E3A               	comf	(dtoa@n+1)^0,f,c
 21194  001A18  6C39               	negf	dtoa@n^0,c
 21195  001A1A  0E00               	movlw	0
 21196  001A1C  223A               	addwfc	(dtoa@n+1)^0,f,c
 21197  001A1E  223B               	addwfc	(dtoa@n+2)^0,f,c
 21198  001A20  223C               	addwfc	(dtoa@n+3)^0,f,c
 21199  001A22  223D               	addwfc	(dtoa@n+4)^0,f,c
 21200  001A24  223E               	addwfc	(dtoa@n+5)^0,f,c
 21201  001A26  223F               	addwfc	(dtoa@n+6)^0,f,c
 21202  001A28  2240               	addwfc	(dtoa@n+7)^0,f,c
 21203  001A2A                     l13296:
 21204                           
 21205                           ; BSR set to: 0
 21206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 21207  001A2A  AFDD               	btfss	(_prec+1)& (0+255),7,b
 21208                           
 21209                           ; BSR set to: 0
 21210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 21211  001A2C  93DE               	bcf	_flags& (0+255),1,b
 21212                           
 21213                           ; BSR set to: 0
 21214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 21215  001A2E  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 21216  001A30  D005               	goto	u11970
 21217  001A32  51DD               	movf	(_prec+1)& (0+255),w,b
 21218  001A34  E108               	bnz	l3071
 21219  001A36  05DC               	decf	_prec& (0+255),w,b
 21220  001A38  B0D8               	btfsc	status,0,c
 21221  001A3A  D005               	goto	l3071
 21222  001A3C                     u11970:
 21223                           
 21224                           ; BSR set to: 0
 21225  001A3C  0E00               	movlw	0
 21226  001A3E  6E34               	movwf	(dtoa@p+1)^0,c
 21227  001A40  0E01               	movlw	1
 21228  001A42  6E33               	movwf	dtoa@p^0,c
 21229  001A44  D006               	goto	l3073
 21230  001A46                     l3071:
 21231                           
 21232                           ; BSR set to: 0
 21233  001A46  0060  F370  F033   	movff	_prec,dtoa@p
 21234  001A4C  0060  F374  F034   	movff	_prec+1,dtoa@p+1
 21235  001A52                     l3073:
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 21239  001A52  0060  F368  F035   	movff	_width,dtoa@w
 21240  001A58  0060  F36C  F036   	movff	_width+1,dtoa@w+1
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 21244  001A5E  5037               	movf	dtoa@s^0,w,c
 21245  001A60  1038               	iorwf	(dtoa@s+1)^0,w,c
 21246  001A62  A4D8               	btfss	status,2,c
 21247  001A64  D002               	goto	u11990
 21248                           
 21249                           ; BSR set to: 0
 21250  001A66  A5DE               	btfss	_flags& (0+255),2,b
 21251  001A68  D003               	goto	l13310
 21252  001A6A                     u11990:
 21253                           
 21254                           ; BSR set to: 0
 21255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 21256  001A6A  0635               	decf	dtoa@w^0,f,c
 21257  001A6C  A0D8               	btfss	status,0,c
 21258  001A6E  0636               	decf	(dtoa@w+1)^0,f,c
 21259  001A70                     l13310:
 21260                           
 21261                           ; BSR set to: 0
 21262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 21263  001A70  0E00               	movlw	0
 21264  001A72  6E42               	movwf	(dtoa@i+1)^0,c
 21265  001A74  0E1F               	movlw	31
 21266  001A76  6E41               	movwf	dtoa@i^0,c
 21267                           
 21268                           ; BSR set to: 0
 21269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 21270  001A78  0E00               	movlw	0
 21271  001A7A  0101               	movlb	1	; () banked
 21272  001A7C  6F94               	movwf	(_dbuf+31)& (0+255),b
 21273                           
 21274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21275  001A7E  D09E               	goto	l13324
 21276  001A80                     l13314:
 21277                           
 21278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 21279  001A80  0641               	decf	dtoa@i^0,f,c
 21280  001A82  A0D8               	btfss	status,0,c
 21281  001A84  0642               	decf	(dtoa@i+1)^0,f,c
 21282                           
 21283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 21284  001A86  0E75               	movlw	low _dbuf
 21285  001A88  2441               	addwf	dtoa@i^0,w,c
 21286  001A8A  6ED9               	movwf	fsr2l,c
 21287  001A8C  0E01               	movlw	high _dbuf
 21288  001A8E  2042               	addwfc	(dtoa@i+1)^0,w,c
 21289  001A90  6EDA               	movwf	fsr2h,c
 21290  001A92  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 21291  001A98  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 21292  001A9E  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 21293  001AA4  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 21294  001AAA  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 21295  001AB0  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 21296  001AB6  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 21297  001ABC  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 21298  001AC2  0E0A               	movlw	10
 21299  001AC4  6E0A               	movwf	___aomod@divisor^0,c
 21300  001AC6  0E00               	movlw	0
 21301  001AC8  6E0B               	movwf	(___aomod@divisor+1)^0,c
 21302  001ACA  0E00               	movlw	0
 21303  001ACC  6E0C               	movwf	(___aomod@divisor+2)^0,c
 21304  001ACE  0E00               	movlw	0
 21305  001AD0  6E0D               	movwf	(___aomod@divisor+3)^0,c
 21306  001AD2  0E00               	movlw	0
 21307  001AD4  6E0E               	movwf	(___aomod@divisor+4)^0,c
 21308  001AD6  0E00               	movlw	0
 21309  001AD8  6E0F               	movwf	(___aomod@divisor+5)^0,c
 21310  001ADA  0E00               	movlw	0
 21311  001ADC  6E10               	movwf	(___aomod@divisor+6)^0,c
 21312  001ADE  0E00               	movlw	0
 21313  001AE0  6E11               	movwf	(___aomod@divisor+7)^0,c
 21314  001AE2  ECB8  F020         	call	___aomod	;wreg free
 21315  001AE6  0060  F008  F029   	movff	?___aomod,??_dtoa
 21316  001AEC  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 21317  001AF2  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 21318  001AF8  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 21319  001AFE  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 21320  001B04  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 21321  001B0A  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 21322  001B10  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 21323  001B16  0060  F0A4  F014   	movff	??_dtoa,abs@a
 21324  001B1C  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 21325  001B22  ECB7  F03C         	call	_abs	;wreg free
 21326  001B26  5014               	movf	?_abs^0,w,c
 21327  001B28  0F30               	addlw	48
 21328  001B2A  6EDF               	movwf	indf2,c
 21329                           
 21330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 21331  001B2C  0633               	decf	dtoa@p^0,f,c
 21332  001B2E  A0D8               	btfss	status,0,c
 21333  001B30  0634               	decf	(dtoa@p+1)^0,f,c
 21334                           
 21335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 21336  001B32  0635               	decf	dtoa@w^0,f,c
 21337  001B34  A0D8               	btfss	status,0,c
 21338  001B36  0636               	decf	(dtoa@w+1)^0,f,c
 21339                           
 21340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 21341  001B38  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 21342  001B3E  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 21343  001B44  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 21344  001B4A  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 21345  001B50  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 21346  001B56  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 21347  001B5C  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 21348  001B62  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 21349  001B68  0E0A               	movlw	10
 21350  001B6A  6E0A               	movwf	___aodiv@divisor^0,c
 21351  001B6C  0E00               	movlw	0
 21352  001B6E  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 21353  001B70  0E00               	movlw	0
 21354  001B72  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 21355  001B74  0E00               	movlw	0
 21356  001B76  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 21357  001B78  0E00               	movlw	0
 21358  001B7A  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 21359  001B7C  0E00               	movlw	0
 21360  001B7E  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 21361  001B80  0E00               	movlw	0
 21362  001B82  6E10               	movwf	(___aodiv@divisor+6)^0,c
 21363  001B84  0E00               	movlw	0
 21364  001B86  6E11               	movwf	(___aodiv@divisor+7)^0,c
 21365  001B88  EC1D  F01E         	call	___aodiv	;wreg free
 21366  001B8C  0060  F008  F039   	movff	?___aodiv,dtoa@n
 21367  001B92  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 21368  001B98  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 21369  001B9E  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 21370  001BA4  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 21371  001BAA  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 21372  001BB0  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 21373  001BB6  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 21374  001BBC                     l13324:
 21375                           
 21376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21377  001BBC  BE42               	btfsc	(dtoa@i+1)^0,7,c
 21378  001BBE  D020               	goto	u12040
 21379  001BC0  5042               	movf	(dtoa@i+1)^0,w,c
 21380  001BC2  E103               	bnz	u12000
 21381  001BC4  0441               	decf	dtoa@i^0,w,c
 21382  001BC6  A0D8               	btfss	status,0,c
 21383  001BC8  D01B               	goto	u12040
 21384  001BCA                     u12000:
 21385  001BCA  5039               	movf	dtoa@n^0,w,c
 21386  001BCC  103A               	iorwf	(dtoa@n+1)^0,w,c
 21387  001BCE  103B               	iorwf	(dtoa@n+2)^0,w,c
 21388  001BD0  103C               	iorwf	(dtoa@n+3)^0,w,c
 21389  001BD2  103D               	iorwf	(dtoa@n+4)^0,w,c
 21390  001BD4  103E               	iorwf	(dtoa@n+5)^0,w,c
 21391  001BD6  103F               	iorwf	(dtoa@n+6)^0,w,c
 21392  001BD8  1040               	iorwf	(dtoa@n+7)^0,w,c
 21393  001BDA  A4D8               	btfss	status,2,c
 21394  001BDC  D751               	goto	l13314
 21395  001BDE  BE34               	btfsc	(dtoa@p+1)^0,7,c
 21396  001BE0  D005               	goto	u12020
 21397  001BE2  5034               	movf	(dtoa@p+1)^0,w,c
 21398  001BE4  E102               	bnz	u12021
 21399  001BE6  0433               	decf	dtoa@p^0,w,c
 21400  001BE8  B0D8               	btfsc	status,0,c
 21401  001BEA                     u12021:
 21402  001BEA  D74A               	goto	l13314
 21403  001BEC                     u12020:
 21404  001BEC  BE36               	btfsc	(dtoa@w+1)^0,7,c
 21405  001BEE  D008               	goto	u12040
 21406  001BF0  5036               	movf	(dtoa@w+1)^0,w,c
 21407  001BF2  E103               	bnz	u12030
 21408  001BF4  0435               	decf	dtoa@w^0,w,c
 21409  001BF6  A0D8               	btfss	status,0,c
 21410  001BF8  D003               	goto	u12040
 21411  001BFA                     u12030:
 21412  001BFA  0100               	movlb	0	; () banked
 21413  001BFC  B3DE               	btfsc	_flags& (0+255),1,b
 21414  001BFE  D740               	goto	l13314
 21415  001C00                     u12040:
 21416                           
 21417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 21418  001C00  5037               	movf	dtoa@s^0,w,c
 21419  001C02  1038               	iorwf	(dtoa@s+1)^0,w,c
 21420  001C04  A4D8               	btfss	status,2,c
 21421  001C06  D003               	goto	u12060
 21422  001C08  0100               	movlb	0	; () banked
 21423  001C0A  A5DE               	btfss	_flags& (0+255),2,b
 21424  001C0C  D018               	goto	l13348
 21425  001C0E                     u12060:
 21426                           
 21427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 21428  001C0E  0641               	decf	dtoa@i^0,f,c
 21429  001C10  A0D8               	btfss	status,0,c
 21430  001C12  0642               	decf	(dtoa@i+1)^0,f,c
 21431                           
 21432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 21433  001C14  5037               	movf	dtoa@s^0,w,c
 21434  001C16  1038               	iorwf	(dtoa@s+1)^0,w,c
 21435  001C18  A4D8               	btfss	status,2,c
 21436  001C1A  D004               	goto	l13344
 21437  001C1C  0E00               	movlw	0
 21438  001C1E  6E32               	movwf	(_dtoa$7201+1)^0,c
 21439  001C20  0E2B               	movlw	43
 21440  001C22  D003               	goto	L20
 21441  001C24                     l13344:
 21442  001C24  0E00               	movlw	0
 21443  001C26  6E32               	movwf	(_dtoa$7201+1)^0,c
 21444  001C28  0E2D               	movlw	45
 21445  001C2A                     L20:
 21446  001C2A  6E31               	movwf	_dtoa$7201^0,c
 21447  001C2C  0E75               	movlw	low _dbuf
 21448  001C2E  2441               	addwf	dtoa@i^0,w,c
 21449  001C30  6ED9               	movwf	fsr2l,c
 21450  001C32  0E01               	movlw	high _dbuf
 21451  001C34  2042               	addwfc	(dtoa@i+1)^0,w,c
 21452  001C36  6EDA               	movwf	fsr2h,c
 21453  001C38  0060  F0C7  FFDF   	movff	_dtoa$7201,indf2
 21454  001C3E                     l13348:
 21455                           
 21456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 21457  001C3E  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 21458  001C44  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 21459  001C4A  0E75               	movlw	low _dbuf
 21460  001C4C  2441               	addwf	dtoa@i^0,w,c
 21461  001C4E  6E16               	movwf	pad@buf^0,c
 21462  001C50  0E01               	movlw	high _dbuf
 21463  001C52  2042               	addwfc	(dtoa@i+1)^0,w,c
 21464  001C54  6E17               	movwf	(pad@buf+1)^0,c
 21465  001C56  0060  F0D4  F018   	movff	dtoa@w,pad@p
 21466  001C5C  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 21467  001C62  ECC7  F02E         	call	_pad	;wreg free
 21468  001C66  0060  F050  F01F   	movff	?_pad,?_dtoa
 21469  001C6C  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 21470  001C72  0012               	return		;funcret
 21471  001C74                     __end_of_dtoa:
 21472                           	opt callstack 0
 21473                           
 21474 ;; *************** function _pad *****************
 21475 ;; Defined at:
 21476 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21477 ;; Parameters:    Size  Location     Type
 21478 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 21479 ;;		 -> NULL(0), 
 21480 ;;  buf             2   21[COMRAM] PTR unsigned char 
 21481 ;;		 -> dbuf(32), 
 21482 ;;  p               2   23[COMRAM] int 
 21483 ;; Auto vars:     Size  Location     Type
 21484 ;;  w               2   28[COMRAM] int 
 21485 ;;  i               2   26[COMRAM] int 
 21486 ;; Return value:  Size  Location     Type
 21487 ;;                  2   19[COMRAM] int 
 21488 ;; Registers used:
 21489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21490 ;; Tracked objects:
 21491 ;;		On entry : 0/0
 21492 ;;		On exit  : 0/0
 21493 ;;		Unchanged: 0/0
 21494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21498 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21499 ;;Total ram usage:       11 bytes
 21500 ;; Hardware stack levels used:    1
 21501 ;; Hardware stack levels required when called:   11
 21502 ;; This function calls:
 21503 ;;		_fputc
 21504 ;;		_fputs
 21505 ;;		_strlen
 21506 ;; This function is called by:
 21507 ;;		_dtoa
 21508 ;;		_utoa
 21509 ;;		_xtoa
 21510 ;; This function uses a non-reentrant model
 21511 ;;
 21512                           
 21513                           	psect	text131
 21514  005D8E                     __ptext131:
 21515                           	opt callstack 0
 21516  005D8E                     _pad:
 21517                           	opt callstack 12
 21518                           
 21519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 21520                           
 21521                           ;incstack = 0
 21522  005D8E  0100               	movlb	0	; () banked
 21523  005D90  A1DE               	btfss	_flags& (0+255),0,b
 21524  005D92  D00E               	goto	l13110
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 21528  005D94  0060  F058  F00D   	movff	pad@buf,fputs@s
 21529  005D9A  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 21530  005DA0  0060  F050  F00F   	movff	pad@fp,fputs@fp
 21531  005DA6  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 21532  005DAC  EC98  F03C         	call	_fputs	;wreg free
 21533  005DB0                     l13110:
 21534                           
 21535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 21536  005DB0  BE19               	btfsc	(pad@p+1)^0,7,c
 21537  005DB2  D007               	goto	l13114
 21538  005DB4  0060  F060  F01D   	movff	pad@p,pad@w
 21539  005DBA  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 21540  005DC0  D004               	goto	l3060
 21541  005DC2                     l13114:
 21542  005DC2  0E00               	movlw	0
 21543  005DC4  6E1E               	movwf	(pad@w+1)^0,c
 21544  005DC6  0E00               	movlw	0
 21545  005DC8  6E1D               	movwf	pad@w^0,c
 21546  005DCA                     l3060:
 21547                           
 21548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 21549  005DCA  0E00               	movlw	0
 21550  005DCC  6E1C               	movwf	(pad@i+1)^0,c
 21551  005DCE  0E00               	movlw	0
 21552  005DD0  6E1B               	movwf	pad@i^0,c
 21553                           
 21554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 21555  005DD2  D00E               	goto	l13120
 21556  005DD4                     l13116:
 21557                           
 21558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 21559  005DD4  0E00               	movlw	0
 21560  005DD6  6E05               	movwf	(fputc@c+1)^0,c
 21561  005DD8  0E20               	movlw	32
 21562  005DDA  6E04               	movwf	fputc@c^0,c
 21563  005DDC  0060  F050  F006   	movff	pad@fp,fputc@fp
 21564  005DE2  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 21565  005DE8  ECAC  F036         	call	_fputc	;wreg free
 21566                           
 21567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 21568  005DEC  4A1B               	infsnz	pad@i^0,f,c
 21569  005DEE  2A1C               	incf	(pad@i+1)^0,f,c
 21570  005DF0                     l13120:
 21571                           
 21572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 21573  005DF0  501D               	movf	pad@w^0,w,c
 21574  005DF2  5C1B               	subwf	pad@i^0,w,c
 21575  005DF4  501C               	movf	(pad@i+1)^0,w,c
 21576  005DF6  0A80               	xorlw	128
 21577  005DF8  6E1A               	movwf	??_pad^0,c
 21578  005DFA  501E               	movf	(pad@w+1)^0,w,c
 21579  005DFC  0A80               	xorlw	128
 21580  005DFE  581A               	subwfb	??_pad^0,w,c
 21581  005E00  A0D8               	btfss	status,0,c
 21582  005E02  D7E8               	goto	l13116
 21583                           
 21584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 21585  005E04  0100               	movlb	0	; () banked
 21586  005E06  B1DE               	btfsc	_flags& (0+255),0,b
 21587  005E08  D00E               	goto	l13124
 21588                           
 21589                           ; BSR set to: 0
 21590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 21591  005E0A  0060  F058  F00D   	movff	pad@buf,fputs@s
 21592  005E10  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 21593  005E16  0060  F050  F00F   	movff	pad@fp,fputs@fp
 21594  005E1C  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 21595  005E22  EC98  F03C         	call	_fputs	;wreg free
 21596  005E26                     l13124:
 21597                           
 21598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 21599  005E26  0060  F058  F002   	movff	pad@buf,strlen@s
 21600  005E2C  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 21601  005E32  EC24  F03A         	call	_strlen	;wreg free
 21602  005E36  501D               	movf	pad@w^0,w,c
 21603  005E38  2402               	addwf	?_strlen^0,w,c
 21604  005E3A  6E14               	movwf	?_pad^0,c
 21605  005E3C  501E               	movf	(pad@w+1)^0,w,c
 21606  005E3E  2003               	addwfc	(?_strlen+1)^0,w,c
 21607  005E40  6E15               	movwf	(?_pad+1)^0,c
 21608  005E42  0012               	return		;funcret
 21609  005E44                     __end_of_pad:
 21610                           	opt callstack 0
 21611                           
 21612 ;; *************** function _strlen *****************
 21613 ;; Defined at:
 21614 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 21615 ;; Parameters:    Size  Location     Type
 21616 ;;  s               2    1[COMRAM] PTR const unsigned char 
 21617 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 21618 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 21619 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 21620 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 21621 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 21622 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 21623 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 21624 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 21625 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 21626 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 21627 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 21628 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 21629 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 21630 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 21631 ;; Auto vars:     Size  Location     Type
 21632 ;;  a               2    3[COMRAM] PTR const unsigned char 
 21633 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 21634 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 21635 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 21636 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 21637 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 21638 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 21639 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 21640 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 21641 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 21642 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 21643 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 21644 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 21645 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 21646 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 21647 ;; Return value:  Size  Location     Type
 21648 ;;                  2    1[COMRAM] unsigned int 
 21649 ;; Registers used:
 21650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21651 ;; Tracked objects:
 21652 ;;		On entry : 0/0
 21653 ;;		On exit  : 0/0
 21654 ;;		Unchanged: 0/0
 21655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21660 ;;Total ram usage:        4 bytes
 21661 ;; Hardware stack levels used:    1
 21662 ;; Hardware stack levels required when called:    7
 21663 ;; This function calls:
 21664 ;;		Nothing
 21665 ;; This function is called by:
 21666 ;;		_cmdSend
 21667 ;;		_cmdBcast
 21668 ;;		_cmdSetAES
 21669 ;;		_pad
 21670 ;;		_stoa
 21671 ;;		_strstr
 21672 ;; This function uses a non-reentrant model
 21673 ;;
 21674                           
 21675                           	psect	text132
 21676  007448                     __ptext132:
 21677                           	opt callstack 0
 21678  007448                     _strlen:
 21679                           	opt callstack 20
 21680                           
 21681                           ;incstack = 0
 21682  007448  0060  F008  F004   	movff	strlen@s,strlen@a
 21683  00744E  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 21684  007454  D002               	goto	l13088
 21685  007456                     l13086:
 21686  007456  4A02               	infsnz	strlen@s^0,f,c
 21687  007458  2A03               	incf	(strlen@s+1)^0,f,c
 21688  00745A                     l13088:
 21689  00745A  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 21690  007460  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 21691  007466  0E00               	movlw	low (__mediumconst shr (0+16))
 21692  007468  6EF8               	movwf	tblptru,c
 21693  00746A  0E0F               	movlw	(high __ramtop+-1)
 21694  00746C  64F7               	cpfsgt	tblptrh,c
 21695  00746E  D003               	bra	u11527
 21696  007470  0008               	tblrd		*
 21697  007472  50F5               	movf	tablat,w,c
 21698  007474  D007               	bra	u11520
 21699  007476                     u11527:
 21700  007476  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21701  00747C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21702  007482  50EF               	movf	indf0,w,c
 21703  007484                     u11520:
 21704  007484  0900               	iorlw	0
 21705  007486  A4D8               	btfss	status,2,c
 21706  007488  D7E6               	goto	l13086
 21707  00748A  5004               	movf	strlen@a^0,w,c
 21708  00748C  5C02               	subwf	strlen@s^0,w,c
 21709  00748E  6E02               	movwf	?_strlen^0,c
 21710  007490  5005               	movf	(strlen@a+1)^0,w,c
 21711  007492  5803               	subwfb	(strlen@s+1)^0,w,c
 21712  007494  6E03               	movwf	(?_strlen+1)^0,c
 21713  007496  0012               	return		;funcret
 21714  007498                     __end_of_strlen:
 21715                           	opt callstack 0
 21716                           
 21717 ;; *************** function _fputs *****************
 21718 ;; Defined at:
 21719 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  s               2   12[COMRAM] PTR const unsigned char 
 21722 ;;		 -> dbuf(32), 
 21723 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 21724 ;;		 -> NULL(0), 
 21725 ;; Auto vars:     Size  Location     Type
 21726 ;;  i               2   17[COMRAM] int 
 21727 ;;  c               1   16[COMRAM] unsigned char 
 21728 ;; Return value:  Size  Location     Type
 21729 ;;                  2   12[COMRAM] int 
 21730 ;; Registers used:
 21731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21732 ;; Tracked objects:
 21733 ;;		On entry : 3F/0
 21734 ;;		On exit  : 0/0
 21735 ;;		Unchanged: 0/0
 21736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21738 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21740 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21741 ;;Total ram usage:        7 bytes
 21742 ;; Hardware stack levels used:    1
 21743 ;; Hardware stack levels required when called:   10
 21744 ;; This function calls:
 21745 ;;		_fputc
 21746 ;; This function is called by:
 21747 ;;		_pad
 21748 ;; This function uses a non-reentrant model
 21749 ;;
 21750                           
 21751                           	psect	text133
 21752  007930                     __ptext133:
 21753                           	opt callstack 0
 21754  007930                     _fputs:
 21755                           	opt callstack 12
 21756                           
 21757                           ; BSR set to: 0
 21758                           
 21759                           ;incstack = 0
 21760  007930  0E00               	movlw	0
 21761  007932  6E13               	movwf	(fputs@i+1)^0,c
 21762  007934  0E00               	movlw	0
 21763  007936  6E12               	movwf	fputs@i^0,c
 21764  007938  D00E               	goto	l13100
 21765  00793A                     l13096:
 21766  00793A  0060  F044  F004   	movff	fputs@c,fputc@c
 21767  007940  6A05               	clrf	(fputc@c+1)^0,c
 21768  007942  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 21769  007948  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 21770  00794E  ECAC  F036         	call	_fputc	;wreg free
 21771  007952  4A12               	infsnz	fputs@i^0,f,c
 21772  007954  2A13               	incf	(fputs@i+1)^0,f,c
 21773  007956                     l13100:
 21774  007956  5012               	movf	fputs@i^0,w,c
 21775  007958  240D               	addwf	fputs@s^0,w,c
 21776  00795A  6ED9               	movwf	fsr2l,c
 21777  00795C  5013               	movf	(fputs@i+1)^0,w,c
 21778  00795E  200E               	addwfc	(fputs@s+1)^0,w,c
 21779  007960  6EDA               	movwf	fsr2h,c
 21780  007962  50DF               	movf	indf2,w,c
 21781  007964  6E11               	movwf	fputs@c^0,c
 21782  007966  5011               	movf	fputs@c^0,w,c
 21783  007968  B4D8               	btfsc	status,2,c
 21784  00796A  0012               	return	
 21785  00796C  D7E6               	goto	l13096
 21786  00796E                     __end_of_fputs:
 21787                           	opt callstack 0
 21788                           
 21789 ;; *************** function _fputc *****************
 21790 ;; Defined at:
 21791 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 21792 ;; Parameters:    Size  Location     Type
 21793 ;;  c               2    3[COMRAM] int 
 21794 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 21795 ;;		 -> NULL(0), 
 21796 ;; Auto vars:     Size  Location     Type
 21797 ;;		None
 21798 ;; Return value:  Size  Location     Type
 21799 ;;                  2    3[COMRAM] int 
 21800 ;; Registers used:
 21801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21802 ;; Tracked objects:
 21803 ;;		On entry : 0/0
 21804 ;;		On exit  : 0/0
 21805 ;;		Unchanged: 0/0
 21806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21809 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21810 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21811 ;;Total ram usage:        9 bytes
 21812 ;; Hardware stack levels used:    1
 21813 ;; Hardware stack levels required when called:    9
 21814 ;; This function calls:
 21815 ;;		_putch
 21816 ;; This function is called by:
 21817 ;;		_pad
 21818 ;;		_stoa
 21819 ;;		_vfpfcnvrt
 21820 ;;		_fputs
 21821 ;; This function uses a non-reentrant model
 21822 ;;
 21823                           
 21824                           	psect	text134
 21825  006D58                     __ptext134:
 21826                           	opt callstack 0
 21827  006D58                     _fputc:
 21828                           	opt callstack 12
 21829                           
 21830                           ;incstack = 0
 21831  006D58  5006               	movf	fputc@fp^0,w,c
 21832  006D5A  1007               	iorwf	(fputc@fp+1)^0,w,c
 21833  006D5C  B4D8               	btfsc	status,2,c
 21834  006D5E  D004               	goto	u11490
 21835  006D60  5006               	movf	fputc@fp^0,w,c
 21836  006D62  1007               	iorwf	(fputc@fp+1)^0,w,c
 21837  006D64  A4D8               	btfss	status,2,c
 21838  006D66  D004               	goto	l13076
 21839  006D68                     u11490:
 21840  006D68  5004               	movf	fputc@c^0,w,c
 21841  006D6A  EC6D  F042         	call	_putch
 21842  006D6E  0012               	return	
 21843  006D70                     l13076:
 21844  006D70  EE20 F004          	lfsr	2,4
 21845  006D74  5006               	movf	fputc@fp^0,w,c
 21846  006D76  26D9               	addwf	fsr2l,f,c
 21847  006D78  5007               	movf	(fputc@fp+1)^0,w,c
 21848  006D7A  22DA               	addwfc	fsr2h,f,c
 21849  006D7C  50DE               	movf	postinc2,w,c
 21850  006D7E  10DE               	iorwf	postinc2,w,c
 21851  006D80  B4D8               	btfsc	status,2,c
 21852  006D82  D016               	goto	u11510
 21853  006D84  EE20 F004          	lfsr	2,4
 21854  006D88  5006               	movf	fputc@fp^0,w,c
 21855  006D8A  26D9               	addwf	fsr2l,f,c
 21856  006D8C  5007               	movf	(fputc@fp+1)^0,w,c
 21857  006D8E  22DA               	addwfc	fsr2h,f,c
 21858  006D90  EE10 F002          	lfsr	1,2
 21859  006D94  5006               	movf	fputc@fp^0,w,c
 21860  006D96  26E1               	addwf	fsr1l,f,c
 21861  006D98  5007               	movf	(fputc@fp+1)^0,w,c
 21862  006D9A  22E2               	addwfc	fsr1h,f,c
 21863  006D9C  50DE               	movf	postinc2,w,c
 21864  006D9E  5CE6               	subwf	postinc1,w,c
 21865  006DA0  50E6               	movf	postinc1,w,c
 21866  006DA2  0A80               	xorlw	128
 21867  006DA4  6E0C               	movwf	(??_fputc+4)^0,c
 21868  006DA6  50DE               	movf	postinc2,w,c
 21869  006DA8  0A80               	xorlw	128
 21870  006DAA  580C               	subwfb	(??_fputc+4)^0,w,c
 21871  006DAC  B0D8               	btfsc	status,0,c
 21872  006DAE  0012               	return	
 21873  006DB0                     u11510:
 21874  006DB0  EE20 F002          	lfsr	2,2
 21875  006DB4  5006               	movf	fputc@fp^0,w,c
 21876  006DB6  26D9               	addwf	fsr2l,f,c
 21877  006DB8  5007               	movf	(fputc@fp+1)^0,w,c
 21878  006DBA  22DA               	addwfc	fsr2h,f,c
 21879  006DBC  2ADE               	incf	postinc2,f,c
 21880  006DBE  0E00               	movlw	0
 21881  006DC0  22DD               	addwfc	postdec2,f,c
 21882  006DC2  0012               	return		;funcret
 21883  006DC4                     __end_of_fputc:
 21884                           	opt callstack 0
 21885                           
 21886 ;; *************** function _putch *****************
 21887 ;; Defined at:
 21888 ;;		line 242 in file "mcc_generated_files/uart1.c"
 21889 ;; Parameters:    Size  Location     Type
 21890 ;;  txData          1    wreg     unsigned char 
 21891 ;; Auto vars:     Size  Location     Type
 21892 ;;  txData          1    2[COMRAM] unsigned char 
 21893 ;; Return value:  Size  Location     Type
 21894 ;;                  1    wreg      void 
 21895 ;; Registers used:
 21896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21897 ;; Tracked objects:
 21898 ;;		On entry : 0/0
 21899 ;;		On exit  : 3F/39
 21900 ;;		Unchanged: 0/0
 21901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21906 ;;Total ram usage:        1 bytes
 21907 ;; Hardware stack levels used:    1
 21908 ;; Hardware stack levels required when called:    8
 21909 ;; This function calls:
 21910 ;;		_UART1_Write
 21911 ;; This function is called by:
 21912 ;;		_fputc
 21913 ;; This function uses a non-reentrant model
 21914 ;;
 21915                           
 21916                           	psect	text135
 21917  0084DA                     __ptext135:
 21918                           	opt callstack 0
 21919  0084DA                     _putch:
 21920                           	opt callstack 12
 21921                           
 21922                           ;incstack = 0
 21923                           ;putch@txData stored from wreg
 21924  0084DA  6E03               	movwf	putch@txData^0,c
 21925                           
 21926                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 21927  0084DC  5003               	movf	putch@txData^0,w,c
 21928  0084DE  EC95  F03B         	call	_UART1_Write
 21929                           
 21930                           ; BSR set to: 57
 21931  0084E2  0012               	return		;funcret
 21932  0084E4                     __end_of_putch:
 21933                           	opt callstack 0
 21934                           
 21935 ;; *************** function _UART1_Write *****************
 21936 ;; Defined at:
 21937 ;;		line 210 in file "mcc_generated_files/uart1.c"
 21938 ;; Parameters:    Size  Location     Type
 21939 ;;  txData          1    wreg     unsigned char 
 21940 ;; Auto vars:     Size  Location     Type
 21941 ;;  txData          1    1[COMRAM] unsigned char 
 21942 ;; Return value:  Size  Location     Type
 21943 ;;                  1    wreg      void 
 21944 ;; Registers used:
 21945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21946 ;; Tracked objects:
 21947 ;;		On entry : 0/0
 21948 ;;		On exit  : 3F/39
 21949 ;;		Unchanged: 0/0
 21950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21955 ;;Total ram usage:        1 bytes
 21956 ;; Hardware stack levels used:    1
 21957 ;; Hardware stack levels required when called:    7
 21958 ;; This function calls:
 21959 ;;		Nothing
 21960 ;; This function is called by:
 21961 ;;		_putch
 21962 ;; This function uses a non-reentrant model
 21963 ;;
 21964                           
 21965                           	psect	text136
 21966  00772A                     __ptext136:
 21967                           	opt callstack 0
 21968  00772A                     _UART1_Write:
 21969                           	opt callstack 12
 21970                           
 21971                           ; BSR set to: 57
 21972                           ;incstack = 0
 21973                           ;UART1_Write@txData stored from wreg
 21974  00772A  6E02               	movwf	UART1_Write@txData^0,c
 21975  00772C                     
 21976                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 21977                           
 21978                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 21979  00772C  0101               	movlb	1	; () banked
 21980  00772E  51ED               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 21981  007730  B4D8               	btfsc	status,2,c
 21982  007732  D7FC               	goto	l13050
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 21986  007734  0139               	movlb	57	; () banked
 21987  007736  B993               	btfsc	147,4,b	;volatile
 21988  007738  D004               	goto	l1395
 21989                           
 21990                           ; BSR set to: 57
 21991                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 21992  00773A  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 21993                           
 21994                           ;mcc_generated_files/uart1.c: 223:     }
 21995  007740  D013               	goto	l13066
 21996  007742                     l1395:
 21997                           
 21998                           ; BSR set to: 57
 21999                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 22000  007742  9993               	bcf	147,4,b	;volatile
 22001                           
 22002                           ; BSR set to: 57
 22003                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 22004  007744  0E00               	movlw	low _uart1TxBuffer
 22005  007746  0100               	movlb	0	; () banked
 22006  007748  25E9               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 22007  00774A  6ED9               	movwf	fsr2l,c
 22008  00774C  6ADA               	clrf	fsr2h,c
 22009  00774E  0E03               	movlw	high _uart1TxBuffer
 22010  007750  22DA               	addwfc	fsr2h,f,c
 22011  007752  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 22012                           
 22013                           ; BSR set to: 0
 22014  007758  2BE9               	incf	_uart1TxHead& (0+255),f,b	;volatile
 22015                           
 22016                           ; BSR set to: 0
 22017                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 22018  00775A  0E3F               	movlw	63
 22019  00775C  65E9               	cpfsgt	_uart1TxHead& (0+255),b
 22020  00775E  D002               	goto	l13064
 22021                           
 22022                           ; BSR set to: 0
 22023                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 22024  007760  0E00               	movlw	0
 22025  007762  6FE9               	movwf	_uart1TxHead& (0+255),b	;volatile
 22026  007764                     l13064:
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 22030  007764  0101               	movlb	1	; () banked
 22031  007766  07ED               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 22032  007768                     l13066:
 22033                           
 22034                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 22035  007768  0139               	movlb	57	; () banked
 22036  00776A  8993               	bsf	147,4,b	;volatile
 22037                           
 22038                           ; BSR set to: 57
 22039  00776C  0012               	return		;funcret
 22040  00776E                     __end_of_UART1_Write:
 22041                           	opt callstack 0
 22042                           
 22043 ;; *************** function _abs *****************
 22044 ;; Defined at:
 22045 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 22046 ;; Parameters:    Size  Location     Type
 22047 ;;  a               2   19[COMRAM] int 
 22048 ;; Auto vars:     Size  Location     Type
 22049 ;;		None
 22050 ;; Return value:  Size  Location     Type
 22051 ;;                  2   19[COMRAM] int 
 22052 ;; Registers used:
 22053 ;;		wreg, status,2, status,0
 22054 ;; Tracked objects:
 22055 ;;		On entry : 0/1
 22056 ;;		On exit  : 0/0
 22057 ;;		Unchanged: 0/0
 22058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22062 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22063 ;;Total ram usage:        4 bytes
 22064 ;; Hardware stack levels used:    1
 22065 ;; Hardware stack levels required when called:    7
 22066 ;; This function calls:
 22067 ;;		Nothing
 22068 ;; This function is called by:
 22069 ;;		_dtoa
 22070 ;; This function uses a non-reentrant model
 22071 ;;
 22072                           
 22073                           	psect	text137
 22074  00796E                     __ptext137:
 22075                           	opt callstack 0
 22076  00796E                     _abs:
 22077                           	opt callstack 16
 22078                           
 22079                           ; BSR set to: 57
 22080                           ;incstack = 0
 22081  00796E  BE15               	btfsc	(abs@a+1)^0,7,c
 22082  007970  D005               	goto	u11610
 22083  007972  5015               	movf	(abs@a+1)^0,w,c
 22084  007974  E114               	bnz	l3878
 22085  007976  0414               	decf	abs@a^0,w,c
 22086  007978  B0D8               	btfsc	status,0,c
 22087  00797A  D011               	goto	l3878
 22088  00797C                     u11610:
 22089  00797C  0060  F050  F016   	movff	abs@a,??_abs
 22090  007982  0060  F054  F017   	movff	abs@a+1,??_abs+1
 22091  007988  1E16               	comf	??_abs^0,f,c
 22092  00798A  1E17               	comf	(??_abs+1)^0,f,c
 22093  00798C  4A16               	infsnz	??_abs^0,f,c
 22094  00798E  2A17               	incf	(??_abs+1)^0,f,c
 22095  007990  0060  F058  F014   	movff	??_abs,?_abs
 22096  007996  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 22097  00799C  0012               	return	
 22098  00799E                     l3878:
 22099  00799E  0060  F050  F014   	movff	abs@a,?_abs
 22100  0079A4  0060  F054  F015   	movff	abs@a+1,?_abs+1
 22101  0079AA  0012               	return		;funcret
 22102  0079AC                     __end_of_abs:
 22103                           	opt callstack 0
 22104                           
 22105 ;; *************** function ___aomod *****************
 22106 ;; Defined at:
 22107 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 22108 ;; Parameters:    Size  Location     Type
 22109 ;;  dividend        8    1[COMRAM] long long 
 22110 ;;  divisor         8    9[COMRAM] long long 
 22111 ;; Auto vars:     Size  Location     Type
 22112 ;;  sign            1   18[COMRAM] unsigned char 
 22113 ;;  counter         1   17[COMRAM] unsigned char 
 22114 ;; Return value:  Size  Location     Type
 22115 ;;                  8    1[COMRAM] long long 
 22116 ;; Registers used:
 22117 ;;		wreg, status,2, status,0
 22118 ;; Tracked objects:
 22119 ;;		On entry : 0/1
 22120 ;;		On exit  : 0/0
 22121 ;;		Unchanged: 0/0
 22122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22123 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22126 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22127 ;;Total ram usage:       18 bytes
 22128 ;; Hardware stack levels used:    1
 22129 ;; Hardware stack levels required when called:    7
 22130 ;; This function calls:
 22131 ;;		Nothing
 22132 ;; This function is called by:
 22133 ;;		_dtoa
 22134 ;; This function uses a non-reentrant model
 22135 ;;
 22136                           
 22137                           	psect	text138
 22138  004170                     __ptext138:
 22139                           	opt callstack 0
 22140  004170                     ___aomod:
 22141                           	opt callstack 16
 22142                           
 22143                           ;incstack = 0
 22144  004170  0E00               	movlw	0
 22145  004172  6E13               	movwf	___aomod@sign^0,c
 22146  004174  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 22147  004176  D012               	goto	l13212
 22148  004178  1E09               	comf	(___aomod@dividend+7)^0,f,c
 22149  00417A  1E08               	comf	(___aomod@dividend+6)^0,f,c
 22150  00417C  1E07               	comf	(___aomod@dividend+5)^0,f,c
 22151  00417E  1E06               	comf	(___aomod@dividend+4)^0,f,c
 22152  004180  1E05               	comf	(___aomod@dividend+3)^0,f,c
 22153  004182  1E04               	comf	(___aomod@dividend+2)^0,f,c
 22154  004184  1E03               	comf	(___aomod@dividend+1)^0,f,c
 22155  004186  6C02               	negf	___aomod@dividend^0,c
 22156  004188  0E00               	movlw	0
 22157  00418A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 22158  00418C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 22159  00418E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 22160  004190  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 22161  004192  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 22162  004194  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 22163  004196  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 22164  004198  0E01               	movlw	1
 22165  00419A  6E13               	movwf	___aomod@sign^0,c
 22166  00419C                     l13212:
 22167  00419C  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 22168  00419E  D010               	goto	l13216
 22169  0041A0  1E11               	comf	(___aomod@divisor+7)^0,f,c
 22170  0041A2  1E10               	comf	(___aomod@divisor+6)^0,f,c
 22171  0041A4  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 22172  0041A6  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 22173  0041A8  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 22174  0041AA  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 22175  0041AC  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 22176  0041AE  6C0A               	negf	___aomod@divisor^0,c
 22177  0041B0  0E00               	movlw	0
 22178  0041B2  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 22179  0041B4  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 22180  0041B6  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 22181  0041B8  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 22182  0041BA  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 22183  0041BC  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 22184  0041BE  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 22185  0041C0                     l13216:
 22186  0041C0  500A               	movf	___aomod@divisor^0,w,c
 22187  0041C2  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 22188  0041C4  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 22189  0041C6  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 22190  0041C8  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 22191  0041CA  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 22192  0041CC  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 22193  0041CE  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 22194  0041D0  B4D8               	btfsc	status,2,c
 22195  0041D2  D03C               	goto	l13232
 22196  0041D4  0E01               	movlw	1
 22197  0041D6  6E12               	movwf	___aomod@counter^0,c
 22198  0041D8  D00A               	goto	l13222
 22199  0041DA                     l13220:
 22200  0041DA  90D8               	bcf	status,0,c
 22201  0041DC  360A               	rlcf	___aomod@divisor^0,f,c
 22202  0041DE  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 22203  0041E0  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 22204  0041E2  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 22205  0041E4  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 22206  0041E6  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 22207  0041E8  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 22208  0041EA  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 22209  0041EC  2A12               	incf	___aomod@counter^0,f,c
 22210  0041EE                     l13222:
 22211  0041EE  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 22212  0041F0  D7F4               	goto	l13220
 22213  0041F2                     u11810:
 22214  0041F2  500A               	movf	___aomod@divisor^0,w,c
 22215  0041F4  5C02               	subwf	___aomod@dividend^0,w,c
 22216  0041F6  500B               	movf	(___aomod@divisor+1)^0,w,c
 22217  0041F8  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 22218  0041FA  500C               	movf	(___aomod@divisor+2)^0,w,c
 22219  0041FC  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 22220  0041FE  500D               	movf	(___aomod@divisor+3)^0,w,c
 22221  004200  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 22222  004202  500E               	movf	(___aomod@divisor+4)^0,w,c
 22223  004204  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 22224  004206  500F               	movf	(___aomod@divisor+5)^0,w,c
 22225  004208  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 22226  00420A  5010               	movf	(___aomod@divisor+6)^0,w,c
 22227  00420C  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 22228  00420E  5011               	movf	(___aomod@divisor+7)^0,w,c
 22229  004210  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 22230  004212  A0D8               	btfss	status,0,c
 22231  004214  D010               	goto	l13228
 22232  004216  500A               	movf	___aomod@divisor^0,w,c
 22233  004218  5E02               	subwf	___aomod@dividend^0,f,c
 22234  00421A  500B               	movf	(___aomod@divisor+1)^0,w,c
 22235  00421C  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 22236  00421E  500C               	movf	(___aomod@divisor+2)^0,w,c
 22237  004220  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 22238  004222  500D               	movf	(___aomod@divisor+3)^0,w,c
 22239  004224  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 22240  004226  500E               	movf	(___aomod@divisor+4)^0,w,c
 22241  004228  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 22242  00422A  500F               	movf	(___aomod@divisor+5)^0,w,c
 22243  00422C  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 22244  00422E  5010               	movf	(___aomod@divisor+6)^0,w,c
 22245  004230  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 22246  004232  5011               	movf	(___aomod@divisor+7)^0,w,c
 22247  004234  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 22248  004236                     l13228:
 22249  004236  90D8               	bcf	status,0,c
 22250  004238  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 22251  00423A  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 22252  00423C  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 22253  00423E  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 22254  004240  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 22255  004242  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 22256  004244  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 22257  004246  320A               	rrcf	___aomod@divisor^0,f,c
 22258  004248  2E12               	decfsz	___aomod@counter^0,f,c
 22259  00424A  D7D3               	goto	u11810
 22260  00424C                     l13232:
 22261  00424C  5013               	movf	___aomod@sign^0,w,c
 22262  00424E  B4D8               	btfsc	status,2,c
 22263  004250  D010               	goto	l13236
 22264  004252  1E09               	comf	(___aomod@dividend+7)^0,f,c
 22265  004254  1E08               	comf	(___aomod@dividend+6)^0,f,c
 22266  004256  1E07               	comf	(___aomod@dividend+5)^0,f,c
 22267  004258  1E06               	comf	(___aomod@dividend+4)^0,f,c
 22268  00425A  1E05               	comf	(___aomod@dividend+3)^0,f,c
 22269  00425C  1E04               	comf	(___aomod@dividend+2)^0,f,c
 22270  00425E  1E03               	comf	(___aomod@dividend+1)^0,f,c
 22271  004260  6C02               	negf	___aomod@dividend^0,c
 22272  004262  0E00               	movlw	0
 22273  004264  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 22274  004266  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 22275  004268  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 22276  00426A  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 22277  00426C  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 22278  00426E  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 22279  004270  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 22280  004272                     l13236:
 22281  004272  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 22282  004278  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 22283  00427E  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 22284  004284  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 22285  00428A  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 22286  004290  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 22287  004296  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 22288  00429C  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 22289  0042A2  0012               	return		;funcret
 22290  0042A4                     __end_of___aomod:
 22291                           	opt callstack 0
 22292                           
 22293 ;; *************** function ___aodiv *****************
 22294 ;; Defined at:
 22295 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 22296 ;; Parameters:    Size  Location     Type
 22297 ;;  dividend        8    1[COMRAM] long long 
 22298 ;;  divisor         8    9[COMRAM] long long 
 22299 ;; Auto vars:     Size  Location     Type
 22300 ;;  quotient        8   19[COMRAM] long long 
 22301 ;;  sign            1   18[COMRAM] unsigned char 
 22302 ;;  counter         1   17[COMRAM] unsigned char 
 22303 ;; Return value:  Size  Location     Type
 22304 ;;                  8    1[COMRAM] long long 
 22305 ;; Registers used:
 22306 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/1
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22312 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22313 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22315 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22316 ;;Total ram usage:       26 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:    7
 22319 ;; This function calls:
 22320 ;;		Nothing
 22321 ;; This function is called by:
 22322 ;;		_dtoa
 22323 ;; This function uses a non-reentrant model
 22324 ;;
 22325                           
 22326                           	psect	text139
 22327  003C3A                     __ptext139:
 22328                           	opt callstack 0
 22329  003C3A                     ___aodiv:
 22330                           	opt callstack 16
 22331                           
 22332                           ;incstack = 0
 22333  003C3A  0E00               	movlw	0
 22334  003C3C  6E13               	movwf	___aodiv@sign^0,c
 22335  003C3E  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 22336  003C40  D012               	goto	l13168
 22337  003C42  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 22338  003C44  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 22339  003C46  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 22340  003C48  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 22341  003C4A  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 22342  003C4C  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 22343  003C4E  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 22344  003C50  6C0A               	negf	___aodiv@divisor^0,c
 22345  003C52  0E00               	movlw	0
 22346  003C54  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 22347  003C56  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 22348  003C58  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 22349  003C5A  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 22350  003C5C  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 22351  003C5E  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 22352  003C60  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 22353  003C62  0E01               	movlw	1
 22354  003C64  6E13               	movwf	___aodiv@sign^0,c
 22355  003C66                     l13168:
 22356  003C66  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 22357  003C68  D012               	goto	l13174
 22358  003C6A  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 22359  003C6C  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 22360  003C6E  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 22361  003C70  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 22362  003C72  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 22363  003C74  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 22364  003C76  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 22365  003C78  6C02               	negf	___aodiv@dividend^0,c
 22366  003C7A  0E00               	movlw	0
 22367  003C7C  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 22368  003C7E  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 22369  003C80  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 22370  003C82  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 22371  003C84  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 22372  003C86  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 22373  003C88  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 22374  003C8A  0E01               	movlw	1
 22375  003C8C  1A13               	xorwf	___aodiv@sign^0,f,c
 22376  003C8E                     l13174:
 22377  003C8E  EE20  F014         	lfsr	2,___aodiv@quotient
 22378  003C92  0E07               	movlw	7
 22379  003C94                     u11731:
 22380  003C94  6ADE               	clrf	postinc2,c
 22381  003C96  06E8               	decf	wreg,f,c
 22382  003C98  E2FD               	bc	u11731
 22383  003C9A  500A               	movf	___aodiv@divisor^0,w,c
 22384  003C9C  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 22385  003C9E  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 22386  003CA0  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 22387  003CA2  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 22388  003CA4  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 22389  003CA6  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 22390  003CA8  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 22391  003CAA  B4D8               	btfsc	status,2,c
 22392  003CAC  D046               	goto	l13196
 22393  003CAE  0E01               	movlw	1
 22394  003CB0  6E12               	movwf	___aodiv@counter^0,c
 22395  003CB2  D00A               	goto	l13182
 22396  003CB4                     l13180:
 22397  003CB4  90D8               	bcf	status,0,c
 22398  003CB6  360A               	rlcf	___aodiv@divisor^0,f,c
 22399  003CB8  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 22400  003CBA  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 22401  003CBC  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 22402  003CBE  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 22403  003CC0  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 22404  003CC2  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 22405  003CC4  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 22406  003CC6  2A12               	incf	___aodiv@counter^0,f,c
 22407  003CC8                     l13182:
 22408  003CC8  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 22409  003CCA  D7F4               	goto	l13180
 22410  003CCC                     u11750:
 22411  003CCC  90D8               	bcf	status,0,c
 22412  003CCE  3614               	rlcf	___aodiv@quotient^0,f,c
 22413  003CD0  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 22414  003CD2  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 22415  003CD4  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 22416  003CD6  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 22417  003CD8  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 22418  003CDA  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 22419  003CDC  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 22420  003CDE  500A               	movf	___aodiv@divisor^0,w,c
 22421  003CE0  5C02               	subwf	___aodiv@dividend^0,w,c
 22422  003CE2  500B               	movf	(___aodiv@divisor+1)^0,w,c
 22423  003CE4  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 22424  003CE6  500C               	movf	(___aodiv@divisor+2)^0,w,c
 22425  003CE8  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 22426  003CEA  500D               	movf	(___aodiv@divisor+3)^0,w,c
 22427  003CEC  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 22428  003CEE  500E               	movf	(___aodiv@divisor+4)^0,w,c
 22429  003CF0  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 22430  003CF2  500F               	movf	(___aodiv@divisor+5)^0,w,c
 22431  003CF4  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 22432  003CF6  5010               	movf	(___aodiv@divisor+6)^0,w,c
 22433  003CF8  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 22434  003CFA  5011               	movf	(___aodiv@divisor+7)^0,w,c
 22435  003CFC  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 22436  003CFE  A0D8               	btfss	status,0,c
 22437  003D00  D011               	goto	l13192
 22438  003D02  500A               	movf	___aodiv@divisor^0,w,c
 22439  003D04  5E02               	subwf	___aodiv@dividend^0,f,c
 22440  003D06  500B               	movf	(___aodiv@divisor+1)^0,w,c
 22441  003D08  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 22442  003D0A  500C               	movf	(___aodiv@divisor+2)^0,w,c
 22443  003D0C  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 22444  003D0E  500D               	movf	(___aodiv@divisor+3)^0,w,c
 22445  003D10  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 22446  003D12  500E               	movf	(___aodiv@divisor+4)^0,w,c
 22447  003D14  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 22448  003D16  500F               	movf	(___aodiv@divisor+5)^0,w,c
 22449  003D18  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 22450  003D1A  5010               	movf	(___aodiv@divisor+6)^0,w,c
 22451  003D1C  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 22452  003D1E  5011               	movf	(___aodiv@divisor+7)^0,w,c
 22453  003D20  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 22454  003D22  8014               	bsf	___aodiv@quotient^0,0,c
 22455  003D24                     l13192:
 22456  003D24  90D8               	bcf	status,0,c
 22457  003D26  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 22458  003D28  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 22459  003D2A  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 22460  003D2C  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 22461  003D2E  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 22462  003D30  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 22463  003D32  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 22464  003D34  320A               	rrcf	___aodiv@divisor^0,f,c
 22465  003D36  2E12               	decfsz	___aodiv@counter^0,f,c
 22466  003D38  D7C9               	goto	u11750
 22467  003D3A                     l13196:
 22468  003D3A  5013               	movf	___aodiv@sign^0,w,c
 22469  003D3C  B4D8               	btfsc	status,2,c
 22470  003D3E  D010               	goto	l13200
 22471  003D40  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 22472  003D42  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 22473  003D44  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 22474  003D46  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 22475  003D48  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 22476  003D4A  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 22477  003D4C  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 22478  003D4E  6C14               	negf	___aodiv@quotient^0,c
 22479  003D50  0E00               	movlw	0
 22480  003D52  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 22481  003D54  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 22482  003D56  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 22483  003D58  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 22484  003D5A  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 22485  003D5C  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 22486  003D5E  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 22487  003D60                     l13200:
 22488  003D60  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 22489  003D66  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 22490  003D6C  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 22491  003D72  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 22492  003D78  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 22493  003D7E  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 22494  003D84  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 22495  003D8A  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 22496  003D90  0012               	return		;funcret
 22497  003D92                     __end_of___aodiv:
 22498                           	opt callstack 0
 22499                           
 22500 ;; *************** function _atoi *****************
 22501 ;; Defined at:
 22502 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 22503 ;; Parameters:    Size  Location     Type
 22504 ;;  s               2    8[COMRAM] PTR const unsigned char 
 22505 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 22506 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 22507 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 22508 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 22509 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 22510 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 22511 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 22512 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 22513 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 22514 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 22515 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 22516 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 22517 ;; Auto vars:     Size  Location     Type
 22518 ;;  n               2   21[COMRAM] int 
 22519 ;;  neg             2   14[COMRAM] int 
 22520 ;; Return value:  Size  Location     Type
 22521 ;;                  2    8[COMRAM] int 
 22522 ;; Registers used:
 22523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22524 ;; Tracked objects:
 22525 ;;		On entry : 3F/0
 22526 ;;		On exit  : 0/0
 22527 ;;		Unchanged: 0/0
 22528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22530 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22532 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22533 ;;Total ram usage:       15 bytes
 22534 ;; Hardware stack levels used:    1
 22535 ;; Hardware stack levels required when called:    8
 22536 ;; This function calls:
 22537 ;;		___wmul
 22538 ;;		_isdigit
 22539 ;;		_isspace
 22540 ;; This function is called by:
 22541 ;;		_vfpfcnvrt
 22542 ;; This function uses a non-reentrant model
 22543 ;;
 22544                           
 22545                           	psect	text140
 22546  003808                     __ptext140:
 22547                           	opt callstack 0
 22548  003808                     _atoi:
 22549                           	opt callstack 16
 22550                           
 22551                           ; BSR set to: 0
 22552                           
 22553                           ;incstack = 0
 22554  003808  0E00               	movlw	0
 22555  00380A  6E17               	movwf	(atoi@n+1)^0,c
 22556  00380C  0E00               	movlw	0
 22557  00380E  6E16               	movwf	atoi@n^0,c
 22558  003810  0E00               	movlw	0
 22559  003812  6E10               	movwf	(atoi@neg+1)^0,c
 22560  003814  0E00               	movlw	0
 22561  003816  6E0F               	movwf	atoi@neg^0,c
 22562  003818  D002               	goto	l13500
 22563  00381A                     l13498:
 22564                           
 22565                           ; BSR set to: 0
 22566  00381A  4A09               	infsnz	atoi@s^0,f,c
 22567  00381C  2A0A               	incf	(atoi@s+1)^0,f,c
 22568  00381E                     l13500:
 22569                           
 22570                           ; BSR set to: 0
 22571  00381E  0E01               	movlw	1
 22572  003820  6E15               	movwf	_atoi$7705^0,c
 22573                           
 22574                           ; BSR set to: 0
 22575  003822  0060  F027  FFF6   	movff	atoi@s,tblptrl
 22576  003828  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 22577  00382E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22578  00382E  6AF8               	clrf	tblptru,c
 22579  003830                     	endif
 22580  003830                     	if	0	;tblptru may be non-zero
 22581  003830                     	endif
 22582  003830  0008               	tblrd		*
 22583  003832  50F5               	movf	tablat,w,c
 22584  003834  0A20               	xorlw	32
 22585  003836  B4D8               	btfsc	status,2,c
 22586  003838  D01B               	goto	l13508
 22587                           
 22588                           ; BSR set to: 0
 22589  00383A  0EF7               	movlw	247
 22590  00383C  6E0B               	movwf	??_atoi^0,c
 22591  00383E  0EFF               	movlw	255
 22592  003840  6E0C               	movwf	(??_atoi+1)^0,c
 22593  003842  0060  F027  FFF6   	movff	atoi@s,tblptrl
 22594  003848  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 22595  00384E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22596  00384E  6AF8               	clrf	tblptru,c
 22597  003850                     	endif
 22598  003850                     	if	0	;tblptru may be non-zero
 22599  003850                     	endif
 22600  003850  0008               	tblrd		*
 22601  003852  50F5               	movf	tablat,w,c
 22602  003854  6E0D               	movwf	(??_atoi+2)^0,c
 22603  003856  6A0E               	clrf	(??_atoi+3)^0,c
 22604  003858  500B               	movf	??_atoi^0,w,c
 22605  00385A  260D               	addwf	(??_atoi+2)^0,f,c
 22606  00385C  500C               	movf	(??_atoi+1)^0,w,c
 22607  00385E  220E               	addwfc	(??_atoi+3)^0,f,c
 22608  003860  500E               	movf	(??_atoi+3)^0,w,c
 22609  003862  E104               	bnz	u12420
 22610  003864  0E05               	movlw	5
 22611  003866  5C0D               	subwf	(??_atoi+2)^0,w,c
 22612  003868  A0D8               	btfss	status,0,c
 22613  00386A  D002               	goto	l13508
 22614  00386C                     u12420:
 22615                           
 22616                           ; BSR set to: 0
 22617  00386C  0E00               	movlw	0
 22618  00386E  6E15               	movwf	_atoi$7705^0,c
 22619  003870                     l13508:
 22620                           
 22621                           ; BSR set to: 0
 22622  003870  0060  F054  F011   	movff	_atoi$7705,_atoi$7704
 22623  003876  6A12               	clrf	(_atoi$7704+1)^0,c
 22624                           
 22625                           ; BSR set to: 0
 22626  003878  5011               	movf	_atoi$7704^0,w,c
 22627  00387A  1012               	iorwf	(_atoi$7704+1)^0,w,c
 22628  00387C  B4D8               	btfsc	status,2,c
 22629  00387E  D008               	goto	l13518
 22630  003880  D7CC               	goto	l13498
 22631  003882                     l13514:
 22632                           
 22633                           ; BSR set to: 0
 22634  003882  0E00               	movlw	0
 22635  003884  6E10               	movwf	(atoi@neg+1)^0,c
 22636  003886  0E01               	movlw	1
 22637  003888  6E0F               	movwf	atoi@neg^0,c
 22638  00388A                     l13516:
 22639  00388A  4A09               	infsnz	atoi@s^0,f,c
 22640  00388C  2A0A               	incf	(atoi@s+1)^0,f,c
 22641  00388E  D036               	goto	l13524
 22642  003890                     l13518:
 22643                           
 22644                           ; BSR set to: 0
 22645  003890  0060  F027  FFF6   	movff	atoi@s,tblptrl
 22646  003896  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 22647  00389C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22648  00389C  6AF8               	clrf	tblptru,c
 22649  00389E                     	endif
 22650  00389E                     	if	0	;tblptru may be non-zero
 22651  00389E                     	endif
 22652  00389E  0008               	tblrd		*
 22653  0038A0  50F5               	movf	tablat,w,c
 22654  0038A2  6E0B               	movwf	??_atoi^0,c
 22655  0038A4  6A0C               	clrf	(??_atoi+1)^0,c
 22656                           
 22657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22658                           ; Switch size 1, requested type "simple"
 22659                           ; Number of cases is 1, Range of values is 0 to 0
 22660                           ; switch strategies available:
 22661                           ; Name         Instructions Cycles
 22662                           ; simple_byte            4     3 (average)
 22663                           ;	Chosen strategy is simple_byte
 22664  0038A6  500C               	movf	(??_atoi+1)^0,w,c
 22665  0038A8  0A00               	xorlw	0	; case 0
 22666  0038AA  A4D8               	btfss	status,2,c
 22667  0038AC  D027               	goto	l13524
 22668                           
 22669                           ; BSR set to: 0
 22670                           ; Switch size 1, requested type "simple"
 22671                           ; Number of cases is 2, Range of values is 43 to 45
 22672                           ; switch strategies available:
 22673                           ; Name         Instructions Cycles
 22674                           ; simple_byte            7     4 (average)
 22675                           ;	Chosen strategy is simple_byte
 22676  0038AE  500B               	movf	??_atoi^0,w,c
 22677  0038B0  0A2B               	xorlw	43	; case 43
 22678  0038B2  B4D8               	btfsc	status,2,c
 22679  0038B4  D7EA               	goto	l13516
 22680  0038B6  0A06               	xorlw	6	; case 45
 22681  0038B8  B4D8               	btfsc	status,2,c
 22682  0038BA  D7E3               	goto	l13514
 22683  0038BC  D01F               	goto	l13524
 22684  0038BE                     l13520:
 22685  0038BE  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 22686  0038C4  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 22687  0038CA  0E00               	movlw	0
 22688  0038CC  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 22689  0038CE  0E0A               	movlw	10
 22690  0038D0  6E04               	movwf	___wmul@multiplicand^0,c
 22691  0038D2  EC22  F03F         	call	___wmul	;wreg free
 22692  0038D6  0060  F027  FFF6   	movff	atoi@s,tblptrl
 22693  0038DC  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 22694  0038E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22695  0038E2  6AF8               	clrf	tblptru,c
 22696  0038E4                     	endif
 22697  0038E4                     	if	0	;tblptru may be non-zero
 22698  0038E4                     	endif
 22699  0038E4  0008               	tblrd		*
 22700  0038E6  50F5               	movf	tablat,w,c
 22701  0038E8  5E02               	subwf	?___wmul^0,f,c
 22702  0038EA  0E00               	movlw	0
 22703  0038EC  5A03               	subwfb	(?___wmul+1)^0,f,c
 22704  0038EE  0E30               	movlw	48
 22705  0038F0  2402               	addwf	?___wmul^0,w,c
 22706  0038F2  6E16               	movwf	atoi@n^0,c
 22707  0038F4  0E00               	movlw	0
 22708  0038F6  2003               	addwfc	(?___wmul+1)^0,w,c
 22709  0038F8  6E17               	movwf	(atoi@n+1)^0,c
 22710  0038FA  D7C7               	goto	l13516
 22711  0038FC                     l13524:
 22712  0038FC  0ED0               	movlw	208
 22713  0038FE  6E0B               	movwf	??_atoi^0,c
 22714  003900  0EFF               	movlw	255
 22715  003902  6E0C               	movwf	(??_atoi+1)^0,c
 22716  003904  0060  F027  FFF6   	movff	atoi@s,tblptrl
 22717  00390A  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 22718  003910                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22719  003910  6AF8               	clrf	tblptru,c
 22720  003912                     	endif
 22721  003912                     	if	0	;tblptru may be non-zero
 22722  003912                     	endif
 22723  003912  0008               	tblrd		*
 22724  003914  50F5               	movf	tablat,w,c
 22725  003916  6E0D               	movwf	(??_atoi+2)^0,c
 22726  003918  6A0E               	clrf	(??_atoi+3)^0,c
 22727  00391A  500B               	movf	??_atoi^0,w,c
 22728  00391C  260D               	addwf	(??_atoi+2)^0,f,c
 22729  00391E  500C               	movf	(??_atoi+1)^0,w,c
 22730  003920  220E               	addwfc	(??_atoi+3)^0,f,c
 22731  003922  500E               	movf	(??_atoi+3)^0,w,c
 22732  003924  E106               	bnz	u12440
 22733  003926  0E0A               	movlw	10
 22734  003928  5C0D               	subwf	(??_atoi+2)^0,w,c
 22735  00392A  B0D8               	btfsc	status,0,c
 22736  00392C  D002               	goto	u12440
 22737  00392E  0E01               	movlw	1
 22738  003930  D001               	goto	u12450
 22739  003932                     u12440:
 22740  003932  0E00               	movlw	0
 22741  003934                     u12450:
 22742  003934  6E13               	movwf	_atoi$7706^0,c
 22743  003936  6A14               	clrf	(_atoi$7706+1)^0,c
 22744  003938  5013               	movf	_atoi$7706^0,w,c
 22745  00393A  1014               	iorwf	(_atoi$7706+1)^0,w,c
 22746  00393C  A4D8               	btfss	status,2,c
 22747  00393E  D7BF               	goto	l13520
 22748  003940  500F               	movf	atoi@neg^0,w,c
 22749  003942  1010               	iorwf	(atoi@neg+1)^0,w,c
 22750  003944  A4D8               	btfss	status,2,c
 22751  003946  D011               	goto	l3909
 22752  003948  0060  F058  F00B   	movff	atoi@n,??_atoi
 22753  00394E  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 22754  003954  1E0B               	comf	??_atoi^0,f,c
 22755  003956  1E0C               	comf	(??_atoi+1)^0,f,c
 22756  003958  4A0B               	infsnz	??_atoi^0,f,c
 22757  00395A  2A0C               	incf	(??_atoi+1)^0,f,c
 22758  00395C  0060  F02C  F009   	movff	??_atoi,?_atoi
 22759  003962  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 22760  003968  0012               	return	
 22761  00396A                     l3909:
 22762  00396A  0060  F058  F009   	movff	atoi@n,?_atoi
 22763  003970  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 22764  003976  0012               	return		;funcret
 22765  003978                     __end_of_atoi:
 22766                           	opt callstack 0
 22767                           
 22768 ;; *************** function _isspace *****************
 22769 ;; Defined at:
 22770 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 22771 ;; Parameters:    Size  Location     Type
 22772 ;;  c               2    1[COMRAM] int 
 22773 ;; Auto vars:     Size  Location     Type
 22774 ;;		None
 22775 ;; Return value:  Size  Location     Type
 22776 ;;                  2    1[COMRAM] int 
 22777 ;; Registers used:
 22778 ;;		wreg, status,2, status,0
 22779 ;; Tracked objects:
 22780 ;;		On entry : 0/0
 22781 ;;		On exit  : 0/0
 22782 ;;		Unchanged: 0/0
 22783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22787 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22788 ;;Total ram usage:        7 bytes
 22789 ;; Hardware stack levels used:    1
 22790 ;; Hardware stack levels required when called:    7
 22791 ;; This function calls:
 22792 ;;		Nothing
 22793 ;; This function is called by:
 22794 ;;		_atoi
 22795 ;;		___strtoxl
 22796 ;; This function uses a non-reentrant model
 22797 ;;
 22798                           
 22799                           	psect	text141
 22800  00776E                     __ptext141:
 22801                           	opt callstack 0
 22802  00776E                     _isspace:
 22803                           	opt callstack 16
 22804                           
 22805                           ;incstack = 0
 22806  00776E  0E01               	movlw	1
 22807  007770  6E08               	movwf	_isspace$7731^0,c
 22808  007772  0E20               	movlw	32
 22809  007774  1802               	xorwf	isspace@c^0,w,c
 22810  007776  1003               	iorwf	(isspace@c+1)^0,w,c
 22811  007778  B4D8               	btfsc	status,2,c
 22812  00777A  D016               	goto	l13286
 22813  00777C  0EF7               	movlw	247
 22814  00777E  6E04               	movwf	??_isspace^0,c
 22815  007780  0EFF               	movlw	255
 22816  007782  6E05               	movwf	(??_isspace+1)^0,c
 22817  007784  0060  F008  F006   	movff	isspace@c,??_isspace+2
 22818  00778A  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 22819  007790  5004               	movf	??_isspace^0,w,c
 22820  007792  2606               	addwf	(??_isspace+2)^0,f,c
 22821  007794  5005               	movf	(??_isspace+1)^0,w,c
 22822  007796  2207               	addwfc	(??_isspace+3)^0,f,c
 22823  007798  5007               	movf	(??_isspace+3)^0,w,c
 22824  00779A  E104               	bnz	u11920
 22825  00779C  0E05               	movlw	5
 22826  00779E  5C06               	subwf	(??_isspace+2)^0,w,c
 22827  0077A0  A0D8               	btfss	status,0,c
 22828  0077A2  D002               	goto	l13286
 22829  0077A4                     u11920:
 22830  0077A4  0E00               	movlw	0
 22831  0077A6  6E08               	movwf	_isspace$7731^0,c
 22832  0077A8                     l13286:
 22833  0077A8  0060  F020  F002   	movff	_isspace$7731,?_isspace
 22834  0077AE  6A03               	clrf	(?_isspace+1)^0,c
 22835  0077B0  0012               	return		;funcret
 22836  0077B2                     __end_of_isspace:
 22837                           	opt callstack 0
 22838                           
 22839 ;; *************** function _isdigit *****************
 22840 ;; Defined at:
 22841 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 22842 ;; Parameters:    Size  Location     Type
 22843 ;;  c               2    1[COMRAM] int 
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;		None
 22846 ;; Return value:  Size  Location     Type
 22847 ;;                  2    1[COMRAM] int 
 22848 ;; Registers used:
 22849 ;;		wreg, status,2, status,0
 22850 ;; Tracked objects:
 22851 ;;		On entry : 0/0
 22852 ;;		On exit  : 0/0
 22853 ;;		Unchanged: 0/0
 22854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22858 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22859 ;;Total ram usage:        6 bytes
 22860 ;; Hardware stack levels used:    1
 22861 ;; Hardware stack levels required when called:    7
 22862 ;; This function calls:
 22863 ;;		Nothing
 22864 ;; This function is called by:
 22865 ;;		_vfpfcnvrt
 22866 ;;		_atoi
 22867 ;;		___strtoxl
 22868 ;; This function uses a non-reentrant model
 22869 ;;
 22870                           
 22871                           	psect	text142
 22872  007DDE                     __ptext142:
 22873                           	opt callstack 0
 22874  007DDE                     _isdigit:
 22875                           	opt callstack 17
 22876                           
 22877                           ;incstack = 0
 22878  007DDE  0ED0               	movlw	208
 22879  007DE0  6E04               	movwf	??_isdigit^0,c
 22880  007DE2  0EFF               	movlw	255
 22881  007DE4  6E05               	movwf	(??_isdigit+1)^0,c
 22882  007DE6  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 22883  007DEC  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 22884  007DF2  5004               	movf	??_isdigit^0,w,c
 22885  007DF4  2606               	addwf	(??_isdigit+2)^0,f,c
 22886  007DF6  5005               	movf	(??_isdigit+1)^0,w,c
 22887  007DF8  2207               	addwfc	(??_isdigit+3)^0,f,c
 22888  007DFA  5007               	movf	(??_isdigit+3)^0,w,c
 22889  007DFC  E106               	bnz	u11690
 22890  007DFE  0E0A               	movlw	10
 22891  007E00  5C06               	subwf	(??_isdigit+2)^0,w,c
 22892  007E02  B0D8               	btfsc	status,0,c
 22893  007E04  D002               	goto	u11690
 22894  007E06  0E01               	movlw	1
 22895  007E08  D001               	goto	u11700
 22896  007E0A                     u11690:
 22897  007E0A  0E00               	movlw	0
 22898  007E0C                     u11700:
 22899  007E0C  6E02               	movwf	?_isdigit^0,c
 22900  007E0E  6A03               	clrf	(?_isdigit+1)^0,c
 22901  007E10  0012               	return		;funcret
 22902  007E12                     __end_of_isdigit:
 22903                           	opt callstack 0
 22904                           
 22905 ;; *************** function ___wmul *****************
 22906 ;; Defined at:
 22907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 22908 ;; Parameters:    Size  Location     Type
 22909 ;;  multiplier      2    1[COMRAM] unsigned int 
 22910 ;;  multiplicand    2    3[COMRAM] unsigned int 
 22911 ;; Auto vars:     Size  Location     Type
 22912 ;;  product         2    5[COMRAM] unsigned int 
 22913 ;; Return value:  Size  Location     Type
 22914 ;;                  2    1[COMRAM] unsigned int 
 22915 ;; Registers used:
 22916 ;;		wreg, status,2, status,0, prodl, prodh
 22917 ;; Tracked objects:
 22918 ;;		On entry : 0/0
 22919 ;;		On exit  : 0/0
 22920 ;;		Unchanged: 0/0
 22921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22926 ;;Total ram usage:        6 bytes
 22927 ;; Hardware stack levels used:    1
 22928 ;; Hardware stack levels required when called:    7
 22929 ;; This function calls:
 22930 ;;		Nothing
 22931 ;; This function is called by:
 22932 ;;		_atoi
 22933 ;;		_CircularBufferPushBack
 22934 ;;		_CircularBufferPopFront
 22935 ;; This function uses a non-reentrant model
 22936 ;;
 22937                           
 22938                           	psect	text143
 22939  007E44                     __ptext143:
 22940                           	opt callstack 0
 22941  007E44                     ___wmul:
 22942                           	opt callstack 19
 22943                           
 22944                           ;incstack = 0
 22945  007E44  5002               	movf	___wmul@multiplier^0,w,c
 22946  007E46  0204               	mulwf	___wmul@multiplicand^0,c
 22947  007E48  006F FFCC  F006    	movff	prodl,___wmul@product
 22948  007E4E  006F FFD0  F007    	movff	prodh,___wmul@product+1
 22949  007E54  5002               	movf	___wmul@multiplier^0,w,c
 22950  007E56  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 22951  007E58  50F3               	movf	243,w,c
 22952  007E5A  2607               	addwf	(___wmul@product+1)^0,f,c
 22953  007E5C  5003               	movf	(___wmul@multiplier+1)^0,w,c
 22954  007E5E  0204               	mulwf	___wmul@multiplicand^0,c
 22955  007E60  50F3               	movf	243,w,c
 22956  007E62  2607               	addwf	(___wmul@product+1)^0,f,c
 22957  007E64  0060  F018  F002   	movff	___wmul@product,?___wmul
 22958  007E6A  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 22959  007E70  0012               	return		;funcret
 22960  007E72                     __end_of___wmul:
 22961                           	opt callstack 0
 22962                           
 22963 ;; *************** function _nwkRouteFrame *****************
 22964 ;; Defined at:
 22965 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 22966 ;; Parameters:    Size  Location     Type
 22967 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 22968 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22969 ;; Auto vars:     Size  Location     Type
 22970 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 22971 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22972 ;; Return value:  Size  Location     Type
 22973 ;;                  1    wreg      void 
 22974 ;; Registers used:
 22975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22976 ;; Tracked objects:
 22977 ;;		On entry : 2/1
 22978 ;;		On exit  : 3F/1
 22979 ;;		Unchanged: 0/0
 22980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22985 ;;Total ram usage:        4 bytes
 22986 ;; Hardware stack levels used:    1
 22987 ;; Hardware stack levels required when called:   12
 22988 ;; This function calls:
 22989 ;;		_NWK_RouteNextHop
 22990 ;;		_nwkFrameFree
 22991 ;;		_nwkRouteSendRouteError
 22992 ;;		_nwkTxFrame
 22993 ;; This function is called by:
 22994 ;;		_nwkRxTaskHandler
 22995 ;; This function uses a non-reentrant model
 22996 ;;
 22997                           
 22998                           	psect	text144
 22999  005678                     __ptext144:
 23000                           	opt callstack 0
 23001  005678                     _nwkRouteFrame:
 23002                           	opt callstack 15
 23003                           
 23004                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 23005                           
 23006                           ;incstack = 0
 23007  005678  0E02               	movlw	2
 23008  00567A  2433               	addwf	nwkRouteFrame@frame^0,w,c
 23009  00567C  6E35               	movwf	nwkRouteFrame@header^0,c
 23010  00567E  0E00               	movlw	0
 23011  005680  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 23012  005682  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 23013                           
 23014                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 23015  005684  EE20 F00D          	lfsr	2,13
 23016  005688  5035               	movf	nwkRouteFrame@header^0,w,c
 23017  00568A  26D9               	addwf	fsr2l,f,c
 23018  00568C  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23019  00568E  22DA               	addwfc	fsr2h,f,c
 23020  005690  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 23021  005696  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 23022  00569C  EE20 F009          	lfsr	2,9
 23023  0056A0  5035               	movf	nwkRouteFrame@header^0,w,c
 23024  0056A2  26D9               	addwf	fsr2l,f,c
 23025  0056A4  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23026  0056A6  22DA               	addwfc	fsr2h,f,c
 23027  0056A8  0E00               	movlw	0
 23028  0056AA  B6DF               	btfsc	indf2,3,c
 23029  0056AC  0E01               	movlw	1
 23030  0056AE  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 23031  0056B0  ECE6  F03A         	call	_NWK_RouteNextHop	;wreg free
 23032  0056B4  2808               	incf	?_NWK_RouteNextHop^0,w,c
 23033  0056B6  E103               	bnz	u14360
 23034  0056B8  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 23035  0056BA  B4D8               	btfsc	status,2,c
 23036  0056BC  D01B               	goto	l14878
 23037  0056BE                     u14360:
 23038                           
 23039                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 23040  0056BE  EE20 F087          	lfsr	2,135
 23041  0056C2  5033               	movf	nwkRouteFrame@frame^0,w,c
 23042  0056C4  26D9               	addwf	fsr2l,f,c
 23043  0056C6  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 23044  0056C8  22DA               	addwfc	fsr2h,f,c
 23045  0056CA  0E00               	movlw	0
 23046  0056CC  6EDE               	movwf	postinc2,c
 23047  0056CE  0E00               	movlw	0
 23048  0056D0  6EDD               	movwf	postdec2,c
 23049                           
 23050                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 23051  0056D2  EE20 F086          	lfsr	2,134
 23052  0056D6  5033               	movf	nwkRouteFrame@frame^0,w,c
 23053  0056D8  26D9               	addwf	fsr2l,f,c
 23054  0056DA  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 23055  0056DC  22DA               	addwfc	fsr2h,f,c
 23056  0056DE  0E02               	movlw	2
 23057  0056E0  6EDF               	movwf	indf2,c
 23058                           
 23059                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 23060  0056E2  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 23061  0056E8  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 23062  0056EE  EC87  F01A         	call	_nwkTxFrame	;wreg free
 23063                           
 23064                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 23065  0056F2  0012               	return	
 23066  0056F4                     l14878:
 23067                           
 23068                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 23069  0056F4  EE20 F00B          	lfsr	2,11
 23070  0056F8  5035               	movf	nwkRouteFrame@header^0,w,c
 23071  0056FA  26D9               	addwf	fsr2l,f,c
 23072  0056FC  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23073  0056FE  22DA               	addwfc	fsr2h,f,c
 23074  005700  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 23075  005706  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 23076  00570C  EE20 F00D          	lfsr	2,13
 23077  005710  5035               	movf	nwkRouteFrame@header^0,w,c
 23078  005712  26D9               	addwf	fsr2l,f,c
 23079  005714  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23080  005716  22DA               	addwfc	fsr2h,f,c
 23081  005718  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 23082  00571E  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 23083  005724  EE20 F009          	lfsr	2,9
 23084  005728  5035               	movf	nwkRouteFrame@header^0,w,c
 23085  00572A  26D9               	addwf	fsr2l,f,c
 23086  00572C  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23087  00572E  22DA               	addwfc	fsr2h,f,c
 23088  005730  0E00               	movlw	0
 23089  005732  B6DF               	btfsc	indf2,3,c
 23090  005734  0E01               	movlw	1
 23091  005736  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 23092  005738  EC18  F029         	call	_nwkRouteSendRouteError	;wreg free
 23093                           
 23094                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 23095  00573C  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 23096  005742  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 23097  005748  EC1D  F041         	call	_nwkFrameFree	;wreg free
 23098                           
 23099                           ; BSR set to: 1
 23100  00574C  0012               	return		;funcret
 23101  00574E                     __end_of_nwkRouteFrame:
 23102                           	opt callstack 0
 23103                           
 23104 ;; *************** function _nwkRouteSendRouteError *****************
 23105 ;; Defined at:
 23106 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 23107 ;; Parameters:    Size  Location     Type
 23108 ;;  src             2   41[COMRAM] unsigned short 
 23109 ;;  dst             2   43[COMRAM] unsigned short 
 23110 ;;  multicast       1   45[COMRAM] unsigned char 
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 23113 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23114 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 23115 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23116 ;; Return value:  Size  Location     Type
 23117 ;;                  1    wreg      void 
 23118 ;; Registers used:
 23119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23120 ;; Tracked objects:
 23121 ;;		On entry : 0/1
 23122 ;;		On exit  : 0/0
 23123 ;;		Unchanged: 0/0
 23124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23125 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23126 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23128 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23129 ;;Total ram usage:        9 bytes
 23130 ;; Hardware stack levels used:    1
 23131 ;; Hardware stack levels required when called:   11
 23132 ;; This function calls:
 23133 ;;		_nwkFrameAlloc
 23134 ;;		_nwkFrameCommandInit
 23135 ;;		_nwkTxFrame
 23136 ;; This function is called by:
 23137 ;;		_nwkRouteFrame
 23138 ;; This function uses a non-reentrant model
 23139 ;;
 23140                           
 23141                           	psect	text145
 23142  005230                     __ptext145:
 23143                           	opt callstack 0
 23144  005230                     _nwkRouteSendRouteError:
 23145                           	opt callstack 15
 23146                           
 23147                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 23148                           
 23149                           ; BSR set to: 1
 23150                           ;incstack = 0
 23151  005230  EC22  F02F         	call	_nwkFrameAlloc	;wreg free
 23152  005234  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 23153  00523A  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 23154  005240  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 23155  005242  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 23156  005244  B4D8               	btfsc	status,2,c
 23157  005246  0012               	return	
 23158                           
 23159                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 23160  005248  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 23161  00524E  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 23162  005254  EC1A  F03C         	call	_nwkFrameCommandInit	;wreg free
 23163                           
 23164                           ; BSR set to: 1
 23165                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 23166  005258  EE20 F001          	lfsr	2,1
 23167  00525C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 23168  00525E  26D9               	addwf	fsr2l,f,c
 23169  005260  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 23170  005262  22DA               	addwfc	fsr2h,f,c
 23171  005264  0E06               	movlw	6
 23172  005266  26DF               	addwf	indf2,f,c
 23173                           
 23174                           ; BSR set to: 1
 23175                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 23176  005268  EE20 F087          	lfsr	2,135
 23177  00526C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 23178  00526E  26D9               	addwf	fsr2l,f,c
 23179  005270  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 23180  005272  22DA               	addwfc	fsr2h,f,c
 23181  005274  0E00               	movlw	0
 23182  005276  6EDE               	movwf	postinc2,c
 23183  005278  0E00               	movlw	0
 23184  00527A  6EDD               	movwf	postdec2,c
 23185                           
 23186                           ; BSR set to: 1
 23187                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 23188  00527C  EE20 F00F          	lfsr	2,15
 23189  005280  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 23190  005282  26D9               	addwf	fsr2l,f,c
 23191  005284  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 23192  005286  22DA               	addwfc	fsr2h,f,c
 23193  005288  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 23194  00528E  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 23195                           
 23196                           ; BSR set to: 1
 23197                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 23198  005294  EE20 F081          	lfsr	2,129
 23199  005298  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 23200  00529A  26D9               	addwf	fsr2l,f,c
 23201  00529C  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 23202  00529E  22DA               	addwfc	fsr2h,f,c
 23203  0052A0  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 23204  0052A6  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 23205                           
 23206                           ; BSR set to: 1
 23207                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 23208  0052AC  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 23209  0052B2  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 23210  0052B8  0E01               	movlw	1
 23211  0052BA  6EDF               	movwf	indf2,c
 23212                           
 23213                           ; BSR set to: 1
 23214                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 23215  0052BC  EE20 F001          	lfsr	2,1
 23216  0052C0  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 23217  0052C2  26D9               	addwf	fsr2l,f,c
 23218  0052C4  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 23219  0052C6  22DA               	addwfc	fsr2h,f,c
 23220  0052C8  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 23221  0052CE  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 23222                           
 23223                           ; BSR set to: 1
 23224                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 23225  0052D4  EE20 F003          	lfsr	2,3
 23226  0052D8  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 23227  0052DA  26D9               	addwf	fsr2l,f,c
 23228  0052DC  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 23229  0052DE  22DA               	addwfc	fsr2h,f,c
 23230  0052E0  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 23231  0052E6  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 23235  0052EC  EE20 F005          	lfsr	2,5
 23236  0052F0  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 23237  0052F2  26D9               	addwf	fsr2l,f,c
 23238  0052F4  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 23239  0052F6  22DA               	addwfc	fsr2h,f,c
 23240  0052F8  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 23241                           
 23242                           ; BSR set to: 1
 23243                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 23244  0052FE  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 23245  005304  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 23246  00530A  EC87  F01A         	call	_nwkTxFrame	;wreg free
 23247  00530E  0012               	return		;funcret
 23248  005310                     __end_of_nwkRouteSendRouteError:
 23249                           	opt callstack 0
 23250                           
 23251 ;; *************** function _nwkFrameCommandInit *****************
 23252 ;; Defined at:
 23253 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 23254 ;; Parameters:    Size  Location     Type
 23255 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 23256 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23257 ;; Auto vars:     Size  Location     Type
 23258 ;;		None
 23259 ;; Return value:  Size  Location     Type
 23260 ;;                  1    wreg      void 
 23261 ;; Registers used:
 23262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23263 ;; Tracked objects:
 23264 ;;		On entry : 0/0
 23265 ;;		On exit  : 3F/1
 23266 ;;		Unchanged: 0/0
 23267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23272 ;;Total ram usage:        2 bytes
 23273 ;; Hardware stack levels used:    1
 23274 ;; Hardware stack levels required when called:    7
 23275 ;; This function calls:
 23276 ;;		Nothing
 23277 ;; This function is called by:
 23278 ;;		_nwkRouteSendRouteError
 23279 ;;		_nwkRxSendAck
 23280 ;; This function uses a non-reentrant model
 23281 ;;
 23282                           
 23283                           	psect	text146
 23284  007834                     __ptext146:
 23285                           	opt callstack 0
 23286  007834                     _nwkFrameCommandInit:
 23287                           	opt callstack 18
 23288                           
 23289                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 23290                           
 23291                           ;incstack = 0
 23292  007834  EE20 F083          	lfsr	2,131
 23293  007838  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 23294  00783A  26D9               	addwf	fsr2l,f,c
 23295  00783C  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 23296  00783E  22DA               	addwfc	fsr2h,f,c
 23297  007840  0E00               	movlw	0
 23298  007842  6EDF               	movwf	indf2,c
 23299                           
 23300                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 23301  007844  0101               	movlb	1	; () banked
 23302  007846  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 23303  007848  EE20 F00C          	lfsr	2,12
 23304  00784C  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 23305  00784E  26D9               	addwf	fsr2l,f,c
 23306  007850  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 23307  007852  22DA               	addwfc	fsr2h,f,c
 23308  007854  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 23309                           
 23310                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 23311  00785A  EE20 F00D          	lfsr	2,13
 23312  00785E  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 23313  007860  26D9               	addwf	fsr2l,f,c
 23314  007862  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 23315  007864  22DA               	addwfc	fsr2h,f,c
 23316  007866  0060  F403  FFDE   	movff	_nwkIb,postinc2
 23317  00786C  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 23318                           
 23319                           ; BSR set to: 1
 23320  007872  0012               	return		;funcret
 23321  007874                     __end_of_nwkFrameCommandInit:
 23322                           	opt callstack 0
 23323                           
 23324 ;; *************** function _nwkFrameFree *****************
 23325 ;; Defined at:
 23326 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 23327 ;; Parameters:    Size  Location     Type
 23328 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 23329 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23330 ;; Auto vars:     Size  Location     Type
 23331 ;;		None
 23332 ;; Return value:  Size  Location     Type
 23333 ;;                  1    wreg      void 
 23334 ;; Registers used:
 23335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23336 ;; Tracked objects:
 23337 ;;		On entry : 0/1
 23338 ;;		On exit  : 3F/1
 23339 ;;		Unchanged: 0/0
 23340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23345 ;;Total ram usage:        2 bytes
 23346 ;; Hardware stack levels used:    1
 23347 ;; Hardware stack levels required when called:    7
 23348 ;; This function calls:
 23349 ;;		Nothing
 23350 ;; This function is called by:
 23351 ;;		_nwkDataReqTxConf
 23352 ;;		_nwkRouteFrame
 23353 ;;		_nwkRxTaskHandler
 23354 ;;		_nwkTxTaskHandler
 23355 ;; This function uses a non-reentrant model
 23356 ;;
 23357                           
 23358                           	psect	text147
 23359  00823A                     __ptext147:
 23360                           	opt callstack 0
 23361  00823A                     _nwkFrameFree:
 23362                           	opt callstack 20
 23363                           
 23364                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 23365                           
 23366                           ; BSR set to: 1
 23367                           ;incstack = 0
 23368  00823A  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 23369  008240  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 23370  008246  0E00               	movlw	0
 23371  008248  6EDF               	movwf	indf2,c
 23372                           
 23373                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 23374  00824A  0101               	movlb	1	; () banked
 23375  00824C  0726               	decf	(_nwkIb+38)& (0+255),f,b
 23376  00824E  A0D8               	btfss	status,0,c
 23377  008250  0727               	decf	(_nwkIb+39)& (0+255),f,b
 23378                           
 23379                           ; BSR set to: 1
 23380  008252  0012               	return		;funcret
 23381  008254                     __end_of_nwkFrameFree:
 23382                           	opt callstack 0
 23383                           
 23384 ;; *************** function _nwkDataReqTaskHandler *****************
 23385 ;; Defined at:
 23386 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 23387 ;; Parameters:    Size  Location     Type
 23388 ;;		None
 23389 ;; Auto vars:     Size  Location     Type
 23390 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 23391 ;;		 -> NULL(0), tx_buffer(524), 
 23392 ;; Return value:  Size  Location     Type
 23393 ;;                  1    wreg      void 
 23394 ;; Registers used:
 23395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23396 ;; Tracked objects:
 23397 ;;		On entry : 0/1
 23398 ;;		On exit  : 0/0
 23399 ;;		Unchanged: 0/0
 23400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23405 ;;Total ram usage:        4 bytes
 23406 ;; Hardware stack levels used:    1
 23407 ;; Hardware stack levels required when called:   12
 23408 ;; This function calls:
 23409 ;;		_nwkDataReqConfirm
 23410 ;;		_nwkDataReqSendFrame
 23411 ;; This function is called by:
 23412 ;;		_NWK_TaskHandler
 23413 ;; This function uses a non-reentrant model
 23414 ;;
 23415                           
 23416                           	psect	text148
 23417  006A22                     __ptext148:
 23418                           	opt callstack 0
 23419  006A22                     _nwkDataReqTaskHandler:
 23420                           	opt callstack 16
 23421                           
 23422                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 23423                           
 23424                           ; BSR set to: 1
 23425                           ;incstack = 0
 23426  006A22  0060  F388  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 23427  006A28  0060  F38C  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 23428  006A2E  D035               	goto	l15594
 23429  006A30                     l15576:
 23430                           
 23431                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 23432  006A30  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 23433  006A36  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 23434  006A3C  EC49  F00B         	call	_nwkDataReqSendFrame	;wreg free
 23435  006A40  0012               	return	
 23436  006A42                     l15582:
 23437                           
 23438                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 23439  006A42  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 23440  006A48  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 23441  006A4E  EC34  F028         	call	_nwkDataReqConfirm	;wreg free
 23442  006A52  0012               	return	
 23443  006A54                     l15590:
 23444  006A54  EE20 F004          	lfsr	2,4
 23445  006A58  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 23446  006A5A  26D9               	addwf	fsr2l,f,c
 23447  006A5C  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 23448  006A5E  22DA               	addwfc	fsr2h,f,c
 23449  006A60  50DF               	movf	indf2,w,c
 23450  006A62  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 23451  006A64  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 23452                           
 23453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23454                           ; Switch size 1, requested type "simple"
 23455                           ; Number of cases is 1, Range of values is 0 to 0
 23456                           ; switch strategies available:
 23457                           ; Name         Instructions Cycles
 23458                           ; simple_byte            4     3 (average)
 23459                           ;	Chosen strategy is simple_byte
 23460  006A66  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 23461  006A68  0A00               	xorlw	0	; case 0
 23462  006A6A  A4D8               	btfss	status,2,c
 23463  006A6C  D00A               	goto	l15592
 23464                           
 23465                           ; Switch size 1, requested type "simple"
 23466                           ; Number of cases is 3, Range of values is 0 to 2
 23467                           ; switch strategies available:
 23468                           ; Name         Instructions Cycles
 23469                           ; simple_byte           10     6 (average)
 23470                           ;	Chosen strategy is simple_byte
 23471  006A6E  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 23472  006A70  0A00               	xorlw	0	; case 0
 23473  006A72  B4D8               	btfsc	status,2,c
 23474  006A74  D7DD               	goto	l15576
 23475  006A76  0A01               	xorlw	1	; case 1
 23476  006A78  B4D8               	btfsc	status,2,c
 23477  006A7A  D003               	goto	l15592
 23478  006A7C  0A03               	xorlw	3	; case 2
 23479  006A7E  B4D8               	btfsc	status,2,c
 23480  006A80  D7E0               	goto	l15582
 23481  006A82                     l15592:
 23482                           
 23483                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 23484  006A82  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 23485  006A88  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 23486  006A8E  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 23487  006A94  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 23488  006A9A                     l15594:
 23489  006A9A  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 23490  006A9C  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 23491  006A9E  B4D8               	btfsc	status,2,c
 23492  006AA0  0012               	return	
 23493  006AA2  D7D8               	goto	l15590
 23494  006AA4                     __end_of_nwkDataReqTaskHandler:
 23495                           	opt callstack 0
 23496                           
 23497 ;; *************** function _nwkDataReqSendFrame *****************
 23498 ;; Defined at:
 23499 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 23500 ;; Parameters:    Size  Location     Type
 23501 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 23502 ;;		 -> NULL(0), tx_buffer(524), 
 23503 ;; Auto vars:     Size  Location     Type
 23504 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 23505 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23506 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 23507 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23508 ;; Return value:  Size  Location     Type
 23509 ;;                  1    wreg      void 
 23510 ;; Registers used:
 23511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23512 ;; Tracked objects:
 23513 ;;		On entry : 0/1
 23514 ;;		On exit  : 0/0
 23515 ;;		Unchanged: 0/0
 23516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23518 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23520 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23521 ;;Total ram usage:        7 bytes
 23522 ;; Hardware stack levels used:    1
 23523 ;; Hardware stack levels required when called:   11
 23524 ;; This function calls:
 23525 ;;		_memcpy
 23526 ;;		_nwkFrameAlloc
 23527 ;;		_nwkTxFrame
 23528 ;; This function is called by:
 23529 ;;		_nwkDataReqTaskHandler
 23530 ;; This function uses a non-reentrant model
 23531 ;;
 23532                           
 23533                           	psect	text149
 23534  001692                     __ptext149:
 23535                           	opt callstack 0
 23536  001692                     _nwkDataReqSendFrame:
 23537                           	opt callstack 16
 23538                           
 23539                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 23540                           
 23541                           ;incstack = 0
 23542  001692  EC22  F02F         	call	_nwkFrameAlloc	;wreg free
 23543  001696  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 23544  00169C  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 23545  0016A2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23546  0016A4  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23547  0016A6  A4D8               	btfss	status,2,c
 23548  0016A8  D011               	goto	l14808
 23549                           
 23550                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 23551  0016AA  EE20 F004          	lfsr	2,4
 23552  0016AE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23553  0016B0  26D9               	addwf	fsr2l,f,c
 23554  0016B2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23555  0016B4  22DA               	addwfc	fsr2h,f,c
 23556  0016B6  0E02               	movlw	2
 23557  0016B8  6EDF               	movwf	indf2,c
 23558                           
 23559                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 23560  0016BA  EE20 F011          	lfsr	2,17
 23561  0016BE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23562  0016C0  26D9               	addwf	fsr2l,f,c
 23563  0016C2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23564  0016C4  22DA               	addwfc	fsr2h,f,c
 23565  0016C6  0E02               	movlw	2
 23566  0016C8  6EDF               	movwf	indf2,c
 23567  0016CA  0012               	return	
 23568  0016CC                     l14808:
 23569                           
 23570                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 23571  0016CC  EE20 F002          	lfsr	2,2
 23572  0016D0  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23573  0016D2  26D9               	addwf	fsr2l,f,c
 23574  0016D4  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23575  0016D6  22DA               	addwfc	fsr2h,f,c
 23576  0016D8  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 23577  0016DE  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 23578                           
 23579                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 23580  0016E4  EE20 F004          	lfsr	2,4
 23581  0016E8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23582  0016EA  26D9               	addwf	fsr2l,f,c
 23583  0016EC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23584  0016EE  22DA               	addwfc	fsr2h,f,c
 23585  0016F0  0E01               	movlw	1
 23586  0016F2  6EDF               	movwf	indf2,c
 23587                           
 23588                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 23589  0016F4  EE20 F087          	lfsr	2,135
 23590  0016F8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23591  0016FA  26D9               	addwf	fsr2l,f,c
 23592  0016FC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23593  0016FE  22DA               	addwfc	fsr2h,f,c
 23594  001700  0EAE               	movlw	low _nwkDataReqTxConf
 23595  001702  6EDE               	movwf	postinc2,c
 23596  001704  0E61               	movlw	high _nwkDataReqTxConf
 23597  001706  6EDD               	movwf	postdec2,c
 23598                           
 23599                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 23600  001708  EE20 F086          	lfsr	2,134
 23601  00170C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23602  00170E  26D9               	addwf	fsr2l,f,c
 23603  001710  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23604  001712  22DA               	addwfc	fsr2h,f,c
 23605  001714  EE10 F009          	lfsr	1,9
 23606  001718  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23607  00171A  26E1               	addwf	fsr1l,f,c
 23608  00171C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23609  00171E  22E2               	addwfc	fsr1h,f,c
 23610  001720  A4E7               	btfss	indf1,2,c
 23611  001722  D002               	goto	u14190
 23612  001724  0E01               	movlw	1
 23613  001726  D001               	goto	u14200
 23614  001728                     u14190:
 23615  001728  0E00               	movlw	0
 23616  00172A                     u14200:
 23617  00172A  6EDF               	movwf	indf2,c
 23618                           
 23619                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 23620  00172C  EE20 F009          	lfsr	2,9
 23621  001730  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23622  001732  26D9               	addwf	fsr2l,f,c
 23623  001734  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23624  001736  22DA               	addwfc	fsr2h,f,c
 23625  001738  A0DF               	btfss	indf2,0,c
 23626  00173A  D003               	goto	u14210
 23627  00173C  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 23628  00173E  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 23629  001740  D001               	goto	u14228
 23630  001742                     u14210:
 23631  001742  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 23632  001744                     u14228:
 23633  001744  EE20 F00B          	lfsr	2,11
 23634  001748  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23635  00174A  26D9               	addwf	fsr2l,f,c
 23636  00174C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23637  00174E  22DA               	addwfc	fsr2h,f,c
 23638  001750  50DF               	movf	indf2,w,c
 23639  001752  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23640  001754  0BFE               	andlw	-2
 23641  001756  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23642  001758  6EDF               	movwf	indf2,c
 23643                           
 23644                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 23645  00175A  EE20 F009          	lfsr	2,9
 23646  00175E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23647  001760  26D9               	addwf	fsr2l,f,c
 23648  001762  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23649  001764  22DA               	addwfc	fsr2h,f,c
 23650  001766  A6DF               	btfss	indf2,3,c
 23651  001768  D003               	goto	u14230
 23652  00176A  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 23653  00176C  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 23654  00176E  D001               	goto	u14248
 23655  001770                     u14230:
 23656  001770  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 23657  001772                     u14248:
 23658  001772  EE20 F00B          	lfsr	2,11
 23659  001776  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23660  001778  26D9               	addwf	fsr2l,f,c
 23661  00177A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23662  00177C  22DA               	addwfc	fsr2h,f,c
 23663  00177E  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 23664  001780  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 23665  001782  50DF               	movf	indf2,w,c
 23666  001784  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23667  001786  0BFB               	andlw	-5
 23668  001788  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23669  00178A  6EDF               	movwf	indf2,c
 23670                           
 23671                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 23672  00178C  EE20 F009          	lfsr	2,9
 23673  001790  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23674  001792  26D9               	addwf	fsr2l,f,c
 23675  001794  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23676  001796  22DA               	addwfc	fsr2h,f,c
 23677  001798  A8DF               	btfss	indf2,4,c
 23678  00179A  D003               	goto	u14250
 23679  00179C  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 23680  00179E  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 23681  0017A0  D001               	goto	u14268
 23682  0017A2                     u14250:
 23683  0017A2  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 23684  0017A4                     u14268:
 23685  0017A4  EE20 F00B          	lfsr	2,11
 23686  0017A8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23687  0017AA  26D9               	addwf	fsr2l,f,c
 23688  0017AC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23689  0017AE  22DA               	addwfc	fsr2h,f,c
 23690  0017B0  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 23691  0017B2  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 23692  0017B4  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 23693  0017B6  50DF               	movf	indf2,w,c
 23694  0017B8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23695  0017BA  0BF7               	andlw	-9
 23696  0017BC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23697  0017BE  6EDF               	movwf	indf2,c
 23698                           
 23699                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 23700  0017C0  EE20 F00B          	lfsr	2,11
 23701  0017C4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23702  0017C6  26D9               	addwf	fsr2l,f,c
 23703  0017C8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23704  0017CA  22DA               	addwfc	fsr2h,f,c
 23705  0017CC  A6DF               	btfss	indf2,3,c
 23706  0017CE  D06C               	goto	l1775
 23707                           
 23708                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 23709  0017D0  EE20 F081          	lfsr	2,129
 23710  0017D4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23711  0017D6  26D9               	addwf	fsr2l,f,c
 23712  0017D8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23713  0017DA  22DA               	addwfc	fsr2h,f,c
 23714  0017DC  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 23715  0017E2  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 23716                           
 23717                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 23718  0017E8  EE20 F00A          	lfsr	2,10
 23719  0017EC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23720  0017EE  26D9               	addwf	fsr2l,f,c
 23721  0017F0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23722  0017F2  22DA               	addwfc	fsr2h,f,c
 23723  0017F4  50DF               	movf	indf2,w,c
 23724  0017F6  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23725  0017F8  EE20 F001          	lfsr	2,1
 23726  0017FC  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 23727  0017FE  26D9               	addwf	fsr2l,f,c
 23728  001800  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 23729  001802  22DA               	addwfc	fsr2h,f,c
 23730  001804  50DF               	movf	indf2,w,c
 23731  001806  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23732  001808  0BF0               	andlw	-16
 23733  00180A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23734  00180C  6EDF               	movwf	indf2,c
 23735                           
 23736                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 23737  00180E  EE20 F00A          	lfsr	2,10
 23738  001812  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23739  001814  26D9               	addwf	fsr2l,f,c
 23740  001816  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23741  001818  22DA               	addwfc	fsr2h,f,c
 23742  00181A  50DF               	movf	indf2,w,c
 23743  00181C  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23744  00181E  EE20 F001          	lfsr	2,1
 23745  001822  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 23746  001824  26D9               	addwf	fsr2l,f,c
 23747  001826  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 23748  001828  22DA               	addwfc	fsr2h,f,c
 23749  00182A  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 23750  00182C  50DF               	movf	indf2,w,c
 23751  00182E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23752  001830  0B0F               	andlw	-241
 23753  001832  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23754  001834  6EDF               	movwf	indf2,c
 23755                           
 23756                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 23757  001836  EE20 F00B          	lfsr	2,11
 23758  00183A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23759  00183C  26D9               	addwf	fsr2l,f,c
 23760  00183E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23761  001840  22DA               	addwfc	fsr2h,f,c
 23762  001842  50DF               	movf	indf2,w,c
 23763  001844  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23764  001846  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 23765  00184C  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 23766  001852  50DF               	movf	indf2,w,c
 23767  001854  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23768  001856  0BF0               	andlw	-16
 23769  001858  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23770  00185A  6EDF               	movwf	indf2,c
 23771                           
 23772                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 23773  00185C  EE20 F00B          	lfsr	2,11
 23774  001860  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23775  001862  26D9               	addwf	fsr2l,f,c
 23776  001864  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23777  001866  22DA               	addwfc	fsr2h,f,c
 23778  001868  50DF               	movf	indf2,w,c
 23779  00186A  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23780  00186C  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 23781  001872  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 23782  001878  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 23783  00187A  50DF               	movf	indf2,w,c
 23784  00187C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23785  00187E  0B0F               	andlw	-241
 23786  001880  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23787  001882  6EDF               	movwf	indf2,c
 23788                           
 23789                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 23790  001884  EE20 F081          	lfsr	2,129
 23791  001888  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23792  00188A  26D9               	addwf	fsr2l,f,c
 23793  00188C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23794  00188E  22DA               	addwfc	fsr2h,f,c
 23795  001890  0E02               	movlw	2
 23796  001892  26DE               	addwf	postinc2,f,c
 23797  001894  0E00               	movlw	0
 23798  001896  22DD               	addwfc	postdec2,f,c
 23799                           
 23800                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 23801  001898  EE20 F001          	lfsr	2,1
 23802  00189C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23803  00189E  26D9               	addwf	fsr2l,f,c
 23804  0018A0  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23805  0018A2  22DA               	addwfc	fsr2h,f,c
 23806  0018A4  0E02               	movlw	2
 23807  0018A6  26DF               	addwf	indf2,f,c
 23808  0018A8                     l1775:
 23809                           
 23810                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 23811  0018A8  0101               	movlb	1	; () banked
 23812  0018AA  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 23813  0018AC  EE20 F00C          	lfsr	2,12
 23814  0018B0  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23815  0018B2  26D9               	addwf	fsr2l,f,c
 23816  0018B4  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23817  0018B6  22DA               	addwfc	fsr2h,f,c
 23818  0018B8  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 23819                           
 23820                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 23821  0018BE  EE20 F00D          	lfsr	2,13
 23822  0018C2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23823  0018C4  26D9               	addwf	fsr2l,f,c
 23824  0018C6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23825  0018C8  22DA               	addwfc	fsr2h,f,c
 23826  0018CA  0060  F403  FFDE   	movff	_nwkIb,postinc2
 23827  0018D0  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 23828                           
 23829                           ; BSR set to: 1
 23830                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 23831  0018D6  EE20 F005          	lfsr	2,5
 23832  0018DA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23833  0018DC  26D9               	addwf	fsr2l,f,c
 23834  0018DE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23835  0018E0  22DA               	addwfc	fsr2h,f,c
 23836  0018E2  EE10 F00F          	lfsr	1,15
 23837  0018E6  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23838  0018E8  26E1               	addwf	fsr1l,f,c
 23839  0018EA  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23840  0018EC  22E2               	addwfc	fsr1h,f,c
 23841  0018EE  006F FF7B FFE6     	movff	postinc2,postinc1
 23842  0018F4  006F FF77 FFE5     	movff	postdec2,postdec1
 23843                           
 23844                           ; BSR set to: 1
 23845                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 23846  0018FA  EE20 F008          	lfsr	2,8
 23847  0018FE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23848  001900  26D9               	addwf	fsr2l,f,c
 23849  001902  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23850  001904  22DA               	addwfc	fsr2h,f,c
 23851  001906  50DF               	movf	indf2,w,c
 23852  001908  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23853  00190A  EE20 F011          	lfsr	2,17
 23854  00190E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23855  001910  26D9               	addwf	fsr2l,f,c
 23856  001912  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23857  001914  22DA               	addwfc	fsr2h,f,c
 23858  001916  50DF               	movf	indf2,w,c
 23859  001918  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23860  00191A  0BF0               	andlw	-16
 23861  00191C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23862  00191E  6EDF               	movwf	indf2,c
 23863                           
 23864                           ; BSR set to: 1
 23865                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 23866  001920  EE20 F007          	lfsr	2,7
 23867  001924  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23868  001926  26D9               	addwf	fsr2l,f,c
 23869  001928  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23870  00192A  22DA               	addwfc	fsr2h,f,c
 23871  00192C  50DF               	movf	indf2,w,c
 23872  00192E  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23873  001930  EE20 F011          	lfsr	2,17
 23874  001934  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23875  001936  26D9               	addwf	fsr2l,f,c
 23876  001938  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23877  00193A  22DA               	addwfc	fsr2h,f,c
 23878  00193C  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 23879  00193E  50DF               	movf	indf2,w,c
 23880  001940  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23881  001942  0B0F               	andlw	-241
 23882  001944  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 23883  001946  6EDF               	movwf	indf2,c
 23884                           
 23885                           ; BSR set to: 1
 23886                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 23887  001948  EE20 F081          	lfsr	2,129
 23888  00194C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23889  00194E  26D9               	addwf	fsr2l,f,c
 23890  001950  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23891  001952  22DA               	addwfc	fsr2h,f,c
 23892  001954  006F FF78  F008    	movff	postinc2,memcpy@d1
 23893  00195A  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 23894  001960  EE20 F00C          	lfsr	2,12
 23895  001964  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23896  001966  26D9               	addwf	fsr2l,f,c
 23897  001968  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23898  00196A  22DA               	addwfc	fsr2h,f,c
 23899  00196C  006F FF78  F00A    	movff	postinc2,memcpy@s1
 23900  001972  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 23901  001978  EE20 F00E          	lfsr	2,14
 23902  00197C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23903  00197E  26D9               	addwf	fsr2l,f,c
 23904  001980  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23905  001982  22DA               	addwfc	fsr2h,f,c
 23906  001984  50DF               	movf	indf2,w,c
 23907  001986  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23908  001988  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 23909  00198A  6E0C               	movwf	memcpy@n^0,c
 23910  00198C  6A0D               	clrf	(memcpy@n+1)^0,c
 23911  00198E  ECD0  F035         	call	_memcpy	;wreg free
 23912                           
 23913                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 23914  001992  EE20 F00E          	lfsr	2,14
 23915  001996  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 23916  001998  26D9               	addwf	fsr2l,f,c
 23917  00199A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 23918  00199C  22DA               	addwfc	fsr2h,f,c
 23919  00199E  50DF               	movf	indf2,w,c
 23920  0019A0  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 23921  0019A2  EE20 F001          	lfsr	2,1
 23922  0019A6  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 23923  0019A8  26D9               	addwf	fsr2l,f,c
 23924  0019AA  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 23925  0019AC  22DA               	addwfc	fsr2h,f,c
 23926  0019AE  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 23927  0019B0  26DF               	addwf	indf2,f,c
 23928                           
 23929                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 23930  0019B2  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 23931  0019B8  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 23932  0019BE  EC87  F01A         	call	_nwkTxFrame	;wreg free
 23933  0019C2  0012               	return		;funcret
 23934  0019C4                     __end_of_nwkDataReqSendFrame:
 23935                           	opt callstack 0
 23936                           
 23937 ;; *************** function _nwkTxFrame *****************
 23938 ;; Defined at:
 23939 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 23940 ;; Parameters:    Size  Location     Type
 23941 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 23942 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23943 ;; Auto vars:     Size  Location     Type
 23944 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 23945 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23946 ;; Return value:  Size  Location     Type
 23947 ;;                  1    wreg      void 
 23948 ;; Registers used:
 23949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23950 ;; Tracked objects:
 23951 ;;		On entry : 0/1
 23952 ;;		On exit  : 3F/1
 23953 ;;		Unchanged: 0/0
 23954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23959 ;;Total ram usage:        6 bytes
 23960 ;; Hardware stack levels used:    1
 23961 ;; Hardware stack levels required when called:   10
 23962 ;; This function calls:
 23963 ;;		_nwkRoutePrepareTx
 23964 ;;		_rand
 23965 ;; This function is called by:
 23966 ;;		_nwkDataReqSendFrame
 23967 ;;		_nwkRouteFrame
 23968 ;;		_nwkRouteSendRouteError
 23969 ;;		_nwkRxSendAck
 23970 ;; This function uses a non-reentrant model
 23971 ;;
 23972                           
 23973                           	psect	text150
 23974  00350E                     __ptext150:
 23975                           	opt callstack 0
 23976  00350E                     _nwkTxFrame:
 23977                           	opt callstack 15
 23978                           
 23979                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 23980                           
 23981                           ;incstack = 0
 23982  00350E  0E02               	movlw	2
 23983  003510  2424               	addwf	nwkTxFrame@frame^0,w,c
 23984  003512  6E28               	movwf	nwkTxFrame@header^0,c
 23985  003514  0E00               	movlw	0
 23986  003516  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 23987  003518  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 23988                           
 23989                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 23990  00351A  EE20 F086          	lfsr	2,134
 23991  00351E  5024               	movf	nwkTxFrame@frame^0,w,c
 23992  003520  26D9               	addwf	fsr2l,f,c
 23993  003522  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 23994  003524  22DA               	addwfc	fsr2h,f,c
 23995  003526  A2DF               	btfss	indf2,1,c
 23996  003528  D000               	goto	u13070
 23997  00352A                     u13070:
 23998                           
 23999                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 24000                           
 24001                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 24002                           
 24003                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 24004  00352A  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 24005  003530  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 24006  003536  0E12               	movlw	18
 24007  003538  6EDF               	movwf	indf2,c
 24008                           
 24009                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 24010  00353A  EE20 F083          	lfsr	2,131
 24011  00353E  5024               	movf	nwkTxFrame@frame^0,w,c
 24012  003540  26D9               	addwf	fsr2l,f,c
 24013  003542  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24014  003544  22DA               	addwfc	fsr2h,f,c
 24015  003546  0E00               	movlw	0
 24016  003548  6EDF               	movwf	indf2,c
 24017                           
 24018                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 24019  00354A  EE20 F086          	lfsr	2,134
 24020  00354E  5024               	movf	nwkTxFrame@frame^0,w,c
 24021  003550  26D9               	addwf	fsr2l,f,c
 24022  003552  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24023  003554  22DA               	addwfc	fsr2h,f,c
 24024  003556  A0DF               	btfss	indf2,0,c
 24025  003558  D00B               	goto	l14030
 24026                           
 24027                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 24028  00355A  EE20 F003          	lfsr	2,3
 24029  00355E  5028               	movf	nwkTxFrame@header^0,w,c
 24030  003560  26D9               	addwf	fsr2l,f,c
 24031  003562  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24032  003564  22DA               	addwfc	fsr2h,f,c
 24033  003566  0EFF               	movlw	255
 24034  003568  6EDE               	movwf	postinc2,c
 24035  00356A  0EFF               	movlw	255
 24036  00356C  6EDD               	movwf	postdec2,c
 24037  00356E  D00C               	goto	l2293
 24038  003570                     l14030:
 24039                           
 24040                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 24041  003570  EE20 F003          	lfsr	2,3
 24042  003574  5028               	movf	nwkTxFrame@header^0,w,c
 24043  003576  26D9               	addwf	fsr2l,f,c
 24044  003578  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24045  00357A  22DA               	addwfc	fsr2h,f,c
 24046  00357C  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 24047  003582  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 24048  003588                     l2293:
 24049                           
 24050                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 24051  003588  EE20 F086          	lfsr	2,134
 24052  00358C  5024               	movf	nwkTxFrame@frame^0,w,c
 24053  00358E  26D9               	addwf	fsr2l,f,c
 24054  003590  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24055  003592  22DA               	addwfc	fsr2h,f,c
 24056  003594  B4DF               	btfsc	indf2,2,c
 24057  003596  D011               	goto	l14036
 24058  003598  EE20 F086          	lfsr	2,134
 24059  00359C  5024               	movf	nwkTxFrame@frame^0,w,c
 24060  00359E  26D9               	addwf	fsr2l,f,c
 24061  0035A0  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24062  0035A2  22DA               	addwfc	fsr2h,f,c
 24063  0035A4  B0DF               	btfsc	indf2,0,c
 24064  0035A6  D009               	goto	l14036
 24065                           
 24066                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 24067  0035A8  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 24068  0035AE  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 24069  0035B4  EC45  F025         	call	_nwkRoutePrepareTx	;wreg free
 24070  0035B8  D012               	goto	l14038
 24071  0035BA                     l14036:
 24072                           
 24073                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 24074  0035BA  EE20 F00D          	lfsr	2,13
 24075  0035BE  5028               	movf	nwkTxFrame@header^0,w,c
 24076  0035C0  26D9               	addwf	fsr2l,f,c
 24077  0035C2  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24078  0035C4  22DA               	addwfc	fsr2h,f,c
 24079  0035C6  EE10 F005          	lfsr	1,5
 24080  0035CA  5028               	movf	nwkTxFrame@header^0,w,c
 24081  0035CC  26E1               	addwf	fsr1l,f,c
 24082  0035CE  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24083  0035D0  22E2               	addwfc	fsr1h,f,c
 24084  0035D2  006F FF7B FFE6     	movff	postinc2,postinc1
 24085  0035D8  006F FF77 FFE5     	movff	postdec2,postdec1
 24086  0035DE                     l14038:
 24087                           
 24088                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 24089  0035DE  EE20 F007          	lfsr	2,7
 24090  0035E2  5028               	movf	nwkTxFrame@header^0,w,c
 24091  0035E4  26D9               	addwf	fsr2l,f,c
 24092  0035E6  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24093  0035E8  22DA               	addwfc	fsr2h,f,c
 24094  0035EA  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24095  0035F0  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24096                           
 24097                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 24098  0035F6  0101               	movlb	1	; () banked
 24099  0035F8  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 24100  0035FA  EE20 F002          	lfsr	2,2
 24101  0035FE  5028               	movf	nwkTxFrame@header^0,w,c
 24102  003600  26D9               	addwf	fsr2l,f,c
 24103  003602  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24104  003604  22DA               	addwfc	fsr2h,f,c
 24105  003606  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 24106                           
 24107                           ; BSR set to: 1
 24108                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 24109  00360C  EE20 F005          	lfsr	2,5
 24110  003610  5028               	movf	nwkTxFrame@header^0,w,c
 24111  003612  26D9               	addwf	fsr2l,f,c
 24112  003614  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24113  003616  22DA               	addwfc	fsr2h,f,c
 24114  003618  28DE               	incf	postinc2,w,c
 24115  00361A  E124               	bnz	l14048
 24116  00361C  28DE               	incf	postinc2,w,c
 24117  00361E  A4D8               	btfss	status,2,c
 24118  003620  D021               	goto	l14048
 24119                           
 24120                           ; BSR set to: 1
 24121                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 24122  003622  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 24123  003628  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 24124  00362E  0E41               	movlw	65
 24125  003630  6EDE               	movwf	postinc2,c
 24126  003632  0E88               	movlw	136
 24127  003634  6EDD               	movwf	postdec2,c
 24128                           
 24129                           ; BSR set to: 1
 24130                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 24131  003636  ECBE  F024         	call	_rand	;wreg free
 24132  00363A  0E07               	movlw	7
 24133  00363C  161A               	andwf	?_rand^0,f,c
 24134  00363E  0E00               	movlw	0
 24135  003640  161B               	andwf	(?_rand+1)^0,f,c
 24136  003642  0E01               	movlw	1
 24137  003644  261A               	addwf	?_rand^0,f,c
 24138  003646  0E00               	movlw	0
 24139  003648  221B               	addwfc	(?_rand+1)^0,f,c
 24140  00364A  EE20 F084          	lfsr	2,132
 24141  00364E  5024               	movf	nwkTxFrame@frame^0,w,c
 24142  003650  26D9               	addwf	fsr2l,f,c
 24143  003652  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24144  003654  22DA               	addwfc	fsr2h,f,c
 24145  003656  0060  F06B  FFDE   	movff	?_rand,postinc2
 24146  00365C  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 24147                           
 24148                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 24149  003662  0012               	return	
 24150  003664                     l14048:
 24151                           
 24152                           ; BSR set to: 1
 24153                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 24154  003664  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 24155  00366A  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 24156  003670  0E61               	movlw	97
 24157  003672  6EDE               	movwf	postinc2,c
 24158  003674  0E88               	movlw	136
 24159  003676  6EDD               	movwf	postdec2,c
 24160                           
 24161                           ; BSR set to: 1
 24162                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 24163  003678  EE20 F084          	lfsr	2,132
 24164  00367C  5024               	movf	nwkTxFrame@frame^0,w,c
 24165  00367E  26D9               	addwf	fsr2l,f,c
 24166  003680  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24167  003682  22DA               	addwfc	fsr2h,f,c
 24168  003684  0E00               	movlw	0
 24169  003686  6EDE               	movwf	postinc2,c
 24170  003688  0E00               	movlw	0
 24171  00368A  6EDD               	movwf	postdec2,c
 24172                           
 24173                           ; BSR set to: 1
 24174  00368C  0012               	return		;funcret
 24175  00368E                     __end_of_nwkTxFrame:
 24176                           	opt callstack 0
 24177                           
 24178 ;; *************** function _rand *****************
 24179 ;; Defined at:
 24180 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 24181 ;; Parameters:    Size  Location     Type
 24182 ;;		None
 24183 ;; Auto vars:     Size  Location     Type
 24184 ;;		None
 24185 ;; Return value:  Size  Location     Type
 24186 ;;                  2   25[COMRAM] int 
 24187 ;; Registers used:
 24188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24189 ;; Tracked objects:
 24190 ;;		On entry : 0/1
 24191 ;;		On exit  : 3F/1
 24192 ;;		Unchanged: 0/0
 24193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24196 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24197 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24198 ;;Total ram usage:       10 bytes
 24199 ;; Hardware stack levels used:    1
 24200 ;; Hardware stack levels required when called:    8
 24201 ;; This function calls:
 24202 ;;		___omul
 24203 ;; This function is called by:
 24204 ;;		_nwkTxFrame
 24205 ;;		_nwkTxBroadcastFrame
 24206 ;; This function uses a non-reentrant model
 24207 ;;
 24208                           
 24209                           	psect	text151
 24210  00497C                     __ptext151:
 24211                           	opt callstack 0
 24212  00497C                     _rand:
 24213                           	opt callstack 17
 24214                           
 24215                           ; BSR set to: 1
 24216                           ;incstack = 0
 24217  00497C  0060  F748  F002   	movff	_seed,___omul@multiplier
 24218  004982  0060  F74C  F003   	movff	_seed+1,___omul@multiplier+1
 24219  004988  0060  F750  F004   	movff	_seed+2,___omul@multiplier+2
 24220  00498E  0060  F754  F005   	movff	_seed+3,___omul@multiplier+3
 24221  004994  0060  F758  F006   	movff	_seed+4,___omul@multiplier+4
 24222  00499A  0060  F75C  F007   	movff	_seed+5,___omul@multiplier+5
 24223  0049A0  0060  F760  F008   	movff	_seed+6,___omul@multiplier+6
 24224  0049A6  0060  F764  F009   	movff	_seed+7,___omul@multiplier+7
 24225  0049AC  0E2D               	movlw	45
 24226  0049AE  6E0A               	movwf	___omul@multiplicand^0,c
 24227  0049B0  0E7F               	movlw	127
 24228  0049B2  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 24229  0049B4  0E95               	movlw	149
 24230  0049B6  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 24231  0049B8  0E4C               	movlw	76
 24232  0049BA  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 24233  0049BC  0E2D               	movlw	45
 24234  0049BE  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 24235  0049C0  0EF4               	movlw	244
 24236  0049C2  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 24237  0049C4  0E51               	movlw	81
 24238  0049C6  6E10               	movwf	(___omul@multiplicand+6)^0,c
 24239  0049C8  0E58               	movlw	88
 24240  0049CA  6E11               	movwf	(___omul@multiplicand+7)^0,c
 24241  0049CC  ECC9  F031         	call	___omul	;wreg free
 24242  0049D0  0060  F008  F01C   	movff	?___omul,??_rand
 24243  0049D6  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 24244  0049DC  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 24245  0049E2  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 24246  0049E8  0060  F018  F020   	movff	?___omul+4,??_rand+4
 24247  0049EE  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 24248  0049F4  0060  F020  F022   	movff	?___omul+6,??_rand+6
 24249  0049FA  0060  F024  F023   	movff	?___omul+7,??_rand+7
 24250  004A00  0E01               	movlw	1
 24251  004A02  241C               	addwf	??_rand^0,w,c
 24252  004A04  0101               	movlb	1	; () banked
 24253  004A06  6FD2               	movwf	_seed& (0+255),b
 24254  004A08  0E00               	movlw	0
 24255  004A0A  201D               	addwfc	(??_rand+1)^0,w,c
 24256  004A0C  6FD3               	movwf	(_seed+1)& (0+255),b
 24257  004A0E  0E00               	movlw	0
 24258  004A10  201E               	addwfc	(??_rand+2)^0,w,c
 24259  004A12  6FD4               	movwf	(_seed+2)& (0+255),b
 24260  004A14  0E00               	movlw	0
 24261  004A16  201F               	addwfc	(??_rand+3)^0,w,c
 24262  004A18  6FD5               	movwf	(_seed+3)& (0+255),b
 24263  004A1A  0E00               	movlw	0
 24264  004A1C  2020               	addwfc	(??_rand+4)^0,w,c
 24265  004A1E  6FD6               	movwf	(_seed+4)& (0+255),b
 24266  004A20  0E00               	movlw	0
 24267  004A22  2021               	addwfc	(??_rand+5)^0,w,c
 24268  004A24  6FD7               	movwf	(_seed+5)& (0+255),b
 24269  004A26  0E00               	movlw	0
 24270  004A28  2022               	addwfc	(??_rand+6)^0,w,c
 24271  004A2A  6FD8               	movwf	(_seed+6)& (0+255),b
 24272  004A2C  0E00               	movlw	0
 24273  004A2E  2023               	addwfc	(??_rand+7)^0,w,c
 24274  004A30  6FD9               	movwf	(_seed+7)& (0+255),b
 24275                           
 24276                           ; BSR set to: 1
 24277  004A32  0060  F748  F01C   	movff	_seed,??_rand
 24278  004A38  0060  F74C  F01D   	movff	_seed+1,??_rand+1
 24279  004A3E  0060  F750  F01E   	movff	_seed+2,??_rand+2
 24280  004A44  0060  F754  F01F   	movff	_seed+3,??_rand+3
 24281  004A4A  0060  F758  F020   	movff	_seed+4,??_rand+4
 24282  004A50  0060  F75C  F021   	movff	_seed+5,??_rand+5
 24283  004A56  0060  F760  F022   	movff	_seed+6,??_rand+6
 24284  004A5C  0060  F764  F023   	movff	_seed+7,??_rand+7
 24285  004A62  0E32               	movlw	50
 24286  004A64  D009               	goto	u12950
 24287  004A66                     u12955:
 24288  004A66  90D8               	bcf	status,0,c
 24289  004A68  3223               	rrcf	(??_rand+7)^0,f,c
 24290  004A6A  3222               	rrcf	(??_rand+6)^0,f,c
 24291  004A6C  3221               	rrcf	(??_rand+5)^0,f,c
 24292  004A6E  3220               	rrcf	(??_rand+4)^0,f,c
 24293  004A70  321F               	rrcf	(??_rand+3)^0,f,c
 24294  004A72  321E               	rrcf	(??_rand+2)^0,f,c
 24295  004A74  321D               	rrcf	(??_rand+1)^0,f,c
 24296  004A76  321C               	rrcf	??_rand^0,f,c
 24297  004A78                     u12950:
 24298  004A78  2EE8               	decfsz	wreg,f,c
 24299  004A7A  D7F5               	goto	u12955
 24300  004A7C  0060  F070  F01A   	movff	??_rand,?_rand
 24301  004A82  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 24302                           
 24303                           ; BSR set to: 1
 24304  004A88  0012               	return		;funcret
 24305  004A8A                     __end_of_rand:
 24306                           	opt callstack 0
 24307                           
 24308 ;; *************** function ___omul *****************
 24309 ;; Defined at:
 24310 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 24311 ;; Parameters:    Size  Location     Type
 24312 ;;  multiplier      8    1[COMRAM] unsigned long long 
 24313 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 24314 ;; Auto vars:     Size  Location     Type
 24315 ;;  product         8   17[COMRAM] unsigned long long 
 24316 ;; Return value:  Size  Location     Type
 24317 ;;                  8    1[COMRAM] unsigned long long 
 24318 ;; Registers used:
 24319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24320 ;; Tracked objects:
 24321 ;;		On entry : 0/1
 24322 ;;		On exit  : 0/0
 24323 ;;		Unchanged: 0/0
 24324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24325 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24326 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24328 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24329 ;;Total ram usage:       24 bytes
 24330 ;; Hardware stack levels used:    1
 24331 ;; Hardware stack levels required when called:    7
 24332 ;; This function calls:
 24333 ;;		Nothing
 24334 ;; This function is called by:
 24335 ;;		_rand
 24336 ;; This function uses a non-reentrant model
 24337 ;;
 24338                           
 24339                           	psect	text152
 24340  006392                     __ptext152:
 24341                           	opt callstack 0
 24342  006392                     ___omul:
 24343                           	opt callstack 17
 24344                           
 24345                           ; BSR set to: 1
 24346                           ;incstack = 0
 24347  006392  EE20  F012         	lfsr	2,___omul@product
 24348  006396  0E07               	movlw	7
 24349  006398                     u12781:
 24350  006398  6ADE               	clrf	postinc2,c
 24351  00639A  06E8               	decf	wreg,f,c
 24352  00639C  E2FD               	bc	u12781
 24353  00639E                     l13782:
 24354  00639E  A002               	btfss	___omul@multiplier^0,0,c
 24355  0063A0  D010               	goto	l13786
 24356  0063A2  500A               	movf	___omul@multiplicand^0,w,c
 24357  0063A4  2612               	addwf	___omul@product^0,f,c
 24358  0063A6  500B               	movf	(___omul@multiplicand+1)^0,w,c
 24359  0063A8  2213               	addwfc	(___omul@product+1)^0,f,c
 24360  0063AA  500C               	movf	(___omul@multiplicand+2)^0,w,c
 24361  0063AC  2214               	addwfc	(___omul@product+2)^0,f,c
 24362  0063AE  500D               	movf	(___omul@multiplicand+3)^0,w,c
 24363  0063B0  2215               	addwfc	(___omul@product+3)^0,f,c
 24364  0063B2  500E               	movf	(___omul@multiplicand+4)^0,w,c
 24365  0063B4  2216               	addwfc	(___omul@product+4)^0,f,c
 24366  0063B6  500F               	movf	(___omul@multiplicand+5)^0,w,c
 24367  0063B8  2217               	addwfc	(___omul@product+5)^0,f,c
 24368  0063BA  5010               	movf	(___omul@multiplicand+6)^0,w,c
 24369  0063BC  2218               	addwfc	(___omul@product+6)^0,f,c
 24370  0063BE  5011               	movf	(___omul@multiplicand+7)^0,w,c
 24371  0063C0  2219               	addwfc	(___omul@product+7)^0,f,c
 24372  0063C2                     l13786:
 24373  0063C2  90D8               	bcf	status,0,c
 24374  0063C4  360A               	rlcf	___omul@multiplicand^0,f,c
 24375  0063C6  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 24376  0063C8  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 24377  0063CA  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 24378  0063CC  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 24379  0063CE  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 24380  0063D0  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 24381  0063D2  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 24382  0063D4  90D8               	bcf	status,0,c
 24383  0063D6  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 24384  0063D8  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 24385  0063DA  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 24386  0063DC  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 24387  0063DE  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 24388  0063E0  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 24389  0063E2  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 24390  0063E4  3202               	rrcf	___omul@multiplier^0,f,c
 24391  0063E6  5002               	movf	___omul@multiplier^0,w,c
 24392  0063E8  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 24393  0063EA  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 24394  0063EC  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 24395  0063EE  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 24396  0063F0  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 24397  0063F2  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 24398  0063F4  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 24399  0063F6  A4D8               	btfss	status,2,c
 24400  0063F8  D7D2               	goto	l13782
 24401  0063FA  0060  F048  F002   	movff	___omul@product,?___omul
 24402  006400  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 24403  006406  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 24404  00640C  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 24405  006412  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 24406  006418  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 24407  00641E  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 24408  006424  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 24409  00642A  0012               	return		;funcret
 24410  00642C                     __end_of___omul:
 24411                           	opt callstack 0
 24412                           
 24413 ;; *************** function _nwkRoutePrepareTx *****************
 24414 ;; Defined at:
 24415 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 24416 ;; Parameters:    Size  Location     Type
 24417 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 24418 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24419 ;; Auto vars:     Size  Location     Type
 24420 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 24421 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24422 ;; Return value:  Size  Location     Type
 24423 ;;                  1    wreg      void 
 24424 ;; Registers used:
 24425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24426 ;; Tracked objects:
 24427 ;;		On entry : 0/1
 24428 ;;		On exit  : 0/0
 24429 ;;		Unchanged: 0/0
 24430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24435 ;;Total ram usage:        6 bytes
 24436 ;; Hardware stack levels used:    1
 24437 ;; Hardware stack levels required when called:    9
 24438 ;; This function calls:
 24439 ;;		_NWK_GroupIsMember
 24440 ;;		_NWK_RouteNextHop
 24441 ;; This function is called by:
 24442 ;;		_nwkTxFrame
 24443 ;; This function uses a non-reentrant model
 24444 ;;
 24445                           
 24446                           	psect	text153
 24447  004A8A                     __ptext153:
 24448                           	opt callstack 0
 24449  004A8A                     _nwkRoutePrepareTx:
 24450                           	opt callstack 15
 24451                           
 24452                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 24453                           
 24454                           ;incstack = 0
 24455  004A8A  0E02               	movlw	2
 24456  004A8C  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 24457  004A8E  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 24458  004A90  0E00               	movlw	0
 24459  004A92  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 24460  004A94  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 24461                           
 24462                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 24463  004A96  EE20 F00D          	lfsr	2,13
 24464  004A9A  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24465  004A9C  26D9               	addwf	fsr2l,f,c
 24466  004A9E  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24467  004AA0  22DA               	addwfc	fsr2h,f,c
 24468  004AA2  28DE               	incf	postinc2,w,c
 24469  004AA4  E10E               	bnz	l13834
 24470  004AA6  28DE               	incf	postinc2,w,c
 24471  004AA8  A4D8               	btfss	status,2,c
 24472  004AAA  D00B               	goto	l13834
 24473                           
 24474                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 24475  004AAC  EE20 F005          	lfsr	2,5
 24476  004AB0  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24477  004AB2  26D9               	addwf	fsr2l,f,c
 24478  004AB4  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24479  004AB6  22DA               	addwfc	fsr2h,f,c
 24480  004AB8  0EFF               	movlw	255
 24481  004ABA  6EDE               	movwf	postinc2,c
 24482  004ABC  0EFF               	movlw	255
 24483  004ABE  6EDD               	movwf	postdec2,c
 24484                           
 24485                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 24486  004AC0  0012               	return	
 24487  004AC2                     l13834:
 24488  004AC2  EE20 F009          	lfsr	2,9
 24489  004AC6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24490  004AC8  26D9               	addwf	fsr2l,f,c
 24491  004ACA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24492  004ACC  22DA               	addwfc	fsr2h,f,c
 24493  004ACE  A4DF               	btfss	indf2,2,c
 24494  004AD0  D013               	goto	l13838
 24495                           
 24496                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 24497  004AD2  EE20 F00D          	lfsr	2,13
 24498  004AD6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24499  004AD8  26D9               	addwf	fsr2l,f,c
 24500  004ADA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24501  004ADC  22DA               	addwfc	fsr2h,f,c
 24502  004ADE  EE10 F005          	lfsr	1,5
 24503  004AE2  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24504  004AE4  26E1               	addwf	fsr1l,f,c
 24505  004AE6  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24506  004AE8  22E2               	addwfc	fsr1h,f,c
 24507  004AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 24508  004AF0  006F FF77 FFE5     	movff	postdec2,postdec1
 24509                           
 24510                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 24511  004AF6  0012               	return	
 24512  004AF8                     l13838:
 24513  004AF8  EE20 F009          	lfsr	2,9
 24514  004AFC  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24515  004AFE  26D9               	addwf	fsr2l,f,c
 24516  004B00  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24517  004B02  22DA               	addwfc	fsr2h,f,c
 24518  004B04  A6DF               	btfss	indf2,3,c
 24519  004B06  D023               	goto	l13844
 24520  004B08  EE20 F00D          	lfsr	2,13
 24521  004B0C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24522  004B0E  26D9               	addwf	fsr2l,f,c
 24523  004B10  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24524  004B12  22DA               	addwfc	fsr2h,f,c
 24525  004B14  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 24526  004B1A  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 24527  004B20  EC09  F03F         	call	_NWK_GroupIsMember	;wreg free
 24528  004B24  0900               	iorlw	0
 24529  004B26  B4D8               	btfsc	status,2,c
 24530  004B28  D012               	goto	l13844
 24531                           
 24532                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 24533  004B2A  EE20 F005          	lfsr	2,5
 24534  004B2E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24535  004B30  26D9               	addwf	fsr2l,f,c
 24536  004B32  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24537  004B34  22DA               	addwfc	fsr2h,f,c
 24538  004B36  0EFF               	movlw	255
 24539  004B38  6EDE               	movwf	postinc2,c
 24540  004B3A  0EFF               	movlw	255
 24541  004B3C  6EDD               	movwf	postdec2,c
 24542                           
 24543                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 24544  004B3E  EE20 F009          	lfsr	2,9
 24545  004B42  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24546  004B44  26D9               	addwf	fsr2l,f,c
 24547  004B46  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24548  004B48  22DA               	addwfc	fsr2h,f,c
 24549  004B4A  84DF               	bsf	indf2,2,c
 24550                           
 24551                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 24552  004B4C  0012               	return	
 24553  004B4E                     l13844:
 24554                           
 24555                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 24556  004B4E  EE20 F00D          	lfsr	2,13
 24557  004B52  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24558  004B54  26D9               	addwf	fsr2l,f,c
 24559  004B56  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24560  004B58  22DA               	addwfc	fsr2h,f,c
 24561  004B5A  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 24562  004B60  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 24563  004B66  EE20 F009          	lfsr	2,9
 24564  004B6A  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24565  004B6C  26D9               	addwf	fsr2l,f,c
 24566  004B6E  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24567  004B70  22DA               	addwfc	fsr2h,f,c
 24568  004B72  0E00               	movlw	0
 24569  004B74  B6DF               	btfsc	indf2,3,c
 24570  004B76  0E01               	movlw	1
 24571  004B78  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 24572  004B7A  ECE6  F03A         	call	_NWK_RouteNextHop	;wreg free
 24573  004B7E  EE20 F005          	lfsr	2,5
 24574  004B82  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 24575  004B84  26D9               	addwf	fsr2l,f,c
 24576  004B86  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 24577  004B88  22DA               	addwfc	fsr2h,f,c
 24578  004B8A  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 24579  004B90  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 24580  004B96  0012               	return		;funcret
 24581  004B98                     __end_of_nwkRoutePrepareTx:
 24582                           	opt callstack 0
 24583                           
 24584 ;; *************** function _NWK_RouteNextHop *****************
 24585 ;; Defined at:
 24586 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;  dst             2    7[COMRAM] unsigned short 
 24589 ;;  multicast       1    9[COMRAM] unsigned char 
 24590 ;; Auto vars:     Size  Location     Type
 24591 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 24592 ;;		 -> nwkRouteTable(70), NULL(0), 
 24593 ;; Return value:  Size  Location     Type
 24594 ;;                  2    7[COMRAM] unsigned short 
 24595 ;; Registers used:
 24596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24597 ;; Tracked objects:
 24598 ;;		On entry : 0/1
 24599 ;;		On exit  : 0/0
 24600 ;;		Unchanged: 0/0
 24601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24602 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24605 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24606 ;;Total ram usage:        5 bytes
 24607 ;; Hardware stack levels used:    1
 24608 ;; Hardware stack levels required when called:    8
 24609 ;; This function calls:
 24610 ;;		_NWK_RouteFindEntry
 24611 ;; This function is called by:
 24612 ;;		_nwkRoutePrepareTx
 24613 ;;		_nwkRouteFrame
 24614 ;; This function uses a non-reentrant model
 24615 ;;
 24616                           
 24617                           	psect	text154
 24618  0075CC                     __ptext154:
 24619                           	opt callstack 0
 24620  0075CC                     _NWK_RouteNextHop:
 24621                           	opt callstack 15
 24622                           
 24623                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 24624                           
 24625                           ;incstack = 0
 24626  0075CC  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 24627  0075D2  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 24628  0075D8  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 24629  0075DE  EC18  F037         	call	_NWK_RouteFindEntry	;wreg free
 24630  0075E2  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 24631  0075E8  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 24632                           
 24633                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 24634  0075EE  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 24635  0075F0  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 24636  0075F2  B4D8               	btfsc	status,2,c
 24637  0075F4  D00D               	goto	l1913
 24638                           
 24639                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 24640  0075F6  EE20 F003          	lfsr	2,3
 24641  0075FA  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 24642  0075FC  26D9               	addwf	fsr2l,f,c
 24643  0075FE  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 24644  007600  22DA               	addwfc	fsr2h,f,c
 24645  007602  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 24646  007608  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 24647  00760E  0012               	return	
 24648  007610                     l1913:
 24649                           
 24650                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 24651  007610  6808               	setf	?_NWK_RouteNextHop^0,c
 24652  007612  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 24653  007614  0012               	return		;funcret
 24654  007616                     __end_of_NWK_RouteNextHop:
 24655                           	opt callstack 0
 24656                           
 24657 ;; *************** function _NWK_RouteFindEntry *****************
 24658 ;; Defined at:
 24659 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 24660 ;; Parameters:    Size  Location     Type
 24661 ;;  dst             2    1[COMRAM] unsigned short 
 24662 ;;  multicast       1    3[COMRAM] unsigned char 
 24663 ;; Auto vars:     Size  Location     Type
 24664 ;;  i               1    6[COMRAM] unsigned char 
 24665 ;; Return value:  Size  Location     Type
 24666 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 24667 ;; Registers used:
 24668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24669 ;; Tracked objects:
 24670 ;;		On entry : 0/1
 24671 ;;		On exit  : 0/0
 24672 ;;		Unchanged: 0/0
 24673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24674 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24678 ;;Total ram usage:        6 bytes
 24679 ;; Hardware stack levels used:    1
 24680 ;; Hardware stack levels required when called:    7
 24681 ;; This function calls:
 24682 ;;		Nothing
 24683 ;; This function is called by:
 24684 ;;		_NWK_RouteNextHop
 24685 ;;		_nwkRouteRemove
 24686 ;;		_nwkRouteFrameReceived
 24687 ;;		_nwkRouteFrameSent
 24688 ;; This function uses a non-reentrant model
 24689 ;;
 24690                           
 24691                           	psect	text155
 24692  006E30                     __ptext155:
 24693                           	opt callstack 0
 24694  006E30                     _NWK_RouteFindEntry:
 24695                           	opt callstack 19
 24696                           
 24697                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 24698                           
 24699                           ;incstack = 0
 24700  006E30  0E00               	movlw	0
 24701  006E32  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 24702  006E34                     l13554:
 24703                           
 24704                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 24705  006E34  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 24706  006E36  0D07               	mullw	7
 24707  006E38  0E85               	movlw	low (_nwkRouteTable+1)
 24708  006E3A  24F3               	addwf	243,w,c
 24709  006E3C  6ED9               	movwf	fsr2l,c
 24710  006E3E  0E02               	movlw	high (_nwkRouteTable+1)
 24711  006E40  20F4               	addwfc	prodh,w,c
 24712  006E42  6EDA               	movwf	fsr2h,c
 24713  006E44  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 24714  006E46  18DE               	xorwf	postinc2,w,c
 24715  006E48  E11E               	bnz	l13562
 24716  006E4A  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 24717  006E4C  18DE               	xorwf	postinc2,w,c
 24718  006E4E  A4D8               	btfss	status,2,c
 24719  006E50  D01A               	goto	l13562
 24720  006E52  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 24721  006E54  0D07               	mullw	7
 24722  006E56  0E84               	movlw	low _nwkRouteTable
 24723  006E58  24F3               	addwf	243,w,c
 24724  006E5A  6ED9               	movwf	fsr2l,c
 24725  006E5C  0E02               	movlw	high _nwkRouteTable
 24726  006E5E  20F4               	addwfc	prodh,w,c
 24727  006E60  6EDA               	movwf	fsr2h,c
 24728  006E62  0102               	movlb	2	; () banked
 24729  006E64  A2DF               	btfss	indf2,1,c
 24730  006E66  D002               	goto	u12500
 24731  006E68  0E01               	movlw	1
 24732  006E6A  D001               	goto	u12506
 24733  006E6C                     u12500:
 24734  006E6C  0E00               	movlw	0
 24735  006E6E                     u12506:
 24736  006E6E  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 24737  006E70  A4D8               	btfss	status,2,c
 24738  006E72  D009               	goto	l13562
 24739                           
 24740                           ; BSR set to: 2
 24741                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 24742  006E74  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 24743  006E76  0D07               	mullw	7
 24744  006E78  0E84               	movlw	low _nwkRouteTable
 24745  006E7A  24F3               	addwf	243,w,c
 24746  006E7C  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 24747  006E7E  0E02               	movlw	high _nwkRouteTable
 24748  006E80  20F4               	addwfc	prodh,w,c
 24749  006E82  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 24750  006E84  0012               	return	
 24751  006E86                     l13562:
 24752                           
 24753                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 24754  006E86  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 24755  006E88  0E09               	movlw	9
 24756  006E8A  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 24757  006E8C  D7D3               	goto	l13554
 24758                           
 24759                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 24760  006E8E  0E00               	movlw	0
 24761  006E90  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 24762  006E92  0E00               	movlw	0
 24763  006E94  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 24764  006E96  0012               	return		;funcret
 24765  006E98                     __end_of_NWK_RouteFindEntry:
 24766                           	opt callstack 0
 24767                           
 24768 ;; *************** function _NWK_GroupIsMember *****************
 24769 ;; Defined at:
 24770 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 24771 ;; Parameters:    Size  Location     Type
 24772 ;;  group           2    1[COMRAM] unsigned short 
 24773 ;; Auto vars:     Size  Location     Type
 24774 ;;  i               1    5[COMRAM] unsigned char 
 24775 ;; Return value:  Size  Location     Type
 24776 ;;                  1    wreg      _Bool 
 24777 ;; Registers used:
 24778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24779 ;; Tracked objects:
 24780 ;;		On entry : 0/1
 24781 ;;		On exit  : 0/0
 24782 ;;		Unchanged: 0/0
 24783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24787 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24788 ;;Total ram usage:        5 bytes
 24789 ;; Hardware stack levels used:    1
 24790 ;; Hardware stack levels required when called:    7
 24791 ;; This function calls:
 24792 ;;		Nothing
 24793 ;; This function is called by:
 24794 ;;		_nwkRoutePrepareTx
 24795 ;;		_nwkRxHandleReceivedFrame
 24796 ;; This function uses a non-reentrant model
 24797 ;;
 24798                           
 24799                           	psect	text156
 24800  007E12                     __ptext156:
 24801                           	opt callstack 0
 24802  007E12                     _NWK_GroupIsMember:
 24803                           	opt callstack 19
 24804                           
 24805                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 24806                           
 24807                           ;incstack = 0
 24808  007E12  0E00               	movlw	0
 24809  007E14  6E06               	movwf	NWK_GroupIsMember@i^0,c
 24810  007E16                     l13738:
 24811                           
 24812                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 24813  007E16  5006               	movf	NWK_GroupIsMember@i^0,w,c
 24814  007E18  0D02               	mullw	2
 24815  007E1A  0E00               	movlw	low _nwkGroups
 24816  007E1C  24F3               	addwf	243,w,c
 24817  007E1E  6ED9               	movwf	fsr2l,c
 24818  007E20  0E02               	movlw	high _nwkGroups
 24819  007E22  20F4               	addwfc	prodh,w,c
 24820  007E24  6EDA               	movwf	fsr2h,c
 24821  007E26  5002               	movf	NWK_GroupIsMember@group^0,w,c
 24822  007E28  18DE               	xorwf	postinc2,w,c
 24823  007E2A  E106               	bnz	l13744
 24824  007E2C  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 24825  007E2E  18DE               	xorwf	postinc2,w,c
 24826  007E30  A4D8               	btfss	status,2,c
 24827  007E32  D002               	goto	l13744
 24828                           
 24829                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 24830  007E34  0E01               	movlw	1
 24831  007E36  0012               	return	
 24832  007E38                     l13744:
 24833  007E38  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 24834  007E3A  0E09               	movlw	9
 24835  007E3C  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 24836  007E3E  D7EB               	goto	l13738
 24837                           
 24838                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 24839  007E40  0E00               	movlw	0
 24840  007E42  0012               	return		;funcret
 24841  007E44                     __end_of_NWK_GroupIsMember:
 24842                           	opt callstack 0
 24843                           
 24844 ;; *************** function _nwkFrameAlloc *****************
 24845 ;; Defined at:
 24846 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 24847 ;; Parameters:    Size  Location     Type
 24848 ;;		None
 24849 ;; Auto vars:     Size  Location     Type
 24850 ;;  i               1   17[COMRAM] unsigned char 
 24851 ;; Return value:  Size  Location     Type
 24852 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 24853 ;; Registers used:
 24854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24855 ;; Tracked objects:
 24856 ;;		On entry : 0/1
 24857 ;;		On exit  : 0/0
 24858 ;;		Unchanged: 0/0
 24859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24863 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24864 ;;Total ram usage:        5 bytes
 24865 ;; Hardware stack levels used:    1
 24866 ;; Hardware stack levels required when called:    8
 24867 ;; This function calls:
 24868 ;;		_memset
 24869 ;; This function is called by:
 24870 ;;		_nwkDataReqSendFrame
 24871 ;;		_nwkRouteSendRouteError
 24872 ;;		_PHY_DataInd
 24873 ;;		_nwkRxSendAck
 24874 ;;		_nwkTxBroadcastFrame
 24875 ;; This function uses a non-reentrant model
 24876 ;;
 24877                           
 24878                           	psect	text157
 24879  005E44                     __ptext157:
 24880                           	opt callstack 0
 24881  005E44                     _nwkFrameAlloc:
 24882                           	opt callstack 17
 24883                           
 24884                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 24885                           
 24886                           ;incstack = 0
 24887  005E44  0E00               	movlw	0
 24888  005E46  6E12               	movwf	nwkFrameAlloc@i^0,c
 24889  005E48                     l13994:
 24890                           
 24891                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 24892  005E48  5012               	movf	nwkFrameAlloc@i^0,w,c
 24893  005E4A  0D89               	mullw	137
 24894  005E4C  0EBD               	movlw	low _nwkFrameFrames
 24895  005E4E  24F3               	addwf	243,w,c
 24896  005E50  6ED9               	movwf	fsr2l,c
 24897  005E52  0E05               	movlw	high _nwkFrameFrames
 24898  005E54  20F4               	addwfc	prodh,w,c
 24899  005E56  6EDA               	movwf	fsr2h,c
 24900  005E58  50DF               	movf	indf2,w,c
 24901  005E5A  A4D8               	btfss	status,2,c
 24902  005E5C  D044               	goto	l14008
 24903                           
 24904                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 24905  005E5E  5012               	movf	nwkFrameAlloc@i^0,w,c
 24906  005E60  0D89               	mullw	137
 24907  005E62  0EBD               	movlw	low _nwkFrameFrames
 24908  005E64  24F3               	addwf	243,w,c
 24909  005E66  6E02               	movwf	memset@dest^0,c
 24910  005E68  0E05               	movlw	high _nwkFrameFrames
 24911  005E6A  20F4               	addwfc	prodh,w,c
 24912  005E6C  6E03               	movwf	(memset@dest+1)^0,c
 24913  005E6E  0E00               	movlw	0
 24914  005E70  6E05               	movwf	(memset@c+1)^0,c
 24915  005E72  0E00               	movlw	0
 24916  005E74  6E04               	movwf	memset@c^0,c
 24917  005E76  0E00               	movlw	0
 24918  005E78  6E07               	movwf	(memset@n+1)^0,c
 24919  005E7A  0E89               	movlw	137
 24920  005E7C  6E06               	movwf	memset@n^0,c
 24921  005E7E  ECC9  F01E         	call	_memset	;wreg free
 24922                           
 24923                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 24924  005E82  5012               	movf	nwkFrameAlloc@i^0,w,c
 24925  005E84  0D89               	mullw	137
 24926  005E86  0EBE               	movlw	low (_nwkFrameFrames+1)
 24927  005E88  24F3               	addwf	243,w,c
 24928  005E8A  6ED9               	movwf	fsr2l,c
 24929  005E8C  0E05               	movlw	high (_nwkFrameFrames+1)
 24930  005E8E  20F4               	addwfc	prodh,w,c
 24931  005E90  6EDA               	movwf	fsr2h,c
 24932  005E92  0E10               	movlw	16
 24933  005E94  6EDF               	movwf	indf2,c
 24934                           
 24935                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 24936  005E96  5012               	movf	nwkFrameAlloc@i^0,w,c
 24937  005E98  0D89               	mullw	137
 24938  005E9A  0EBD               	movlw	low _nwkFrameFrames
 24939  005E9C  6E10               	movwf	??_nwkFrameAlloc^0,c
 24940  005E9E  0E05               	movlw	high _nwkFrameFrames
 24941  005EA0  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 24942  005EA2  0E12               	movlw	18
 24943  005EA4  2610               	addwf	??_nwkFrameAlloc^0,f,c
 24944  005EA6  0E00               	movlw	0
 24945  005EA8  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 24946  005EAA  50F3               	movf	243,w,c
 24947  005EAC  2610               	addwf	??_nwkFrameAlloc^0,f,c
 24948  005EAE  50F4               	movf	244,w,c
 24949  005EB0  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 24950  005EB2  5012               	movf	nwkFrameAlloc@i^0,w,c
 24951  005EB4  0D89               	mullw	137
 24952  005EB6  0E3E               	movlw	low (_nwkFrameFrames+129)
 24953  005EB8  24F3               	addwf	243,w,c
 24954  005EBA  6ED9               	movwf	fsr2l,c
 24955  005EBC  0E06               	movlw	high (_nwkFrameFrames+129)
 24956  005EBE  20F4               	addwfc	prodh,w,c
 24957  005EC0  6EDA               	movwf	fsr2h,c
 24958  005EC2  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 24959  005EC8  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 24960                           
 24961                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 24962  005ECE  0101               	movlb	1	; () banked
 24963  005ED0  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 24964  005ED2  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 24965                           
 24966                           ; BSR set to: 1
 24967                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 24968  005ED4  5012               	movf	nwkFrameAlloc@i^0,w,c
 24969  005ED6  0D89               	mullw	137
 24970  005ED8  0EBD               	movlw	low _nwkFrameFrames
 24971  005EDA  24F3               	addwf	243,w,c
 24972  005EDC  6E0E               	movwf	?_nwkFrameAlloc^0,c
 24973  005EDE  0E05               	movlw	high _nwkFrameFrames
 24974  005EE0  20F4               	addwfc	prodh,w,c
 24975  005EE2  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 24976  005EE4  0012               	return	
 24977  005EE6                     l14008:
 24978                           
 24979                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 24980  005EE6  2A12               	incf	nwkFrameAlloc@i^0,f,c
 24981  005EE8  0E04               	movlw	4
 24982  005EEA  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 24983  005EEC  D7AD               	goto	l13994
 24984                           
 24985                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 24986  005EEE  0E00               	movlw	0
 24987  005EF0  6E0E               	movwf	?_nwkFrameAlloc^0,c
 24988  005EF2  0E00               	movlw	0
 24989  005EF4  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 24990  005EF6  0012               	return		;funcret
 24991  005EF8                     __end_of_nwkFrameAlloc:
 24992                           	opt callstack 0
 24993                           
 24994 ;; *************** function _memset *****************
 24995 ;; Defined at:
 24996 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;  dest            2    1[COMRAM] PTR void 
 24999 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 25000 ;;		 -> appDataInd@data(65), 
 25001 ;;  c               2    3[COMRAM] int 
 25002 ;;  n               2    5[COMRAM] unsigned int 
 25003 ;; Auto vars:     Size  Location     Type
 25004 ;;  s               2   11[COMRAM] PTR unsigned char 
 25005 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 25006 ;;		 -> appDataInd@data(65), 
 25007 ;;  k               2    9[COMRAM] unsigned int 
 25008 ;; Return value:  Size  Location     Type
 25009 ;;                  2    1[COMRAM] PTR void 
 25010 ;; Registers used:
 25011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25012 ;; Tracked objects:
 25013 ;;		On entry : 0/0
 25014 ;;		On exit  : 0/0
 25015 ;;		Unchanged: 0/0
 25016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25017 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25018 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25020 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25021 ;;Total ram usage:       12 bytes
 25022 ;; Hardware stack levels used:    1
 25023 ;; Hardware stack levels required when called:    7
 25024 ;; This function calls:
 25025 ;;		Nothing
 25026 ;; This function is called by:
 25027 ;;		_appDataInd
 25028 ;;		_cmdSend
 25029 ;;		_cmdBcast
 25030 ;;		_cmdSetTX
 25031 ;;		_processATCommand
 25032 ;;		_nwkFrameAlloc
 25033 ;; This function uses a non-reentrant model
 25034 ;;
 25035                           
 25036                           	psect	text158
 25037  003D92                     __ptext158:
 25038                           	opt callstack 0
 25039  003D92                     _memset:
 25040                           	opt callstack 22
 25041                           
 25042                           ;incstack = 0
 25043  003D92  0060  F008  F00C   	movff	memset@dest,memset@s
 25044  003D98  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 25045  003D9E  5006               	movf	memset@n^0,w,c
 25046  003DA0  1007               	iorwf	(memset@n+1)^0,w,c
 25047  003DA2  B4D8               	btfsc	status,2,c
 25048  003DA4  0012               	return	
 25049  003DA6  0060  F033  FFD9   	movff	memset@s,fsr2l
 25050  003DAC  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 25051  003DB2  0060  F013  FFDF   	movff	memset@c,indf2
 25052  003DB8  5006               	movf	memset@n^0,w,c
 25053  003DBA  240C               	addwf	memset@s^0,w,c
 25054  003DBC  6E08               	movwf	??_memset^0,c
 25055  003DBE  5007               	movf	(memset@n+1)^0,w,c
 25056  003DC0  200D               	addwfc	(memset@s+1)^0,w,c
 25057  003DC2  6E09               	movwf	(??_memset+1)^0,c
 25058  003DC4  0EFF               	movlw	255
 25059  003DC6  2408               	addwf	??_memset^0,w,c
 25060  003DC8  6ED9               	movwf	fsr2l,c
 25061  003DCA  0EFF               	movlw	255
 25062  003DCC  2009               	addwfc	(??_memset+1)^0,w,c
 25063  003DCE  6EDA               	movwf	fsr2h,c
 25064  003DD0  0060  F013  FFDF   	movff	memset@c,indf2
 25065  003DD6  5007               	movf	(memset@n+1)^0,w,c
 25066  003DD8  E104               	bnz	l13800
 25067  003DDA  0E03               	movlw	3
 25068  003DDC  5C06               	subwf	memset@n^0,w,c
 25069  003DDE  A0D8               	btfss	status,0,c
 25070  003DE0  0012               	return	
 25071  003DE2                     l13800:
 25072  003DE2  EE20 F001          	lfsr	2,1
 25073  003DE6  500C               	movf	memset@s^0,w,c
 25074  003DE8  26D9               	addwf	fsr2l,f,c
 25075  003DEA  500D               	movf	(memset@s+1)^0,w,c
 25076  003DEC  22DA               	addwfc	fsr2h,f,c
 25077  003DEE  0060  F013  FFDF   	movff	memset@c,indf2
 25078  003DF4  EE20 F002          	lfsr	2,2
 25079  003DF8  500C               	movf	memset@s^0,w,c
 25080  003DFA  26D9               	addwf	fsr2l,f,c
 25081  003DFC  500D               	movf	(memset@s+1)^0,w,c
 25082  003DFE  22DA               	addwfc	fsr2h,f,c
 25083  003E00  0060  F013  FFDF   	movff	memset@c,indf2
 25084  003E06  5006               	movf	memset@n^0,w,c
 25085  003E08  240C               	addwf	memset@s^0,w,c
 25086  003E0A  6E08               	movwf	??_memset^0,c
 25087  003E0C  5007               	movf	(memset@n+1)^0,w,c
 25088  003E0E  200D               	addwfc	(memset@s+1)^0,w,c
 25089  003E10  6E09               	movwf	(??_memset+1)^0,c
 25090  003E12  0EFE               	movlw	254
 25091  003E14  2408               	addwf	??_memset^0,w,c
 25092  003E16  6ED9               	movwf	fsr2l,c
 25093  003E18  0EFF               	movlw	255
 25094  003E1A  2009               	addwfc	(??_memset+1)^0,w,c
 25095  003E1C  6EDA               	movwf	fsr2h,c
 25096  003E1E  0060  F013  FFDF   	movff	memset@c,indf2
 25097  003E24  5006               	movf	memset@n^0,w,c
 25098  003E26  240C               	addwf	memset@s^0,w,c
 25099  003E28  6E08               	movwf	??_memset^0,c
 25100  003E2A  5007               	movf	(memset@n+1)^0,w,c
 25101  003E2C  200D               	addwfc	(memset@s+1)^0,w,c
 25102  003E2E  6E09               	movwf	(??_memset+1)^0,c
 25103  003E30  0EFD               	movlw	253
 25104  003E32  2408               	addwf	??_memset^0,w,c
 25105  003E34  6ED9               	movwf	fsr2l,c
 25106  003E36  0EFF               	movlw	255
 25107  003E38  2009               	addwfc	(??_memset+1)^0,w,c
 25108  003E3A  6EDA               	movwf	fsr2h,c
 25109  003E3C  0060  F013  FFDF   	movff	memset@c,indf2
 25110  003E42  5007               	movf	(memset@n+1)^0,w,c
 25111  003E44  E104               	bnz	l13806
 25112  003E46  0E07               	movlw	7
 25113  003E48  5C06               	subwf	memset@n^0,w,c
 25114  003E4A  A0D8               	btfss	status,0,c
 25115  003E4C  0012               	return	
 25116  003E4E                     l13806:
 25117  003E4E  EE20 F003          	lfsr	2,3
 25118  003E52  500C               	movf	memset@s^0,w,c
 25119  003E54  26D9               	addwf	fsr2l,f,c
 25120  003E56  500D               	movf	(memset@s+1)^0,w,c
 25121  003E58  22DA               	addwfc	fsr2h,f,c
 25122  003E5A  0060  F013  FFDF   	movff	memset@c,indf2
 25123  003E60  5006               	movf	memset@n^0,w,c
 25124  003E62  240C               	addwf	memset@s^0,w,c
 25125  003E64  6E08               	movwf	??_memset^0,c
 25126  003E66  5007               	movf	(memset@n+1)^0,w,c
 25127  003E68  200D               	addwfc	(memset@s+1)^0,w,c
 25128  003E6A  6E09               	movwf	(??_memset+1)^0,c
 25129  003E6C  0EFC               	movlw	252
 25130  003E6E  2408               	addwf	??_memset^0,w,c
 25131  003E70  6ED9               	movwf	fsr2l,c
 25132  003E72  0EFF               	movlw	255
 25133  003E74  2009               	addwfc	(??_memset+1)^0,w,c
 25134  003E76  6EDA               	movwf	fsr2h,c
 25135  003E78  0060  F013  FFDF   	movff	memset@c,indf2
 25136  003E7E  5007               	movf	(memset@n+1)^0,w,c
 25137  003E80  E104               	bnz	l13812
 25138  003E82  0E09               	movlw	9
 25139  003E84  5C06               	subwf	memset@n^0,w,c
 25140  003E86  A0D8               	btfss	status,0,c
 25141  003E88  0012               	return	
 25142  003E8A                     l13812:
 25143  003E8A  0060  F030  F008   	movff	memset@s,??_memset
 25144  003E90  0060  F034  F009   	movff	memset@s+1,??_memset+1
 25145  003E96  1E08               	comf	??_memset^0,f,c
 25146  003E98  1E09               	comf	(??_memset+1)^0,f,c
 25147  003E9A  4A08               	infsnz	??_memset^0,f,c
 25148  003E9C  2A09               	incf	(??_memset+1)^0,f,c
 25149  003E9E  0E03               	movlw	3
 25150  003EA0  1408               	andwf	??_memset^0,w,c
 25151  003EA2  6E0A               	movwf	memset@k^0,c
 25152  003EA4  6A0B               	clrf	(memset@k+1)^0,c
 25153  003EA6  500A               	movf	memset@k^0,w,c
 25154  003EA8  260C               	addwf	memset@s^0,f,c
 25155  003EAA  500B               	movf	(memset@k+1)^0,w,c
 25156  003EAC  220D               	addwfc	(memset@s+1)^0,f,c
 25157  003EAE  500A               	movf	memset@k^0,w,c
 25158  003EB0  5E06               	subwf	memset@n^0,f,c
 25159  003EB2  500B               	movf	(memset@k+1)^0,w,c
 25160  003EB4  5A07               	subwfb	(memset@n+1)^0,f,c
 25161  003EB6  0EFC               	movlw	252
 25162  003EB8  1606               	andwf	memset@n^0,f,c
 25163  003EBA  0EFF               	movlw	255
 25164  003EBC  1607               	andwf	(memset@n+1)^0,f,c
 25165  003EBE  D00E               	goto	l13820
 25166  003EC0                     l13814:
 25167  003EC0  0060  F033  FFD9   	movff	memset@s,fsr2l
 25168  003EC6  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 25169  003ECC  0060  F013  FFDF   	movff	memset@c,indf2
 25170  003ED2  0606               	decf	memset@n^0,f,c
 25171  003ED4  A0D8               	btfss	status,0,c
 25172  003ED6  0607               	decf	(memset@n+1)^0,f,c
 25173  003ED8  4A0C               	infsnz	memset@s^0,f,c
 25174  003EDA  2A0D               	incf	(memset@s+1)^0,f,c
 25175  003EDC                     l13820:
 25176  003EDC  5006               	movf	memset@n^0,w,c
 25177  003EDE  1007               	iorwf	(memset@n+1)^0,w,c
 25178  003EE0  B4D8               	btfsc	status,2,c
 25179  003EE2  0012               	return	
 25180  003EE4  D7ED               	goto	l13814
 25181  003EE6                     __end_of_memset:
 25182                           	opt callstack 0
 25183                           
 25184 ;; *************** function _memcpy *****************
 25185 ;; Defined at:
 25186 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 25187 ;; Parameters:    Size  Location     Type
 25188 ;;  d1              2    7[COMRAM] PTR void 
 25189 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 25190 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 25191 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 25192 ;;		 -> tx_buffer(524), 
 25193 ;;  s1              2    9[COMRAM] PTR const void 
 25194 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 25195 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 25196 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 25197 ;;  n               2   11[COMRAM] unsigned int 
 25198 ;; Auto vars:     Size  Location     Type
 25199 ;;  s               2   16[COMRAM] PTR const unsigned char 
 25200 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 25201 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 25202 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 25203 ;;  d               2   14[COMRAM] PTR unsigned char 
 25204 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 25205 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 25206 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 25207 ;;		 -> tx_buffer(524), 
 25208 ;;  tmp             1   13[COMRAM] unsigned char 
 25209 ;; Return value:  Size  Location     Type
 25210 ;;                  2    7[COMRAM] PTR void 
 25211 ;; Registers used:
 25212 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25213 ;; Tracked objects:
 25214 ;;		On entry : 0/0
 25215 ;;		On exit  : 0/0
 25216 ;;		Unchanged: 0/0
 25217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25218 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25219 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25221 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25222 ;;Total ram usage:       11 bytes
 25223 ;; Hardware stack levels used:    1
 25224 ;; Hardware stack levels required when called:    7
 25225 ;; This function calls:
 25226 ;;		Nothing
 25227 ;; This function is called by:
 25228 ;;		_cmdSend
 25229 ;;		_cmdBcast
 25230 ;;		_cmdSetAES
 25231 ;;		_cmdSetRFCH
 25232 ;;		_cmdSetTX
 25233 ;;		_cmdSetCADRSSI
 25234 ;;		_cmdSetSF
 25235 ;;		_CircularBufferPushBack
 25236 ;;		_nwkDataReqSendFrame
 25237 ;;		_PHY_DataInd
 25238 ;;		_nwkTxBroadcastFrame
 25239 ;;		_CircularBufferPopFront
 25240 ;; This function uses a non-reentrant model
 25241 ;;
 25242                           
 25243                           	psect	text159
 25244  006BA0                     __ptext159:
 25245                           	opt callstack 0
 25246  006BA0                     _memcpy:
 25247                           	opt callstack 19
 25248                           
 25249                           ;incstack = 0
 25250  006BA0  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 25251  006BA6  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 25252  006BAC  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 25253  006BB2  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 25254  006BB8  D023               	goto	l13986
 25255  006BBA                     l13978:
 25256  006BBA  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 25257  006BC0  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 25258  006BC6  0E00               	movlw	low (__mediumconst shr (0+16))
 25259  006BC8  6EF8               	movwf	tblptru,c
 25260  006BCA  0E0F               	movlw	(high __ramtop+-1)
 25261  006BCC  64F7               	cpfsgt	tblptrh,c
 25262  006BCE  D003               	bra	u13037
 25263  006BD0  0008               	tblrd		*
 25264  006BD2  50F5               	movf	tablat,w,c
 25265  006BD4  D007               	bra	u13030
 25266  006BD6                     u13037:
 25267  006BD6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25268  006BDC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25269  006BE2  50EF               	movf	indf0,w,c
 25270  006BE4                     u13030:
 25271  006BE4  6E0E               	movwf	memcpy@tmp^0,c
 25272  006BE6  4A11               	infsnz	memcpy@s^0,f,c
 25273  006BE8  2A12               	incf	(memcpy@s+1)^0,f,c
 25274  006BEA  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 25275  006BF0  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 25276  006BF6  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 25277  006BFC  4A0F               	infsnz	memcpy@d^0,f,c
 25278  006BFE  2A10               	incf	(memcpy@d+1)^0,f,c
 25279  006C00                     l13986:
 25280  006C00  060C               	decf	memcpy@n^0,f,c
 25281  006C02  A0D8               	btfss	status,0,c
 25282  006C04  060D               	decf	(memcpy@n+1)^0,f,c
 25283  006C06  280C               	incf	memcpy@n^0,w,c
 25284  006C08  E1D8               	bnz	l13978
 25285  006C0A  280D               	incf	(memcpy@n+1)^0,w,c
 25286  006C0C  B4D8               	btfsc	status,2,c
 25287  006C0E  0012               	return	
 25288  006C10  D7D4               	goto	l13978
 25289  006C12                     __end_of_memcpy:
 25290                           	opt callstack 0
 25291                           
 25292 ;; *************** function _nwkDataReqConfirm *****************
 25293 ;; Defined at:
 25294 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 25297 ;;		 -> NULL(0), tx_buffer(524), 
 25298 ;; Auto vars:     Size  Location     Type
 25299 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 25300 ;;		 -> NULL(0), tx_buffer(524), 
 25301 ;; Return value:  Size  Location     Type
 25302 ;;                  1    wreg      void 
 25303 ;; Registers used:
 25304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25305 ;; Tracked objects:
 25306 ;;		On entry : 0/1
 25307 ;;		On exit  : 0/0
 25308 ;;		Unchanged: 0/0
 25309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25313 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25314 ;;Total ram usage:        6 bytes
 25315 ;; Hardware stack levels used:    1
 25316 ;; Hardware stack levels required when called:    9
 25317 ;; This function calls:
 25318 ;;		_appDataConf
 25319 ;; This function is called by:
 25320 ;;		_nwkDataReqTaskHandler
 25321 ;; This function uses a non-reentrant model
 25322 ;;
 25323                           
 25324                           	psect	text160
 25325  005068                     __ptext160:
 25326                           	opt callstack 0
 25327  005068                     _nwkDataReqConfirm:
 25328                           	opt callstack 18
 25329                           
 25330                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 25331                           
 25332                           ;incstack = 0
 25333  005068  5009               	movf	nwkDataReqConfirm@req^0,w,c
 25334  00506A  0100               	movlb	0	; () banked
 25335  00506C  19E2               	xorwf	_nwkDataReqQueue& (0+255),w,b
 25336  00506E  E111               	bnz	l10828
 25337  005070  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 25338  005072  19E3               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 25339  005074  A4D8               	btfss	status,2,c
 25340  005076  D00D               	goto	l10828
 25341                           
 25342                           ; BSR set to: 0
 25343                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 25344  005078  0060  F38B  FFD9   	movff	_nwkDataReqQueue,fsr2l
 25345  00507E  0060  F38F  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 25346  005084  006F FF78  F0E2    	movff	postinc2,_nwkDataReqQueue
 25347  00508A  006F FF74  F0E3    	movff	postdec2,_nwkDataReqQueue+1
 25348                           
 25349                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 25350  005090  D03E               	goto	l10836
 25351  005092                     l10828:
 25352                           
 25353                           ; BSR set to: 0
 25354                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 25355  005092  0060  F388  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 25356  005098  0060  F38C  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 25357                           
 25358                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 25359  00509E  D00C               	goto	l10832
 25360  0050A0                     l10830:
 25361                           
 25362                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 25363  0050A0  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 25364  0050A6  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 25365  0050AC  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 25366  0050B2  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 25367  0050B8                     l10832:
 25368                           
 25369                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 25370  0050B8  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 25371  0050BE  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 25372  0050C4  5009               	movf	nwkDataReqConfirm@req^0,w,c
 25373  0050C6  18DE               	xorwf	postinc2,w,c
 25374  0050C8  E1EB               	bnz	l10830
 25375  0050CA  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 25376  0050CC  18DE               	xorwf	postinc2,w,c
 25377  0050CE  A4D8               	btfss	status,2,c
 25378  0050D0  D7E7               	goto	l10830
 25379                           
 25380                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 25381  0050D2  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 25382  0050D8  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 25383  0050DE  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 25384  0050E4  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 25385  0050EA  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 25386  0050F0  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 25387  0050F6  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 25388  0050FC  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 25389  005102  006F FF7B FFE6     	movff	postinc2,postinc1
 25390  005108  006F FF77 FFE5     	movff	postdec2,postdec1
 25391  00510E                     l10836:
 25392                           
 25393                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 25394  00510E  0101               	movlb	1	; () banked
 25395  005110  0726               	decf	(_nwkIb+38)& (0+255),f,b
 25396  005112  A0D8               	btfss	status,0,c
 25397  005114  0727               	decf	(_nwkIb+39)& (0+255),f,b
 25398                           
 25399                           ; BSR set to: 1
 25400                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 25401  005116  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 25402  00511C  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 25403  005122  EE20 F00F          	lfsr	2,15
 25404  005126  5009               	movf	nwkDataReqConfirm@req^0,w,c
 25405  005128  26D9               	addwf	fsr2l,f,c
 25406  00512A  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 25407  00512C  22DA               	addwfc	fsr2h,f,c
 25408  00512E  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 25409  005134  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 25410  00513A  D801               	call	u9208
 25411  00513C  0012               	return	
 25412  00513E                     u9208:
 25413  00513E  0005               	push	
 25414  005140  6EFA               	movwf	pclath,c
 25415  005142  500B               	movf	??_nwkDataReqConfirm^0,w,c
 25416  005144  6EFD               	movwf	tosl,c
 25417  005146  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 25418  005148  6EFE               	movwf	tosh,c
 25419  00514A  6AFF               	clrf	tosu,c
 25420  00514C  50FA               	movf	pclath,w,c
 25421  00514E  0012               	return		;indir
 25422  005150                     __end_of_nwkDataReqConfirm:
 25423                           	opt callstack 0
 25424                           
 25425 ;; *************** function _appDataConf *****************
 25426 ;; Defined at:
 25427 ;;		line 33 in file "../app/app_src/application.c"
 25428 ;; Parameters:    Size  Location     Type
 25429 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 25430 ;;		 -> NULL(0), tx_buffer(524), 
 25431 ;; Auto vars:     Size  Location     Type
 25432 ;;		None
 25433 ;; Return value:  Size  Location     Type
 25434 ;;                  1    wreg      void 
 25435 ;; Registers used:
 25436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25437 ;; Tracked objects:
 25438 ;;		On entry : 3F/1
 25439 ;;		On exit  : 0/0
 25440 ;;		Unchanged: 0/0
 25441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25446 ;;Total ram usage:        2 bytes
 25447 ;; Hardware stack levels used:    1
 25448 ;; Hardware stack levels required when called:    8
 25449 ;; This function calls:
 25450 ;;		_free_tx_buffer
 25451 ;; This function is called by:
 25452 ;;		_cmdSend
 25453 ;;		_cmdBcast
 25454 ;;		_nwkDataReqConfirm
 25455 ;; This function uses a non-reentrant model
 25456 ;;
 25457                           
 25458                           	psect	text161
 25459  008040                     __ptext161:
 25460                           	opt callstack 0
 25461  008040                     _appDataConf:
 25462                           	opt callstack 18
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;../app/app_src/application.c: 33: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 34: {;../app/app_src/application.c: 35:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 25466                           
 25467                           ;incstack = 0
 25468  008040  EE20 F011          	lfsr	2,17
 25469  008044  5007               	movf	appDataConf@req^0,w,c
 25470  008046  26D9               	addwf	fsr2l,f,c
 25471  008048  5008               	movf	(appDataConf@req+1)^0,w,c
 25472  00804A  22DA               	addwfc	fsr2h,f,c
 25473  00804C  50DF               	movf	indf2,w,c
 25474                           
 25475                           ; BSR set to: 1
 25476                           
 25477                           ;../app/app_src/application.c: 38:  else{
 25478                           
 25479                           ;../app/app_src/application.c: 37:  }
 25480                           
 25481                           ; BSR set to: 1
 25482  00804E  F000               	nop		;# 
 25483                           
 25484                           ;../app/app_src/application.c: 42:  free_tx_buffer(req);
 25485  008050  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 25486  008056  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 25487  00805C  EC4C  F03A         	call	_free_tx_buffer	;wreg free
 25488  008060  0012               	return		;funcret
 25489  008062                     __end_of_appDataConf:
 25490                           	opt callstack 0
 25491                           
 25492 ;; *************** function _free_tx_buffer *****************
 25493 ;; Defined at:
 25494 ;;		line 70 in file "../app/app_src/application.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 25497 ;;		 -> NULL(0), tx_buffer(524), 
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;  buf_id          1    5[COMRAM] unsigned char 
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1    wreg      void 
 25502 ;; Registers used:
 25503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25504 ;; Tracked objects:
 25505 ;;		On entry : 0/1
 25506 ;;		On exit  : 0/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25513 ;;Total ram usage:        5 bytes
 25514 ;; Hardware stack levels used:    1
 25515 ;; Hardware stack levels required when called:    7
 25516 ;; This function calls:
 25517 ;;		Nothing
 25518 ;; This function is called by:
 25519 ;;		_appDataConf
 25520 ;; This function uses a non-reentrant model
 25521 ;;
 25522                           
 25523                           	psect	text162
 25524  007498                     __ptext162:
 25525                           	opt callstack 0
 25526  007498                     _free_tx_buffer:
 25527                           	opt callstack 18
 25528                           
 25529                           ;../app/app_src/application.c: 71:     uint8_t buf_id = 0;
 25530                           
 25531                           ;incstack = 0
 25532  007498  0E00               	movlw	0
 25533  00749A  6E06               	movwf	free_tx_buffer@buf_id^0,c
 25534                           
 25535                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 25536  00749C  D020               	goto	l9528
 25537  00749E                     l9520:
 25538                           
 25539                           ;../app/app_src/application.c: 74:         if(req == &tx_buffer[buf_id].nwkDataReq){
 25540  00749E  5006               	movf	free_tx_buffer@buf_id^0,w,c
 25541  0074A0  0D83               	mullw	131
 25542  0074A2  0E6A               	movlw	low _tx_buffer
 25543  0074A4  6E04               	movwf	??_free_tx_buffer^0,c
 25544  0074A6  0E08               	movlw	high _tx_buffer
 25545  0074A8  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 25546  0074AA  0E03               	movlw	3
 25547  0074AC  2604               	addwf	??_free_tx_buffer^0,f,c
 25548  0074AE  0E00               	movlw	0
 25549  0074B0  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 25550  0074B2  50F3               	movf	243,w,c
 25551  0074B4  2604               	addwf	??_free_tx_buffer^0,f,c
 25552  0074B6  50F4               	movf	244,w,c
 25553  0074B8  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 25554  0074BA  5004               	movf	??_free_tx_buffer^0,w,c
 25555  0074BC  1802               	xorwf	free_tx_buffer@req^0,w,c
 25556  0074BE  E10E               	bnz	l9526
 25557  0074C0  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 25558  0074C2  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 25559  0074C4  A4D8               	btfss	status,2,c
 25560  0074C6  D00A               	goto	l9526
 25561                           
 25562                           ;../app/app_src/application.c: 76:             tx_buffer[buf_id].free = 1;
 25563  0074C8  5006               	movf	free_tx_buffer@buf_id^0,w,c
 25564  0074CA  0D83               	mullw	131
 25565  0074CC  0E6A               	movlw	low _tx_buffer
 25566  0074CE  24F3               	addwf	243,w,c
 25567  0074D0  6ED9               	movwf	fsr2l,c
 25568  0074D2  0E08               	movlw	high _tx_buffer
 25569  0074D4  20F4               	addwfc	prodh,w,c
 25570  0074D6  6EDA               	movwf	fsr2h,c
 25571  0074D8  84DF               	bsf	indf2,2,c
 25572  0074DA  0012               	return	
 25573  0074DC                     l9526:
 25574                           
 25575                           ;../app/app_src/application.c: 79:         buf_id++;
 25576  0074DC  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 25577  0074DE                     l9528:
 25578                           
 25579                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 25580  0074DE  0E03               	movlw	3
 25581  0074E0  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 25582  0074E2  D7DD               	goto	l9520
 25583  0074E4  0012               	return	
 25584  0074E6                     __end_of_free_tx_buffer:
 25585                           	opt callstack 0
 25586                           
 25587 ;; *************** function _SYS_Init *****************
 25588 ;; Defined at:
 25589 ;;		line 58 in file "../sys/sys_src/sys.c"
 25590 ;; Parameters:    Size  Location     Type
 25591 ;;		None
 25592 ;; Auto vars:     Size  Location     Type
 25593 ;;		None
 25594 ;; Return value:  Size  Location     Type
 25595 ;;                  1    wreg      void 
 25596 ;; Registers used:
 25597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25598 ;; Tracked objects:
 25599 ;;		On entry : 3B/3D
 25600 ;;		On exit  : 3F/2
 25601 ;;		Unchanged: 0/0
 25602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25607 ;;Total ram usage:        0 bytes
 25608 ;; Hardware stack levels used:    1
 25609 ;; Hardware stack levels required when called:   15
 25610 ;; This function calls:
 25611 ;;		_NWK_Init
 25612 ;;		_PHY_Init
 25613 ;;		_SYS_TimerInit
 25614 ;; This function is called by:
 25615 ;;		_main
 25616 ;; This function uses a non-reentrant model
 25617 ;;
 25618                           
 25619                           	psect	text163
 25620  00844A                     __ptext163:
 25621                           	opt callstack 0
 25622  00844A                     _SYS_Init:
 25623                           	opt callstack 15
 25624                           
 25625                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 25626                           
 25627                           ;incstack = 0
 25628  00844A  EC5C  F042         	call	_SYS_TimerInit	;wreg free
 25629                           
 25630                           ; BSR set to: 0
 25631                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 25632  00844E  EC7F  F042         	call	_PHY_Init	;wreg free
 25633                           
 25634                           ; BSR set to: 1
 25635                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 25636  008452  EC53  F039         	call	_NWK_Init	;wreg free
 25637                           
 25638                           ; BSR set to: 2
 25639  008456  0012               	return		;funcret
 25640  008458                     __end_of_SYS_Init:
 25641                           	opt callstack 0
 25642                           
 25643 ;; *************** function _SYS_TimerInit *****************
 25644 ;; Defined at:
 25645 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;		None
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;		None
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  1    wreg      void 
 25652 ;; Registers used:
 25653 ;;		wreg, status,2, status,0
 25654 ;; Tracked objects:
 25655 ;;		On entry : 3B/3D
 25656 ;;		On exit  : 3F/0
 25657 ;;		Unchanged: 0/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25663 ;;Total ram usage:        0 bytes
 25664 ;; Hardware stack levels used:    1
 25665 ;; Hardware stack levels required when called:    7
 25666 ;; This function calls:
 25667 ;;		Nothing
 25668 ;; This function is called by:
 25669 ;;		_SYS_Init
 25670 ;; This function uses a non-reentrant model
 25671 ;;
 25672                           
 25673                           	psect	text164
 25674  0084B8                     __ptext164:
 25675                           	opt callstack 0
 25676  0084B8                     _SYS_TimerInit:
 25677                           	opt callstack 22
 25678                           
 25679                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 25680                           
 25681                           ; BSR set to: 2
 25682                           ;incstack = 0
 25683  0084B8  0E00               	movlw	0
 25684  0084BA  0100               	movlb	0	; () banked
 25685  0084BC  6FE0               	movwf	_timers& (0+255),b
 25686  0084BE  0E00               	movlw	0
 25687  0084C0  6FE1               	movwf	(_timers+1)& (0+255),b
 25688                           
 25689                           ; BSR set to: 0
 25690  0084C2  0012               	return		;funcret
 25691  0084C4                     __end_of_SYS_TimerInit:
 25692                           	opt callstack 0
 25693                           
 25694 ;; *************** function _PHY_Init *****************
 25695 ;; Defined at:
 25696 ;;		line 830 in file "../phy/sx1216/phy_src/phy.c"
 25697 ;; Parameters:    Size  Location     Type
 25698 ;;		None
 25699 ;; Auto vars:     Size  Location     Type
 25700 ;;		None
 25701 ;; Return value:  Size  Location     Type
 25702 ;;                  1    wreg      void 
 25703 ;; Registers used:
 25704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25705 ;; Tracked objects:
 25706 ;;		On entry : 3F/0
 25707 ;;		On exit  : 3F/1
 25708 ;;		Unchanged: 0/0
 25709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25714 ;;Total ram usage:        0 bytes
 25715 ;; Hardware stack levels used:    1
 25716 ;; Hardware stack levels required when called:   14
 25717 ;; This function calls:
 25718 ;;		_initRadio
 25719 ;; This function is called by:
 25720 ;;		_SYS_Init
 25721 ;; This function uses a non-reentrant model
 25722 ;;
 25723                           
 25724                           	psect	text165
 25725  0084FE                     __ptext165:
 25726                           	opt callstack 0
 25727  0084FE                     _PHY_Init:
 25728                           	opt callstack 15
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;../phy/sx1216/phy_src/phy.c: 831:     initRadio();
 25732                           
 25733                           ; BSR set to: 0
 25734                           ;incstack = 0
 25735  0084FE  EC6E  F01D         	call	_initRadio	;wreg free
 25736                           
 25737                           ; BSR set to: 1
 25738  008502  0012               	return		;funcret
 25739  008504                     __end_of_PHY_Init:
 25740                           	opt callstack 0
 25741                           
 25742 ;; *************** function _initRadio *****************
 25743 ;; Defined at:
 25744 ;;		line 491 in file "../phy/sx1216/phy_src/phy.c"
 25745 ;; Parameters:    Size  Location     Type
 25746 ;;		None
 25747 ;; Auto vars:     Size  Location     Type
 25748 ;;  BWset           4    0        unsigned long 
 25749 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 25750 ;;  version         1   54[COMRAM] unsigned char 
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1    wreg      void 
 25753 ;; Registers used:
 25754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25755 ;; Tracked objects:
 25756 ;;		On entry : 0/0
 25757 ;;		On exit  : 3F/1
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25761 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25763 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25764 ;;Total ram usage:        7 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; Hardware stack levels required when called:   13
 25767 ;; This function calls:
 25768 ;;		_SX1276Read
 25769 ;;		_SX1276Write
 25770 ;;		_computeFRF
 25771 ;;		_enableCrc
 25772 ;;		_explicitHeaderMode
 25773 ;;		_receive
 25774 ;;		_setCodingRate4
 25775 ;;		_setFrequency
 25776 ;;		_setPreambleLength
 25777 ;;		_setSignalBandwidth
 25778 ;;		_setSpreadingFactor
 25779 ;;		_setTxPower
 25780 ;;		_srand
 25781 ;; This function is called by:
 25782 ;;		_cmdSetNaddr
 25783 ;;		_cmdSetRFCH
 25784 ;;		_cmdSetTX
 25785 ;;		_cmdSetCADRSSI
 25786 ;;		_cmdSetSF
 25787 ;;		_radio_engine
 25788 ;;		_PHY_Init
 25789 ;; This function uses a non-reentrant model
 25790 ;;
 25791                           
 25792                           	psect	text166
 25793  003ADC                     __ptext166:
 25794                           	opt callstack 0
 25795  003ADC                     _initRadio:
 25796                           	opt callstack 14
 25797                           
 25798                           ; BSR set to: 1
 25799                           ;incstack = 0
 25800                           ;../phy/sx1216/phy_src/phy.c: 493:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 494
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 495:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 497:     do { LATCbits.LATC5 = 0; } while(0);
 25801  003ADC  9ABC               	bcf	188,5,c	;volatile
 25802                           
 25803                           ;../phy/sx1216/phy_src/phy.c: 498:     _delay((unsigned long)((100)*(64000000/4000.0)));
 25804  003ADE  0E09               	movlw	9
 25805  003AE0  6E34               	movwf	(??_initRadio+1)^0,c
 25806  003AE2  0E1E               	movlw	30
 25807  003AE4  6E33               	movwf	??_initRadio^0,c
 25808  003AE6  0EE4               	movlw	228
 25809  003AE8                     u16087:
 25810  003AE8  2EE8               	decfsz	wreg,f,c
 25811  003AEA  D7FE               	bra	u16087
 25812  003AEC  2E33               	decfsz	??_initRadio^0,f,c
 25813  003AEE  D7FC               	bra	u16087
 25814  003AF0  2E34               	decfsz	(??_initRadio+1)^0,f,c
 25815  003AF2  D7FA               	bra	u16087
 25816  003AF4  D000               	nop2	
 25817  003AF6  8ABC               	bsf	188,5,c	;volatile
 25818                           
 25819                           ;../phy/sx1216/phy_src/phy.c: 500:     computeFRF();
 25820  003AF8  ECC2  F019         	call	_computeFRF	;wreg free
 25821                           
 25822                           ;../phy/sx1216/phy_src/phy.c: 501:     _delay((unsigned long)((500)*(64000000/4000.0)));
 25823  003AFC  0E29               	movlw	41
 25824  003AFE  6E34               	movwf	(??_initRadio+1)^0,c
 25825  003B00  0E96               	movlw	150
 25826  003B02  6E33               	movwf	??_initRadio^0,c
 25827  003B04  0E7F               	movlw	127
 25828  003B06                     u16097:
 25829  003B06  2EE8               	decfsz	wreg,f,c
 25830  003B08  D7FE               	bra	u16097
 25831  003B0A  2E33               	decfsz	??_initRadio^0,f,c
 25832  003B0C  D7FC               	bra	u16097
 25833  003B0E  2E34               	decfsz	(??_initRadio+1)^0,f,c
 25834  003B10  D7FA               	bra	u16097
 25835  003B12  F000               	nop	
 25836                           
 25837                           ;../phy/sx1216/phy_src/phy.c: 503:     version = SX1276Read(0x42);
 25838  003B14  0E42               	movlw	66
 25839  003B16  ECAE  F041         	call	_SX1276Read
 25840  003B1A  6E37               	movwf	initRadio@version^0,c
 25841                           
 25842                           ; BSR set to: 61
 25843                           ;../phy/sx1216/phy_src/phy.c: 504:     version++;
 25844  003B1C  2A37               	incf	initRadio@version^0,f,c
 25845                           
 25846                           ; BSR set to: 61
 25847                           ;../phy/sx1216/phy_src/phy.c: 505:     SX1276Write(0x01,0x00);
 25848  003B1E  0E00               	movlw	0
 25849  003B20  6E0F               	movwf	SX1276Write@data^0,c
 25850  003B22  0E01               	movlw	1
 25851  003B24  ECCC  F041         	call	_SX1276Write
 25852                           
 25853                           ; BSR set to: 61
 25854                           ;../phy/sx1216/phy_src/phy.c: 506:     SX1276Write(0x01,0x80);
 25855  003B28  0E80               	movlw	128
 25856  003B2A  6E0F               	movwf	SX1276Write@data^0,c
 25857  003B2C  0E01               	movlw	1
 25858  003B2E  ECCC  F041         	call	_SX1276Write
 25859                           
 25860                           ; BSR set to: 61
 25861                           ;../phy/sx1216/phy_src/phy.c: 508:     setFrequency(fhssList[0]);
 25862  003B32  0EC9               	movlw	low _fhssList
 25863  003B34  6EF6               	movwf	tblptrl,c
 25864  003B36                     	if	1	;There is more than 1 active tblptr byte
 25865  003B36  0EFC               	movlw	high _fhssList
 25866  003B38  6EF7               	movwf	tblptrh,c
 25867  003B3A                     	endif
 25868  003B3A                     	if	1	;There are 3 active tblptr bytes
 25869  003B3A  0E00               	movlw	low (_fhssList shr (0+16))
 25870  003B3C  6EF8               	movwf	tblptru,c
 25871  003B3E                     	endif
 25872  003B3E  0009               	tblrd		*+
 25873  003B40  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 25874  003B46  0009               	tblrd		*+
 25875  003B48  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 25876  003B4E  0009               	tblrd		*+
 25877  003B50  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 25878  003B56  000A               	tblrd		*-
 25879  003B58  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 25880  003B5E  ECE8  F021         	call	_setFrequency	;wreg free
 25881                           
 25882                           ; BSR set to: 61
 25883                           ;../phy/sx1216/phy_src/phy.c: 509:     setSpreadingFactor(7);
 25884  003B62  0E07               	movlw	7
 25885  003B64  ECCC  F025         	call	_setSpreadingFactor
 25886                           
 25887                           ;../phy/sx1216/phy_src/phy.c: 510:     setTxPower(13);
 25888  003B68  0E0D               	movlw	13
 25889  003B6A  EC64  F03F         	call	_setTxPower
 25890                           
 25891                           ; BSR set to: 61
 25892                           ;../phy/sx1216/phy_src/phy.c: 511:     setSignalBandwidth(500E3);
 25893  003B6E  0E20               	movlw	32
 25894  003B70  6E23               	movwf	setSignalBandwidth@sbw^0,c
 25895  003B72  0EA1               	movlw	161
 25896  003B74  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 25897  003B76  0E07               	movlw	7
 25898  003B78  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 25899  003B7A  0E00               	movlw	0
 25900  003B7C  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 25901  003B7E  ECAF  F007         	call	_setSignalBandwidth	;wreg free
 25902                           
 25903                           ;../phy/sx1216/phy_src/phy.c: 512:     explicitHeaderMode();
 25904  003B82  EC6A  F041         	call	_explicitHeaderMode	;wreg free
 25905                           
 25906                           ; BSR set to: 61
 25907                           ;../phy/sx1216/phy_src/phy.c: 513:     setCodingRate4(4);
 25908  003B86  0E04               	movlw	4
 25909  003B88  EC6B  F03E         	call	_setCodingRate4
 25910                           
 25911                           ; BSR set to: 61
 25912                           ;../phy/sx1216/phy_src/phy.c: 514:     setPreambleLength(12);
 25913  003B8C  0E00               	movlw	0
 25914  003B8E  6E12               	movwf	(setPreambleLength@length+1)^0,c
 25915  003B90  0E0C               	movlw	12
 25916  003B92  6E11               	movwf	setPreambleLength@length^0,c
 25917  003B94  EC37  F041         	call	_setPreambleLength	;wreg free
 25918                           
 25919                           ; BSR set to: 61
 25920                           ;../phy/sx1216/phy_src/phy.c: 515:     enableCrc();
 25921  003B98  ECC3  F041         	call	_enableCrc	;wreg free
 25922                           
 25923                           ; BSR set to: 61
 25924                           ;../phy/sx1216/phy_src/phy.c: 516:     SX1276Write(0x0E, 0x0);
 25925  003B9C  0E00               	movlw	0
 25926  003B9E  6E0F               	movwf	SX1276Write@data^0,c
 25927  003BA0  0E0E               	movlw	14
 25928  003BA2  ECCC  F041         	call	_SX1276Write
 25929                           
 25930                           ; BSR set to: 61
 25931                           ;../phy/sx1216/phy_src/phy.c: 517:     SX1276Write(0x0F, 0);
 25932  003BA6  0E00               	movlw	0
 25933  003BA8  6E0F               	movwf	SX1276Write@data^0,c
 25934  003BAA  0E0F               	movlw	15
 25935  003BAC  ECCC  F041         	call	_SX1276Write
 25936                           
 25937                           ; BSR set to: 61
 25938                           ;../phy/sx1216/phy_src/phy.c: 520:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 25939  003BB0  0E0C               	movlw	12
 25940  003BB2  ECAE  F041         	call	_SX1276Read
 25941  003BB6  0903               	iorlw	3
 25942  003BB8  6E0F               	movwf	SX1276Write@data^0,c
 25943  003BBA  0E0C               	movlw	12
 25944  003BBC  ECCC  F041         	call	_SX1276Write
 25945                           
 25946                           ; BSR set to: 61
 25947                           ;../phy/sx1216/phy_src/phy.c: 523:     SX1276Write(0x26, 0x04);
 25948  003BC0  0E04               	movlw	4
 25949  003BC2  6E0F               	movwf	SX1276Write@data^0,c
 25950  003BC4  0E26               	movlw	38
 25951  003BC6  ECCC  F041         	call	_SX1276Write
 25952                           
 25953                           ; BSR set to: 61
 25954                           ;../phy/sx1216/phy_src/phy.c: 526:     SX1276Write(0x36,0x02);
 25955  003BCA  0E02               	movlw	2
 25956  003BCC  6E0F               	movwf	SX1276Write@data^0,c
 25957  003BCE  0E36               	movlw	54
 25958  003BD0  ECCC  F041         	call	_SX1276Write
 25959                           
 25960                           ; BSR set to: 61
 25961                           ;../phy/sx1216/phy_src/phy.c: 527:     SX1276Write(0x3A,0x64);
 25962  003BD4  0E64               	movlw	100
 25963  003BD6  6E0F               	movwf	SX1276Write@data^0,c
 25964  003BD8  0E3A               	movlw	58
 25965  003BDA  ECCC  F041         	call	_SX1276Write
 25966                           
 25967                           ; BSR set to: 61
 25968                           ;../phy/sx1216/phy_src/phy.c: 539:     SX1276Write(0x1F,255);
 25969  003BDE  0EFF               	movlw	255
 25970  003BE0  6E0F               	movwf	SX1276Write@data^0,c
 25971  003BE2  0E1F               	movlw	31
 25972  003BE4  ECCC  F041         	call	_SX1276Write
 25973                           
 25974                           ; BSR set to: 61
 25975                           ;../phy/sx1216/phy_src/phy.c: 541:     receive(0);
 25976  003BE8  0E00               	movlw	0
 25977  003BEA  ECD6  F03C         	call	_receive
 25978                           
 25979                           ; BSR set to: 61
 25980                           ;../phy/sx1216/phy_src/phy.c: 543:     _delay((unsigned long)((100)*(64000000/4000.0)));
 25981  003BEE  0E09               	movlw	9
 25982  003BF0  6E34               	movwf	(??_initRadio+1)^0,c
 25983  003BF2  0E1E               	movlw	30
 25984  003BF4  6E33               	movwf	??_initRadio^0,c
 25985  003BF6  0EE4               	movlw	228
 25986  003BF8                     u16107:
 25987  003BF8  2EE8               	decfsz	wreg,f,c
 25988  003BFA  D7FE               	bra	u16107
 25989  003BFC  2E33               	decfsz	??_initRadio^0,f,c
 25990  003BFE  D7FC               	bra	u16107
 25991  003C00  2E34               	decfsz	(??_initRadio+1)^0,f,c
 25992  003C02  D7FA               	bra	u16107
 25993  003C04  D000               	nop2	
 25994                           
 25995                           ;../phy/sx1216/phy_src/phy.c: 545:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 25996  003C06  0E2C               	movlw	44
 25997  003C08  ECAE  F041         	call	_SX1276Read
 25998  003C0C  6E33               	movwf	??_initRadio^0,c
 25999  003C0E  0E2C               	movlw	44
 26000  003C10  ECAE  F041         	call	_SX1276Read
 26001  003C14  6E34               	movwf	(??_initRadio+1)^0,c
 26002  003C16  5034               	movf	(??_initRadio+1)^0,w,c
 26003  003C18  6E36               	movwf	(??_initRadio+3)^0,c
 26004  003C1A  6A35               	clrf	(??_initRadio+2)^0,c
 26005  003C1C  5033               	movf	??_initRadio^0,w,c
 26006  003C1E  2435               	addwf	(??_initRadio+2)^0,w,c
 26007  003C20  6E38               	movwf	initRadio@wideRSSI^0,c
 26008  003C22  0E00               	movlw	0
 26009  003C24  2036               	addwfc	(??_initRadio+3)^0,w,c
 26010  003C26  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 26011                           
 26012                           ; BSR set to: 61
 26013                           ;../phy/sx1216/phy_src/phy.c: 547:     srand(wideRSSI);
 26014  003C28  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 26015  003C2E  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 26016  003C34  ECFD  F03D         	call	_srand	;wreg free
 26017                           
 26018                           ; BSR set to: 1
 26019  003C38  0012               	return		;funcret
 26020  003C3A                     __end_of_initRadio:
 26021                           	opt callstack 0
 26022                           
 26023 ;; *************** function _srand *****************
 26024 ;; Defined at:
 26025 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 26026 ;; Parameters:    Size  Location     Type
 26027 ;;  s               2    1[COMRAM] unsigned int 
 26028 ;; Auto vars:     Size  Location     Type
 26029 ;;		None
 26030 ;; Return value:  Size  Location     Type
 26031 ;;                  1    wreg      void 
 26032 ;; Registers used:
 26033 ;;		wreg, status,2, status,0
 26034 ;; Tracked objects:
 26035 ;;		On entry : 3F/3D
 26036 ;;		On exit  : 3F/1
 26037 ;;		Unchanged: 0/0
 26038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26043 ;;Total ram usage:        6 bytes
 26044 ;; Hardware stack levels used:    1
 26045 ;; Hardware stack levels required when called:    7
 26046 ;; This function calls:
 26047 ;;		Nothing
 26048 ;; This function is called by:
 26049 ;;		_initRadio
 26050 ;; This function uses a non-reentrant model
 26051 ;;
 26052                           
 26053                           	psect	text167
 26054  007BFA                     __ptext167:
 26055                           	opt callstack 0
 26056  007BFA                     _srand:
 26057                           	opt callstack 19
 26058                           
 26059                           ; BSR set to: 61
 26060                           
 26061                           ; BSR set to: 1
 26062                           ;incstack = 0
 26063  007BFA  0EFF               	movlw	255
 26064  007BFC  6E04               	movwf	??_srand^0,c
 26065  007BFE  0EFF               	movlw	255
 26066  007C00  6E05               	movwf	(??_srand+1)^0,c
 26067  007C02  0060  F008  F006   	movff	srand@s,??_srand+2
 26068  007C08  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 26069  007C0E  5004               	movf	??_srand^0,w,c
 26070  007C10  2606               	addwf	(??_srand+2)^0,f,c
 26071  007C12  5005               	movf	(??_srand+1)^0,w,c
 26072  007C14  2207               	addwfc	(??_srand+3)^0,f,c
 26073  007C16  0060  F018  F1D2   	movff	??_srand+2,_seed
 26074  007C1C  0060  F01C  F1D3   	movff	??_srand+3,_seed+1
 26075  007C22  0101               	movlb	1	; () banked
 26076  007C24  6BD4               	clrf	(_seed+2)& (0+255),b
 26077  007C26  6BD5               	clrf	(_seed+3)& (0+255),b
 26078  007C28  6BD6               	clrf	(_seed+4)& (0+255),b
 26079  007C2A  6BD7               	clrf	(_seed+5)& (0+255),b
 26080  007C2C  6BD8               	clrf	(_seed+6)& (0+255),b
 26081  007C2E  6BD9               	clrf	(_seed+7)& (0+255),b
 26082                           
 26083                           ; BSR set to: 1
 26084  007C30  0012               	return		;funcret
 26085  007C32                     __end_of_srand:
 26086                           	opt callstack 0
 26087                           
 26088 ;; *************** function _setTxPower *****************
 26089 ;; Defined at:
 26090 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 26091 ;; Parameters:    Size  Location     Type
 26092 ;;  power           1    wreg     unsigned char 
 26093 ;; Auto vars:     Size  Location     Type
 26094 ;;  power           1   16[COMRAM] unsigned char 
 26095 ;; Return value:  Size  Location     Type
 26096 ;;                  1    wreg      void 
 26097 ;; Registers used:
 26098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26099 ;; Tracked objects:
 26100 ;;		On entry : 0/3D
 26101 ;;		On exit  : 3F/3D
 26102 ;;		Unchanged: 0/0
 26103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26108 ;;Total ram usage:        1 bytes
 26109 ;; Hardware stack levels used:    1
 26110 ;; Hardware stack levels required when called:   11
 26111 ;; This function calls:
 26112 ;;		_SX1276Write
 26113 ;; This function is called by:
 26114 ;;		_initRadio
 26115 ;; This function uses a non-reentrant model
 26116 ;;
 26117                           
 26118                           	psect	text168
 26119  007EC8                     __ptext168:
 26120                           	opt callstack 0
 26121  007EC8                     _setTxPower:
 26122                           	opt callstack 15
 26123                           
 26124                           ; BSR set to: 1
 26125                           ;incstack = 0
 26126                           ;setTxPower@power stored from wreg
 26127  007EC8  6E11               	movwf	setTxPower@power^0,c
 26128                           
 26129                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 26130  007ECA  0E02               	movlw	2
 26131  007ECC  6011               	cpfslt	setTxPower@power^0,c
 26132  007ECE  D002               	goto	l10274
 26133                           
 26134                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 26135  007ED0  0E02               	movlw	2
 26136  007ED2  6E11               	movwf	setTxPower@power^0,c
 26137  007ED4                     l10274:
 26138                           
 26139                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 5)
 26140  007ED4  0E05               	movlw	5
 26141  007ED6  6411               	cpfsgt	setTxPower@power^0,c
 26142  007ED8  D002               	goto	l10278
 26143                           
 26144                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 5;
 26145  007EDA  0E05               	movlw	5
 26146  007EDC  6E11               	movwf	setTxPower@power^0,c
 26147  007EDE                     l10278:
 26148                           
 26149                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 26150  007EDE  5011               	movf	setTxPower@power^0,w,c
 26151  007EE0  0FFE               	addlw	254
 26152  007EE2  6E11               	movwf	setTxPower@power^0,c
 26153                           
 26154                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 26155  007EE4  5011               	movf	setTxPower@power^0,w,c
 26156  007EE6  09F0               	iorlw	240
 26157  007EE8  6E0F               	movwf	SX1276Write@data^0,c
 26158  007EEA  0E09               	movlw	9
 26159  007EEC  ECCC  F041         	call	_SX1276Write
 26160                           
 26161                           ; BSR set to: 61
 26162  007EF0  0012               	return		;funcret
 26163  007EF2                     __end_of_setTxPower:
 26164                           	opt callstack 0
 26165                           
 26166 ;; *************** function _setSpreadingFactor *****************
 26167 ;; Defined at:
 26168 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 26169 ;; Parameters:    Size  Location     Type
 26170 ;;  sf              1    wreg     unsigned char 
 26171 ;; Auto vars:     Size  Location     Type
 26172 ;;  sf              1   42[COMRAM] unsigned char 
 26173 ;; Return value:  Size  Location     Type
 26174 ;;                  1    wreg      void 
 26175 ;; Registers used:
 26176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26177 ;; Tracked objects:
 26178 ;;		On entry : 3F/3D
 26179 ;;		On exit  : 0/0
 26180 ;;		Unchanged: 0/0
 26181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26183 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26185 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26186 ;;Total ram usage:        9 bytes
 26187 ;; Hardware stack levels used:    1
 26188 ;; Hardware stack levels required when called:   12
 26189 ;; This function calls:
 26190 ;;		_SX1276Read
 26191 ;;		_SX1276Write
 26192 ;;		___lldiv
 26193 ;;		_getSignalBandwidth
 26194 ;;		_getSpreadingFactor
 26195 ;; This function is called by:
 26196 ;;		_initRadio
 26197 ;; This function uses a non-reentrant model
 26198 ;;
 26199                           
 26200                           	psect	text169
 26201  004B98                     __ptext169:
 26202                           	opt callstack 0
 26203  004B98                     _setSpreadingFactor:
 26204                           	opt callstack 14
 26205                           
 26206                           ; BSR set to: 61
 26207                           ;incstack = 0
 26208                           ;setSpreadingFactor@sf stored from wreg
 26209  004B98  6E2B               	movwf	setSpreadingFactor@sf^0,c
 26210                           
 26211                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 26212  004B9A  0E07               	movlw	7
 26213  004B9C  602B               	cpfslt	setSpreadingFactor@sf^0,c
 26214  004B9E  D002               	goto	l14502
 26215                           
 26216                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 26217  004BA0  0E07               	movlw	7
 26218  004BA2  D004               	goto	L21
 26219  004BA4                     l14502:
 26220  004BA4  0E0C               	movlw	12
 26221  004BA6  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 26222  004BA8  D002               	goto	l14506
 26223                           
 26224                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 26225  004BAA  0E0C               	movlw	12
 26226  004BAC                     L21:
 26227  004BAC  6E2B               	movwf	setSpreadingFactor@sf^0,c
 26228  004BAE                     l14506:
 26229                           
 26230                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 26231  004BAE  0EC3               	movlw	195
 26232  004BB0  6E0F               	movwf	SX1276Write@data^0,c
 26233  004BB2  0E31               	movlw	49
 26234  004BB4  ECCC  F041         	call	_SX1276Write
 26235                           
 26236                           ; BSR set to: 61
 26237                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 26238  004BB8  0E0A               	movlw	10
 26239  004BBA  6E0F               	movwf	SX1276Write@data^0,c
 26240  004BBC  0E37               	movlw	55
 26241  004BBE  ECCC  F041         	call	_SX1276Write
 26242                           
 26243                           ; BSR set to: 61
 26244                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 26245  004BC2  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 26246  004BC8  3A23               	swapf	??_setSpreadingFactor^0,f,c
 26247  004BCA  0EF0               	movlw	240
 26248  004BCC  1623               	andwf	??_setSpreadingFactor^0,f,c
 26249  004BCE  0EF0               	movlw	240
 26250  004BD0  1623               	andwf	??_setSpreadingFactor^0,f,c
 26251  004BD2  0E1E               	movlw	30
 26252  004BD4  ECAE  F041         	call	_SX1276Read
 26253  004BD8  0B0F               	andlw	15
 26254  004BDA  1023               	iorwf	??_setSpreadingFactor^0,w,c
 26255  004BDC  6E0F               	movwf	SX1276Write@data^0,c
 26256  004BDE  0E1E               	movlw	30
 26257  004BE0  ECCC  F041         	call	_SX1276Write
 26258                           
 26259                           ; BSR set to: 61
 26260                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 26261  004BE4  EC2A  F041         	call	_getSpreadingFactor	;wreg free
 26262  004BE8  0E01               	movlw	1
 26263  004BEA  6E23               	movwf	??_setSpreadingFactor^0,c
 26264  004BEC  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 26265  004BEE  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 26266  004BF0  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 26267  004BF2  2A0F               	incf	?_getSpreadingFactor^0,f,c
 26268  004BF4  D005               	goto	u13600
 26269  004BF6                     u13605:
 26270  004BF6  90D8               	bcf	status,0,c
 26271  004BF8  3623               	rlcf	??_setSpreadingFactor^0,f,c
 26272  004BFA  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 26273  004BFC  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 26274  004BFE  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 26275  004C00                     u13600:
 26276  004C00  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 26277  004C02  D7F9               	goto	u13605
 26278  004C04  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 26279  004C0A  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 26280  004C10  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 26281  004C16  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 26282  004C1C  EC10  F023         	call	_getSignalBandwidth	;wreg free
 26283  004C20  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 26284  004C26  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 26285  004C2C  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 26286  004C32  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 26287  004C38  ECC3  F033         	call	___lldiv	;wreg free
 26288  004C3C  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8634
 26289  004C42  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8634+1
 26290  004C48  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8634+2
 26291  004C4E  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8634+3
 26292                           
 26293                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 26294  004C54  0EE8               	movlw	232
 26295  004C56  6E16               	movwf	___lldiv@dividend^0,c
 26296  004C58  0E03               	movlw	3
 26297  004C5A  6E17               	movwf	(___lldiv@dividend+1)^0,c
 26298  004C5C  0E00               	movlw	0
 26299  004C5E  6E18               	movwf	(___lldiv@dividend+2)^0,c
 26300  004C60  0E00               	movlw	0
 26301  004C62  6E19               	movwf	(___lldiv@dividend+3)^0,c
 26302  004C64  0060  F09C  F01A   	movff	_setSpreadingFactor$8634,___lldiv@divisor
 26303  004C6A  0060  F0A0  F01B   	movff	_setSpreadingFactor$8634+1,___lldiv@divisor+1
 26304  004C70  0060  F0A4  F01C   	movff	_setSpreadingFactor$8634+2,___lldiv@divisor+2
 26305  004C76  0060  F0A8  F01D   	movff	_setSpreadingFactor$8634+3,___lldiv@divisor+3
 26306  004C7C  ECC3  F033         	call	___lldiv	;wreg free
 26307  004C80  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 26308  004C86  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 26309  004C8C  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 26310  004C92  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 26311  004C98  0012               	return		;funcret
 26312  004C9A                     __end_of_setSpreadingFactor:
 26313                           	opt callstack 0
 26314                           
 26315 ;; *************** function _setSignalBandwidth *****************
 26316 ;; Defined at:
 26317 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 26318 ;; Parameters:    Size  Location     Type
 26319 ;;  sbw             4   34[COMRAM] unsigned long 
 26320 ;; Auto vars:     Size  Location     Type
 26321 ;;  bw              4   46[COMRAM] unsigned long 
 26322 ;; Return value:  Size  Location     Type
 26323 ;;                  1    wreg      void 
 26324 ;; Registers used:
 26325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26326 ;; Tracked objects:
 26327 ;;		On entry : 3F/3D
 26328 ;;		On exit  : 0/0
 26329 ;;		Unchanged: 0/0
 26330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26332 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26334 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26335 ;;Total ram usage:       16 bytes
 26336 ;; Hardware stack levels used:    1
 26337 ;; Hardware stack levels required when called:   12
 26338 ;; This function calls:
 26339 ;;		_SX1276Read
 26340 ;;		_SX1276Write
 26341 ;;		___flge
 26342 ;;		___lldiv
 26343 ;;		___xxtofl
 26344 ;;		_getSignalBandwidth
 26345 ;;		_getSpreadingFactor
 26346 ;; This function is called by:
 26347 ;;		_initRadio
 26348 ;; This function uses a non-reentrant model
 26349 ;;
 26350                           
 26351                           	psect	text170
 26352  000F5E                     __ptext170:
 26353                           	opt callstack 0
 26354  000F5E                     _setSignalBandwidth:
 26355                           	opt callstack 14
 26356                           
 26357                           ; BSR set to: 61
 26358                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 26359                           
 26360                           ;incstack = 0
 26361  000F5E  0E00               	movlw	0
 26362  000F60  6E10               	movwf	___flge@ff1^0,c
 26363  000F62  0EC0               	movlw	192
 26364  000F64  6E11               	movwf	(___flge@ff1+1)^0,c
 26365  000F66  0EF3               	movlw	243
 26366  000F68  6E12               	movwf	(___flge@ff1+2)^0,c
 26367  000F6A  0E45               	movlw	69
 26368  000F6C  6E13               	movwf	(___flge@ff1+3)^0,c
 26369  000F6E  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26370  000F74  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26371  000F7A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26372  000F80  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26373  000F86  0E00               	movlw	0
 26374  000F88  ECBC  F01C         	call	___xxtofl
 26375  000F8C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26376  000F92  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26377  000F98  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26378  000F9E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26379  000FA4  EC0F  F02C         	call	___flge	;wreg free
 26380  000FA8  A0D8               	btfss	status,0,c
 26381  000FAA  D002               	goto	l14520
 26382                           
 26383                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 26384  000FAC  0E00               	movlw	0
 26385  000FAE  D149               	goto	L22
 26386  000FB0                     l14520:
 26387  000FB0  0E00               	movlw	0
 26388  000FB2  6E10               	movwf	___flge@ff1^0,c
 26389  000FB4  0E80               	movlw	128
 26390  000FB6  6E11               	movwf	(___flge@ff1+1)^0,c
 26391  000FB8  0E22               	movlw	34
 26392  000FBA  6E12               	movwf	(___flge@ff1+2)^0,c
 26393  000FBC  0E46               	movlw	70
 26394  000FBE  6E13               	movwf	(___flge@ff1+3)^0,c
 26395  000FC0  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26396  000FC6  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26397  000FCC  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26398  000FD2  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26399  000FD8  0E00               	movlw	0
 26400  000FDA  ECBC  F01C         	call	___xxtofl
 26401  000FDE  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26402  000FE4  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26403  000FEA  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26404  000FF0  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26405  000FF6  EC0F  F02C         	call	___flge	;wreg free
 26406  000FFA  A0D8               	btfss	status,0,c
 26407  000FFC  D002               	goto	l14524
 26408                           
 26409                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 26410  000FFE  0E01               	movlw	1
 26411  001000  D120               	goto	L22
 26412  001002                     l14524:
 26413  001002  0E00               	movlw	0
 26414  001004  6E10               	movwf	___flge@ff1^0,c
 26415  001006  0EC0               	movlw	192
 26416  001008  6E11               	movwf	(___flge@ff1+1)^0,c
 26417  00100A  0E73               	movlw	115
 26418  00100C  6E12               	movwf	(___flge@ff1+2)^0,c
 26419  00100E  0E46               	movlw	70
 26420  001010  6E13               	movwf	(___flge@ff1+3)^0,c
 26421  001012  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26422  001018  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26423  00101E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26424  001024  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26425  00102A  0E00               	movlw	0
 26426  00102C  ECBC  F01C         	call	___xxtofl
 26427  001030  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26428  001036  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26429  00103C  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26430  001042  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26431  001048  EC0F  F02C         	call	___flge	;wreg free
 26432  00104C  A0D8               	btfss	status,0,c
 26433  00104E  D002               	goto	l14528
 26434                           
 26435                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 26436  001050  0E02               	movlw	2
 26437  001052  D0F7               	goto	L22
 26438  001054                     l14528:
 26439  001054  0E00               	movlw	0
 26440  001056  6E10               	movwf	___flge@ff1^0,c
 26441  001058  0E80               	movlw	128
 26442  00105A  6E11               	movwf	(___flge@ff1+1)^0,c
 26443  00105C  0EA2               	movlw	162
 26444  00105E  6E12               	movwf	(___flge@ff1+2)^0,c
 26445  001060  0E46               	movlw	70
 26446  001062  6E13               	movwf	(___flge@ff1+3)^0,c
 26447  001064  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26448  00106A  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26449  001070  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26450  001076  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26451  00107C  0E00               	movlw	0
 26452  00107E  ECBC  F01C         	call	___xxtofl
 26453  001082  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26454  001088  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26455  00108E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26456  001094  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26457  00109A  EC0F  F02C         	call	___flge	;wreg free
 26458  00109E  A0D8               	btfss	status,0,c
 26459  0010A0  D002               	goto	l14532
 26460                           
 26461                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 26462  0010A2  0E03               	movlw	3
 26463  0010A4  D0CE               	goto	L22
 26464  0010A6                     l14532:
 26465  0010A6  0E00               	movlw	0
 26466  0010A8  6E10               	movwf	___flge@ff1^0,c
 26467  0010AA  0E24               	movlw	36
 26468  0010AC  6E11               	movwf	(___flge@ff1+1)^0,c
 26469  0010AE  0EF4               	movlw	244
 26470  0010B0  6E12               	movwf	(___flge@ff1+2)^0,c
 26471  0010B2  0E46               	movlw	70
 26472  0010B4  6E13               	movwf	(___flge@ff1+3)^0,c
 26473  0010B6  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26474  0010BC  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26475  0010C2  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26476  0010C8  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26477  0010CE  0E00               	movlw	0
 26478  0010D0  ECBC  F01C         	call	___xxtofl
 26479  0010D4  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26480  0010DA  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26481  0010E0  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26482  0010E6  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26483  0010EC  EC0F  F02C         	call	___flge	;wreg free
 26484  0010F0  A0D8               	btfss	status,0,c
 26485  0010F2  D002               	goto	l14536
 26486                           
 26487                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 26488  0010F4  0E04               	movlw	4
 26489  0010F6  D0A5               	goto	L22
 26490  0010F8                     l14536:
 26491  0010F8  0E00               	movlw	0
 26492  0010FA  6E10               	movwf	___flge@ff1^0,c
 26493  0010FC  0EE4               	movlw	228
 26494  0010FE  6E11               	movwf	(___flge@ff1+1)^0,c
 26495  001100  0E22               	movlw	34
 26496  001102  6E12               	movwf	(___flge@ff1+2)^0,c
 26497  001104  0E47               	movlw	71
 26498  001106  6E13               	movwf	(___flge@ff1+3)^0,c
 26499  001108  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26500  00110E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26501  001114  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26502  00111A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26503  001120  0E00               	movlw	0
 26504  001122  ECBC  F01C         	call	___xxtofl
 26505  001126  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26506  00112C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26507  001132  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26508  001138  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26509  00113E  EC0F  F02C         	call	___flge	;wreg free
 26510  001142  A0D8               	btfss	status,0,c
 26511  001144  D002               	goto	l14540
 26512                           
 26513                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 26514  001146  0E05               	movlw	5
 26515  001148  D07C               	goto	L22
 26516  00114A                     l14540:
 26517  00114A  0E00               	movlw	0
 26518  00114C  6E10               	movwf	___flge@ff1^0,c
 26519  00114E  0E24               	movlw	36
 26520  001150  6E11               	movwf	(___flge@ff1+1)^0,c
 26521  001152  0E74               	movlw	116
 26522  001154  6E12               	movwf	(___flge@ff1+2)^0,c
 26523  001156  0E47               	movlw	71
 26524  001158  6E13               	movwf	(___flge@ff1+3)^0,c
 26525  00115A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26526  001160  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26527  001166  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26528  00116C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26529  001172  0E00               	movlw	0
 26530  001174  ECBC  F01C         	call	___xxtofl
 26531  001178  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26532  00117E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26533  001184  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26534  00118A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26535  001190  EC0F  F02C         	call	___flge	;wreg free
 26536  001194  A0D8               	btfss	status,0,c
 26537  001196  D002               	goto	l14544
 26538                           
 26539                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 26540  001198  0E06               	movlw	6
 26541  00119A  D053               	goto	L22
 26542  00119C                     l14544:
 26543  00119C  0E00               	movlw	0
 26544  00119E  6E10               	movwf	___flge@ff1^0,c
 26545  0011A0  0E24               	movlw	36
 26546  0011A2  6E11               	movwf	(___flge@ff1+1)^0,c
 26547  0011A4  0EF4               	movlw	244
 26548  0011A6  6E12               	movwf	(___flge@ff1+2)^0,c
 26549  0011A8  0E47               	movlw	71
 26550  0011AA  6E13               	movwf	(___flge@ff1+3)^0,c
 26551  0011AC  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26552  0011B2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26553  0011B8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26554  0011BE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26555  0011C4  0E00               	movlw	0
 26556  0011C6  ECBC  F01C         	call	___xxtofl
 26557  0011CA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26558  0011D0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26559  0011D6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26560  0011DC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26561  0011E2  EC0F  F02C         	call	___flge	;wreg free
 26562  0011E6  A0D8               	btfss	status,0,c
 26563  0011E8  D002               	goto	l14548
 26564                           
 26565                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 26566  0011EA  0E07               	movlw	7
 26567  0011EC  D02A               	goto	L22
 26568  0011EE                     l14548:
 26569  0011EE  0E00               	movlw	0
 26570  0011F0  6E10               	movwf	___flge@ff1^0,c
 26571  0011F2  0E24               	movlw	36
 26572  0011F4  6E11               	movwf	(___flge@ff1+1)^0,c
 26573  0011F6  0E74               	movlw	116
 26574  0011F8  6E12               	movwf	(___flge@ff1+2)^0,c
 26575  0011FA  0E48               	movlw	72
 26576  0011FC  6E13               	movwf	(___flge@ff1+3)^0,c
 26577  0011FE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 26578  001204  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 26579  00120A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 26580  001210  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 26581  001216  0E00               	movlw	0
 26582  001218  ECBC  F01C         	call	___xxtofl
 26583  00121C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 26584  001222  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 26585  001228  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 26586  00122E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 26587  001234  EC0F  F02C         	call	___flge	;wreg free
 26588  001238  A0D8               	btfss	status,0,c
 26589  00123A  D002               	goto	l14552
 26590                           
 26591                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 26592  00123C  0E08               	movlw	8
 26593  00123E  D001               	goto	L22
 26594  001240                     l14552:
 26595                           
 26596                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 26597  001240  0E09               	movlw	9
 26598  001242                     L22:
 26599  001242  6E2F               	movwf	setSignalBandwidth@bw^0,c
 26600  001244  0E00               	movlw	0
 26601  001246  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 26602  001248  0E00               	movlw	0
 26603  00124A  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 26604  00124C  0E00               	movlw	0
 26605  00124E  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 26606                           
 26607                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 26608  001250  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 26609  001256  3A27               	swapf	??_setSignalBandwidth^0,f,c
 26610  001258  0EF0               	movlw	240
 26611  00125A  1627               	andwf	??_setSignalBandwidth^0,f,c
 26612  00125C  0E1D               	movlw	29
 26613  00125E  ECAE  F041         	call	_SX1276Read
 26614  001262  0B0F               	andlw	15
 26615  001264  1027               	iorwf	??_setSignalBandwidth^0,w,c
 26616  001266  6E0F               	movwf	SX1276Write@data^0,c
 26617  001268  0E1D               	movlw	29
 26618  00126A  ECCC  F041         	call	_SX1276Write
 26619                           
 26620                           ; BSR set to: 61
 26621                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 26622  00126E  EC2A  F041         	call	_getSpreadingFactor	;wreg free
 26623  001272  0E01               	movlw	1
 26624  001274  6E27               	movwf	??_setSignalBandwidth^0,c
 26625  001276  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 26626  001278  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 26627  00127A  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 26628  00127C  2A0F               	incf	?_getSpreadingFactor^0,f,c
 26629  00127E  D005               	goto	u13700
 26630  001280                     u13705:
 26631  001280  90D8               	bcf	status,0,c
 26632  001282  3627               	rlcf	??_setSignalBandwidth^0,f,c
 26633  001284  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 26634  001286  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 26635  001288  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 26636  00128A                     u13700:
 26637  00128A  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 26638  00128C  D7F9               	goto	u13705
 26639  00128E  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 26640  001294  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 26641  00129A  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 26642  0012A0  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 26643  0012A6  EC10  F023         	call	_getSignalBandwidth	;wreg free
 26644  0012AA  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 26645  0012B0  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 26646  0012B6  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 26647  0012BC  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 26648  0012C2  ECC3  F033         	call	___lldiv	;wreg free
 26649  0012C6  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8635
 26650  0012CC  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8635+1
 26651  0012D2  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8635+2
 26652  0012D8  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8635+3
 26653                           
 26654                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 26655  0012DE  0EE8               	movlw	232
 26656  0012E0  6E16               	movwf	___lldiv@dividend^0,c
 26657  0012E2  0E03               	movlw	3
 26658  0012E4  6E17               	movwf	(___lldiv@dividend+1)^0,c
 26659  0012E6  0E00               	movlw	0
 26660  0012E8  6E18               	movwf	(___lldiv@dividend+2)^0,c
 26661  0012EA  0E00               	movlw	0
 26662  0012EC  6E19               	movwf	(___lldiv@dividend+3)^0,c
 26663  0012EE  0060  F0AC  F01A   	movff	_setSignalBandwidth$8635,___lldiv@divisor
 26664  0012F4  0060  F0B0  F01B   	movff	_setSignalBandwidth$8635+1,___lldiv@divisor+1
 26665  0012FA  0060  F0B4  F01C   	movff	_setSignalBandwidth$8635+2,___lldiv@divisor+2
 26666  001300  0060  F0B8  F01D   	movff	_setSignalBandwidth$8635+3,___lldiv@divisor+3
 26667  001306  ECC3  F033         	call	___lldiv	;wreg free
 26668  00130A  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 26669  001310  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 26670  001316  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 26671  00131C  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 26672  001322  0012               	return		;funcret
 26673  001324                     __end_of_setSignalBandwidth:
 26674                           	opt callstack 0
 26675                           
 26676 ;; *************** function _getSpreadingFactor *****************
 26677 ;; Defined at:
 26678 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 26679 ;; Parameters:    Size  Location     Type
 26680 ;;		None
 26681 ;; Auto vars:     Size  Location     Type
 26682 ;;		None
 26683 ;; Return value:  Size  Location     Type
 26684 ;;                  4   14[COMRAM] unsigned long 
 26685 ;; Registers used:
 26686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26687 ;; Tracked objects:
 26688 ;;		On entry : 3F/3D
 26689 ;;		On exit  : 3F/3D
 26690 ;;		Unchanged: 0/0
 26691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26696 ;;Total ram usage:        5 bytes
 26697 ;; Hardware stack levels used:    1
 26698 ;; Hardware stack levels required when called:   11
 26699 ;; This function calls:
 26700 ;;		_SX1276Read
 26701 ;; This function is called by:
 26702 ;;		_setSpreadingFactor
 26703 ;;		_setSignalBandwidth
 26704 ;; This function uses a non-reentrant model
 26705 ;;
 26706                           
 26707                           	psect	text171
 26708  008254                     __ptext171:
 26709                           	opt callstack 0
 26710  008254                     _getSpreadingFactor:
 26711                           	opt callstack 14
 26712                           
 26713                           ; BSR set to: 61
 26714                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 26715                           
 26716                           ;incstack = 0
 26717  008254  0E1E               	movlw	30
 26718  008256  ECAE  F041         	call	_SX1276Read
 26719  00825A  6E13               	movwf	??_getSpreadingFactor^0,c
 26720  00825C  3A13               	swapf	??_getSpreadingFactor^0,f,c
 26721  00825E  0E0F               	movlw	15
 26722  008260  1613               	andwf	??_getSpreadingFactor^0,f,c
 26723  008262  5013               	movf	??_getSpreadingFactor^0,w,c
 26724  008264  6E0F               	movwf	?_getSpreadingFactor^0,c
 26725  008266  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 26726  008268  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 26727  00826A  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 26728                           
 26729                           ; BSR set to: 61
 26730  00826C  0012               	return		;funcret
 26731  00826E                     __end_of_getSpreadingFactor:
 26732                           	opt callstack 0
 26733                           
 26734 ;; *************** function _getSignalBandwidth *****************
 26735 ;; Defined at:
 26736 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 26737 ;; Parameters:    Size  Location     Type
 26738 ;;		None
 26739 ;; Auto vars:     Size  Location     Type
 26740 ;;  bw              1   20[COMRAM] unsigned char 
 26741 ;; Return value:  Size  Location     Type
 26742 ;;                  4   14[COMRAM] unsigned long 
 26743 ;; Registers used:
 26744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26745 ;; Tracked objects:
 26746 ;;		On entry : 3F/3D
 26747 ;;		On exit  : 3F/3D
 26748 ;;		Unchanged: 0/0
 26749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26753 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26754 ;;Total ram usage:        7 bytes
 26755 ;; Hardware stack levels used:    1
 26756 ;; Hardware stack levels required when called:   11
 26757 ;; This function calls:
 26758 ;;		_SX1276Read
 26759 ;; This function is called by:
 26760 ;;		_setSpreadingFactor
 26761 ;;		_setSignalBandwidth
 26762 ;; This function uses a non-reentrant model
 26763 ;;
 26764                           
 26765                           	psect	text172
 26766  004620                     __ptext172:
 26767                           	opt callstack 0
 26768  004620                     _getSignalBandwidth:
 26769                           	opt callstack 14
 26770                           
 26771                           ; BSR set to: 61
 26772                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 26773                           
 26774                           ; BSR set to: 61
 26775                           ;incstack = 0
 26776  004620  0E1D               	movlw	29
 26777  004622  ECAE  F041         	call	_SX1276Read
 26778  004626  6E13               	movwf	??_getSignalBandwidth^0,c
 26779  004628  3813               	swapf	??_getSignalBandwidth^0,w,c
 26780  00462A  0B0F               	andlw	15
 26781  00462C  6E15               	movwf	getSignalBandwidth@bw^0,c
 26782                           
 26783                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 26784  00462E  D05A               	goto	l14170
 26785  004630                     l14128:
 26786                           
 26787                           ; BSR set to: 61
 26788  004630  0E78               	movlw	120
 26789  004632  6E0F               	movwf	?_getSignalBandwidth^0,c
 26790  004634  0E1E               	movlw	30
 26791  004636  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26792  004638  0E00               	movlw	0
 26793  00463A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26794  00463C  0E00               	movlw	0
 26795  00463E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26796  004640  0012               	return	
 26797  004642                     l14132:
 26798                           
 26799                           ; BSR set to: 61
 26800  004642  0EA0               	movlw	160
 26801  004644  6E0F               	movwf	?_getSignalBandwidth^0,c
 26802  004646  0E28               	movlw	40
 26803  004648  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26804  00464A  0E00               	movlw	0
 26805  00464C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26806  00464E  0E00               	movlw	0
 26807  004650  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26808  004652  0012               	return	
 26809  004654                     l14136:
 26810                           
 26811                           ; BSR set to: 61
 26812  004654  0EF0               	movlw	240
 26813  004656  6E0F               	movwf	?_getSignalBandwidth^0,c
 26814  004658  0E3C               	movlw	60
 26815  00465A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26816  00465C  0E00               	movlw	0
 26817  00465E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26818  004660  0E00               	movlw	0
 26819  004662  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26820  004664  0012               	return	
 26821  004666                     l14140:
 26822                           
 26823                           ; BSR set to: 61
 26824  004666  0E40               	movlw	64
 26825  004668  6E0F               	movwf	?_getSignalBandwidth^0,c
 26826  00466A  0E51               	movlw	81
 26827  00466C  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26828  00466E  0E00               	movlw	0
 26829  004670  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26830  004672  0E00               	movlw	0
 26831  004674  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26832  004676  0012               	return	
 26833  004678                     l14144:
 26834                           
 26835                           ; BSR set to: 61
 26836  004678  0E12               	movlw	18
 26837  00467A  6E0F               	movwf	?_getSignalBandwidth^0,c
 26838  00467C  0E7A               	movlw	122
 26839  00467E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26840  004680  0E00               	movlw	0
 26841  004682  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26842  004684  0E00               	movlw	0
 26843  004686  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26844  004688  0012               	return	
 26845  00468A                     l14148:
 26846                           
 26847                           ; BSR set to: 61
 26848  00468A  0EE4               	movlw	228
 26849  00468C  6E0F               	movwf	?_getSignalBandwidth^0,c
 26850  00468E  0EA2               	movlw	162
 26851  004690  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26852  004692  0E00               	movlw	0
 26853  004694  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26854  004696  0E00               	movlw	0
 26855  004698  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26856  00469A  0012               	return	
 26857  00469C                     l14152:
 26858                           
 26859                           ; BSR set to: 61
 26860  00469C  0E24               	movlw	36
 26861  00469E  6E0F               	movwf	?_getSignalBandwidth^0,c
 26862  0046A0  0EF4               	movlw	244
 26863  0046A2  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26864  0046A4  0E00               	movlw	0
 26865  0046A6  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26866  0046A8  0E00               	movlw	0
 26867  0046AA  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26868  0046AC  0012               	return	
 26869  0046AE                     l14156:
 26870                           
 26871                           ; BSR set to: 61
 26872  0046AE  0E48               	movlw	72
 26873  0046B0  6E0F               	movwf	?_getSignalBandwidth^0,c
 26874  0046B2  0EE8               	movlw	232
 26875  0046B4  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26876  0046B6  0E01               	movlw	1
 26877  0046B8  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26878  0046BA  0E00               	movlw	0
 26879  0046BC  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26880  0046BE  0012               	return	
 26881  0046C0                     l14160:
 26882                           
 26883                           ; BSR set to: 61
 26884  0046C0  0E90               	movlw	144
 26885  0046C2  6E0F               	movwf	?_getSignalBandwidth^0,c
 26886  0046C4  0ED0               	movlw	208
 26887  0046C6  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26888  0046C8  0E03               	movlw	3
 26889  0046CA  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26890  0046CC  0E00               	movlw	0
 26891  0046CE  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26892  0046D0  0012               	return	
 26893  0046D2                     l14164:
 26894                           
 26895                           ; BSR set to: 61
 26896  0046D2  0E20               	movlw	32
 26897  0046D4  6E0F               	movwf	?_getSignalBandwidth^0,c
 26898  0046D6  0EA1               	movlw	161
 26899  0046D8  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26900  0046DA  0E07               	movlw	7
 26901  0046DC  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26902  0046DE  0E00               	movlw	0
 26903  0046E0  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26904  0046E2  0012               	return	
 26905  0046E4                     l14170:
 26906                           
 26907                           ; BSR set to: 61
 26908  0046E4  5015               	movf	getSignalBandwidth@bw^0,w,c
 26909  0046E6  6E13               	movwf	??_getSignalBandwidth^0,c
 26910  0046E8  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 26911                           
 26912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26913                           ; Switch size 1, requested type "simple"
 26914                           ; Number of cases is 1, Range of values is 0 to 0
 26915                           ; switch strategies available:
 26916                           ; Name         Instructions Cycles
 26917                           ; simple_byte            4     3 (average)
 26918                           ;	Chosen strategy is simple_byte
 26919  0046EA  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 26920  0046EC  0A00               	xorlw	0	; case 0
 26921  0046EE  A4D8               	btfss	status,2,c
 26922  0046F0  D01F               	goto	l14172
 26923                           
 26924                           ; BSR set to: 61
 26925                           ; Switch size 1, requested type "simple"
 26926                           ; Number of cases is 10, Range of values is 0 to 9
 26927                           ; switch strategies available:
 26928                           ; Name         Instructions Cycles
 26929                           ; simple_byte           31    16 (average)
 26930                           ;	Chosen strategy is simple_byte
 26931  0046F2  5013               	movf	??_getSignalBandwidth^0,w,c
 26932  0046F4  0A00               	xorlw	0	; case 0
 26933  0046F6  B4D8               	btfsc	status,2,c
 26934  0046F8  D79B               	goto	l14128
 26935  0046FA  0A01               	xorlw	1	; case 1
 26936  0046FC  B4D8               	btfsc	status,2,c
 26937  0046FE  D7A1               	goto	l14132
 26938  004700  0A03               	xorlw	3	; case 2
 26939  004702  B4D8               	btfsc	status,2,c
 26940  004704  D7A7               	goto	l14136
 26941  004706  0A01               	xorlw	1	; case 3
 26942  004708  B4D8               	btfsc	status,2,c
 26943  00470A  D7AD               	goto	l14140
 26944  00470C  0A07               	xorlw	7	; case 4
 26945  00470E  B4D8               	btfsc	status,2,c
 26946  004710  D7B3               	goto	l14144
 26947  004712  0A01               	xorlw	1	; case 5
 26948  004714  B4D8               	btfsc	status,2,c
 26949  004716  D7B9               	goto	l14148
 26950  004718  0A03               	xorlw	3	; case 6
 26951  00471A  B4D8               	btfsc	status,2,c
 26952  00471C  D7BF               	goto	l14152
 26953  00471E  0A01               	xorlw	1	; case 7
 26954  004720  B4D8               	btfsc	status,2,c
 26955  004722  D7C5               	goto	l14156
 26956  004724  0A0F               	xorlw	15	; case 8
 26957  004726  B4D8               	btfsc	status,2,c
 26958  004728  D7CB               	goto	l14160
 26959  00472A  0A01               	xorlw	1	; case 9
 26960  00472C  B4D8               	btfsc	status,2,c
 26961  00472E  D7D1               	goto	l14164
 26962  004730                     l14172:
 26963                           
 26964                           ; BSR set to: 61
 26965                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 26966  004730  0E00               	movlw	0
 26967  004732  6E0F               	movwf	?_getSignalBandwidth^0,c
 26968  004734  0E00               	movlw	0
 26969  004736  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 26970  004738  0E00               	movlw	0
 26971  00473A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 26972  00473C  0E00               	movlw	0
 26973  00473E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 26974                           
 26975                           ; BSR set to: 61
 26976  004740  0012               	return		;funcret
 26977  004742                     __end_of_getSignalBandwidth:
 26978                           	opt callstack 0
 26979                           
 26980 ;; *************** function ___xxtofl *****************
 26981 ;; Defined at:
 26982 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 26983 ;; Parameters:    Size  Location     Type
 26984 ;;  sign            1    wreg     unsigned char 
 26985 ;;  val             4    1[COMRAM] long 
 26986 ;; Auto vars:     Size  Location     Type
 26987 ;;  sign            1    9[COMRAM] unsigned char 
 26988 ;;  arg             4   11[COMRAM] unsigned long 
 26989 ;;  exp             1   10[COMRAM] unsigned char 
 26990 ;; Return value:  Size  Location     Type
 26991 ;;                  4    1[COMRAM] unsigned char 
 26992 ;; Registers used:
 26993 ;;		wreg, status,2, status,0
 26994 ;; Tracked objects:
 26995 ;;		On entry : 0/3D
 26996 ;;		On exit  : 0/0
 26997 ;;		Unchanged: 0/0
 26998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27000 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27002 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27003 ;;Total ram usage:       14 bytes
 27004 ;; Hardware stack levels used:    1
 27005 ;; Hardware stack levels required when called:    7
 27006 ;; This function calls:
 27007 ;;		Nothing
 27008 ;; This function is called by:
 27009 ;;		_setSignalBandwidth
 27010 ;; This function uses a non-reentrant model
 27011 ;;
 27012                           
 27013                           	psect	text173
 27014  003978                     __ptext173:
 27015                           	opt callstack 0
 27016  003978                     ___xxtofl:
 27017                           	opt callstack 18
 27018                           
 27019                           ; BSR set to: 61
 27020                           ;incstack = 0
 27021                           ;___xxtofl@sign stored from wreg
 27022  003978  6E0A               	movwf	___xxtofl@sign^0,c
 27023  00397A  500A               	movf	___xxtofl@sign^0,w,c
 27024  00397C  A4D8               	btfss	status,2,c
 27025  00397E  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 27026  003980  D022               	goto	l3858
 27027  003982  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 27028  003988  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 27029  00398E  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 27030  003994  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 27031  00399A  1E06               	comf	??___xxtofl^0,f,c
 27032  00399C  1E07               	comf	(??___xxtofl+1)^0,f,c
 27033  00399E  1E08               	comf	(??___xxtofl+2)^0,f,c
 27034  0039A0  1E09               	comf	(??___xxtofl+3)^0,f,c
 27035  0039A2  2A06               	incf	??___xxtofl^0,f,c
 27036  0039A4  0E00               	movlw	0
 27037  0039A6  2207               	addwfc	(??___xxtofl+1)^0,f,c
 27038  0039A8  2208               	addwfc	(??___xxtofl+2)^0,f,c
 27039  0039AA  2209               	addwfc	(??___xxtofl+3)^0,f,c
 27040  0039AC  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 27041  0039B2  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 27042  0039B8  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 27043  0039BE  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 27044  0039C4  D00C               	goto	l9848
 27045  0039C6                     l3858:
 27046  0039C6  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 27047  0039CC  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 27048  0039D2  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 27049  0039D8  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 27050  0039DE                     l9848:
 27051  0039DE  5002               	movf	___xxtofl@val^0,w,c
 27052  0039E0  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 27053  0039E2  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 27054  0039E4  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 27055  0039E6  A4D8               	btfss	status,2,c
 27056  0039E8  D009               	goto	l9854
 27057  0039EA  0E00               	movlw	0
 27058  0039EC  6E02               	movwf	?___xxtofl^0,c
 27059  0039EE  0E00               	movlw	0
 27060  0039F0  6E03               	movwf	(?___xxtofl+1)^0,c
 27061  0039F2  0E00               	movlw	0
 27062  0039F4  6E04               	movwf	(?___xxtofl+2)^0,c
 27063  0039F6  0E00               	movlw	0
 27064  0039F8  6E05               	movwf	(?___xxtofl+3)^0,c
 27065  0039FA  0012               	return	
 27066  0039FC                     l9854:
 27067  0039FC  0E96               	movlw	150
 27068  0039FE  6E0B               	movwf	___xxtofl@exp^0,c
 27069  003A00  D006               	goto	l9858
 27070  003A02                     l9856:
 27071  003A02  2A0B               	incf	___xxtofl@exp^0,f,c
 27072  003A04  90D8               	bcf	status,0,c
 27073  003A06  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 27074  003A08  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 27075  003A0A  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 27076  003A0C  320C               	rrcf	___xxtofl@arg^0,f,c
 27077  003A0E                     l9858:
 27078  003A0E  0E00               	movlw	0
 27079  003A10  140C               	andwf	___xxtofl@arg^0,w,c
 27080  003A12  6E06               	movwf	??___xxtofl^0,c
 27081  003A14  0E00               	movlw	0
 27082  003A16  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 27083  003A18  6E07               	movwf	(??___xxtofl+1)^0,c
 27084  003A1A  0E00               	movlw	0
 27085  003A1C  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 27086  003A1E  6E08               	movwf	(??___xxtofl+2)^0,c
 27087  003A20  0EFE               	movlw	254
 27088  003A22  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 27089  003A24  6E09               	movwf	(??___xxtofl+3)^0,c
 27090  003A26  5006               	movf	??___xxtofl^0,w,c
 27091  003A28  1007               	iorwf	(??___xxtofl+1)^0,w,c
 27092  003A2A  1008               	iorwf	(??___xxtofl+2)^0,w,c
 27093  003A2C  1009               	iorwf	(??___xxtofl+3)^0,w,c
 27094  003A2E  B4D8               	btfsc	status,2,c
 27095  003A30  D00D               	goto	l3865
 27096  003A32  D7E7               	goto	l9856
 27097  003A34                     l9860:
 27098  003A34  2A0B               	incf	___xxtofl@exp^0,f,c
 27099  003A36  0E01               	movlw	1
 27100  003A38  260C               	addwf	___xxtofl@arg^0,f,c
 27101  003A3A  0E00               	movlw	0
 27102  003A3C  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 27103  003A3E  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 27104  003A40  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 27105  003A42  90D8               	bcf	status,0,c
 27106  003A44  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 27107  003A46  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 27108  003A48  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 27109  003A4A  320C               	rrcf	___xxtofl@arg^0,f,c
 27110  003A4C                     l3865:
 27111  003A4C  0E00               	movlw	0
 27112  003A4E  140C               	andwf	___xxtofl@arg^0,w,c
 27113  003A50  6E06               	movwf	??___xxtofl^0,c
 27114  003A52  0E00               	movlw	0
 27115  003A54  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 27116  003A56  6E07               	movwf	(??___xxtofl+1)^0,c
 27117  003A58  0E00               	movlw	0
 27118  003A5A  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 27119  003A5C  6E08               	movwf	(??___xxtofl+2)^0,c
 27120  003A5E  0EFF               	movlw	255
 27121  003A60  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 27122  003A62  6E09               	movwf	(??___xxtofl+3)^0,c
 27123  003A64  5006               	movf	??___xxtofl^0,w,c
 27124  003A66  1007               	iorwf	(??___xxtofl+1)^0,w,c
 27125  003A68  1008               	iorwf	(??___xxtofl+2)^0,w,c
 27126  003A6A  1009               	iorwf	(??___xxtofl+3)^0,w,c
 27127  003A6C  B4D8               	btfsc	status,2,c
 27128  003A6E  D007               	goto	l9868
 27129  003A70  D7E1               	goto	l9860
 27130  003A72                     l9866:
 27131  003A72  060B               	decf	___xxtofl@exp^0,f,c
 27132  003A74  90D8               	bcf	status,0,c
 27133  003A76  360C               	rlcf	___xxtofl@arg^0,f,c
 27134  003A78  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 27135  003A7A  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 27136  003A7C  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 27137  003A7E                     l9868:
 27138  003A7E  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 27139  003A80  D003               	goto	u7690
 27140  003A82  0E02               	movlw	2
 27141  003A84  600B               	cpfslt	___xxtofl@exp^0,c
 27142  003A86  D7F5               	goto	l9866
 27143  003A88                     u7690:
 27144  003A88  A00B               	btfss	___xxtofl@exp^0,0,c
 27145  003A8A  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 27146  003A8C  90D8               	bcf	status,0,c
 27147  003A8E  320B               	rrcf	___xxtofl@exp^0,f,c
 27148  003A90  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 27149  003A96  6A07               	clrf	(??___xxtofl+1)^0,c
 27150  003A98  6A08               	clrf	(??___xxtofl+2)^0,c
 27151  003A9A  6A09               	clrf	(??___xxtofl+3)^0,c
 27152  003A9C  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 27153  003AA2  6A08               	clrf	(??___xxtofl+2)^0,c
 27154  003AA4  6A07               	clrf	(??___xxtofl+1)^0,c
 27155  003AA6  6A06               	clrf	??___xxtofl^0,c
 27156  003AA8  5006               	movf	??___xxtofl^0,w,c
 27157  003AAA  120C               	iorwf	___xxtofl@arg^0,f,c
 27158  003AAC  5007               	movf	(??___xxtofl+1)^0,w,c
 27159  003AAE  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 27160  003AB0  5008               	movf	(??___xxtofl+2)^0,w,c
 27161  003AB2  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 27162  003AB4  5009               	movf	(??___xxtofl+3)^0,w,c
 27163  003AB6  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 27164  003AB8  500A               	movf	___xxtofl@sign^0,w,c
 27165  003ABA  A4D8               	btfss	status,2,c
 27166  003ABC  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 27167  003ABE  D001               	goto	l9884
 27168  003AC0  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 27169  003AC2                     l9884:
 27170  003AC2  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 27171  003AC8  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 27172  003ACE  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 27173  003AD4  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 27174  003ADA  0012               	return		;funcret
 27175  003ADC                     __end_of___xxtofl:
 27176                           	opt callstack 0
 27177                           
 27178 ;; *************** function ___flge *****************
 27179 ;; Defined at:
 27180 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 27181 ;; Parameters:    Size  Location     Type
 27182 ;;  ff1             4   15[COMRAM] unsigned char 
 27183 ;;  ff2             4   19[COMRAM] unsigned char 
 27184 ;; Auto vars:     Size  Location     Type
 27185 ;;		None
 27186 ;; Return value:  Size  Location     Type
 27187 ;;		None               void
 27188 ;; Registers used:
 27189 ;;		wreg, status,2, status,0
 27190 ;; Tracked objects:
 27191 ;;		On entry : 0/3D
 27192 ;;		On exit  : 0/0
 27193 ;;		Unchanged: 0/0
 27194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27198 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27199 ;;Total ram usage:       12 bytes
 27200 ;; Hardware stack levels used:    1
 27201 ;; Hardware stack levels required when called:    7
 27202 ;; This function calls:
 27203 ;;		Nothing
 27204 ;; This function is called by:
 27205 ;;		_setSignalBandwidth
 27206 ;; This function uses a non-reentrant model
 27207 ;;
 27208                           
 27209                           	psect	text174
 27210  00581E                     __ptext174:
 27211                           	opt callstack 0
 27212  00581E                     ___flge:
 27213                           	opt callstack 18
 27214                           
 27215                           ;incstack = 0
 27216  00581E  0E00               	movlw	0
 27217  005820  1410               	andwf	___flge@ff1^0,w,c
 27218  005822  6E18               	movwf	??___flge^0,c
 27219  005824  0E00               	movlw	0
 27220  005826  1411               	andwf	(___flge@ff1+1)^0,w,c
 27221  005828  6E19               	movwf	(??___flge+1)^0,c
 27222  00582A  0E80               	movlw	128
 27223  00582C  1412               	andwf	(___flge@ff1+2)^0,w,c
 27224  00582E  6E1A               	movwf	(??___flge+2)^0,c
 27225  005830  0E7F               	movlw	127
 27226  005832  1413               	andwf	(___flge@ff1+3)^0,w,c
 27227  005834  6E1B               	movwf	(??___flge+3)^0,c
 27228  005836  5018               	movf	??___flge^0,w,c
 27229  005838  1019               	iorwf	(??___flge+1)^0,w,c
 27230  00583A  101A               	iorwf	(??___flge+2)^0,w,c
 27231  00583C  101B               	iorwf	(??___flge+3)^0,w,c
 27232  00583E  A4D8               	btfss	status,2,c
 27233  005840  D008               	goto	l9808
 27234  005842  0E00               	movlw	0
 27235  005844  6E10               	movwf	___flge@ff1^0,c
 27236  005846  0E00               	movlw	0
 27237  005848  6E11               	movwf	(___flge@ff1+1)^0,c
 27238  00584A  0E00               	movlw	0
 27239  00584C  6E12               	movwf	(___flge@ff1+2)^0,c
 27240  00584E  0E00               	movlw	0
 27241  005850  6E13               	movwf	(___flge@ff1+3)^0,c
 27242  005852                     l9808:
 27243  005852  0E00               	movlw	0
 27244  005854  1414               	andwf	___flge@ff2^0,w,c
 27245  005856  6E18               	movwf	??___flge^0,c
 27246  005858  0E00               	movlw	0
 27247  00585A  1415               	andwf	(___flge@ff2+1)^0,w,c
 27248  00585C  6E19               	movwf	(??___flge+1)^0,c
 27249  00585E  0E80               	movlw	128
 27250  005860  1416               	andwf	(___flge@ff2+2)^0,w,c
 27251  005862  6E1A               	movwf	(??___flge+2)^0,c
 27252  005864  0E7F               	movlw	127
 27253  005866  1417               	andwf	(___flge@ff2+3)^0,w,c
 27254  005868  6E1B               	movwf	(??___flge+3)^0,c
 27255  00586A  5018               	movf	??___flge^0,w,c
 27256  00586C  1019               	iorwf	(??___flge+1)^0,w,c
 27257  00586E  101A               	iorwf	(??___flge+2)^0,w,c
 27258  005870  101B               	iorwf	(??___flge+3)^0,w,c
 27259  005872  A4D8               	btfss	status,2,c
 27260  005874  D008               	goto	l9812
 27261  005876  0E00               	movlw	0
 27262  005878  6E14               	movwf	___flge@ff2^0,c
 27263  00587A  0E00               	movlw	0
 27264  00587C  6E15               	movwf	(___flge@ff2+1)^0,c
 27265  00587E  0E00               	movlw	0
 27266  005880  6E16               	movwf	(___flge@ff2+2)^0,c
 27267  005882  0E00               	movlw	0
 27268  005884  6E17               	movwf	(___flge@ff2+3)^0,c
 27269  005886                     l9812:
 27270  005886  AE13               	btfss	(___flge@ff1+3)^0,7,c
 27271  005888  D009               	goto	l9816
 27272  00588A  6C10               	negf	___flge@ff1^0,c
 27273  00588C  1E11               	comf	(___flge@ff1+1)^0,f,c
 27274  00588E  B0D8               	btfsc	status,0,c
 27275  005890  2A11               	incf	(___flge@ff1+1)^0,f,c
 27276  005892  1E12               	comf	(___flge@ff1+2)^0,f,c
 27277  005894  B0D8               	btfsc	status,0,c
 27278  005896  2A12               	incf	(___flge@ff1+2)^0,f,c
 27279  005898  0E80               	movlw	128
 27280  00589A  5613               	subfwb	(___flge@ff1+3)^0,f,c
 27281  00589C                     l9816:
 27282  00589C  AE17               	btfss	(___flge@ff2+3)^0,7,c
 27283  00589E  D009               	goto	l3468
 27284  0058A0  6C14               	negf	___flge@ff2^0,c
 27285  0058A2  1E15               	comf	(___flge@ff2+1)^0,f,c
 27286  0058A4  B0D8               	btfsc	status,0,c
 27287  0058A6  2A15               	incf	(___flge@ff2+1)^0,f,c
 27288  0058A8  1E16               	comf	(___flge@ff2+2)^0,f,c
 27289  0058AA  B0D8               	btfsc	status,0,c
 27290  0058AC  2A16               	incf	(___flge@ff2+2)^0,f,c
 27291  0058AE  0E80               	movlw	128
 27292  0058B0  5617               	subfwb	(___flge@ff2+3)^0,f,c
 27293  0058B2                     l3468:
 27294  0058B2  0E00               	movlw	0
 27295  0058B4  1A10               	xorwf	___flge@ff1^0,f,c
 27296  0058B6  0E00               	movlw	0
 27297  0058B8  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 27298  0058BA  0E00               	movlw	0
 27299  0058BC  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 27300  0058BE  0E80               	movlw	128
 27301  0058C0  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 27302  0058C2  0E00               	movlw	0
 27303  0058C4  1A14               	xorwf	___flge@ff2^0,f,c
 27304  0058C6  0E00               	movlw	0
 27305  0058C8  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 27306  0058CA  0E00               	movlw	0
 27307  0058CC  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 27308  0058CE  0E80               	movlw	128
 27309  0058D0  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 27310  0058D2  5014               	movf	___flge@ff2^0,w,c
 27311  0058D4  5C10               	subwf	___flge@ff1^0,w,c
 27312  0058D6  5015               	movf	(___flge@ff2+1)^0,w,c
 27313  0058D8  5811               	subwfb	(___flge@ff1+1)^0,w,c
 27314  0058DA  5016               	movf	(___flge@ff2+2)^0,w,c
 27315  0058DC  5812               	subwfb	(___flge@ff1+2)^0,w,c
 27316  0058DE  5017               	movf	(___flge@ff2+3)^0,w,c
 27317  0058E0  5813               	subwfb	(___flge@ff1+3)^0,w,c
 27318  0058E2  B0D8               	btfsc	status,0,c
 27319  0058E4  D002               	goto	l9822
 27320  0058E6  90D8               	bcf	status,0,c
 27321  0058E8  0012               	return	
 27322  0058EA                     l9822:
 27323  0058EA  80D8               	bsf	status,0,c
 27324  0058EC  0012               	return		;funcret
 27325  0058EE                     __end_of___flge:
 27326                           	opt callstack 0
 27327                           
 27328 ;; *************** function _setPreambleLength *****************
 27329 ;; Defined at:
 27330 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 27331 ;; Parameters:    Size  Location     Type
 27332 ;;  length          2   16[COMRAM] unsigned short 
 27333 ;; Auto vars:     Size  Location     Type
 27334 ;;		None
 27335 ;; Return value:  Size  Location     Type
 27336 ;;                  1    wreg      void 
 27337 ;; Registers used:
 27338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27339 ;; Tracked objects:
 27340 ;;		On entry : 3F/3D
 27341 ;;		On exit  : 3F/3D
 27342 ;;		Unchanged: 0/0
 27343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27348 ;;Total ram usage:        2 bytes
 27349 ;; Hardware stack levels used:    1
 27350 ;; Hardware stack levels required when called:   11
 27351 ;; This function calls:
 27352 ;;		_SX1276Write
 27353 ;; This function is called by:
 27354 ;;		_initRadio
 27355 ;; This function uses a non-reentrant model
 27356 ;;
 27357                           
 27358                           	psect	text175
 27359  00826E                     __ptext175:
 27360                           	opt callstack 0
 27361  00826E                     _setPreambleLength:
 27362                           	opt callstack 15
 27363                           
 27364                           ; BSR set to: 61
 27365                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 27366                           
 27367                           ;incstack = 0
 27368  00826E  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 27369  008274  0E20               	movlw	32
 27370  008276  ECCC  F041         	call	_SX1276Write
 27371                           
 27372                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 27373  00827A  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 27374  008280  0E21               	movlw	33
 27375  008282  ECCC  F041         	call	_SX1276Write
 27376                           
 27377                           ; BSR set to: 61
 27378  008286  0012               	return		;funcret
 27379  008288                     __end_of_setPreambleLength:
 27380                           	opt callstack 0
 27381                           
 27382 ;; *************** function _setFrequency *****************
 27383 ;; Defined at:
 27384 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 27385 ;; Parameters:    Size  Location     Type
 27386 ;;  frequency       4   34[COMRAM] unsigned long 
 27387 ;; Auto vars:     Size  Location     Type
 27388 ;;  num             4   42[COMRAM] unsigned long 
 27389 ;;  num_mod         4   38[COMRAM] unsigned long 
 27390 ;; Return value:  Size  Location     Type
 27391 ;;                  4   34[COMRAM] unsigned long 
 27392 ;; Registers used:
 27393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27394 ;; Tracked objects:
 27395 ;;		On entry : 0/0
 27396 ;;		On exit  : 3F/3D
 27397 ;;		Unchanged: 0/0
 27398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27400 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27402 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27403 ;;Total ram usage:       12 bytes
 27404 ;; Hardware stack levels used:    1
 27405 ;; Hardware stack levels required when called:   11
 27406 ;; This function calls:
 27407 ;;		_SX1276Write
 27408 ;;		___lldiv
 27409 ;;		___llmod
 27410 ;; This function is called by:
 27411 ;;		_initRadio
 27412 ;;		_PHY_SetChannel
 27413 ;; This function uses a non-reentrant model
 27414 ;;
 27415                           
 27416                           	psect	text176
 27417  0043D0                     __ptext176:
 27418                           	opt callstack 0
 27419  0043D0                     _setFrequency:
 27420                           	opt callstack 15
 27421                           
 27422                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 27423                           
 27424                           ; BSR set to: 61
 27425                           ;incstack = 0
 27426  0043D0  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 27427  0043D6  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 27428  0043DC  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 27429  0043E2  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 27430  0043E8  0E09               	movlw	9
 27431  0043EA  6E1A               	movwf	___lldiv@divisor^0,c
 27432  0043EC  0E3D               	movlw	61
 27433  0043EE  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 27434  0043F0  0E00               	movlw	0
 27435  0043F2  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 27436  0043F4  0E00               	movlw	0
 27437  0043F6  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 27438  0043F8  ECC3  F033         	call	___lldiv	;wreg free
 27439  0043FC  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 27440  004402  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 27441  004408  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 27442  00440E  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 27443                           
 27444                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 27445  004414  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 27446  00441A  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 27447  004420  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 27448  004426  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 27449  00442C  0E09               	movlw	9
 27450  00442E  6E06               	movwf	___llmod@divisor^0,c
 27451  004430  0E3D               	movlw	61
 27452  004432  6E07               	movwf	(___llmod@divisor+1)^0,c
 27453  004434  0E00               	movlw	0
 27454  004436  6E08               	movwf	(___llmod@divisor+2)^0,c
 27455  004438  0E00               	movlw	0
 27456  00443A  6E09               	movwf	(___llmod@divisor+3)^0,c
 27457  00443C  EC09  F036         	call	___llmod	;wreg free
 27458  004440  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 27459  004446  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 27460  00444C  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 27461  004452  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 27462                           
 27463                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 27464  004458  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 27465  00445E  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 27466  004464  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 27467  00446A  6A2B               	clrf	setFrequency@num^0,c
 27468                           
 27469                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 27470  00446C  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 27471  004472  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 27472  004478  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 27473  00447E  6A27               	clrf	setFrequency@num_mod^0,c
 27474                           
 27475                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 27476  004480  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 27477  004486  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 27478  00448C  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 27479  004492  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 27480  004498  0E09               	movlw	9
 27481  00449A  6E1A               	movwf	___lldiv@divisor^0,c
 27482  00449C  0E3D               	movlw	61
 27483  00449E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 27484  0044A0  0E00               	movlw	0
 27485  0044A2  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 27486  0044A4  0E00               	movlw	0
 27487  0044A6  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 27488  0044A8  ECC3  F033         	call	___lldiv	;wreg free
 27489  0044AC  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 27490  0044B2  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 27491  0044B8  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 27492  0044BE  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 27493                           
 27494                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 27495  0044C4  5027               	movf	setFrequency@num_mod^0,w,c
 27496  0044C6  262B               	addwf	setFrequency@num^0,f,c
 27497  0044C8  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 27498  0044CA  222C               	addwfc	(setFrequency@num+1)^0,f,c
 27499  0044CC  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 27500  0044CE  222D               	addwfc	(setFrequency@num+2)^0,f,c
 27501  0044D0  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 27502  0044D2  222E               	addwfc	(setFrequency@num+3)^0,f,c
 27503                           
 27504                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 27505  0044D4  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 27506  0044DA  0E06               	movlw	6
 27507  0044DC  ECCC  F041         	call	_SX1276Write
 27508                           
 27509                           ; BSR set to: 61
 27510                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 27511  0044E0  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 27512  0044E6  0E07               	movlw	7
 27513  0044E8  ECCC  F041         	call	_SX1276Write
 27514                           
 27515                           ; BSR set to: 61
 27516                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 27517  0044EC  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 27518  0044F2  0E08               	movlw	8
 27519  0044F4  ECCC  F041         	call	_SX1276Write
 27520                           
 27521                           ; BSR set to: 61
 27522  0044F8  0012               	return		;funcret
 27523  0044FA                     __end_of_setFrequency:
 27524                           	opt callstack 0
 27525                           
 27526 ;; *************** function _setCodingRate4 *****************
 27527 ;; Defined at:
 27528 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 27529 ;; Parameters:    Size  Location     Type
 27530 ;;  denominator     1    wreg     unsigned char 
 27531 ;; Auto vars:     Size  Location     Type
 27532 ;;  denominator     1   18[COMRAM] unsigned char 
 27533 ;;  cr              1   17[COMRAM] unsigned char 
 27534 ;; Return value:  Size  Location     Type
 27535 ;;                  1    wreg      void 
 27536 ;; Registers used:
 27537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27538 ;; Tracked objects:
 27539 ;;		On entry : 3F/3D
 27540 ;;		On exit  : 3F/3D
 27541 ;;		Unchanged: 0/0
 27542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27546 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27547 ;;Total ram usage:        3 bytes
 27548 ;; Hardware stack levels used:    1
 27549 ;; Hardware stack levels required when called:   11
 27550 ;; This function calls:
 27551 ;;		_SX1276Read
 27552 ;;		_SX1276Write
 27553 ;; This function is called by:
 27554 ;;		_initRadio
 27555 ;; This function uses a non-reentrant model
 27556 ;;
 27557                           
 27558                           	psect	text177
 27559  007CD6                     __ptext177:
 27560                           	opt callstack 0
 27561  007CD6                     _setCodingRate4:
 27562                           	opt callstack 15
 27563                           
 27564                           ; BSR set to: 61
 27565                           ;incstack = 0
 27566                           ;setCodingRate4@denominator stored from wreg
 27567  007CD6  6E13               	movwf	setCodingRate4@denominator^0,c
 27568                           
 27569                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 27570  007CD8  0E05               	movlw	5
 27571  007CDA  6013               	cpfslt	setCodingRate4@denominator^0,c
 27572  007CDC  D002               	goto	l14564
 27573                           
 27574                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 27575  007CDE  0E05               	movlw	5
 27576  007CE0  D004               	goto	L23
 27577  007CE2                     l14564:
 27578  007CE2  0E08               	movlw	8
 27579  007CE4  6413               	cpfsgt	setCodingRate4@denominator^0,c
 27580  007CE6  D002               	goto	l14568
 27581                           
 27582                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 27583  007CE8  0E08               	movlw	8
 27584  007CEA                     L23:
 27585  007CEA  6E13               	movwf	setCodingRate4@denominator^0,c
 27586  007CEC                     l14568:
 27587                           
 27588                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 27589  007CEC  5013               	movf	setCodingRate4@denominator^0,w,c
 27590  007CEE  0FFC               	addlw	252
 27591  007CF0  6E12               	movwf	setCodingRate4@cr^0,c
 27592                           
 27593                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 27594  007CF2  90D8               	bcf	status,0,c
 27595  007CF4  3412               	rlcf	setCodingRate4@cr^0,w,c
 27596  007CF6  6E11               	movwf	??_setCodingRate4^0,c
 27597  007CF8  0E1D               	movlw	29
 27598  007CFA  ECAE  F041         	call	_SX1276Read
 27599  007CFE  0BF1               	andlw	241
 27600  007D00  1011               	iorwf	??_setCodingRate4^0,w,c
 27601  007D02  6E0F               	movwf	SX1276Write@data^0,c
 27602  007D04  0E1D               	movlw	29
 27603  007D06  ECCC  F041         	call	_SX1276Write
 27604                           
 27605                           ; BSR set to: 61
 27606  007D0A  0012               	return		;funcret
 27607  007D0C                     __end_of_setCodingRate4:
 27608                           	opt callstack 0
 27609                           
 27610 ;; *************** function _receive *****************
 27611 ;; Defined at:
 27612 ;;		line 449 in file "../phy/sx1216/phy_src/phy.c"
 27613 ;; Parameters:    Size  Location     Type
 27614 ;;  size            1    wreg     unsigned char 
 27615 ;; Auto vars:     Size  Location     Type
 27616 ;;  size            1   16[COMRAM] unsigned char 
 27617 ;; Return value:  Size  Location     Type
 27618 ;;                  1    wreg      void 
 27619 ;; Registers used:
 27620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27621 ;; Tracked objects:
 27622 ;;		On entry : 0/3D
 27623 ;;		On exit  : 3F/3D
 27624 ;;		Unchanged: 0/0
 27625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27630 ;;Total ram usage:        1 bytes
 27631 ;; Hardware stack levels used:    1
 27632 ;; Hardware stack levels required when called:   12
 27633 ;; This function calls:
 27634 ;;		_SX1276Write
 27635 ;;		_explicitHeaderMode
 27636 ;;		_implicitHeaderMode
 27637 ;; This function is called by:
 27638 ;;		_initRadio
 27639 ;;		_DIO0_Receive_ISR
 27640 ;;		_radio_engine
 27641 ;;		_PHY_SetRxState
 27642 ;; This function uses a non-reentrant model
 27643 ;;
 27644                           
 27645                           	psect	text178
 27646  0079AC                     __ptext178:
 27647                           	opt callstack 0
 27648  0079AC                     _receive:
 27649                           	opt callstack 14
 27650                           
 27651                           ; BSR set to: 61
 27652                           ;incstack = 0
 27653                           ;receive@size stored from wreg
 27654  0079AC  6E11               	movwf	receive@size^0,c
 27655                           
 27656                           ;../phy/sx1216/phy_src/phy.c: 449: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 450: {;../phy/sx1216/phy_src/phy.c: 451:   if (size > 0) {
 27657  0079AE  5011               	movf	receive@size^0,w,c
 27658  0079B0  B4D8               	btfsc	status,2,c
 27659  0079B2  D009               	goto	l14578
 27660                           
 27661                           ;../phy/sx1216/phy_src/phy.c: 452:     implicitHeaderMode();
 27662  0079B4  EC5E  F041         	call	_implicitHeaderMode	;wreg free
 27663                           
 27664                           ;../phy/sx1216/phy_src/phy.c: 454:     SX1276Write(0x22, size & 0xff);
 27665  0079B8  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 27666  0079BE  0E22               	movlw	34
 27667  0079C0  ECCC  F041         	call	_SX1276Write
 27668                           
 27669                           ;../phy/sx1216/phy_src/phy.c: 455:   } else {
 27670  0079C4  D002               	goto	l2586
 27671  0079C6                     l14578:
 27672                           
 27673                           ;../phy/sx1216/phy_src/phy.c: 456:     explicitHeaderMode();
 27674  0079C6  EC6A  F041         	call	_explicitHeaderMode	;wreg free
 27675  0079CA                     l2586:
 27676                           
 27677                           ; BSR set to: 61
 27678                           ;../phy/sx1216/phy_src/phy.c: 459:   SX1276Write(0x0D, 0);
 27679  0079CA  0E00               	movlw	0
 27680  0079CC  6E0F               	movwf	SX1276Write@data^0,c
 27681  0079CE  0E0D               	movlw	13
 27682  0079D0  ECCC  F041         	call	_SX1276Write
 27683                           
 27684                           ;../phy/sx1216/phy_src/phy.c: 460:   SX1276Write(0x12, 0xFF);
 27685  0079D4  0EFF               	movlw	255
 27686  0079D6  6E0F               	movwf	SX1276Write@data^0,c
 27687  0079D8  0E12               	movlw	18
 27688  0079DA  ECCC  F041         	call	_SX1276Write
 27689                           
 27690                           ;../phy/sx1216/phy_src/phy.c: 461:   SX1276Write(0x01,0x80 | 0x05);
 27691  0079DE  0E85               	movlw	133
 27692  0079E0  6E0F               	movwf	SX1276Write@data^0,c
 27693  0079E2  0E01               	movlw	1
 27694  0079E4  ECCC  F041         	call	_SX1276Write
 27695                           
 27696                           ; BSR set to: 61
 27697  0079E8  0012               	return		;funcret
 27698  0079EA                     __end_of_receive:
 27699                           	opt callstack 0
 27700                           
 27701 ;; *************** function _implicitHeaderMode *****************
 27702 ;; Defined at:
 27703 ;;		line 411 in file "../phy/sx1216/phy_src/phy.c"
 27704 ;; Parameters:    Size  Location     Type
 27705 ;;		None
 27706 ;; Auto vars:     Size  Location     Type
 27707 ;;		None
 27708 ;; Return value:  Size  Location     Type
 27709 ;;                  1    wreg      void 
 27710 ;; Registers used:
 27711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27712 ;; Tracked objects:
 27713 ;;		On entry : 0/3D
 27714 ;;		On exit  : 3F/3D
 27715 ;;		Unchanged: 0/0
 27716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27721 ;;Total ram usage:        0 bytes
 27722 ;; Hardware stack levels used:    1
 27723 ;; Hardware stack levels required when called:   11
 27724 ;; This function calls:
 27725 ;;		_SX1276Read
 27726 ;;		_SX1276Write
 27727 ;; This function is called by:
 27728 ;;		_receive
 27729 ;; This function uses a non-reentrant model
 27730 ;;
 27731                           
 27732                           	psect	text179
 27733  0082BC                     __ptext179:
 27734                           	opt callstack 0
 27735  0082BC                     _implicitHeaderMode:
 27736                           	opt callstack 14
 27737                           
 27738                           ;../phy/sx1216/phy_src/phy.c: 413:   _implicitHeaderMode = 1;
 27739                           
 27740                           ; BSR set to: 61
 27741                           ;incstack = 0
 27742  0082BC  0E01               	movlw	1
 27743  0082BE  0101               	movlb	1	; () banked
 27744  0082C0  6F6C               	movwf	__implicitHeaderMode& (0+255),b
 27745                           
 27746                           ; BSR set to: 1
 27747                           ;../phy/sx1216/phy_src/phy.c: 415:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 27748  0082C2  0E1D               	movlw	29
 27749  0082C4  ECAE  F041         	call	_SX1276Read
 27750  0082C8  0901               	iorlw	1
 27751  0082CA  6E0F               	movwf	SX1276Write@data^0,c
 27752  0082CC  0E1D               	movlw	29
 27753  0082CE  ECCC  F041         	call	_SX1276Write
 27754                           
 27755                           ; BSR set to: 61
 27756  0082D2  0012               	return		;funcret
 27757  0082D4                     __end_of_implicitHeaderMode:
 27758                           	opt callstack 0
 27759                           
 27760 ;; *************** function _explicitHeaderMode *****************
 27761 ;; Defined at:
 27762 ;;		line 397 in file "../phy/sx1216/phy_src/phy.c"
 27763 ;; Parameters:    Size  Location     Type
 27764 ;;		None
 27765 ;; Auto vars:     Size  Location     Type
 27766 ;;		None
 27767 ;; Return value:  Size  Location     Type
 27768 ;;                  1    wreg      void 
 27769 ;; Registers used:
 27770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27771 ;; Tracked objects:
 27772 ;;		On entry : 0/3D
 27773 ;;		On exit  : 3F/3D
 27774 ;;		Unchanged: 0/0
 27775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27780 ;;Total ram usage:        0 bytes
 27781 ;; Hardware stack levels used:    1
 27782 ;; Hardware stack levels required when called:   11
 27783 ;; This function calls:
 27784 ;;		_SX1276Read
 27785 ;;		_SX1276Write
 27786 ;; This function is called by:
 27787 ;;		_receive
 27788 ;;		_initRadio
 27789 ;;		_PHY_DataReq
 27790 ;; This function uses a non-reentrant model
 27791 ;;
 27792                           
 27793                           	psect	text180
 27794  0082D4                     __ptext180:
 27795                           	opt callstack 0
 27796  0082D4                     _explicitHeaderMode:
 27797                           	opt callstack 14
 27798                           
 27799                           ;../phy/sx1216/phy_src/phy.c: 399:   _implicitHeaderMode = 0;
 27800                           
 27801                           ; BSR set to: 61
 27802                           ;incstack = 0
 27803  0082D4  0E00               	movlw	0
 27804  0082D6  0101               	movlb	1	; () banked
 27805  0082D8  6F6C               	movwf	__implicitHeaderMode& (0+255),b
 27806                           
 27807                           ; BSR set to: 1
 27808                           ;../phy/sx1216/phy_src/phy.c: 401:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 27809  0082DA  0E1D               	movlw	29
 27810  0082DC  ECAE  F041         	call	_SX1276Read
 27811  0082E0  0BFE               	andlw	254
 27812  0082E2  6E0F               	movwf	SX1276Write@data^0,c
 27813  0082E4  0E1D               	movlw	29
 27814  0082E6  ECCC  F041         	call	_SX1276Write
 27815                           
 27816                           ; BSR set to: 61
 27817  0082EA  0012               	return		;funcret
 27818  0082EC                     __end_of_explicitHeaderMode:
 27819                           	opt callstack 0
 27820                           
 27821 ;; *************** function _enableCrc *****************
 27822 ;; Defined at:
 27823 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 27824 ;; Parameters:    Size  Location     Type
 27825 ;;		None
 27826 ;; Auto vars:     Size  Location     Type
 27827 ;;		None
 27828 ;; Return value:  Size  Location     Type
 27829 ;;                  1    wreg      void 
 27830 ;; Registers used:
 27831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27832 ;; Tracked objects:
 27833 ;;		On entry : 3F/3D
 27834 ;;		On exit  : 3F/3D
 27835 ;;		Unchanged: 0/0
 27836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27841 ;;Total ram usage:        0 bytes
 27842 ;; Hardware stack levels used:    1
 27843 ;; Hardware stack levels required when called:   11
 27844 ;; This function calls:
 27845 ;;		_SX1276Read
 27846 ;;		_SX1276Write
 27847 ;; This function is called by:
 27848 ;;		_initRadio
 27849 ;; This function uses a non-reentrant model
 27850 ;;
 27851                           
 27852                           	psect	text181
 27853  008386                     __ptext181:
 27854                           	opt callstack 0
 27855  008386                     _enableCrc:
 27856                           	opt callstack 15
 27857                           
 27858                           ; BSR set to: 61
 27859                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 27860                           
 27861                           ; BSR set to: 61
 27862                           ;incstack = 0
 27863  008386  0E1E               	movlw	30
 27864  008388  ECAE  F041         	call	_SX1276Read
 27865  00838C  0904               	iorlw	4
 27866  00838E  6E0F               	movwf	SX1276Write@data^0,c
 27867  008390  0E1E               	movlw	30
 27868  008392  ECCC  F041         	call	_SX1276Write
 27869                           
 27870                           ; BSR set to: 61
 27871  008396  0012               	return		;funcret
 27872  008398                     __end_of_enableCrc:
 27873                           	opt callstack 0
 27874                           
 27875 ;; *************** function _SX1276Write *****************
 27876 ;; Defined at:
 27877 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 27878 ;; Parameters:    Size  Location     Type
 27879 ;;  addr            1    wreg     unsigned char 
 27880 ;;  data            1   14[COMRAM] unsigned char 
 27881 ;; Auto vars:     Size  Location     Type
 27882 ;;  addr            1   15[COMRAM] unsigned char 
 27883 ;; Return value:  Size  Location     Type
 27884 ;;                  1    wreg      void 
 27885 ;; Registers used:
 27886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27887 ;; Tracked objects:
 27888 ;;		On entry : 0/0
 27889 ;;		On exit  : 3F/3D
 27890 ;;		Unchanged: 0/0
 27891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27896 ;;Total ram usage:        2 bytes
 27897 ;; Hardware stack levels used:    1
 27898 ;; Hardware stack levels required when called:   10
 27899 ;; This function calls:
 27900 ;;		_SX1276WriteBuffer
 27901 ;; This function is called by:
 27902 ;;		_idle
 27903 ;;		_setTxPower
 27904 ;;		_setFrequency
 27905 ;;		_setSpreadingFactor
 27906 ;;		_setSignalBandwidth
 27907 ;;		_setCodingRate4
 27908 ;;		_setPreambleLength
 27909 ;;		_setSyncWord
 27910 ;;		_enableCrc
 27911 ;;		_explicitHeaderMode
 27912 ;;		_implicitHeaderMode
 27913 ;;		_receive
 27914 ;;		_initRadio
 27915 ;;		_cad
 27916 ;;		_start_radio_cad
 27917 ;;		_DIO0_Receive_ISR
 27918 ;;		_PHY_DataReq
 27919 ;; This function uses a non-reentrant model
 27920 ;;
 27921                           
 27922                           	psect	text182
 27923  008398                     __ptext182:
 27924                           	opt callstack 0
 27925  008398                     _SX1276Write:
 27926                           	opt callstack 15
 27927                           
 27928                           ; BSR set to: 61
 27929                           ;incstack = 0
 27930                           ;SX1276Write@addr stored from wreg
 27931  008398  6E10               	movwf	SX1276Write@addr^0,c
 27932                           
 27933                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 27934  00839A  0E0F               	movlw	low SX1276Write@data
 27935  00839C  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 27936  00839E  0E01               	movlw	1
 27937  0083A0  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 27938  0083A2  5010               	movf	SX1276Write@addr^0,w,c
 27939  0083A4  ECDA  F03F         	call	_SX1276WriteBuffer
 27940                           
 27941                           ; BSR set to: 61
 27942  0083A8  0012               	return		;funcret
 27943  0083AA                     __end_of_SX1276Write:
 27944                           	opt callstack 0
 27945                           
 27946 ;; *************** function _SX1276WriteBuffer *****************
 27947 ;; Defined at:
 27948 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 27949 ;; Parameters:    Size  Location     Type
 27950 ;;  addr            1    wreg     unsigned char 
 27951 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 27952 ;;		 -> SX1276Write@data(1), 
 27953 ;;  size            1    9[COMRAM] unsigned char 
 27954 ;; Auto vars:     Size  Location     Type
 27955 ;;  addr            1   10[COMRAM] unsigned char 
 27956 ;;  i               1    0        unsigned char 
 27957 ;; Return value:  Size  Location     Type
 27958 ;;                  1    wreg      void 
 27959 ;; Registers used:
 27960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27961 ;; Tracked objects:
 27962 ;;		On entry : 0/0
 27963 ;;		On exit  : 3F/3D
 27964 ;;		Unchanged: 0/0
 27965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27969 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27970 ;;Total ram usage:        3 bytes
 27971 ;; Hardware stack levels used:    1
 27972 ;; Hardware stack levels required when called:    9
 27973 ;; This function calls:
 27974 ;;		_SPI1_ExchangeByte
 27975 ;;		_SPI1_WriteBlock
 27976 ;; This function is called by:
 27977 ;;		_SX1276Write
 27978 ;; This function uses a non-reentrant model
 27979 ;;
 27980                           
 27981                           	psect	text183
 27982  007FB4                     __ptext183:
 27983                           	opt callstack 0
 27984  007FB4                     _SX1276WriteBuffer:
 27985                           	opt callstack 15
 27986                           
 27987                           ; BSR set to: 61
 27988                           ;incstack = 0
 27989                           ;SX1276WriteBuffer@addr stored from wreg
 27990  007FB4  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 27991                           
 27992                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 27993  007FB6  9CBC               	bcf	188,6,c	;volatile
 27994                           
 27995                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 27996  007FB8  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 27997  007FBA  0980               	iorlw	128
 27998  007FBC  EC44  F041         	call	_SPI1_ExchangeByte
 27999                           
 28000                           ; BSR set to: 61
 28001                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 28002  007FC0  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 28003  007FC6  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 28004  007FC8  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 28005  007FCE  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 28006  007FD0  EC86  F03E         	call	_SPI1_WriteBlock	;wreg free
 28007                           
 28008                           ; BSR set to: 61
 28009  007FD4  8CBC               	bsf	188,6,c	;volatile
 28010                           
 28011                           ; BSR set to: 61
 28012  007FD6  0012               	return		;funcret
 28013  007FD8                     __end_of_SX1276WriteBuffer:
 28014                           	opt callstack 0
 28015                           
 28016 ;; *************** function _SPI1_WriteBlock *****************
 28017 ;; Defined at:
 28018 ;;		line 121 in file "mcc_generated_files/spi1.c"
 28019 ;; Parameters:    Size  Location     Type
 28020 ;;  block           2    2[COMRAM] PTR void 
 28021 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 28022 ;;  blockSize       2    4[COMRAM] unsigned int 
 28023 ;; Auto vars:     Size  Location     Type
 28024 ;;  data            2    6[COMRAM] PTR unsigned char 
 28025 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 28026 ;; Return value:  Size  Location     Type
 28027 ;;                  1    wreg      void 
 28028 ;; Registers used:
 28029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28030 ;; Tracked objects:
 28031 ;;		On entry : 3F/3D
 28032 ;;		On exit  : 3F/3D
 28033 ;;		Unchanged: 0/0
 28034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28039 ;;Total ram usage:        6 bytes
 28040 ;; Hardware stack levels used:    1
 28041 ;; Hardware stack levels required when called:    8
 28042 ;; This function calls:
 28043 ;;		_SPI1_ExchangeByte
 28044 ;; This function is called by:
 28045 ;;		_SX1276WriteBuffer
 28046 ;;		_PHY_DataReq
 28047 ;; This function uses a non-reentrant model
 28048 ;;
 28049                           
 28050                           	psect	text184
 28051  007D0C                     __ptext184:
 28052                           	opt callstack 0
 28053  007D0C                     _SPI1_WriteBlock:
 28054                           	opt callstack 15
 28055                           
 28056                           ; BSR set to: 61
 28057                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 28058                           
 28059                           ; BSR set to: 61
 28060                           ;incstack = 0
 28061  007D0C  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 28062  007D12  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 28063                           
 28064                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 28065  007D18  D00B               	goto	l9096
 28066  007D1A                     l9092:
 28067                           
 28068                           ; BSR set to: 61
 28069                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 28070  007D1A  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 28071  007D20  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 28072  007D26  50DF               	movf	indf2,w,c
 28073  007D28  EC44  F041         	call	_SPI1_ExchangeByte
 28074                           
 28075                           ; BSR set to: 61
 28076  007D2C  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 28077  007D2E  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 28078  007D30                     l9096:
 28079                           
 28080                           ; BSR set to: 61
 28081                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 28082  007D30  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 28083  007D32  A0D8               	btfss	status,0,c
 28084  007D34  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 28085  007D36  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 28086  007D38  E1F0               	bnz	l9092
 28087  007D3A  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 28088  007D3C  B4D8               	btfsc	status,2,c
 28089  007D3E  0012               	return	
 28090  007D40  D7EC               	goto	l9092
 28091  007D42                     __end_of_SPI1_WriteBlock:
 28092                           	opt callstack 0
 28093                           
 28094 ;; *************** function _SX1276Read *****************
 28095 ;; Defined at:
 28096 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 28097 ;; Parameters:    Size  Location     Type
 28098 ;;  addr            1    wreg     unsigned char 
 28099 ;; Auto vars:     Size  Location     Type
 28100 ;;  addr            1   12[COMRAM] unsigned char 
 28101 ;;  data            1   13[COMRAM] unsigned char 
 28102 ;; Return value:  Size  Location     Type
 28103 ;;                  1    wreg      unsigned char 
 28104 ;; Registers used:
 28105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28106 ;; Tracked objects:
 28107 ;;		On entry : 0/39
 28108 ;;		On exit  : 3F/3D
 28109 ;;		Unchanged: 0/0
 28110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28115 ;;Total ram usage:        2 bytes
 28116 ;; Hardware stack levels used:    1
 28117 ;; Hardware stack levels required when called:   10
 28118 ;; This function calls:
 28119 ;;		_SX1276ReadBuffer
 28120 ;; This function is called by:
 28121 ;;		_setSpreadingFactor
 28122 ;;		_setSignalBandwidth
 28123 ;;		_getSpreadingFactor
 28124 ;;		_getSignalBandwidth
 28125 ;;		_setCodingRate4
 28126 ;;		_enableCrc
 28127 ;;		_explicitHeaderMode
 28128 ;;		_implicitHeaderMode
 28129 ;;		_initRadio
 28130 ;;		_cad
 28131 ;;		_DIO0_Receive_ISR
 28132 ;;		_radio_engine
 28133 ;; This function uses a non-reentrant model
 28134 ;;
 28135                           
 28136                           	psect	text185
 28137  00835C                     __ptext185:
 28138                           	opt callstack 0
 28139  00835C                     _SX1276Read:
 28140                           	opt callstack 14
 28141                           
 28142                           ; BSR set to: 61
 28143                           ;incstack = 0
 28144                           ;SX1276Read@addr stored from wreg
 28145  00835C  6E0D               	movwf	SX1276Read@addr^0,c
 28146                           
 28147                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 28148  00835E  0E0E               	movlw	low SX1276Read@data
 28149  008360  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 28150  008362  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 28151  008364  0E01               	movlw	1
 28152  008366  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 28153  008368  500D               	movf	SX1276Read@addr^0,w,c
 28154  00836A  ECA1  F03F         	call	_SX1276ReadBuffer
 28155                           
 28156                           ; BSR set to: 61
 28157                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 28158  00836E  500E               	movf	SX1276Read@data^0,w,c
 28159                           
 28160                           ; BSR set to: 61
 28161  008370  0012               	return		;funcret
 28162  008372                     __end_of_SX1276Read:
 28163                           	opt callstack 0
 28164                           
 28165 ;; *************** function _SX1276ReadBuffer *****************
 28166 ;; Defined at:
 28167 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 28168 ;; Parameters:    Size  Location     Type
 28169 ;;  addr            1    wreg     unsigned char 
 28170 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 28171 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 28172 ;;  size            1   10[COMRAM] unsigned char 
 28173 ;; Auto vars:     Size  Location     Type
 28174 ;;  addr            1   11[COMRAM] unsigned char 
 28175 ;;  i               1    0        unsigned char 
 28176 ;; Return value:  Size  Location     Type
 28177 ;;                  1    wreg      void 
 28178 ;; Registers used:
 28179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28180 ;; Tracked objects:
 28181 ;;		On entry : 0/3D
 28182 ;;		On exit  : 3F/3D
 28183 ;;		Unchanged: 0/0
 28184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28185 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28188 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28189 ;;Total ram usage:        4 bytes
 28190 ;; Hardware stack levels used:    1
 28191 ;; Hardware stack levels required when called:    9
 28192 ;; This function calls:
 28193 ;;		_SPI1_ExchangeByte
 28194 ;;		_SPI1_ReadBlock
 28195 ;; This function is called by:
 28196 ;;		_SX1276Read
 28197 ;;		_DIO0_Receive_ISR
 28198 ;; This function uses a non-reentrant model
 28199 ;;
 28200                           
 28201                           	psect	text186
 28202  007F42                     __ptext186:
 28203                           	opt callstack 0
 28204  007F42                     _SX1276ReadBuffer:
 28205                           	opt callstack 14
 28206                           
 28207                           ; BSR set to: 61
 28208                           ;incstack = 0
 28209                           ;SX1276ReadBuffer@addr stored from wreg
 28210  007F42  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 28211                           
 28212                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 28213  007F44  9CBC               	bcf	188,6,c	;volatile
 28214                           
 28215                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 28216  007F46  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 28217  007F48  0B7F               	andlw	127
 28218  007F4A  EC44  F041         	call	_SPI1_ExchangeByte
 28219                           
 28220                           ; BSR set to: 61
 28221                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 28222  007F4E  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 28223  007F54  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 28224  007F5A  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 28225  007F60  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 28226  007F62  EC19  F03E         	call	_SPI1_ReadBlock	;wreg free
 28227                           
 28228                           ; BSR set to: 61
 28229  007F66  8CBC               	bsf	188,6,c	;volatile
 28230                           
 28231                           ; BSR set to: 61
 28232  007F68  0012               	return		;funcret
 28233  007F6A                     __end_of_SX1276ReadBuffer:
 28234                           	opt callstack 0
 28235                           
 28236 ;; *************** function _SPI1_ReadBlock *****************
 28237 ;; Defined at:
 28238 ;;		line 130 in file "mcc_generated_files/spi1.c"
 28239 ;; Parameters:    Size  Location     Type
 28240 ;;  block           2    2[COMRAM] PTR void 
 28241 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 28242 ;;  blockSize       2    4[COMRAM] unsigned int 
 28243 ;; Auto vars:     Size  Location     Type
 28244 ;;  data            2    6[COMRAM] PTR unsigned char 
 28245 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 28246 ;; Return value:  Size  Location     Type
 28247 ;;                  1    wreg      void 
 28248 ;; Registers used:
 28249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28250 ;; Tracked objects:
 28251 ;;		On entry : 3F/3D
 28252 ;;		On exit  : 3F/3D
 28253 ;;		Unchanged: 0/0
 28254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28259 ;;Total ram usage:        6 bytes
 28260 ;; Hardware stack levels used:    1
 28261 ;; Hardware stack levels required when called:    8
 28262 ;; This function calls:
 28263 ;;		_SPI1_ExchangeByte
 28264 ;; This function is called by:
 28265 ;;		_SX1276ReadBuffer
 28266 ;; This function uses a non-reentrant model
 28267 ;;
 28268                           
 28269                           	psect	text187
 28270  007C32                     __ptext187:
 28271                           	opt callstack 0
 28272  007C32                     _SPI1_ReadBlock:
 28273                           	opt callstack 14
 28274                           
 28275                           ; BSR set to: 61
 28276                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 28277                           
 28278                           ; BSR set to: 61
 28279                           ;incstack = 0
 28280  007C32  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 28281  007C38  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 28282                           
 28283                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 28284  007C3E  D00C               	goto	l13546
 28285  007C40                     l13542:
 28286                           
 28287                           ; BSR set to: 61
 28288                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 28289  007C40  0E00               	movlw	0
 28290  007C42  EC44  F041         	call	_SPI1_ExchangeByte
 28291  007C46  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 28292  007C4C  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 28293  007C52  6EDF               	movwf	indf2,c
 28294                           
 28295                           ; BSR set to: 61
 28296  007C54  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 28297  007C56  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 28298  007C58                     l13546:
 28299                           
 28300                           ; BSR set to: 61
 28301                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 28302  007C58  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 28303  007C5A  A0D8               	btfss	status,0,c
 28304  007C5C  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 28305  007C5E  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 28306  007C60  E1EF               	bnz	l13542
 28307  007C62  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 28308  007C64  B4D8               	btfsc	status,2,c
 28309  007C66  0012               	return	
 28310  007C68  D7EB               	goto	l13542
 28311  007C6A                     __end_of_SPI1_ReadBlock:
 28312                           	opt callstack 0
 28313                           
 28314 ;; *************** function _SPI1_ExchangeByte *****************
 28315 ;; Defined at:
 28316 ;;		line 100 in file "mcc_generated_files/spi1.c"
 28317 ;; Parameters:    Size  Location     Type
 28318 ;;  data            1    wreg     unsigned char 
 28319 ;; Auto vars:     Size  Location     Type
 28320 ;;  data            1    1[COMRAM] unsigned char 
 28321 ;; Return value:  Size  Location     Type
 28322 ;;                  1    wreg      unsigned char 
 28323 ;; Registers used:
 28324 ;;		wreg, status,2
 28325 ;; Tracked objects:
 28326 ;;		On entry : 0/3D
 28327 ;;		On exit  : 3F/3D
 28328 ;;		Unchanged: 0/0
 28329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28334 ;;Total ram usage:        1 bytes
 28335 ;; Hardware stack levels used:    1
 28336 ;; Hardware stack levels required when called:    7
 28337 ;; This function calls:
 28338 ;;		Nothing
 28339 ;; This function is called by:
 28340 ;;		_SPI1_WriteBlock
 28341 ;;		_SPI1_ReadBlock
 28342 ;;		_SX1276ReadBuffer
 28343 ;;		_SX1276WriteBuffer
 28344 ;;		_PHY_DataReq
 28345 ;; This function uses a non-reentrant model
 28346 ;;
 28347                           
 28348                           	psect	text188
 28349  008288                     __ptext188:
 28350                           	opt callstack 0
 28351  008288                     _SPI1_ExchangeByte:
 28352                           	opt callstack 15
 28353                           
 28354                           ; BSR set to: 61
 28355                           ;incstack = 0
 28356                           ;SPI1_ExchangeByte@data stored from wreg
 28357  008288  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 28358                           
 28359                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 28360  00828A  0E01               	movlw	1
 28361  00828C  013D               	movlb	61	; () banked
 28362  00828E  6F12               	movwf	18,b	;volatile
 28363                           
 28364                           ; BSR set to: 61
 28365                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 28366  008290  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 28367  008296                     l1040:
 28368  008296  0139               	movlb	57	; () banked
 28369  008298  A9A2               	btfss	162,4,b	;volatile
 28370  00829A  D7FD               	goto	l1040
 28371                           
 28372                           ; BSR set to: 57
 28373                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 28374  00829C  013D               	movlb	61	; () banked
 28375  00829E  5110               	movf	16,w,b	;volatile
 28376                           
 28377                           ; BSR set to: 61
 28378  0082A0  0012               	return		;funcret
 28379  0082A2                     __end_of_SPI1_ExchangeByte:
 28380                           	opt callstack 0
 28381                           
 28382 ;; *************** function _computeFRF *****************
 28383 ;; Defined at:
 28384 ;;		line 725 in file "../phy/sx1216/phy_src/phy.c"
 28385 ;; Parameters:    Size  Location     Type
 28386 ;;		None
 28387 ;; Auto vars:     Size  Location     Type
 28388 ;;  num             4   42[COMRAM] unsigned long 
 28389 ;;  num_mod         4   38[COMRAM] unsigned long 
 28390 ;;  frequency       4   34[COMRAM] unsigned long 
 28391 ;;  i               1   46[COMRAM] unsigned char 
 28392 ;; Return value:  Size  Location     Type
 28393 ;;                  1    wreg      void 
 28394 ;; Registers used:
 28395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28396 ;; Tracked objects:
 28397 ;;		On entry : 0/0
 28398 ;;		On exit  : 0/0
 28399 ;;		Unchanged: 0/0
 28400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28402 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28404 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28405 ;;Total ram usage:       13 bytes
 28406 ;; Hardware stack levels used:    1
 28407 ;; Hardware stack levels required when called:    8
 28408 ;; This function calls:
 28409 ;;		___lldiv
 28410 ;;		___llmod
 28411 ;; This function is called by:
 28412 ;;		_initRadio
 28413 ;; This function uses a non-reentrant model
 28414 ;;
 28415                           
 28416                           	psect	text189
 28417  003384                     __ptext189:
 28418                           	opt callstack 0
 28419  003384                     _computeFRF:
 28420                           	opt callstack 18
 28421                           
 28422                           ;../phy/sx1216/phy_src/phy.c: 727:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 28423                           
 28424                           ; BSR set to: 61
 28425                           ;incstack = 0
 28426  003384  0E00               	movlw	0
 28427  003386  6E2F               	movwf	computeFRF@i^0,c
 28428  003388                     l10388:
 28429                           
 28430                           ;../phy/sx1216/phy_src/phy.c: 728:     {;../phy/sx1216/phy_src/phy.c: 729:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 730:         frequency = fhssL
      +                          ist[i];
 28431  003388  502F               	movf	computeFRF@i^0,w,c
 28432  00338A  0D04               	mullw	4
 28433  00338C  0EC9               	movlw	low _fhssList
 28434  00338E  24F3               	addwf	243,w,c
 28435  003390  6EF6               	movwf	tblptrl,c
 28436  003392  0EFC               	movlw	high _fhssList
 28437  003394  20F4               	addwfc	244,w,c
 28438  003396  6EF7               	movwf	tblptrh,c
 28439  003398                     	if	1	;There are 3 active tblptr bytes
 28440  003398  6AF8               	clrf	tblptru,c
 28441  00339A  0E00               	movlw	low (__mediumconst shr (0+16))
 28442  00339C  22F8               	addwfc	tblptru,f,c
 28443  00339E                     	endif
 28444  00339E  0009               	tblrd		*+
 28445  0033A0  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 28446  0033A6  0009               	tblrd		*+
 28447  0033A8  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 28448  0033AE  0009               	tblrd		*+
 28449  0033B0  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 28450  0033B6  000A               	tblrd		*-
 28451  0033B8  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 28452                           
 28453                           ;../phy/sx1216/phy_src/phy.c: 737:         num = frequency / 15625;
 28454  0033BE  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 28455  0033C4  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 28456  0033CA  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 28457  0033D0  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 28458  0033D6  0E09               	movlw	9
 28459  0033D8  6E1A               	movwf	___lldiv@divisor^0,c
 28460  0033DA  0E3D               	movlw	61
 28461  0033DC  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28462  0033DE  0E00               	movlw	0
 28463  0033E0  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28464  0033E2  0E00               	movlw	0
 28465  0033E4  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28466  0033E6  ECC3  F033         	call	___lldiv	;wreg free
 28467  0033EA  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 28468  0033F0  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 28469  0033F6  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 28470  0033FC  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 28471                           
 28472                           ;../phy/sx1216/phy_src/phy.c: 738:         num_mod = frequency % 15625;
 28473  003402  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 28474  003408  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 28475  00340E  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 28476  003414  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 28477  00341A  0E09               	movlw	9
 28478  00341C  6E06               	movwf	___llmod@divisor^0,c
 28479  00341E  0E3D               	movlw	61
 28480  003420  6E07               	movwf	(___llmod@divisor+1)^0,c
 28481  003422  0E00               	movlw	0
 28482  003424  6E08               	movwf	(___llmod@divisor+2)^0,c
 28483  003426  0E00               	movlw	0
 28484  003428  6E09               	movwf	(___llmod@divisor+3)^0,c
 28485  00342A  EC09  F036         	call	___llmod	;wreg free
 28486  00342E  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 28487  003434  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 28488  00343A  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 28489  003440  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 28490                           
 28491                           ;../phy/sx1216/phy_src/phy.c: 742:         num <<= 8;
 28492  003446  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 28493  00344C  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 28494  003452  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 28495  003458  6A2B               	clrf	computeFRF@num^0,c
 28496                           
 28497                           ;../phy/sx1216/phy_src/phy.c: 743:         num_mod <<= 8;
 28498  00345A  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 28499  003460  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 28500  003466  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 28501  00346C  6A27               	clrf	computeFRF@num_mod^0,c
 28502                           
 28503                           ;../phy/sx1216/phy_src/phy.c: 747:         num_mod = num_mod / 15625;
 28504  00346E  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 28505  003474  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 28506  00347A  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 28507  003480  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 28508  003486  0E09               	movlw	9
 28509  003488  6E1A               	movwf	___lldiv@divisor^0,c
 28510  00348A  0E3D               	movlw	61
 28511  00348C  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28512  00348E  0E00               	movlw	0
 28513  003490  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28514  003492  0E00               	movlw	0
 28515  003494  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28516  003496  ECC3  F033         	call	___lldiv	;wreg free
 28517  00349A  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 28518  0034A0  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 28519  0034A6  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 28520  0034AC  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 28521                           
 28522                           ;../phy/sx1216/phy_src/phy.c: 748:         num += num_mod;
 28523  0034B2  5027               	movf	computeFRF@num_mod^0,w,c
 28524  0034B4  262B               	addwf	computeFRF@num^0,f,c
 28525  0034B6  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 28526  0034B8  222C               	addwfc	(computeFRF@num+1)^0,f,c
 28527  0034BA  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 28528  0034BC  222D               	addwfc	(computeFRF@num+2)^0,f,c
 28529  0034BE  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 28530  0034C0  222E               	addwfc	(computeFRF@num+3)^0,f,c
 28531                           
 28532                           ;../phy/sx1216/phy_src/phy.c: 750:         fhssReg[i][0] = (num >> 16);
 28533  0034C2  502F               	movf	computeFRF@i^0,w,c
 28534  0034C4  0D03               	mullw	3
 28535  0034C6  0E00               	movlw	low _fhssReg
 28536  0034C8  24F3               	addwf	243,w,c
 28537  0034CA  6ED9               	movwf	fsr2l,c
 28538  0034CC  0E05               	movlw	high _fhssReg
 28539  0034CE  20F4               	addwfc	prodh,w,c
 28540  0034D0  6EDA               	movwf	fsr2h,c
 28541  0034D2  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 28542                           
 28543                           ;../phy/sx1216/phy_src/phy.c: 751:         fhssReg[i][1] = (num >> 8);
 28544  0034D8  502F               	movf	computeFRF@i^0,w,c
 28545  0034DA  0D03               	mullw	3
 28546  0034DC  0E01               	movlw	low (_fhssReg+1)
 28547  0034DE  24F3               	addwf	243,w,c
 28548  0034E0  6ED9               	movwf	fsr2l,c
 28549  0034E2  0E05               	movlw	high (_fhssReg+1)
 28550  0034E4  20F4               	addwfc	prodh,w,c
 28551  0034E6  6EDA               	movwf	fsr2h,c
 28552  0034E8  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 28553                           
 28554                           ;../phy/sx1216/phy_src/phy.c: 752:         fhssReg[i][2] = (num);
 28555  0034EE  502F               	movf	computeFRF@i^0,w,c
 28556  0034F0  0D03               	mullw	3
 28557  0034F2  0E02               	movlw	low (_fhssReg+2)
 28558  0034F4  24F3               	addwf	243,w,c
 28559  0034F6  6ED9               	movwf	fsr2l,c
 28560  0034F8  0E05               	movlw	high (_fhssReg+2)
 28561  0034FA  20F4               	addwfc	prodh,w,c
 28562  0034FC  6EDA               	movwf	fsr2h,c
 28563  0034FE  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 28564                           
 28565                           ;../phy/sx1216/phy_src/phy.c: 753:     }
 28566  003504  2A2F               	incf	computeFRF@i^0,f,c
 28567  003506  0E3E               	movlw	62
 28568  003508  642F               	cpfsgt	computeFRF@i^0,c
 28569  00350A  D73E               	goto	l10388
 28570  00350C  0012               	return	
 28571  00350E                     __end_of_computeFRF:
 28572                           	opt callstack 0
 28573                           
 28574 ;; *************** function ___llmod *****************
 28575 ;; Defined at:
 28576 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 28577 ;; Parameters:    Size  Location     Type
 28578 ;;  dividend        4    1[COMRAM] unsigned long 
 28579 ;;  divisor         4    5[COMRAM] unsigned long 
 28580 ;; Auto vars:     Size  Location     Type
 28581 ;;  counter         1    9[COMRAM] unsigned char 
 28582 ;; Return value:  Size  Location     Type
 28583 ;;                  4    1[COMRAM] unsigned long 
 28584 ;; Registers used:
 28585 ;;		wreg, status,2, status,0
 28586 ;; Tracked objects:
 28587 ;;		On entry : 0/0
 28588 ;;		On exit  : 0/0
 28589 ;;		Unchanged: 0/0
 28590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28594 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28595 ;;Total ram usage:        9 bytes
 28596 ;; Hardware stack levels used:    1
 28597 ;; Hardware stack levels required when called:    7
 28598 ;; This function calls:
 28599 ;;		Nothing
 28600 ;; This function is called by:
 28601 ;;		_setFrequency
 28602 ;;		_computeFRF
 28603 ;; This function uses a non-reentrant model
 28604 ;;
 28605                           
 28606                           	psect	text190
 28607  006C12                     __ptext190:
 28608                           	opt callstack 0
 28609  006C12                     ___llmod:
 28610                           	opt callstack 18
 28611                           
 28612                           ;incstack = 0
 28613  006C12  5006               	movf	___llmod@divisor^0,w,c
 28614  006C14  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 28615  006C16  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 28616  006C18  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 28617  006C1A  B4D8               	btfsc	status,2,c
 28618  006C1C  D024               	goto	l3623
 28619  006C1E  0E01               	movlw	1
 28620  006C20  6E0A               	movwf	___llmod@counter^0,c
 28621  006C22  D006               	goto	l9832
 28622  006C24                     l9830:
 28623  006C24  90D8               	bcf	status,0,c
 28624  006C26  3606               	rlcf	___llmod@divisor^0,f,c
 28625  006C28  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 28626  006C2A  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 28627  006C2C  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 28628  006C2E  2A0A               	incf	___llmod@counter^0,f,c
 28629  006C30                     l9832:
 28630  006C30  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 28631  006C32  D7F8               	goto	l9830
 28632  006C34                     u7610:
 28633  006C34  5006               	movf	___llmod@divisor^0,w,c
 28634  006C36  5C02               	subwf	___llmod@dividend^0,w,c
 28635  006C38  5007               	movf	(___llmod@divisor+1)^0,w,c
 28636  006C3A  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 28637  006C3C  5008               	movf	(___llmod@divisor+2)^0,w,c
 28638  006C3E  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 28639  006C40  5009               	movf	(___llmod@divisor+3)^0,w,c
 28640  006C42  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 28641  006C44  A0D8               	btfss	status,0,c
 28642  006C46  D008               	goto	l9838
 28643  006C48  5006               	movf	___llmod@divisor^0,w,c
 28644  006C4A  5E02               	subwf	___llmod@dividend^0,f,c
 28645  006C4C  5007               	movf	(___llmod@divisor+1)^0,w,c
 28646  006C4E  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 28647  006C50  5008               	movf	(___llmod@divisor+2)^0,w,c
 28648  006C52  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 28649  006C54  5009               	movf	(___llmod@divisor+3)^0,w,c
 28650  006C56  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 28651  006C58                     l9838:
 28652  006C58  90D8               	bcf	status,0,c
 28653  006C5A  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 28654  006C5C  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 28655  006C5E  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 28656  006C60  3206               	rrcf	___llmod@divisor^0,f,c
 28657  006C62  2E0A               	decfsz	___llmod@counter^0,f,c
 28658  006C64  D7E7               	goto	u7610
 28659  006C66                     l3623:
 28660  006C66  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 28661  006C6C  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 28662  006C72  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 28663  006C78  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 28664  006C7E  0012               	return		;funcret
 28665  006C80                     __end_of___llmod:
 28666                           	opt callstack 0
 28667                           
 28668 ;; *************** function ___lldiv *****************
 28669 ;; Defined at:
 28670 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 28671 ;; Parameters:    Size  Location     Type
 28672 ;;  dividend        4   21[COMRAM] unsigned long 
 28673 ;;  divisor         4   25[COMRAM] unsigned long 
 28674 ;; Auto vars:     Size  Location     Type
 28675 ;;  quotient        4   29[COMRAM] unsigned long 
 28676 ;;  counter         1   33[COMRAM] unsigned char 
 28677 ;; Return value:  Size  Location     Type
 28678 ;;                  4   21[COMRAM] unsigned long 
 28679 ;; Registers used:
 28680 ;;		wreg, status,2, status,0
 28681 ;; Tracked objects:
 28682 ;;		On entry : 0/3D
 28683 ;;		On exit  : 0/0
 28684 ;;		Unchanged: 0/0
 28685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28686 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28687 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28689 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28690 ;;Total ram usage:       13 bytes
 28691 ;; Hardware stack levels used:    1
 28692 ;; Hardware stack levels required when called:    7
 28693 ;; This function calls:
 28694 ;;		Nothing
 28695 ;; This function is called by:
 28696 ;;		_setFrequency
 28697 ;;		_setSpreadingFactor
 28698 ;;		_setSignalBandwidth
 28699 ;;		_computeFRF
 28700 ;; This function uses a non-reentrant model
 28701 ;;
 28702                           
 28703                           	psect	text191
 28704  006786                     __ptext191:
 28705                           	opt callstack 0
 28706  006786                     ___lldiv:
 28707                           	opt callstack 18
 28708                           
 28709                           ;incstack = 0
 28710  006786  0E00               	movlw	0
 28711  006788  6E1E               	movwf	___lldiv@quotient^0,c
 28712  00678A  0E00               	movlw	0
 28713  00678C  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 28714  00678E  0E00               	movlw	0
 28715  006790  6E20               	movwf	(___lldiv@quotient+2)^0,c
 28716  006792  0E00               	movlw	0
 28717  006794  6E21               	movwf	(___lldiv@quotient+3)^0,c
 28718  006796  501A               	movf	___lldiv@divisor^0,w,c
 28719  006798  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 28720  00679A  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 28721  00679C  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 28722  00679E  B4D8               	btfsc	status,2,c
 28723  0067A0  D02A               	goto	l3230
 28724  0067A2  0E01               	movlw	1
 28725  0067A4  6E22               	movwf	___lldiv@counter^0,c
 28726  0067A6  D006               	goto	l9790
 28727  0067A8                     l9788:
 28728  0067A8  90D8               	bcf	status,0,c
 28729  0067AA  361A               	rlcf	___lldiv@divisor^0,f,c
 28730  0067AC  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 28731  0067AE  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 28732  0067B0  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 28733  0067B2  2A22               	incf	___lldiv@counter^0,f,c
 28734  0067B4                     l9790:
 28735  0067B4  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 28736  0067B6  D7F8               	goto	l9788
 28737  0067B8                     u7530:
 28738  0067B8  90D8               	bcf	status,0,c
 28739  0067BA  361E               	rlcf	___lldiv@quotient^0,f,c
 28740  0067BC  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 28741  0067BE  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 28742  0067C0  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 28743  0067C2  501A               	movf	___lldiv@divisor^0,w,c
 28744  0067C4  5C16               	subwf	___lldiv@dividend^0,w,c
 28745  0067C6  501B               	movf	(___lldiv@divisor+1)^0,w,c
 28746  0067C8  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 28747  0067CA  501C               	movf	(___lldiv@divisor+2)^0,w,c
 28748  0067CC  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 28749  0067CE  501D               	movf	(___lldiv@divisor+3)^0,w,c
 28750  0067D0  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 28751  0067D2  A0D8               	btfss	status,0,c
 28752  0067D4  D009               	goto	l9800
 28753  0067D6  501A               	movf	___lldiv@divisor^0,w,c
 28754  0067D8  5E16               	subwf	___lldiv@dividend^0,f,c
 28755  0067DA  501B               	movf	(___lldiv@divisor+1)^0,w,c
 28756  0067DC  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 28757  0067DE  501C               	movf	(___lldiv@divisor+2)^0,w,c
 28758  0067E0  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 28759  0067E2  501D               	movf	(___lldiv@divisor+3)^0,w,c
 28760  0067E4  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 28761  0067E6  801E               	bsf	___lldiv@quotient^0,0,c
 28762  0067E8                     l9800:
 28763  0067E8  90D8               	bcf	status,0,c
 28764  0067EA  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 28765  0067EC  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 28766  0067EE  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 28767  0067F0  321A               	rrcf	___lldiv@divisor^0,f,c
 28768  0067F2  2E22               	decfsz	___lldiv@counter^0,f,c
 28769  0067F4  D7E1               	goto	u7530
 28770  0067F6                     l3230:
 28771  0067F6  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 28772  0067FC  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 28773  006802  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 28774  006808  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 28775  00680E  0012               	return		;funcret
 28776  006810                     __end_of___lldiv:
 28777                           	opt callstack 0
 28778                           
 28779 ;; *************** function _NWK_Init *****************
 28780 ;; Defined at:
 28781 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 28782 ;; Parameters:    Size  Location     Type
 28783 ;;		None
 28784 ;; Auto vars:     Size  Location     Type
 28785 ;;  i               1    5[COMRAM] unsigned char 
 28786 ;; Return value:  Size  Location     Type
 28787 ;;                  1    wreg      void 
 28788 ;; Registers used:
 28789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28790 ;; Tracked objects:
 28791 ;;		On entry : 3F/1
 28792 ;;		On exit  : 3F/2
 28793 ;;		Unchanged: 0/0
 28794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28799 ;;Total ram usage:        1 bytes
 28800 ;; Hardware stack levels used:    1
 28801 ;; Hardware stack levels required when called:    9
 28802 ;; This function calls:
 28803 ;;		_nwkDataReqInit
 28804 ;;		_nwkFrameInit
 28805 ;;		_nwkGroupInit
 28806 ;;		_nwkRouteInit
 28807 ;;		_nwkRxInit
 28808 ;;		_nwkTxInit
 28809 ;; This function is called by:
 28810 ;;		_SYS_Init
 28811 ;; This function uses a non-reentrant model
 28812 ;;
 28813                           
 28814                           	psect	text192
 28815  0072A6                     __ptext192:
 28816                           	opt callstack 0
 28817  0072A6                     _NWK_Init:
 28818                           	opt callstack 20
 28819                           
 28820                           ; BSR set to: 1
 28821                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 28822                           
 28823                           ;incstack = 0
 28824  0072A6  0E00               	movlw	0
 28825  0072A8  6F04               	movwf	(_nwkIb+4)& (0+255),b
 28826                           
 28827                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 28828  0072AA  0E00               	movlw	0
 28829  0072AC  6F05               	movwf	(_nwkIb+5)& (0+255),b
 28830                           
 28831                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 28832  0072AE  0E00               	movlw	0
 28833  0072B0  6F01               	movwf	(_nwkIb+1)& (0+255),b
 28834  0072B2  0E00               	movlw	0
 28835  0072B4  6F00               	movwf	_nwkIb& (0+255),b
 28836                           
 28837                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 28838  0072B6  0E00               	movlw	0
 28839  0072B8  6F27               	movwf	(_nwkIb+39)& (0+255),b
 28840  0072BA  0E00               	movlw	0
 28841  0072BC  6F26               	movwf	(_nwkIb+38)& (0+255),b
 28842                           
 28843                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 28844  0072BE  0E00               	movlw	0
 28845  0072C0  6E06               	movwf	NWK_Init@i^0,c
 28846  0072C2                     l15890:
 28847                           
 28848                           ; BSR set to: 1
 28849                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 28850  0072C2  5006               	movf	NWK_Init@i^0,w,c
 28851  0072C4  0D02               	mullw	2
 28852  0072C6  0E06               	movlw	low (_nwkIb+6)
 28853  0072C8  24F3               	addwf	243,w,c
 28854  0072CA  6ED9               	movwf	fsr2l,c
 28855  0072CC  0E01               	movlw	high (_nwkIb+6)
 28856  0072CE  20F4               	addwfc	prodh,w,c
 28857  0072D0  6EDA               	movwf	fsr2h,c
 28858  0072D2  0E00               	movlw	0
 28859  0072D4  6EDE               	movwf	postinc2,c
 28860  0072D6  0E00               	movlw	0
 28861  0072D8  6EDD               	movwf	postdec2,c
 28862                           
 28863                           ; BSR set to: 1
 28864  0072DA  2A06               	incf	NWK_Init@i^0,f,c
 28865                           
 28866                           ; BSR set to: 1
 28867  0072DC  0E0F               	movlw	15
 28868  0072DE  6406               	cpfsgt	NWK_Init@i^0,c
 28869  0072E0  D7F0               	goto	l15890
 28870                           
 28871                           ; BSR set to: 1
 28872                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 28873  0072E2  ECD9  F03B         	call	_nwkTxInit	;wreg free
 28874                           
 28875                           ; BSR set to: 1
 28876                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 28877  0072E6  ECC0  F03A         	call	_nwkRxInit	;wreg free
 28878                           
 28879                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 28880  0072EA  EC31  F040         	call	_nwkFrameInit	;wreg free
 28881                           
 28882                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 28883  0072EE  EC62  F042         	call	_nwkDataReqInit	;wreg free
 28884                           
 28885                           ; BSR set to: 0
 28886                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 28887  0072F2  EC73  F03A         	call	_nwkRouteInit	;wreg free
 28888                           
 28889                           ; BSR set to: 2
 28890                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 28891  0072F6  ECB5  F03F         	call	_nwkGroupInit	;wreg free
 28892                           
 28893                           ; BSR set to: 2
 28894  0072FA  0012               	return		;funcret
 28895  0072FC                     __end_of_NWK_Init:
 28896                           	opt callstack 0
 28897                           
 28898 ;; *************** function _nwkTxInit *****************
 28899 ;; Defined at:
 28900 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 28901 ;; Parameters:    Size  Location     Type
 28902 ;;		None
 28903 ;; Auto vars:     Size  Location     Type
 28904 ;;		None
 28905 ;; Return value:  Size  Location     Type
 28906 ;;                  1    wreg      void 
 28907 ;; Registers used:
 28908 ;;		wreg, status,2, status,0
 28909 ;; Tracked objects:
 28910 ;;		On entry : 3F/1
 28911 ;;		On exit  : 3F/1
 28912 ;;		Unchanged: 0/0
 28913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28918 ;;Total ram usage:        0 bytes
 28919 ;; Hardware stack levels used:    1
 28920 ;; Hardware stack levels required when called:    7
 28921 ;; This function calls:
 28922 ;;		Nothing
 28923 ;; This function is called by:
 28924 ;;		_NWK_Init
 28925 ;; This function uses a non-reentrant model
 28926 ;;
 28927                           
 28928                           	psect	text193
 28929  0077B2                     __ptext193:
 28930                           	opt callstack 0
 28931  0077B2                     _nwkTxInit:
 28932                           	opt callstack 21
 28933                           
 28934                           ; BSR set to: 1
 28935                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 28936                           
 28937                           ; BSR set to: 2
 28938                           ;incstack = 0
 28939  0077B2  0E00               	movlw	0
 28940  0077B4  6F5B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 28941  0077B6  0E00               	movlw	0
 28942  0077B8  6F5C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 28943                           
 28944                           ; BSR set to: 1
 28945                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 28946  0077BA  0EC8               	movlw	200
 28947  0077BC  6FA8               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 28948  0077BE  0E00               	movlw	0
 28949  0077C0  6FA9               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 28950  0077C2  0E00               	movlw	0
 28951  0077C4  6FAA               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 28952  0077C6  0E00               	movlw	0
 28953  0077C8  6FAB               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 28954                           
 28955                           ; BSR set to: 1
 28956                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 28957  0077CA  0E00               	movlw	0
 28958  0077CC  6FAC               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 28959                           
 28960                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 28961  0077CE  0E56               	movlw	low _nwkTxAckWaitTimerHandler
 28962  0077D0  6FAD               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 28963  0077D2  0E65               	movlw	high _nwkTxAckWaitTimerHandler
 28964  0077D4  6FAE               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 28965                           
 28966                           ; BSR set to: 1
 28967                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 28968  0077D6  0E14               	movlw	20
 28969  0077D8  6F9B               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 28970  0077DA  0E00               	movlw	0
 28971  0077DC  6F9C               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 28972  0077DE  0E00               	movlw	0
 28973  0077E0  6F9D               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 28974  0077E2  0E00               	movlw	0
 28975  0077E4  6F9E               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 28976                           
 28977                           ; BSR set to: 1
 28978                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 28979  0077E6  0E00               	movlw	0
 28980  0077E8  6F9F               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 28981                           
 28982                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 28983  0077EA  0EE6               	movlw	low _nwkTxDelayTimerHandler
 28984  0077EC  6FA0               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 28985  0077EE  0E65               	movlw	high _nwkTxDelayTimerHandler
 28986  0077F0  6FA1               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 28987                           
 28988                           ; BSR set to: 1
 28989  0077F2  0012               	return		;funcret
 28990  0077F4                     __end_of_nwkTxInit:
 28991                           	opt callstack 0
 28992                           
 28993 ;; *************** function _nwkRxInit *****************
 28994 ;; Defined at:
 28995 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 28996 ;; Parameters:    Size  Location     Type
 28997 ;;		None
 28998 ;; Auto vars:     Size  Location     Type
 28999 ;;  i               1    4[COMRAM] unsigned char 
 29000 ;; Return value:  Size  Location     Type
 29001 ;;                  1    wreg      void 
 29002 ;; Registers used:
 29003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29004 ;; Tracked objects:
 29005 ;;		On entry : 3F/1
 29006 ;;		On exit  : 0/0
 29007 ;;		Unchanged: 0/0
 29008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29013 ;;Total ram usage:        1 bytes
 29014 ;; Hardware stack levels used:    1
 29015 ;; Hardware stack levels required when called:    8
 29016 ;; This function calls:
 29017 ;;		_NWK_OpenEndpoint
 29018 ;; This function is called by:
 29019 ;;		_NWK_Init
 29020 ;; This function uses a non-reentrant model
 29021 ;;
 29022                           
 29023                           	psect	text194
 29024  007580                     __ptext194:
 29025                           	opt callstack 0
 29026  007580                     _nwkRxInit:
 29027                           	opt callstack 20
 29028                           
 29029                           ; BSR set to: 1
 29030                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 29031                           
 29032                           ; BSR set to: 1
 29033                           ;incstack = 0
 29034  007580  0E00               	movlw	0
 29035  007582  6E05               	movwf	nwkRxInit@i^0,c
 29036  007584                     l15482:
 29037                           
 29038                           ; BSR set to: 1
 29039                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 29040  007584  5005               	movf	nwkRxInit@i^0,w,c
 29041  007586  0D05               	mullw	5
 29042  007588  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 29043  00758A  24F3               	addwf	243,w,c
 29044  00758C  6ED9               	movwf	fsr2l,c
 29045  00758E  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 29046  007590  20F4               	addwfc	prodh,w,c
 29047  007592  6EDA               	movwf	fsr2h,c
 29048  007594  0E00               	movlw	0
 29049  007596  6EDF               	movwf	indf2,c
 29050                           
 29051                           ; BSR set to: 1
 29052  007598  2A05               	incf	nwkRxInit@i^0,f,c
 29053                           
 29054                           ; BSR set to: 1
 29055  00759A  0E09               	movlw	9
 29056  00759C  6405               	cpfsgt	nwkRxInit@i^0,c
 29057  00759E  D7F2               	goto	l15482
 29058                           
 29059                           ; BSR set to: 1
 29060                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 29061  0075A0  0E88               	movlw	136
 29062  0075A2  6FB5               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 29063  0075A4  0E13               	movlw	19
 29064  0075A6  6FB6               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 29065  0075A8  0E00               	movlw	0
 29066  0075AA  6FB7               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 29067  0075AC  0E00               	movlw	0
 29068  0075AE  6FB8               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 29069                           
 29070                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 29071  0075B0  0E00               	movlw	0
 29072  0075B2  6FB9               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 29073                           
 29074                           ; BSR set to: 1
 29075                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 29076  0075B4  0E50               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 29077  0075B6  6FBA               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 29078  0075B8  0E73               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 29079  0075BA  6FBB               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 29080                           
 29081                           ; BSR set to: 1
 29082                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 29083  0075BC  0EEC               	movlw	low _nwkRxServiceDataInd
 29084  0075BE  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 29085  0075C0  0E6C               	movlw	high _nwkRxServiceDataInd
 29086  0075C2  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 29087  0075C4  0E00               	movlw	0
 29088  0075C6  EC85  F040         	call	_NWK_OpenEndpoint
 29089  0075CA  0012               	return		;funcret
 29090  0075CC                     __end_of_nwkRxInit:
 29091                           	opt callstack 0
 29092                           
 29093 ;; *************** function _NWK_OpenEndpoint *****************
 29094 ;; Defined at:
 29095 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 29096 ;; Parameters:    Size  Location     Type
 29097 ;;  id              1    wreg     unsigned char 
 29098 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 29099 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 29100 ;; Auto vars:     Size  Location     Type
 29101 ;;  id              1    3[COMRAM] unsigned char 
 29102 ;; Return value:  Size  Location     Type
 29103 ;;                  1    wreg      void 
 29104 ;; Registers used:
 29105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29106 ;; Tracked objects:
 29107 ;;		On entry : 3/3D
 29108 ;;		On exit  : 0/0
 29109 ;;		Unchanged: 0/0
 29110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29114 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29115 ;;Total ram usage:        3 bytes
 29116 ;; Hardware stack levels used:    1
 29117 ;; Hardware stack levels required when called:    7
 29118 ;; This function calls:
 29119 ;;		Nothing
 29120 ;; This function is called by:
 29121 ;;		_bootLoadApplication
 29122 ;;		_nwkRxInit
 29123 ;; This function uses a non-reentrant model
 29124 ;;
 29125                           
 29126                           	psect	text195
 29127  00810A                     __ptext195:
 29128                           	opt callstack 0
 29129  00810A                     _NWK_OpenEndpoint:
 29130                           	opt callstack 22
 29131                           
 29132                           ;incstack = 0
 29133                           ;NWK_OpenEndpoint@id stored from wreg
 29134  00810A  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 29135                           
 29136                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 29137  00810C  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 29138  00810E  0D02               	mullw	2
 29139  008110  0E06               	movlw	low (_nwkIb+6)
 29140  008112  24F3               	addwf	243,w,c
 29141  008114  6ED9               	movwf	fsr2l,c
 29142  008116  0E01               	movlw	high (_nwkIb+6)
 29143  008118  20F4               	addwfc	prodh,w,c
 29144  00811A  6EDA               	movwf	fsr2h,c
 29145  00811C  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 29146  008122  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 29147  008128  0012               	return		;funcret
 29148  00812A                     __end_of_NWK_OpenEndpoint:
 29149                           	opt callstack 0
 29150                           
 29151 ;; *************** function _nwkRouteInit *****************
 29152 ;; Defined at:
 29153 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 29154 ;; Parameters:    Size  Location     Type
 29155 ;;		None
 29156 ;; Auto vars:     Size  Location     Type
 29157 ;;  i               1    1[COMRAM] unsigned char 
 29158 ;; Return value:  Size  Location     Type
 29159 ;;                  1    wreg      void 
 29160 ;; Registers used:
 29161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29162 ;; Tracked objects:
 29163 ;;		On entry : 3F/0
 29164 ;;		On exit  : 3F/2
 29165 ;;		Unchanged: 0/0
 29166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29171 ;;Total ram usage:        1 bytes
 29172 ;; Hardware stack levels used:    1
 29173 ;; Hardware stack levels required when called:    7
 29174 ;; This function calls:
 29175 ;;		Nothing
 29176 ;; This function is called by:
 29177 ;;		_NWK_Init
 29178 ;; This function uses a non-reentrant model
 29179 ;;
 29180                           
 29181                           	psect	text196
 29182  0074E6                     __ptext196:
 29183                           	opt callstack 0
 29184  0074E6                     _nwkRouteInit:
 29185                           	opt callstack 21
 29186                           
 29187                           ; BSR set to: 0
 29188                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 29189                           
 29190                           ;incstack = 0
 29191  0074E6  0E00               	movlw	0
 29192  0074E8  6E02               	movwf	nwkRouteInit@i^0,c
 29193  0074EA                     l11608:
 29194                           
 29195                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 29196  0074EA  5002               	movf	nwkRouteInit@i^0,w,c
 29197  0074EC  0D07               	mullw	7
 29198  0074EE  0E85               	movlw	low (_nwkRouteTable+1)
 29199  0074F0  24F3               	addwf	243,w,c
 29200  0074F2  6ED9               	movwf	fsr2l,c
 29201  0074F4  0E02               	movlw	high (_nwkRouteTable+1)
 29202  0074F6  20F4               	addwfc	prodh,w,c
 29203  0074F8  6EDA               	movwf	fsr2h,c
 29204  0074FA  0EFF               	movlw	255
 29205  0074FC  6EDE               	movwf	postinc2,c
 29206  0074FE  0EFF               	movlw	255
 29207  007500  6EDD               	movwf	postdec2,c
 29208                           
 29209                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 29210  007502  5002               	movf	nwkRouteInit@i^0,w,c
 29211  007504  0D07               	mullw	7
 29212  007506  0E84               	movlw	low _nwkRouteTable
 29213  007508  24F3               	addwf	243,w,c
 29214  00750A  6ED9               	movwf	fsr2l,c
 29215  00750C  0E02               	movlw	high _nwkRouteTable
 29216  00750E  20F4               	addwfc	prodh,w,c
 29217  007510  6EDA               	movwf	fsr2h,c
 29218  007512  0102               	movlb	2	; () banked
 29219  007514  90DF               	bcf	indf2,0,c
 29220                           
 29221                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 29222  007516  5002               	movf	nwkRouteInit@i^0,w,c
 29223  007518  0D07               	mullw	7
 29224  00751A  0E89               	movlw	low (_nwkRouteTable+5)
 29225  00751C  24F3               	addwf	243,w,c
 29226  00751E  6ED9               	movwf	fsr2l,c
 29227  007520  0E02               	movlw	high (_nwkRouteTable+5)
 29228  007522  20F4               	addwfc	prodh,w,c
 29229  007524  6EDA               	movwf	fsr2h,c
 29230  007526  0E00               	movlw	0
 29231  007528  6EDF               	movwf	indf2,c
 29232                           
 29233                           ; BSR set to: 2
 29234                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 29235  00752A  2A02               	incf	nwkRouteInit@i^0,f,c
 29236                           
 29237                           ; BSR set to: 2
 29238  00752C  0E09               	movlw	9
 29239  00752E  6402               	cpfsgt	nwkRouteInit@i^0,c
 29240  007530  D7DC               	goto	l11608
 29241  007532  0012               	return	
 29242  007534                     __end_of_nwkRouteInit:
 29243                           	opt callstack 0
 29244                           
 29245 ;; *************** function _nwkGroupInit *****************
 29246 ;; Defined at:
 29247 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 29248 ;; Parameters:    Size  Location     Type
 29249 ;;		None
 29250 ;; Auto vars:     Size  Location     Type
 29251 ;;  i               1    1[COMRAM] unsigned char 
 29252 ;; Return value:  Size  Location     Type
 29253 ;;                  1    wreg      void 
 29254 ;; Registers used:
 29255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29256 ;; Tracked objects:
 29257 ;;		On entry : 3F/2
 29258 ;;		On exit  : 3F/2
 29259 ;;		Unchanged: 3F/0
 29260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29265 ;;Total ram usage:        1 bytes
 29266 ;; Hardware stack levels used:    1
 29267 ;; Hardware stack levels required when called:    7
 29268 ;; This function calls:
 29269 ;;		Nothing
 29270 ;; This function is called by:
 29271 ;;		_NWK_Init
 29272 ;; This function uses a non-reentrant model
 29273 ;;
 29274                           
 29275                           	psect	text197
 29276  007F6A                     __ptext197:
 29277                           	opt callstack 0
 29278  007F6A                     _nwkGroupInit:
 29279                           	opt callstack 21
 29280                           
 29281                           ; BSR set to: 2
 29282                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 29283                           
 29284                           ; BSR set to: 2
 29285                           ;incstack = 0
 29286  007F6A  0E00               	movlw	0
 29287  007F6C  6E02               	movwf	nwkGroupInit@i^0,c
 29288  007F6E                     l11620:
 29289                           
 29290                           ; BSR set to: 2
 29291                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 29292  007F6E  5002               	movf	nwkGroupInit@i^0,w,c
 29293  007F70  0D02               	mullw	2
 29294  007F72  0E00               	movlw	low _nwkGroups
 29295  007F74  24F3               	addwf	243,w,c
 29296  007F76  6ED9               	movwf	fsr2l,c
 29297  007F78  0E02               	movlw	high _nwkGroups
 29298  007F7A  20F4               	addwfc	prodh,w,c
 29299  007F7C  6EDA               	movwf	fsr2h,c
 29300  007F7E  0EFF               	movlw	255
 29301  007F80  6EDE               	movwf	postinc2,c
 29302  007F82  0EFF               	movlw	255
 29303  007F84  6EDD               	movwf	postdec2,c
 29304                           
 29305                           ; BSR set to: 2
 29306  007F86  2A02               	incf	nwkGroupInit@i^0,f,c
 29307                           
 29308                           ; BSR set to: 2
 29309  007F88  0E09               	movlw	9
 29310  007F8A  6402               	cpfsgt	nwkGroupInit@i^0,c
 29311  007F8C  D7F0               	goto	l11620
 29312  007F8E  0012               	return	
 29313  007F90                     __end_of_nwkGroupInit:
 29314                           	opt callstack 0
 29315                           
 29316 ;; *************** function _nwkFrameInit *****************
 29317 ;; Defined at:
 29318 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 29319 ;; Parameters:    Size  Location     Type
 29320 ;;		None
 29321 ;; Auto vars:     Size  Location     Type
 29322 ;;  i               1    1[COMRAM] unsigned char 
 29323 ;; Return value:  Size  Location     Type
 29324 ;;                  1    wreg      void 
 29325 ;; Registers used:
 29326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29327 ;; Tracked objects:
 29328 ;;		On entry : 0/1
 29329 ;;		On exit  : 0/0
 29330 ;;		Unchanged: 0/0
 29331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29336 ;;Total ram usage:        1 bytes
 29337 ;; Hardware stack levels used:    1
 29338 ;; Hardware stack levels required when called:    7
 29339 ;; This function calls:
 29340 ;;		Nothing
 29341 ;; This function is called by:
 29342 ;;		_NWK_Init
 29343 ;; This function uses a non-reentrant model
 29344 ;;
 29345                           
 29346                           	psect	text198
 29347  008062                     __ptext198:
 29348                           	opt callstack 0
 29349  008062                     _nwkFrameInit:
 29350                           	opt callstack 21
 29351                           
 29352                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 29353                           
 29354                           ; BSR set to: 2
 29355                           ;incstack = 0
 29356  008062  0E00               	movlw	0
 29357  008064  6E02               	movwf	nwkFrameInit@i^0,c
 29358  008066                     l11594:
 29359                           
 29360                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 29361  008066  5002               	movf	nwkFrameInit@i^0,w,c
 29362  008068  0D89               	mullw	137
 29363  00806A  0EBD               	movlw	low _nwkFrameFrames
 29364  00806C  24F3               	addwf	243,w,c
 29365  00806E  6ED9               	movwf	fsr2l,c
 29366  008070  0E05               	movlw	high _nwkFrameFrames
 29367  008072  20F4               	addwfc	prodh,w,c
 29368  008074  6EDA               	movwf	fsr2h,c
 29369  008076  0E00               	movlw	0
 29370  008078  6EDF               	movwf	indf2,c
 29371  00807A  2A02               	incf	nwkFrameInit@i^0,f,c
 29372  00807C  0E04               	movlw	4
 29373  00807E  6402               	cpfsgt	nwkFrameInit@i^0,c
 29374  008080  D7F2               	goto	l11594
 29375  008082  0012               	return	
 29376  008084                     __end_of_nwkFrameInit:
 29377                           	opt callstack 0
 29378                           
 29379 ;; *************** function _nwkDataReqInit *****************
 29380 ;; Defined at:
 29381 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 29382 ;; Parameters:    Size  Location     Type
 29383 ;;		None
 29384 ;; Auto vars:     Size  Location     Type
 29385 ;;		None
 29386 ;; Return value:  Size  Location     Type
 29387 ;;                  1    wreg      void 
 29388 ;; Registers used:
 29389 ;;		wreg, status,2, status,0
 29390 ;; Tracked objects:
 29391 ;;		On entry : 0/1
 29392 ;;		On exit  : 3F/0
 29393 ;;		Unchanged: 0/0
 29394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29399 ;;Total ram usage:        0 bytes
 29400 ;; Hardware stack levels used:    1
 29401 ;; Hardware stack levels required when called:    7
 29402 ;; This function calls:
 29403 ;;		Nothing
 29404 ;; This function is called by:
 29405 ;;		_NWK_Init
 29406 ;; This function uses a non-reentrant model
 29407 ;;
 29408                           
 29409                           	psect	text199
 29410  0084C4                     __ptext199:
 29411                           	opt callstack 0
 29412  0084C4                     _nwkDataReqInit:
 29413                           	opt callstack 21
 29414                           
 29415                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 29416                           
 29417                           ;incstack = 0
 29418  0084C4  0E00               	movlw	0
 29419  0084C6  0100               	movlb	0	; () banked
 29420  0084C8  6FE2               	movwf	_nwkDataReqQueue& (0+255),b
 29421  0084CA  0E00               	movlw	0
 29422  0084CC  6FE3               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 29423                           
 29424                           ; BSR set to: 0
 29425  0084CE  0012               	return		;funcret
 29426  0084D0                     __end_of_nwkDataReqInit:
 29427                           	opt callstack 0
 29428                           
 29429 ;; *************** function _SYSTEM_Initialize *****************
 29430 ;; Defined at:
 29431 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29432 ;; Parameters:    Size  Location     Type
 29433 ;;		None
 29434 ;; Auto vars:     Size  Location     Type
 29435 ;;		None
 29436 ;; Return value:  Size  Location     Type
 29437 ;;                  1    wreg      void 
 29438 ;; Registers used:
 29439 ;;		wreg, status,2, status,0, cstack
 29440 ;; Tracked objects:
 29441 ;;		On entry : 0/0
 29442 ;;		On exit  : 3F/3D
 29443 ;;		Unchanged: 0/0
 29444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29449 ;;Total ram usage:        0 bytes
 29450 ;; Hardware stack levels used:    1
 29451 ;; Hardware stack levels required when called:    9
 29452 ;; This function calls:
 29453 ;;		_CRC_Initialize
 29454 ;;		_INTERRUPT_Initialize
 29455 ;;		_OSCILLATOR_Initialize
 29456 ;;		_PIN_MANAGER_Initialize
 29457 ;;		_PMD_Initialize
 29458 ;;		_SPI1_Initialize
 29459 ;;		_TMR0_Initialize
 29460 ;;		_UART1_Initialize
 29461 ;; This function is called by:
 29462 ;;		_main
 29463 ;; This function uses a non-reentrant model
 29464 ;;
 29465                           
 29466                           	psect	text200
 29467  008084                     __ptext200:
 29468                           	opt callstack 0
 29469  008084                     _SYSTEM_Initialize:
 29470                           	opt callstack 21
 29471                           
 29472                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29473                           
 29474                           ; BSR set to: 0
 29475                           ;incstack = 0
 29476  008084  EC3A  F03C         	call	_INTERRUPT_Initialize	;wreg free
 29477                           
 29478                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29479  008088  EC53  F040         	call	_PMD_Initialize	;wreg free
 29480                           
 29481                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29482  00808C  EC08  F034         	call	_PIN_MANAGER_Initialize	;wreg free
 29483                           
 29484                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29485  008090  EC76  F041         	call	_OSCILLATOR_Initialize	;wreg free
 29486                           
 29487                           ; BSR set to: 57
 29488                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 29489  008094  ECE2  F036         	call	_CRC_Initialize	;wreg free
 29490                           
 29491                           ; BSR set to: 1
 29492                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 29493  008098  ECF5  F03C         	call	_TMR0_Initialize	;wreg free
 29494                           
 29495                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 29496  00809C  EC82  F030         	call	_UART1_Initialize	;wreg free
 29497                           
 29498                           ; BSR set to: 57
 29499                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 29500  0080A0  EC51  F041         	call	_SPI1_Initialize	;wreg free
 29501                           
 29502                           ; BSR set to: 61
 29503  0080A4  0012               	return		;funcret
 29504  0080A6                     __end_of_SYSTEM_Initialize:
 29505                           	opt callstack 0
 29506                           
 29507 ;; *************** function _UART1_Initialize *****************
 29508 ;; Defined at:
 29509 ;;		line 95 in file "mcc_generated_files/uart1.c"
 29510 ;; Parameters:    Size  Location     Type
 29511 ;;		None
 29512 ;; Auto vars:     Size  Location     Type
 29513 ;;		None
 29514 ;; Return value:  Size  Location     Type
 29515 ;;                  1    wreg      void 
 29516 ;; Registers used:
 29517 ;;		wreg, status,2, status,0, cstack
 29518 ;; Tracked objects:
 29519 ;;		On entry : 3B/39
 29520 ;;		On exit  : 3F/39
 29521 ;;		Unchanged: 0/0
 29522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29527 ;;Total ram usage:        0 bytes
 29528 ;; Hardware stack levels used:    1
 29529 ;; Hardware stack levels required when called:    8
 29530 ;; This function calls:
 29531 ;;		_UART1_SetErrorHandler
 29532 ;;		_UART1_SetFramingErrorHandler
 29533 ;;		_UART1_SetOverrunErrorHandler
 29534 ;;		_UART1_SetRxInterruptHandler
 29535 ;;		_UART1_SetTxInterruptHandler
 29536 ;; This function is called by:
 29537 ;;		_SYSTEM_Initialize
 29538 ;; This function uses a non-reentrant model
 29539 ;;
 29540                           
 29541                           	psect	text201
 29542  006104                     __ptext201:
 29543                           	opt callstack 0
 29544  006104                     _UART1_Initialize:
 29545                           	opt callstack 21
 29546                           
 29547                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 29548                           
 29549                           ; BSR set to: 61
 29550                           ;incstack = 0
 29551  006104  0139               	movlb	57	; () banked
 29552  006106  9793               	bcf	147,3,b	;volatile
 29553                           
 29554                           ; BSR set to: 57
 29555                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29556  006108  0E2C               	movlw	low _UART1_Receive_ISR
 29557  00610A  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 29558  00610C  0E64               	movlw	high _UART1_Receive_ISR
 29559  00610E  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 29560  006110  EC33  F042         	call	_UART1_SetRxInterruptHandler	;wreg free
 29561                           
 29562                           ; BSR set to: 57
 29563                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 29564  006114  9993               	bcf	147,4,b	;volatile
 29565                           
 29566                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 29567  006116  0E88               	movlw	low _UART1_Transmit_ISR
 29568  006118  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 29569  00611A  0E7B               	movlw	high _UART1_Transmit_ISR
 29570  00611C  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 29571  00611E  EC2C  F042         	call	_UART1_SetTxInterruptHandler	;wreg free
 29572                           
 29573                           ; BSR set to: 57
 29574                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 29575  006122  0E00               	movlw	0
 29576  006124  013D               	movlb	61	; () banked
 29577  006126  6FEC               	movwf	236,b	;volatile
 29578                           
 29579                           ; BSR set to: 61
 29580                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 29581  006128  0E00               	movlw	0
 29582  00612A  6FED               	movwf	237,b	;volatile
 29583                           
 29584                           ; BSR set to: 61
 29585                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 29586  00612C  0E00               	movlw	0
 29587  00612E  6FEE               	movwf	238,b	;volatile
 29588                           
 29589                           ; BSR set to: 61
 29590                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 29591  006130  0E00               	movlw	0
 29592  006132  6FEF               	movwf	239,b	;volatile
 29593                           
 29594                           ; BSR set to: 61
 29595                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 29596  006134  0E00               	movlw	0
 29597  006136  6FF0               	movwf	240,b	;volatile
 29598                           
 29599                           ; BSR set to: 61
 29600                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 29601  006138  0E00               	movlw	0
 29602  00613A  6FF1               	movwf	241,b	;volatile
 29603                           
 29604                           ; BSR set to: 61
 29605                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 29606  00613C  0EB3               	movlw	179
 29607  00613E  6FF2               	movwf	242,b	;volatile
 29608                           
 29609                           ; BSR set to: 61
 29610                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 29611  006140  0E00               	movlw	0
 29612  006142  6FF3               	movwf	243,b	;volatile
 29613                           
 29614                           ; BSR set to: 61
 29615                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 29616  006144  0E82               	movlw	130
 29617  006146  6FF4               	movwf	244,b	;volatile
 29618                           
 29619                           ; BSR set to: 61
 29620                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 29621  006148  0E40               	movlw	64
 29622  00614A  6FF5               	movwf	245,b	;volatile
 29623                           
 29624                           ; BSR set to: 61
 29625                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 29626  00614C  0E03               	movlw	3
 29627  00614E  6FF6               	movwf	246,b	;volatile
 29628                           
 29629                           ; BSR set to: 61
 29630                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 29631  006150  0E00               	movlw	0
 29632  006152  6FF7               	movwf	247,b	;volatile
 29633                           
 29634                           ; BSR set to: 61
 29635                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 29636  006154  0E00               	movlw	0
 29637  006156  6FF8               	movwf	248,b	;volatile
 29638                           
 29639                           ; BSR set to: 61
 29640                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 29641  006158  0E00               	movlw	0
 29642  00615A  6FF9               	movwf	249,b	;volatile
 29643                           
 29644                           ; BSR set to: 61
 29645                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 29646  00615C  0E00               	movlw	0
 29647  00615E  6FFA               	movwf	250,b	;volatile
 29648                           
 29649                           ; BSR set to: 61
 29650                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 29651  006160  0E24               	movlw	low _UART1_DefaultFramingErrorHandler
 29652  006162  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 29653  006164  0E85               	movlw	high _UART1_DefaultFramingErrorHandler
 29654  006166  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 29655  006168  EC41  F042         	call	_UART1_SetFramingErrorHandler	;wreg free
 29656                           
 29657                           ; BSR set to: 61
 29658                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 29659  00616C  0E22               	movlw	low _UART1_DefaultOverrunErrorHandler
 29660  00616E  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 29661  006170  0E85               	movlw	high _UART1_DefaultOverrunErrorHandler
 29662  006172  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 29663  006174  EC3A  F042         	call	_UART1_SetOverrunErrorHandler	;wreg free
 29664                           
 29665                           ; BSR set to: 61
 29666                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 29667  006178  0E04               	movlw	low _UART1_DefaultErrorHandler
 29668  00617A  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 29669  00617C  0E85               	movlw	high _UART1_DefaultErrorHandler
 29670  00617E  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 29671  006180  EC48  F042         	call	_UART1_SetErrorHandler	;wreg free
 29672                           
 29673                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 29674  006184  0E00               	movlw	0
 29675  006186  0101               	movlb	1	; () banked
 29676  006188  6F62               	movwf	_uart1RxLastError& (0+255),b	;volatile
 29677                           
 29678                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 29679  00618A  0E00               	movlw	0
 29680  00618C  0100               	movlb	0	; () banked
 29681  00618E  6FE9               	movwf	_uart1TxHead& (0+255),b	;volatile
 29682                           
 29683                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 29684  006190  0E00               	movlw	0
 29685  006192  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 29686                           
 29687                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 29688  006194  0E40               	movlw	64
 29689  006196  0101               	movlb	1	; () banked
 29690  006198  6FED               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 29691                           
 29692                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 29693  00619A  0E00               	movlw	0
 29694  00619C  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 29695                           
 29696                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 29697  00619E  0E00               	movlw	0
 29698  0061A0  0100               	movlb	0	; () banked
 29699  0061A2  6FE7               	movwf	_uart1RxTail& (0+255),b	;volatile
 29700                           
 29701                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 29702  0061A4  0E00               	movlw	0
 29703  0061A6  6FE6               	movwf	_uart1RxCount& (0+255),b	;volatile
 29704                           
 29705                           ; BSR set to: 0
 29706                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 29707  0061A8  0139               	movlb	57	; () banked
 29708  0061AA  8793               	bsf	147,3,b	;volatile
 29709                           
 29710                           ; BSR set to: 57
 29711  0061AC  0012               	return		;funcret
 29712  0061AE                     __end_of_UART1_Initialize:
 29713                           	opt callstack 0
 29714                           
 29715 ;; *************** function _UART1_SetTxInterruptHandler *****************
 29716 ;; Defined at:
 29717 ;;		line 352 in file "mcc_generated_files/uart1.c"
 29718 ;; Parameters:    Size  Location     Type
 29719 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 29720 ;;		 -> UART1_Transmit_ISR(1), 
 29721 ;; Auto vars:     Size  Location     Type
 29722 ;;		None
 29723 ;; Return value:  Size  Location     Type
 29724 ;;                  1    wreg      void 
 29725 ;; Registers used:
 29726 ;;		wreg, status,2, status,0
 29727 ;; Tracked objects:
 29728 ;;		On entry : 3F/39
 29729 ;;		On exit  : 3F/39
 29730 ;;		Unchanged: 3E/0
 29731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29736 ;;Total ram usage:        2 bytes
 29737 ;; Hardware stack levels used:    1
 29738 ;; Hardware stack levels required when called:    7
 29739 ;; This function calls:
 29740 ;;		Nothing
 29741 ;; This function is called by:
 29742 ;;		_UART1_Initialize
 29743 ;; This function uses a non-reentrant model
 29744 ;;
 29745                           
 29746                           	psect	text202
 29747  008458                     __ptext202:
 29748                           	opt callstack 0
 29749  008458                     _UART1_SetTxInterruptHandler:
 29750                           	opt callstack 21
 29751                           
 29752                           ; BSR set to: 57
 29753                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 29754                           
 29755                           ; BSR set to: 57
 29756                           ;incstack = 0
 29757  008458  0060  F008  F1E9   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 29758  00845E  0060  F00C  F1EA   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 29759                           
 29760                           ; BSR set to: 57
 29761  008464  0012               	return		;funcret
 29762  008466                     __end_of_UART1_SetTxInterruptHandler:
 29763                           	opt callstack 0
 29764                           
 29765 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29766 ;; Defined at:
 29767 ;;		line 348 in file "mcc_generated_files/uart1.c"
 29768 ;; Parameters:    Size  Location     Type
 29769 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 29770 ;;		 -> UART1_Receive_ISR(1), 
 29771 ;; Auto vars:     Size  Location     Type
 29772 ;;		None
 29773 ;; Return value:  Size  Location     Type
 29774 ;;                  1    wreg      void 
 29775 ;; Registers used:
 29776 ;;		wreg, status,2, status,0
 29777 ;; Tracked objects:
 29778 ;;		On entry : 3F/39
 29779 ;;		On exit  : 3F/39
 29780 ;;		Unchanged: 3E/0
 29781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29786 ;;Total ram usage:        2 bytes
 29787 ;; Hardware stack levels used:    1
 29788 ;; Hardware stack levels required when called:    7
 29789 ;; This function calls:
 29790 ;;		Nothing
 29791 ;; This function is called by:
 29792 ;;		_UART1_Initialize
 29793 ;; This function uses a non-reentrant model
 29794 ;;
 29795                           
 29796                           	psect	text203
 29797  008466                     __ptext203:
 29798                           	opt callstack 0
 29799  008466                     _UART1_SetRxInterruptHandler:
 29800                           	opt callstack 21
 29801                           
 29802                           ; BSR set to: 57
 29803                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 29804                           
 29805                           ; BSR set to: 57
 29806                           ;incstack = 0
 29807  008466  0060  F008  F1EB   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 29808  00846C  0060  F00C  F1EC   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 29809                           
 29810                           ; BSR set to: 57
 29811  008472  0012               	return		;funcret
 29812  008474                     __end_of_UART1_SetRxInterruptHandler:
 29813                           	opt callstack 0
 29814                           
 29815 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 29816 ;; Defined at:
 29817 ;;		line 338 in file "mcc_generated_files/uart1.c"
 29818 ;; Parameters:    Size  Location     Type
 29819 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 29820 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 29821 ;; Auto vars:     Size  Location     Type
 29822 ;;		None
 29823 ;; Return value:  Size  Location     Type
 29824 ;;                  1    wreg      void 
 29825 ;; Registers used:
 29826 ;;		wreg, status,2, status,0
 29827 ;; Tracked objects:
 29828 ;;		On entry : 3F/3D
 29829 ;;		On exit  : 3F/3D
 29830 ;;		Unchanged: 3E/0
 29831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29836 ;;Total ram usage:        2 bytes
 29837 ;; Hardware stack levels used:    1
 29838 ;; Hardware stack levels required when called:    7
 29839 ;; This function calls:
 29840 ;;		Nothing
 29841 ;; This function is called by:
 29842 ;;		_UART1_Initialize
 29843 ;; This function uses a non-reentrant model
 29844 ;;
 29845                           
 29846                           	psect	text204
 29847  008474                     __ptext204:
 29848                           	opt callstack 0
 29849  008474                     _UART1_SetOverrunErrorHandler:
 29850                           	opt callstack 21
 29851                           
 29852                           ; BSR set to: 61
 29853                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 29854                           
 29855                           ; BSR set to: 57
 29856                           ;incstack = 0
 29857  008474  0060  F008  F1E1   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 29858  00847A  0060  F00C  F1E2   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 29859                           
 29860                           ; BSR set to: 61
 29861  008480  0012               	return		;funcret
 29862  008482                     __end_of_UART1_SetOverrunErrorHandler:
 29863                           	opt callstack 0
 29864                           
 29865 ;; *************** function _UART1_SetFramingErrorHandler *****************
 29866 ;; Defined at:
 29867 ;;		line 334 in file "mcc_generated_files/uart1.c"
 29868 ;; Parameters:    Size  Location     Type
 29869 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 29870 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 29871 ;; Auto vars:     Size  Location     Type
 29872 ;;		None
 29873 ;; Return value:  Size  Location     Type
 29874 ;;                  1    wreg      void 
 29875 ;; Registers used:
 29876 ;;		wreg, status,2, status,0
 29877 ;; Tracked objects:
 29878 ;;		On entry : 3F/3D
 29879 ;;		On exit  : 3F/3D
 29880 ;;		Unchanged: 3E/0
 29881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29886 ;;Total ram usage:        2 bytes
 29887 ;; Hardware stack levels used:    1
 29888 ;; Hardware stack levels required when called:    7
 29889 ;; This function calls:
 29890 ;;		Nothing
 29891 ;; This function is called by:
 29892 ;;		_UART1_Initialize
 29893 ;; This function uses a non-reentrant model
 29894 ;;
 29895                           
 29896                           	psect	text205
 29897  008482                     __ptext205:
 29898                           	opt callstack 0
 29899  008482                     _UART1_SetFramingErrorHandler:
 29900                           	opt callstack 21
 29901                           
 29902                           ; BSR set to: 61
 29903                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 29904                           
 29905                           ; BSR set to: 61
 29906                           ;incstack = 0
 29907  008482  0060  F008  F1E3   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 29908  008488  0060  F00C  F1E4   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 29909                           
 29910                           ; BSR set to: 61
 29911  00848E  0012               	return		;funcret
 29912  008490                     __end_of_UART1_SetFramingErrorHandler:
 29913                           	opt callstack 0
 29914                           
 29915 ;; *************** function _UART1_SetErrorHandler *****************
 29916 ;; Defined at:
 29917 ;;		line 342 in file "mcc_generated_files/uart1.c"
 29918 ;; Parameters:    Size  Location     Type
 29919 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 29920 ;;		 -> UART1_DefaultErrorHandler(1), 
 29921 ;; Auto vars:     Size  Location     Type
 29922 ;;		None
 29923 ;; Return value:  Size  Location     Type
 29924 ;;                  1    wreg      void 
 29925 ;; Registers used:
 29926 ;;		wreg, status,2, status,0
 29927 ;; Tracked objects:
 29928 ;;		On entry : 3F/3D
 29929 ;;		On exit  : 3F/3D
 29930 ;;		Unchanged: 3E/0
 29931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29936 ;;Total ram usage:        2 bytes
 29937 ;; Hardware stack levels used:    1
 29938 ;; Hardware stack levels required when called:    7
 29939 ;; This function calls:
 29940 ;;		Nothing
 29941 ;; This function is called by:
 29942 ;;		_UART1_Initialize
 29943 ;; This function uses a non-reentrant model
 29944 ;;
 29945                           
 29946                           	psect	text206
 29947  008490                     __ptext206:
 29948                           	opt callstack 0
 29949  008490                     _UART1_SetErrorHandler:
 29950                           	opt callstack 21
 29951                           
 29952                           ; BSR set to: 61
 29953                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 29954                           
 29955                           ; BSR set to: 61
 29956                           ;incstack = 0
 29957  008490  0060  F008  F1DF   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 29958  008496  0060  F00C  F1E0   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 29959                           
 29960                           ; BSR set to: 61
 29961  00849C  0012               	return		;funcret
 29962  00849E                     __end_of_UART1_SetErrorHandler:
 29963                           	opt callstack 0
 29964                           
 29965 ;; *************** function _TMR0_Initialize *****************
 29966 ;; Defined at:
 29967 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 29968 ;; Parameters:    Size  Location     Type
 29969 ;;		None
 29970 ;; Auto vars:     Size  Location     Type
 29971 ;;		None
 29972 ;; Return value:  Size  Location     Type
 29973 ;;                  1    wreg      void 
 29974 ;; Registers used:
 29975 ;;		wreg, status,2, status,0, cstack
 29976 ;; Tracked objects:
 29977 ;;		On entry : 3F/1
 29978 ;;		On exit  : 3B/39
 29979 ;;		Unchanged: 0/0
 29980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29985 ;;Total ram usage:        2 bytes
 29986 ;; Hardware stack levels used:    1
 29987 ;; Hardware stack levels required when called:    8
 29988 ;; This function calls:
 29989 ;;		_TMR0_SetInterruptHandler
 29990 ;; This function is called by:
 29991 ;;		_SYSTEM_Initialize
 29992 ;; This function uses a non-reentrant model
 29993 ;;
 29994                           
 29995                           	psect	text207
 29996  0079EA                     __ptext207:
 29997                           	opt callstack 0
 29998  0079EA                     _TMR0_Initialize:
 29999                           	opt callstack 21
 30000                           
 30001                           ; BSR set to: 1
 30002                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 30003                           
 30004                           ; BSR set to: 61
 30005                           ;incstack = 0
 30006  0079EA  0E40               	movlw	64
 30007  0079EC  6EB9               	movwf	185,c	;volatile
 30008                           
 30009                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 30010  0079EE  0EC1               	movlw	193
 30011  0079F0  6EB7               	movwf	183,c	;volatile
 30012                           
 30013                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 30014  0079F2  0E80               	movlw	128
 30015  0079F4  6EB6               	movwf	182,c	;volatile
 30016                           
 30017                           ; BSR set to: 1
 30018                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 30019  0079F6  50B6               	movf	182,w,c	;volatile
 30020  0079F8  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 30021  0079FE  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 30022  007A00  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 30023  007A06  6A04               	clrf	??_TMR0_Initialize^0,c
 30024  007A08  1004               	iorwf	??_TMR0_Initialize^0,w,c
 30025  007A0A  6FE7               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 30026  007A0C  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 30027  007A0E  6FE8               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 30028                           
 30029                           ; BSR set to: 1
 30030                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 30031  007A10  0139               	movlb	57	; () banked
 30032  007A12  9FA3               	bcf	163,7,b	;volatile
 30033                           
 30034                           ; BSR set to: 57
 30035                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 30036  007A14  8F93               	bsf	147,7,b	;volatile
 30037                           
 30038                           ; BSR set to: 57
 30039                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 30040  007A16  0E1C               	movlw	low _TMR0_DefaultInterruptHandler
 30041  007A18  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 30042  007A1A  0E85               	movlw	high _TMR0_DefaultInterruptHandler
 30043  007A1C  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 30044  007A1E  EC4F  F042         	call	_TMR0_SetInterruptHandler	;wreg free
 30045                           
 30046                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 30047  007A22  0E90               	movlw	144
 30048  007A24  6EB8               	movwf	184,c	;volatile
 30049  007A26  0012               	return		;funcret
 30050  007A28                     __end_of_TMR0_Initialize:
 30051                           	opt callstack 0
 30052                           
 30053 ;; *************** function _TMR0_SetInterruptHandler *****************
 30054 ;; Defined at:
 30055 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 30056 ;; Parameters:    Size  Location     Type
 30057 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 30058 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 30059 ;; Auto vars:     Size  Location     Type
 30060 ;;		None
 30061 ;; Return value:  Size  Location     Type
 30062 ;;                  1    wreg      void 
 30063 ;; Registers used:
 30064 ;;		wreg, status,2, status,0
 30065 ;; Tracked objects:
 30066 ;;		On entry : 3B/3D
 30067 ;;		On exit  : 3B/39
 30068 ;;		Unchanged: 3A/0
 30069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30074 ;;Total ram usage:        2 bytes
 30075 ;; Hardware stack levels used:    1
 30076 ;; Hardware stack levels required when called:    7
 30077 ;; This function calls:
 30078 ;;		Nothing
 30079 ;; This function is called by:
 30080 ;;		_TMR0_Initialize
 30081 ;;		_main
 30082 ;; This function uses a non-reentrant model
 30083 ;;
 30084                           
 30085                           	psect	text208
 30086  00849E                     __ptext208:
 30087                           	opt callstack 0
 30088  00849E                     _TMR0_SetInterruptHandler:
 30089                           	opt callstack 23
 30090                           
 30091                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 30092                           
 30093                           ;incstack = 0
 30094  00849E  0060  F008  F1E5   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 30095  0084A4  0060  F00C  F1E6   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 30096  0084AA  0012               	return		;funcret
 30097  0084AC                     __end_of_TMR0_SetInterruptHandler:
 30098                           	opt callstack 0
 30099                           
 30100 ;; *************** function _SPI1_Initialize *****************
 30101 ;; Defined at:
 30102 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30103 ;; Parameters:    Size  Location     Type
 30104 ;;		None
 30105 ;; Auto vars:     Size  Location     Type
 30106 ;;		None
 30107 ;; Return value:  Size  Location     Type
 30108 ;;                  1    wreg      void 
 30109 ;; Registers used:
 30110 ;;		wreg, status,2
 30111 ;; Tracked objects:
 30112 ;;		On entry : 3F/39
 30113 ;;		On exit  : 3F/3D
 30114 ;;		Unchanged: 0/0
 30115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30120 ;;Total ram usage:        0 bytes
 30121 ;; Hardware stack levels used:    1
 30122 ;; Hardware stack levels required when called:    7
 30123 ;; This function calls:
 30124 ;;		Nothing
 30125 ;; This function is called by:
 30126 ;;		_SYSTEM_Initialize
 30127 ;; This function uses a non-reentrant model
 30128 ;;
 30129                           
 30130                           	psect	text209
 30131  0082A2                     __ptext209:
 30132                           	opt callstack 0
 30133  0082A2                     _SPI1_Initialize:
 30134                           	opt callstack 22
 30135                           
 30136                           ; BSR set to: 57
 30137                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 30138                           
 30139                           ;incstack = 0
 30140  0082A2  0E82               	movlw	130
 30141  0082A4  013D               	movlb	61	; () banked
 30142  0082A6  6F14               	movwf	20,b	;volatile
 30143                           
 30144                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 30145  0082A8  0EC0               	movlw	192
 30146  0082AA  6F15               	movwf	21,b	;volatile
 30147                           
 30148                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 30149  0082AC  0E03               	movlw	3
 30150  0082AE  6F16               	movwf	22,b	;volatile
 30151                           
 30152                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 30153  0082B0  0E01               	movlw	1
 30154  0082B2  6F1C               	movwf	28,b	;volatile
 30155                           
 30156                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 30157  0082B4  0E03               	movlw	3
 30158  0082B6  6F19               	movwf	25,b	;volatile
 30159                           
 30160                           ; BSR set to: 61
 30161                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 30162  0082B8  94C3               	bcf	195,2,c	;volatile
 30163                           
 30164                           ; BSR set to: 61
 30165  0082BA  0012               	return		;funcret
 30166  0082BC                     __end_of_SPI1_Initialize:
 30167                           	opt callstack 0
 30168                           
 30169 ;; *************** function _PMD_Initialize *****************
 30170 ;; Defined at:
 30171 ;;		line 76 in file "mcc_generated_files/mcc.c"
 30172 ;; Parameters:    Size  Location     Type
 30173 ;;		None
 30174 ;; Auto vars:     Size  Location     Type
 30175 ;;		None
 30176 ;; Return value:  Size  Location     Type
 30177 ;;                  1    wreg      void 
 30178 ;; Registers used:
 30179 ;;		wreg, status,2
 30180 ;; Tracked objects:
 30181 ;;		On entry : 3F/39
 30182 ;;		On exit  : 3F/39
 30183 ;;		Unchanged: 0/0
 30184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30189 ;;Total ram usage:        0 bytes
 30190 ;; Hardware stack levels used:    1
 30191 ;; Hardware stack levels required when called:    7
 30192 ;; This function calls:
 30193 ;;		Nothing
 30194 ;; This function is called by:
 30195 ;;		_SYSTEM_Initialize
 30196 ;; This function uses a non-reentrant model
 30197 ;;
 30198                           
 30199                           	psect	text210
 30200  0080A6                     __ptext210:
 30201                           	opt callstack 0
 30202  0080A6                     _PMD_Initialize:
 30203                           	opt callstack 22
 30204                           
 30205                           ; BSR set to: 57
 30206                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 30207                           
 30208                           ; BSR set to: 61
 30209                           ;incstack = 0
 30210  0080A6  0E00               	movlw	0
 30211  0080A8  6FC0               	movwf	192,b	;volatile
 30212                           
 30213                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 30214  0080AA  0E00               	movlw	0
 30215  0080AC  6FC1               	movwf	193,b	;volatile
 30216                           
 30217                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 30218  0080AE  0E00               	movlw	0
 30219  0080B0  6FC2               	movwf	194,b	;volatile
 30220                           
 30221                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 30222  0080B2  0E00               	movlw	0
 30223  0080B4  6FC3               	movwf	195,b	;volatile
 30224                           
 30225                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 30226  0080B6  0E00               	movlw	0
 30227  0080B8  6FC4               	movwf	196,b	;volatile
 30228                           
 30229                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 30230  0080BA  0E00               	movlw	0
 30231  0080BC  6FC5               	movwf	197,b	;volatile
 30232                           
 30233                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 30234  0080BE  0E00               	movlw	0
 30235  0080C0  6FC6               	movwf	198,b	;volatile
 30236                           
 30237                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 30238  0080C2  0E00               	movlw	0
 30239  0080C4  6FC7               	movwf	199,b	;volatile
 30240                           
 30241                           ; BSR set to: 57
 30242  0080C6  0012               	return		;funcret
 30243  0080C8                     __end_of_PMD_Initialize:
 30244                           	opt callstack 0
 30245                           
 30246 ;; *************** function _PIN_MANAGER_Initialize *****************
 30247 ;; Defined at:
 30248 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 30249 ;; Parameters:    Size  Location     Type
 30250 ;;		None
 30251 ;; Auto vars:     Size  Location     Type
 30252 ;;		None
 30253 ;; Return value:  Size  Location     Type
 30254 ;;                  1    wreg      void 
 30255 ;; Registers used:
 30256 ;;		wreg, status,2
 30257 ;; Tracked objects:
 30258 ;;		On entry : 3F/39
 30259 ;;		On exit  : 3F/3A
 30260 ;;		Unchanged: 0/0
 30261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30266 ;;Total ram usage:        0 bytes
 30267 ;; Hardware stack levels used:    1
 30268 ;; Hardware stack levels required when called:    7
 30269 ;; This function calls:
 30270 ;;		Nothing
 30271 ;; This function is called by:
 30272 ;;		_SYSTEM_Initialize
 30273 ;; This function uses a non-reentrant model
 30274 ;;
 30275                           
 30276                           	psect	text211
 30277  006810                     __ptext211:
 30278                           	opt callstack 0
 30279  006810                     _PIN_MANAGER_Initialize:
 30280                           	opt callstack 22
 30281                           
 30282                           ; BSR set to: 57
 30283                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 30284                           
 30285                           ; BSR set to: 57
 30286                           ;incstack = 0
 30287  006810  0E08               	movlw	8
 30288  006812  6EBA               	movwf	186,c	;volatile
 30289                           
 30290                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 30291  006814  0E00               	movlw	0
 30292  006816  6EBB               	movwf	187,c	;volatile
 30293                           
 30294                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 30295  006818  0E40               	movlw	64
 30296  00681A  6EBC               	movwf	188,c	;volatile
 30297                           
 30298                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 30299  00681C  0EF7               	movlw	247
 30300  00681E  6EC2               	movwf	194,c	;volatile
 30301                           
 30302                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 30303  006820  0EFE               	movlw	254
 30304  006822  6EC3               	movwf	195,c	;volatile
 30305                           
 30306                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 30307  006824  0E1C               	movlw	28
 30308  006826  6EC4               	movwf	196,c	;volatile
 30309                           
 30310                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 30311  006828  0E29               	movlw	41
 30312  00682A  013A               	movlb	58	; () banked
 30313  00682C  6F60               	movwf	96,b	;volatile
 30314                           
 30315                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 30316  00682E  0ECD               	movlw	205
 30317  006830  6F50               	movwf	80,b	;volatile
 30318                           
 30319                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 30320  006832  0EF2               	movlw	242
 30321  006834  6F40               	movwf	64,b	;volatile
 30322                           
 30323                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 30324  006836  0E00               	movlw	0
 30325  006838  6F81               	movwf	129,b	;volatile
 30326                           
 30327                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 30328  00683A  0E00               	movlw	0
 30329  00683C  6F51               	movwf	81,b	;volatile
 30330                           
 30331                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 30332  00683E  0E00               	movlw	0
 30333  006840  6F41               	movwf	65,b	;volatile
 30334                           
 30335                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 30336  006842  0E08               	movlw	8
 30337  006844  6F61               	movwf	97,b	;volatile
 30338                           
 30339                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 30340  006846  0E00               	movlw	0
 30341  006848  6F5A               	movwf	90,b	;volatile
 30342                           
 30343                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 30344  00684A  0E00               	movlw	0
 30345  00684C  6F5B               	movwf	91,b	;volatile
 30346                           
 30347                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 30348  00684E  0E00               	movlw	0
 30349  006850  6F6A               	movwf	106,b	;volatile
 30350                           
 30351                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 30352  006852  0E00               	movlw	0
 30353  006854  6F6B               	movwf	107,b	;volatile
 30354                           
 30355                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 30356  006856  0E00               	movlw	0
 30357  006858  6F42               	movwf	66,b	;volatile
 30358                           
 30359                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 30360  00685A  0E06               	movlw	6
 30361  00685C  6F52               	movwf	82,b	;volatile
 30362                           
 30363                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 30364  00685E  0E18               	movlw	24
 30365  006860  6F62               	movwf	98,b	;volatile
 30366                           
 30367                           ; BSR set to: 58
 30368                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 30369  006862  6943               	setf	67,b	;volatile
 30370                           
 30371                           ; BSR set to: 58
 30372                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 30373  006864  6953               	setf	83,b	;volatile
 30374                           
 30375                           ; BSR set to: 58
 30376                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 30377  006866  6963               	setf	99,b	;volatile
 30378                           
 30379                           ; BSR set to: 58
 30380                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 30381  006868  6944               	setf	68,b	;volatile
 30382                           
 30383                           ; BSR set to: 58
 30384                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 30385  00686A  6954               	setf	84,b	;volatile
 30386                           
 30387                           ; BSR set to: 58
 30388                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 30389  00686C  6964               	setf	100,b	;volatile
 30390                           
 30391                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 30392  00686E  0E08               	movlw	8
 30393  006870  6F84               	movwf	132,b	;volatile
 30394                           
 30395                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 30396  006872  0E13               	movlw	19
 30397  006874  6F10               	movwf	16,b	;volatile
 30398                           
 30399                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 30400  006876  0E17               	movlw	23
 30401  006878  6FDE               	movwf	222,b	;volatile
 30402                           
 30403                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 30404  00687A  0E05               	movlw	5
 30405  00687C  6FE0               	movwf	224,b	;volatile
 30406                           
 30407                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 30408  00687E  0E1F               	movlw	31
 30409  006880  6F08               	movwf	8,b	;volatile
 30410                           
 30411                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 30412  006882  0E14               	movlw	20
 30413  006884  6F11               	movwf	17,b	;volatile
 30414                           
 30415                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 30416  006886  0E12               	movlw	18
 30417  006888  6FE5               	movwf	229,b	;volatile
 30418                           
 30419                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 30420  00688A  0E1F               	movlw	31
 30421  00688C  6FE6               	movwf	230,b	;volatile
 30422                           
 30423                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 30424  00688E  0E1E               	movlw	30
 30425  006890  6F17               	movwf	23,b	;volatile
 30426                           
 30427                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 30428  006892  0E09               	movlw	9
 30429  006894  6FDF               	movwf	223,b	;volatile
 30430                           
 30431                           ; BSR set to: 58
 30432  006896  0012               	return		;funcret
 30433  006898                     __end_of_PIN_MANAGER_Initialize:
 30434                           	opt callstack 0
 30435                           
 30436 ;; *************** function _OSCILLATOR_Initialize *****************
 30437 ;; Defined at:
 30438 ;;		line 62 in file "mcc_generated_files/mcc.c"
 30439 ;; Parameters:    Size  Location     Type
 30440 ;;		None
 30441 ;; Auto vars:     Size  Location     Type
 30442 ;;		None
 30443 ;; Return value:  Size  Location     Type
 30444 ;;                  1    wreg      void 
 30445 ;; Registers used:
 30446 ;;		wreg, status,2
 30447 ;; Tracked objects:
 30448 ;;		On entry : 3F/3A
 30449 ;;		On exit  : 3F/39
 30450 ;;		Unchanged: 0/0
 30451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30456 ;;Total ram usage:        0 bytes
 30457 ;; Hardware stack levels used:    1
 30458 ;; Hardware stack levels required when called:    7
 30459 ;; This function calls:
 30460 ;;		Nothing
 30461 ;; This function is called by:
 30462 ;;		_SYSTEM_Initialize
 30463 ;; This function uses a non-reentrant model
 30464 ;;
 30465                           
 30466                           	psect	text212
 30467  0082EC                     __ptext212:
 30468                           	opt callstack 0
 30469  0082EC                     _OSCILLATOR_Initialize:
 30470                           	opt callstack 22
 30471                           
 30472                           ; BSR set to: 58
 30473                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 30474                           
 30475                           ; BSR set to: 58
 30476                           ;incstack = 0
 30477  0082EC  0E60               	movlw	96
 30478  0082EE  0139               	movlb	57	; () banked
 30479  0082F0  6FD9               	movwf	217,b	;volatile
 30480                           
 30481                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 30482  0082F2  0E00               	movlw	0
 30483  0082F4  6FDB               	movwf	219,b	;volatile
 30484                           
 30485                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 30486  0082F6  0E00               	movlw	0
 30487  0082F8  6FDD               	movwf	221,b	;volatile
 30488                           
 30489                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 30490  0082FA  0E08               	movlw	8
 30491  0082FC  6FDF               	movwf	223,b	;volatile
 30492                           
 30493                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 30494  0082FE  0E00               	movlw	0
 30495  008300  6FDE               	movwf	222,b	;volatile
 30496                           
 30497                           ; BSR set to: 57
 30498  008302  0012               	return		;funcret
 30499  008304                     __end_of_OSCILLATOR_Initialize:
 30500                           	opt callstack 0
 30501                           
 30502 ;; *************** function _INTERRUPT_Initialize *****************
 30503 ;; Defined at:
 30504 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30505 ;; Parameters:    Size  Location     Type
 30506 ;;		None
 30507 ;; Auto vars:     Size  Location     Type
 30508 ;;  state           1    1[COMRAM] _Bool 
 30509 ;; Return value:  Size  Location     Type
 30510 ;;                  1    wreg      void 
 30511 ;; Registers used:
 30512 ;;		wreg, status,2
 30513 ;; Tracked objects:
 30514 ;;		On entry : 0/0
 30515 ;;		On exit  : 3F/39
 30516 ;;		Unchanged: 0/0
 30517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30522 ;;Total ram usage:        1 bytes
 30523 ;; Hardware stack levels used:    1
 30524 ;; Hardware stack levels required when called:    7
 30525 ;; This function calls:
 30526 ;;		Nothing
 30527 ;; This function is called by:
 30528 ;;		_SYSTEM_Initialize
 30529 ;; This function uses a non-reentrant model
 30530 ;;
 30531                           
 30532                           	psect	text213
 30533  007874                     __ptext213:
 30534                           	opt callstack 0
 30535  007874                     _INTERRUPT_Initialize:
 30536                           	opt callstack 22
 30537                           
 30538                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30539                           
 30540                           ; BSR set to: 57
 30541                           ;incstack = 0
 30542  007874  8AD2               	bsf	210,5,c	;volatile
 30543                           
 30544                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30545  007876  0E00               	movlw	0
 30546  007878  BED2               	btfsc	16338,7,c	;volatile
 30547  00787A  0E01               	movlw	1
 30548  00787C  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 30549                           
 30550                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30551  00787E  9ED2               	bcf	16338,7,c	;volatile
 30552                           
 30553                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30554  007880  0E55               	movlw	85
 30555  007882  6ED4               	movwf	212,c	;volatile
 30556                           
 30557                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30558  007884  0EAA               	movlw	170
 30559  007886  6ED4               	movwf	212,c	;volatile
 30560                           
 30561                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30562  007888  90D4               	bcf	212,0,c	;volatile
 30563                           
 30564                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 30565  00788A  0E00               	movlw	0
 30566  00788C  6ED7               	movwf	215,c	;volatile
 30567                           
 30568                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 30569  00788E  0E00               	movlw	0
 30570  007890  6ED6               	movwf	214,c	;volatile
 30571                           
 30572                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 30573  007892  0E08               	movlw	8
 30574  007894  6ED5               	movwf	213,c	;volatile
 30575                           
 30576                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30577  007896  0E55               	movlw	85
 30578  007898  6ED4               	movwf	212,c	;volatile
 30579                           
 30580                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30581  00789A  0EAA               	movlw	170
 30582  00789C  6ED4               	movwf	212,c	;volatile
 30583                           
 30584                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30585  00789E  80D4               	bsf	212,0,c	;volatile
 30586                           
 30587                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30588  0078A0  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 30589  0078A2  D002               	bra	u5225
 30590  0078A4  9ED2               	bcf	16338,7,c	;volatile
 30591  0078A6  D001               	bra	u5226
 30592  0078A8                     u5225:
 30593  0078A8  8ED2               	bsf	16338,7,c	;volatile
 30594  0078AA                     u5226:
 30595                           
 30596                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 30597  0078AA  0139               	movlb	57	; () banked
 30598  0078AC  8983               	bsf	131,4,b	;volatile
 30599                           
 30600                           ; BSR set to: 57
 30601                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 30602  0078AE  8783               	bsf	131,3,b	;volatile
 30603                           
 30604                           ; BSR set to: 57
 30605                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 30606  0078B0  9F83               	bcf	131,7,b	;volatile
 30607                           
 30608                           ; BSR set to: 57
 30609  0078B2  0012               	return		;funcret
 30610  0078B4                     __end_of_INTERRUPT_Initialize:
 30611                           	opt callstack 0
 30612                           
 30613 ;; *************** function _CRC_Initialize *****************
 30614 ;; Defined at:
 30615 ;;		line 76 in file "mcc_generated_files/crc.c"
 30616 ;; Parameters:    Size  Location     Type
 30617 ;;		None
 30618 ;; Auto vars:     Size  Location     Type
 30619 ;;  seed            2    4[COMRAM] unsigned short 
 30620 ;;  poly            2    2[COMRAM] unsigned short 
 30621 ;; Return value:  Size  Location     Type
 30622 ;;                  1    wreg      void 
 30623 ;; Registers used:
 30624 ;;		wreg, status,2, status,0
 30625 ;; Tracked objects:
 30626 ;;		On entry : 3F/39
 30627 ;;		On exit  : 3F/1
 30628 ;;		Unchanged: 0/0
 30629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30631 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30633 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30634 ;;Total ram usage:        5 bytes
 30635 ;; Hardware stack levels used:    1
 30636 ;; Hardware stack levels required when called:    7
 30637 ;; This function calls:
 30638 ;;		Nothing
 30639 ;; This function is called by:
 30640 ;;		_SYSTEM_Initialize
 30641 ;; This function uses a non-reentrant model
 30642 ;;
 30643                           
 30644                           	psect	text214
 30645  006DC4                     __ptext214:
 30646                           	opt callstack 0
 30647  006DC4                     _CRC_Initialize:
 30648                           	opt callstack 22
 30649                           
 30650                           ; BSR set to: 57
 30651                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 30652                           
 30653                           ; BSR set to: 57
 30654                           ;incstack = 0
 30655  006DC4  0E80               	movlw	128
 30656  006DC6  6F68               	movwf	104,b	;volatile
 30657                           
 30658                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 30659  006DC8  0E7F               	movlw	127
 30660  006DCA  6F69               	movwf	105,b	;volatile
 30661                           
 30662                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 30663  006DCC  0E00               	movlw	0
 30664  006DCE  6F62               	movwf	98,b	;volatile
 30665                           
 30666                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 30667  006DD0  0E00               	movlw	0
 30668  006DD2  6F63               	movwf	99,b	;volatile
 30669                           
 30670                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 30671  006DD4  0E00               	movlw	0
 30672  006DD6  6F7C               	movwf	124,b	;volatile
 30673                           
 30674                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 30675  006DD8  0E00               	movlw	0
 30676  006DDA  6F78               	movwf	120,b	;volatile
 30677                           
 30678                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 30679  006DDC  0E00               	movlw	0
 30680  006DDE  6F77               	movwf	119,b	;volatile
 30681                           
 30682                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 30683  006DE0  0E00               	movlw	0
 30684  006DE2  6F76               	movwf	118,b	;volatile
 30685                           
 30686                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 30687  006DE4  0E3F               	movlw	63
 30688  006DE6  6F7B               	movwf	123,b	;volatile
 30689                           
 30690                           ; BSR set to: 57
 30691                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 30692  006DE8  697A               	setf	122,b	;volatile
 30693                           
 30694                           ; BSR set to: 57
 30695                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 30696  006DEA  6979               	setf	121,b	;volatile
 30697                           
 30698                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 30699  006DEC  0E00               	movlw	0
 30700  006DEE  6F7D               	movwf	125,b	;volatile
 30701                           
 30702                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 30703  006DF0  0E80               	movlw	128
 30704  006DF2  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 30705  006DF4  0E05               	movlw	5
 30706  006DF6  6E03               	movwf	CRC_Initialize@poly^0,c
 30707                           
 30708                           ; BSR set to: 57
 30709                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 30710  006DF8  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 30711                           
 30712                           ; BSR set to: 57
 30713                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 30714  006DFE  0E05               	movlw	5
 30715  006E00  6F66               	movwf	102,b	;volatile
 30716                           
 30717                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 30718  006E02  0E00               	movlw	0
 30719  006E04  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 30720  006E06  0E00               	movlw	0
 30721  006E08  6E05               	movwf	CRC_Initialize@seed^0,c
 30722                           
 30723                           ; BSR set to: 57
 30724                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 30725  006E0A  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 30726                           
 30727                           ; BSR set to: 57
 30728                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 30729  006E10  0E00               	movlw	0
 30730  006E12  6F62               	movwf	98,b	;volatile
 30731                           
 30732                           ; BSR set to: 57
 30733                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 30734  006E14  3969               	swapf	105,w,b	;volatile
 30735  006E16  0B0F               	andlw	15
 30736  006E18  6E02               	movwf	??_CRC_Initialize^0,c
 30737  006E1A  2802               	incf	??_CRC_Initialize^0,w,c
 30738  006E1C  0101               	movlb	1	; () banked
 30739  006E1E  6FDA               	movwf	_crcObj& (0+255),b
 30740                           
 30741                           ; BSR set to: 1
 30742                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 30743  006E20  0139               	movlb	57	; () banked
 30744  006E22  5169               	movf	105,w,b	;volatile
 30745  006E24  0B0F               	andlw	15
 30746  006E26  6E02               	movwf	??_CRC_Initialize^0,c
 30747  006E28  2802               	incf	??_CRC_Initialize^0,w,c
 30748  006E2A  0101               	movlb	1	; () banked
 30749  006E2C  6FDB               	movwf	(_crcObj+1)& (0+255),b
 30750                           
 30751                           ; BSR set to: 1
 30752  006E2E  0012               	return		;funcret
 30753  006E30                     __end_of_CRC_Initialize:
 30754                           	opt callstack 0
 30755                           
 30756 ;; *************** function _TMR0_ISR *****************
 30757 ;; Defined at:
 30758 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 30759 ;; Parameters:    Size  Location     Type
 30760 ;;		None
 30761 ;; Auto vars:     Size  Location     Type
 30762 ;;		None
 30763 ;; Return value:  Size  Location     Type
 30764 ;;                  1    wreg      void 
 30765 ;; Registers used:
 30766 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30767 ;; Tracked objects:
 30768 ;;		On entry : 0/0
 30769 ;;		On exit  : 0/0
 30770 ;;		Unchanged: 0/0
 30771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30776 ;;Total ram usage:        1 bytes
 30777 ;; Hardware stack levels used:    1
 30778 ;; Hardware stack levels required when called:    6
 30779 ;; This function calls:
 30780 ;;		_TMR0_CallBack
 30781 ;; This function is called by:
 30782 ;;		Interrupt level 1
 30783 ;; This function uses a non-reentrant model
 30784 ;;
 30785                           
 30786                           	psect	text215
 30787  0080C8                     __ptext215:
 30788                           	opt callstack 0
 30789  0080C8                     _TMR0_ISR:
 30790                           	opt callstack 9
 30791                           
 30792                           ; BSR set to: 1
 30793                           ;incstack = 0
 30794  0080C8  006F FF60  F001    	movff	status,??_TMR0_ISR
 30795                           
 30796                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 30797  0080CE  0139               	movlb	57	; () banked
 30798  0080D0  9FA3               	bcf	163,7,b	;volatile
 30799                           
 30800                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 30801  0080D2  0060  F7A3  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 30802                           
 30803                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 30804  0080D8  0060  F79F  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 30805                           
 30806                           ; BSR set to: 57
 30807                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 30808  0080DE  EC95  F040         	call	_TMR0_CallBack	;wreg free
 30809  0080E2  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 30810  0080E8  0011               	retfie		f
 30811  0080EA                     __end_of_TMR0_ISR:
 30812                           	opt callstack 0
 30813                           
 30814 ;; *************** function _TMR0_CallBack *****************
 30815 ;; Defined at:
 30816 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 30817 ;; Parameters:    Size  Location     Type
 30818 ;;		None
 30819 ;; Auto vars:     Size  Location     Type
 30820 ;;		None
 30821 ;; Return value:  Size  Location     Type
 30822 ;;                  1    wreg      void 
 30823 ;; Registers used:
 30824 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30825 ;; Tracked objects:
 30826 ;;		On entry : 3F/39
 30827 ;;		On exit  : 0/0
 30828 ;;		Unchanged: 0/0
 30829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30834 ;;Total ram usage:        0 bytes
 30835 ;; Hardware stack levels used:    1
 30836 ;; Hardware stack levels required when called:    5
 30837 ;; This function calls:
 30838 ;;		Absolute function
 30839 ;;		_TMR0_DefaultInterruptHandler
 30840 ;;		_Timer0Handler
 30841 ;; This function is called by:
 30842 ;;		_TMR0_ISR
 30843 ;; This function uses a non-reentrant model
 30844 ;;
 30845                           
 30846                           	psect	text216
 30847  00812A                     __ptext216:
 30848                           	opt callstack 0
 30849  00812A                     _TMR0_CallBack:
 30850                           	opt callstack 9
 30851                           
 30852                           ; BSR set to: 57
 30853                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 30854                           
 30855                           ;incstack = 0
 30856  00812A  0101               	movlb	1	; () banked
 30857  00812C  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 30858  00812E  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 30859  008130  B4D8               	btfsc	status,2,c
 30860  008132  0012               	return	
 30861                           
 30862                           ; BSR set to: 1
 30863                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 30864  008134  D801               	call	i1u1132_28
 30865  008136  0012               	return	
 30866  008138                     i1u1132_28:
 30867  008138  0005               	push	
 30868  00813A  6EFA               	movwf	pclath,c
 30869  00813C  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 30870  00813E  6EFD               	movwf	tosl,c
 30871  008140  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 30872  008142  6EFE               	movwf	tosh,c
 30873  008144  6AFF               	clrf	tosu,c
 30874  008146  50FA               	movf	pclath,w,c
 30875  008148  0012               	return		;indir
 30876  00814A                     __end_of_TMR0_CallBack:
 30877                           	opt callstack 0
 30878                           
 30879 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 30880 ;; Defined at:
 30881 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 30882 ;; Parameters:    Size  Location     Type
 30883 ;;		None
 30884 ;; Auto vars:     Size  Location     Type
 30885 ;;		None
 30886 ;; Return value:  Size  Location     Type
 30887 ;;                  1    wreg      void 
 30888 ;; Registers used:
 30889 ;;		None
 30890 ;; Tracked objects:
 30891 ;;		On entry : 3F/1
 30892 ;;		On exit  : 3F/1
 30893 ;;		Unchanged: 3F/0
 30894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30899 ;;Total ram usage:        0 bytes
 30900 ;; Hardware stack levels used:    1
 30901 ;; Hardware stack levels required when called:    4
 30902 ;; This function calls:
 30903 ;;		Nothing
 30904 ;; This function is called by:
 30905 ;;		_TMR0_Initialize
 30906 ;;		_TMR0_CallBack
 30907 ;; This function uses a non-reentrant model
 30908 ;;
 30909                           
 30910                           	psect	text217
 30911  00851C                     __ptext217:
 30912                           	opt callstack 0
 30913  00851C                     _TMR0_DefaultInterruptHandler:
 30914                           	opt callstack 9
 30915                           
 30916                           ; BSR set to: 1
 30917                           
 30918                           ;incstack = 0
 30919  00851C  0012               	return		;funcret
 30920  00851E                     __end_of_TMR0_DefaultInterruptHandler:
 30921                           	opt callstack 0
 30922                           
 30923 ;; *************** function _Timer0Handler *****************
 30924 ;; Defined at:
 30925 ;;		line 7 in file "../hal/hal_src/Timers.c"
 30926 ;; Parameters:    Size  Location     Type
 30927 ;;		None
 30928 ;; Auto vars:     Size  Location     Type
 30929 ;;		None
 30930 ;; Return value:  Size  Location     Type
 30931 ;;                  1    wreg      void 
 30932 ;; Registers used:
 30933 ;;		wreg, status,2, status,0
 30934 ;; Tracked objects:
 30935 ;;		On entry : 3F/1
 30936 ;;		On exit  : 3F/0
 30937 ;;		Unchanged: 0/0
 30938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30943 ;;Total ram usage:        0 bytes
 30944 ;; Hardware stack levels used:    1
 30945 ;; Hardware stack levels required when called:    4
 30946 ;; This function calls:
 30947 ;;		Nothing
 30948 ;; This function is called by:
 30949 ;;		_main
 30950 ;;		_TMR0_CallBack
 30951 ;; This function uses a non-reentrant model
 30952 ;;
 30953                           
 30954                           	psect	text218
 30955  0073F6                     __ptext218:
 30956                           	opt callstack 0
 30957  0073F6                     _Timer0Handler:
 30958                           	opt callstack 9
 30959                           
 30960                           ; BSR set to: 1
 30961                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 30962                           
 30963                           ; BSR set to: 1
 30964                           ;incstack = 0
 30965  0073F6  0100               	movlb	0	; () banked
 30966  0073F8  51F3               	movf	_txTimeOut& (0+255),w,b	;volatile
 30967  0073FA  11F4               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 30968  0073FC  B4D8               	btfsc	status,2,c
 30969  0073FE  D003               	goto	i1l12218
 30970                           
 30971                           ; BSR set to: 0
 30972                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 30973  007400  07F3               	decf	_txTimeOut& (0+255),f,b	;volatile
 30974  007402  A0D8               	btfss	status,0,c
 30975  007404  07F4               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 30976  007406                     i1l12218:
 30977                           
 30978                           ; BSR set to: 0
 30979                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 30980  007406  51FD               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 30981  007408  11FE               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 30982  00740A  B4D8               	btfsc	status,2,c
 30983  00740C  D003               	goto	i1l12222
 30984                           
 30985                           ; BSR set to: 0
 30986                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 30987  00740E  07FD               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 30988  007410  A0D8               	btfss	status,0,c
 30989  007412  07FE               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 30990  007414                     i1l12222:
 30991                           
 30992                           ; BSR set to: 0
 30993                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 30994  007414  51F5               	movf	_cadTimeOut& (0+255),w,b	;volatile
 30995  007416  11F6               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 30996  007418  B4D8               	btfsc	status,2,c
 30997  00741A  D003               	goto	i1l12226
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 31001  00741C  07F5               	decf	_cadTimeOut& (0+255),f,b	;volatile
 31002  00741E  A0D8               	btfss	status,0,c
 31003  007420  07F6               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 31004  007422                     i1l12226:
 31005                           
 31006                           ; BSR set to: 0
 31007                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 31008  007422  51F7               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 31009  007424  11F8               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 31010  007426  B4D8               	btfsc	status,2,c
 31011  007428  D003               	goto	i1l12230
 31012                           
 31013                           ; BSR set to: 0
 31014                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 31015  00742A  07F7               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 31016  00742C  A0D8               	btfss	status,0,c
 31017  00742E  07F8               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 31018  007430                     i1l12230:
 31019                           
 31020                           ; BSR set to: 0
 31021                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 31022  007430  0101               	movlb	1	; () banked
 31023  007432  51DD               	movf	_ledtimer& (0+255),w,b	;volatile
 31024  007434  11DE               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 31025  007436  B4D8               	btfsc	status,2,c
 31026  007438  D003               	goto	i1l996
 31027                           
 31028                           ; BSR set to: 1
 31029                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 31030  00743A  07DD               	decf	_ledtimer& (0+255),f,b	;volatile
 31031  00743C  A0D8               	btfss	status,0,c
 31032  00743E  07DE               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 31033  007440                     i1l996:
 31034                           
 31035                           ; BSR set to: 1
 31036                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 31037  007440  0100               	movlb	0	; () banked
 31038  007442  4BE4               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 31039  007444  2BE5               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 31040                           
 31041                           ; BSR set to: 0
 31042  007446  0012               	return		;funcret
 31043  007448                     __end_of_Timer0Handler:
 31044                           	opt callstack 0
 31045                           
 31046 ;; *************** function _Default_ISR *****************
 31047 ;; Defined at:
 31048 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 31049 ;; Parameters:    Size  Location     Type
 31050 ;;		None
 31051 ;; Auto vars:     Size  Location     Type
 31052 ;;		None
 31053 ;; Return value:  Size  Location     Type
 31054 ;;                  1    wreg      void 
 31055 ;; Registers used:
 31056 ;;		None
 31057 ;; Tracked objects:
 31058 ;;		On entry : 0/0
 31059 ;;		On exit  : 0/0
 31060 ;;		Unchanged: 0/0
 31061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31066 ;;Total ram usage:        0 bytes
 31067 ;; Hardware stack levels used:    1
 31068 ;; This function calls:
 31069 ;;		Nothing
 31070 ;; This function is called by:
 31071 ;;		Interrupt level 2
 31072 ;; This function uses a non-reentrant model
 31073 ;;
 31074                           
 31075                           	psect	text219
 31076  008520                     __ptext219:
 31077                           	opt callstack 0
 31078  008520                     _Default_ISR:
 31079                           	opt callstack 12
 31080                           
 31081                           ; BSR set to: 0
 31082                           ;incstack = 0
 31083  008520  0011               	retfie		f
 31084  008522                     __end_of_Default_ISR:
 31085                           	opt callstack 0
 31086                           
 31087 ;; *************** function _UART1_tx_vect_isr *****************
 31088 ;; Defined at:
 31089 ;;		line 247 in file "mcc_generated_files/uart1.c"
 31090 ;; Parameters:    Size  Location     Type
 31091 ;;		None
 31092 ;; Auto vars:     Size  Location     Type
 31093 ;;		None
 31094 ;; Return value:  Size  Location     Type
 31095 ;;                  1    wreg      void 
 31096 ;; Registers used:
 31097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31098 ;; Tracked objects:
 31099 ;;		On entry : 0/0
 31100 ;;		On exit  : 0/0
 31101 ;;		Unchanged: 0/0
 31102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31107 ;;Total ram usage:        0 bytes
 31108 ;; Hardware stack levels used:    1
 31109 ;; Hardware stack levels required when called:    1
 31110 ;; This function calls:
 31111 ;;		Absolute function
 31112 ;;		_UART1_Transmit_ISR
 31113 ;; This function is called by:
 31114 ;;		Interrupt level 2
 31115 ;; This function uses a non-reentrant model
 31116 ;;
 31117                           
 31118                           	psect	text220
 31119  00814C                     __ptext220:
 31120                           	opt callstack 0
 31121  00814C                     _UART1_tx_vect_isr:
 31122                           	opt callstack 11
 31123                           
 31124                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 31125                           
 31126                           ;incstack = 0
 31127  00814C  0101               	movlb	1	; () banked
 31128  00814E  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 31129  008150  11EA               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 31130  008152  B4D8               	btfsc	status,2,c
 31131  008154  0011               	retfie		f
 31132                           
 31133                           ; BSR set to: 1
 31134                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 31135  008156  D801               	call	i2u1142_48
 31136  008158  0011               	retfie		f
 31137  00815A                     i2u1142_48:
 31138  00815A  0005               	push	
 31139  00815C  6EFA               	movwf	pclath,c
 31140  00815E  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 31141  008160  6EFD               	movwf	tosl,c
 31142  008162  51EA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 31143  008164  6EFE               	movwf	tosh,c
 31144  008166  6AFF               	clrf	tosu,c
 31145  008168  50FA               	movf	pclath,w,c
 31146  00816A  0012               	return		;indir
 31147  00816C                     __end_of_UART1_tx_vect_isr:
 31148                           	opt callstack 0
 31149                           
 31150 ;; *************** function _UART1_Transmit_ISR *****************
 31151 ;; Defined at:
 31152 ;;		line 265 in file "mcc_generated_files/uart1.c"
 31153 ;; Parameters:    Size  Location     Type
 31154 ;;		None
 31155 ;; Auto vars:     Size  Location     Type
 31156 ;;		None
 31157 ;; Return value:  Size  Location     Type
 31158 ;;                  1    wreg      void 
 31159 ;; Registers used:
 31160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31161 ;; Tracked objects:
 31162 ;;		On entry : 3F/1
 31163 ;;		On exit  : 7/1
 31164 ;;		Unchanged: 0/0
 31165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31170 ;;Total ram usage:        0 bytes
 31171 ;; Hardware stack levels used:    1
 31172 ;; This function calls:
 31173 ;;		Nothing
 31174 ;; This function is called by:
 31175 ;;		_UART1_Initialize
 31176 ;;		_UART1_tx_vect_isr
 31177 ;; This function uses a non-reentrant model
 31178 ;;
 31179                           
 31180                           	psect	text221
 31181  007B88                     __ptext221:
 31182                           	opt callstack 0
 31183  007B88                     _UART1_Transmit_ISR:
 31184                           	opt callstack 11
 31185                           
 31186                           ; BSR set to: 1
 31187                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 31188                           
 31189                           ;incstack = 0
 31190  007B88  0E40               	movlw	64
 31191  007B8A  61ED               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 31192  007B8C  D014               	goto	i2l12626
 31193                           
 31194                           ; BSR set to: 1
 31195                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 31196  007B8E  0E00               	movlw	low _uart1TxBuffer
 31197  007B90  0100               	movlb	0	; () banked
 31198  007B92  25E8               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 31199  007B94  6ED9               	movwf	fsr2l,c
 31200  007B96  6ADA               	clrf	fsr2h,c
 31201  007B98  0E03               	movlw	high _uart1TxBuffer
 31202  007B9A  22DA               	addwfc	fsr2h,f,c
 31203  007B9C  50DF               	movf	indf2,w,c
 31204  007B9E  013D               	movlb	61	; () banked
 31205  007BA0  6FEA               	movwf	234,b	;volatile
 31206                           
 31207                           ; BSR set to: 61
 31208  007BA2  0100               	movlb	0	; () banked
 31209  007BA4  2BE8               	incf	_uart1TxTail& (0+255),f,b	;volatile
 31210                           
 31211                           ; BSR set to: 0
 31212                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 31213  007BA6  0E3F               	movlw	63
 31214  007BA8  65E8               	cpfsgt	_uart1TxTail& (0+255),b
 31215  007BAA  D002               	goto	i2l12624
 31216                           
 31217                           ; BSR set to: 0
 31218                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 31219  007BAC  0E00               	movlw	0
 31220  007BAE  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 31221  007BB0                     i2l12624:
 31222                           
 31223                           ; BSR set to: 0
 31224                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 31225  007BB0  0101               	movlb	1	; () banked
 31226  007BB2  2BED               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 31227                           
 31228                           ;mcc_generated_files/uart1.c: 279:     }
 31229  007BB4  0012               	return	
 31230  007BB6                     i2l12626:
 31231                           
 31232                           ; BSR set to: 1
 31233                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 31234  007BB6  0E01               	movlw	1
 31235  007BB8  0100               	movlb	0	; () banked
 31236  007BBA  6FF1               	movwf	_tx_done& (0+255),b	;volatile
 31237                           
 31238                           ; BSR set to: 0
 31239                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 31240  007BBC  0139               	movlb	57	; () banked
 31241  007BBE  9993               	bcf	147,4,b	;volatile
 31242  007BC0  0012               	return		;funcret
 31243  007BC2                     __end_of_UART1_Transmit_ISR:
 31244                           	opt callstack 0
 31245                           
 31246 ;; *************** function _UART1_rx_vect_isr *****************
 31247 ;; Defined at:
 31248 ;;		line 255 in file "mcc_generated_files/uart1.c"
 31249 ;; Parameters:    Size  Location     Type
 31250 ;;		None
 31251 ;; Auto vars:     Size  Location     Type
 31252 ;;		None
 31253 ;; Return value:  Size  Location     Type
 31254 ;;                  1    wreg      void 
 31255 ;; Registers used:
 31256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31257 ;; Tracked objects:
 31258 ;;		On entry : 0/0
 31259 ;;		On exit  : 0/0
 31260 ;;		Unchanged: 0/0
 31261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31266 ;;Total ram usage:        0 bytes
 31267 ;; Hardware stack levels used:    1
 31268 ;; Hardware stack levels required when called:    3
 31269 ;; This function calls:
 31270 ;;		Absolute function
 31271 ;;		_UART1_Receive_ISR
 31272 ;; This function is called by:
 31273 ;;		Interrupt level 2
 31274 ;; This function uses a non-reentrant model
 31275 ;;
 31276                           
 31277                           	psect	text222
 31278  00816C                     __ptext222:
 31279                           	opt callstack 0
 31280  00816C                     _UART1_rx_vect_isr:
 31281                           	opt callstack 9
 31282                           
 31283                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 31284                           
 31285                           ;incstack = 0
 31286  00816C  0101               	movlb	1	; () banked
 31287  00816E  51EB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31288  008170  11EC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31289  008172  B4D8               	btfsc	status,2,c
 31290  008174  0011               	retfie		f
 31291                           
 31292                           ; BSR set to: 1
 31293                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 31294  008176  D801               	call	i2u1144_48
 31295  008178  0011               	retfie		f
 31296  00817A                     i2u1144_48:
 31297  00817A  0005               	push	
 31298  00817C  6EFA               	movwf	pclath,c
 31299  00817E  51EB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31300  008180  6EFD               	movwf	tosl,c
 31301  008182  51EC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31302  008184  6EFE               	movwf	tosh,c
 31303  008186  6AFF               	clrf	tosu,c
 31304  008188  50FA               	movf	pclath,w,c
 31305  00818A  0012               	return		;indir
 31306  00818C                     __end_of_UART1_rx_vect_isr:
 31307                           	opt callstack 0
 31308                           
 31309 ;; *************** function _UART1_Receive_ISR *****************
 31310 ;; Defined at:
 31311 ;;		line 292 in file "mcc_generated_files/uart1.c"
 31312 ;; Parameters:    Size  Location     Type
 31313 ;;		None
 31314 ;; Auto vars:     Size  Location     Type
 31315 ;;		None
 31316 ;; Return value:  Size  Location     Type
 31317 ;;                  1    wreg      void 
 31318 ;; Registers used:
 31319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31320 ;; Tracked objects:
 31321 ;;		On entry : 3F/1
 31322 ;;		On exit  : 0/0
 31323 ;;		Unchanged: 0/0
 31324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31329 ;;Total ram usage:        0 bytes
 31330 ;; Hardware stack levels used:    1
 31331 ;; Hardware stack levels required when called:    2
 31332 ;; This function calls:
 31333 ;;		Absolute function
 31334 ;;		_UART1_DefaultErrorHandler
 31335 ;;		_UART1_DefaultFramingErrorHandler
 31336 ;;		_UART1_DefaultOverrunErrorHandler
 31337 ;;		_UART1_RxDataHandler
 31338 ;; This function is called by:
 31339 ;;		_UART1_Initialize
 31340 ;;		_UART1_rx_vect_isr
 31341 ;; This function uses a non-reentrant model
 31342 ;;
 31343                           
 31344                           	psect	text223
 31345  00642C                     __ptext223:
 31346                           	opt callstack 0
 31347  00642C                     _UART1_Receive_ISR:
 31348                           	opt callstack 9
 31349                           
 31350                           ; BSR set to: 1
 31351                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 31352                           
 31353                           ;incstack = 0
 31354  00642C  0E28               	movlw	low _uart1RxStatusBuffer
 31355  00642E  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 31356  006430  6ED9               	movwf	fsr2l,c
 31357  006432  6ADA               	clrf	fsr2h,c
 31358  006434  0E01               	movlw	high _uart1RxStatusBuffer
 31359  006436  22DA               	addwfc	fsr2h,f,c
 31360  006438  0E00               	movlw	0
 31361  00643A  6EDF               	movwf	indf2,c
 31362                           
 31363                           ; BSR set to: 1
 31364                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 31365  00643C  013D               	movlb	61	; () banked
 31366  00643E  A7F9               	btfss	249,3,b	;volatile
 31367  006440  D013               	goto	i2u1136_49
 31368                           
 31369                           ; BSR set to: 61
 31370                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 31371  006442  0E28               	movlw	low _uart1RxStatusBuffer
 31372  006444  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 31373  006446  6ED9               	movwf	fsr2l,c
 31374  006448  6ADA               	clrf	fsr2h,c
 31375  00644A  0E01               	movlw	high _uart1RxStatusBuffer
 31376  00644C  22DA               	addwfc	fsr2h,f,c
 31377  00644E  0101               	movlb	1	; () banked
 31378  006450  82DF               	bsf	indf2,1,c
 31379                           
 31380                           ; BSR set to: 1
 31381                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 31382  006452  D801               	call	i2u1136_48
 31383  006454  D009               	goto	i2u1136_49
 31384  006456                     i2u1136_48:
 31385  006456  0005               	push	
 31386  006458  6EFA               	movwf	pclath,c
 31387  00645A  51E3               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 31388  00645C  6EFD               	movwf	tosl,c
 31389  00645E  51E4               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 31390  006460  6EFE               	movwf	tosh,c
 31391  006462  6AFF               	clrf	tosu,c
 31392  006464  50FA               	movf	pclath,w,c
 31393  006466  0012               	return		;indir
 31394  006468                     i2u1136_49:
 31395                           
 31396                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 31397  006468  013D               	movlb	61	; () banked
 31398  00646A  A3F9               	btfss	249,1,b	;volatile
 31399  00646C  D013               	goto	i2u1138_49
 31400                           
 31401                           ; BSR set to: 61
 31402                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 31403  00646E  0E28               	movlw	low _uart1RxStatusBuffer
 31404  006470  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 31405  006472  6ED9               	movwf	fsr2l,c
 31406  006474  6ADA               	clrf	fsr2h,c
 31407  006476  0E01               	movlw	high _uart1RxStatusBuffer
 31408  006478  22DA               	addwfc	fsr2h,f,c
 31409  00647A  0101               	movlb	1	; () banked
 31410  00647C  84DF               	bsf	indf2,2,c
 31411                           
 31412                           ; BSR set to: 1
 31413                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 31414  00647E  D801               	call	i2u1138_48
 31415  006480  D009               	goto	i2u1138_49
 31416  006482                     i2u1138_48:
 31417  006482  0005               	push	
 31418  006484  6EFA               	movwf	pclath,c
 31419  006486  51E1               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 31420  006488  6EFD               	movwf	tosl,c
 31421  00648A  51E2               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 31422  00648C  6EFE               	movwf	tosh,c
 31423  00648E  6AFF               	clrf	tosu,c
 31424  006490  50FA               	movf	pclath,w,c
 31425  006492  0012               	return		;indir
 31426  006494                     i2u1138_49:
 31427                           
 31428                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 31429  006494  0E28               	movlw	low _uart1RxStatusBuffer
 31430  006496  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 31431  006498  6ED9               	movwf	fsr2l,c
 31432  00649A  6ADA               	clrf	fsr2h,c
 31433  00649C  0E01               	movlw	high _uart1RxStatusBuffer
 31434  00649E  22DA               	addwfc	fsr2h,f,c
 31435  0064A0  50DF               	movf	indf2,w,c
 31436  0064A2  B4D8               	btfsc	status,2,c
 31437  0064A4  D00C               	goto	i2l12648
 31438                           
 31439                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 31440  0064A6  D801               	call	i2u1140_48
 31441  0064A8  0012               	return	
 31442  0064AA                     i2u1140_48:
 31443  0064AA  0005               	push	
 31444  0064AC  6EFA               	movwf	pclath,c
 31445  0064AE  0101               	movlb	1	; () banked
 31446  0064B0  51DF               	movf	_UART1_ErrorHandler& (0+255),w,b
 31447  0064B2  6EFD               	movwf	tosl,c
 31448  0064B4  51E0               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 31449  0064B6  6EFE               	movwf	tosh,c
 31450  0064B8  6AFF               	clrf	tosu,c
 31451  0064BA  50FA               	movf	pclath,w,c
 31452  0064BC  0012               	return		;indir
 31453  0064BE                     i2l12648:
 31454                           
 31455                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 31456  0064BE  ECEC  F03F         	call	_UART1_RxDataHandler	;wreg free
 31457  0064C2  0012               	return		;funcret
 31458  0064C4                     __end_of_UART1_Receive_ISR:
 31459                           	opt callstack 0
 31460                           
 31461 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 31462 ;; Defined at:
 31463 ;;		line 328 in file "mcc_generated_files/uart1.c"
 31464 ;; Parameters:    Size  Location     Type
 31465 ;;		None
 31466 ;; Auto vars:     Size  Location     Type
 31467 ;;		None
 31468 ;; Return value:  Size  Location     Type
 31469 ;;                  1    wreg      void 
 31470 ;; Registers used:
 31471 ;;		None
 31472 ;; Tracked objects:
 31473 ;;		On entry : 3F/1
 31474 ;;		On exit  : 3F/1
 31475 ;;		Unchanged: 3F/0
 31476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31481 ;;Total ram usage:        0 bytes
 31482 ;; Hardware stack levels used:    1
 31483 ;; This function calls:
 31484 ;;		Nothing
 31485 ;; This function is called by:
 31486 ;;		_UART1_Initialize
 31487 ;;		_UART1_Receive_ISR
 31488 ;; This function uses a non-reentrant model
 31489 ;;
 31490                           
 31491                           	psect	text224
 31492  008522                     __ptext224:
 31493                           	opt callstack 0
 31494  008522                     _UART1_DefaultOverrunErrorHandler:
 31495                           	opt callstack 10
 31496                           
 31497                           ; BSR set to: 1
 31498                           
 31499                           ;incstack = 0
 31500  008522  0012               	return		;funcret
 31501  008524                     __end_of_UART1_DefaultOverrunErrorHandler:
 31502                           	opt callstack 0
 31503                           
 31504 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 31505 ;; Defined at:
 31506 ;;		line 326 in file "mcc_generated_files/uart1.c"
 31507 ;; Parameters:    Size  Location     Type
 31508 ;;		None
 31509 ;; Auto vars:     Size  Location     Type
 31510 ;;		None
 31511 ;; Return value:  Size  Location     Type
 31512 ;;                  1    wreg      void 
 31513 ;; Registers used:
 31514 ;;		None
 31515 ;; Tracked objects:
 31516 ;;		On entry : 3F/1
 31517 ;;		On exit  : 3F/1
 31518 ;;		Unchanged: 3F/0
 31519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31524 ;;Total ram usage:        0 bytes
 31525 ;; Hardware stack levels used:    1
 31526 ;; This function calls:
 31527 ;;		Nothing
 31528 ;; This function is called by:
 31529 ;;		_UART1_Initialize
 31530 ;;		_UART1_Receive_ISR
 31531 ;; This function uses a non-reentrant model
 31532 ;;
 31533                           
 31534                           	psect	text225
 31535  008524                     __ptext225:
 31536                           	opt callstack 0
 31537  008524                     _UART1_DefaultFramingErrorHandler:
 31538                           	opt callstack 10
 31539                           
 31540                           ; BSR set to: 1
 31541                           
 31542                           ; BSR set to: 1
 31543                           ;incstack = 0
 31544  008524  0012               	return		;funcret
 31545  008526                     __end_of_UART1_DefaultFramingErrorHandler:
 31546                           	opt callstack 0
 31547                           
 31548 ;; *************** function _UART1_DefaultErrorHandler *****************
 31549 ;; Defined at:
 31550 ;;		line 330 in file "mcc_generated_files/uart1.c"
 31551 ;; Parameters:    Size  Location     Type
 31552 ;;		None
 31553 ;; Auto vars:     Size  Location     Type
 31554 ;;		None
 31555 ;; Return value:  Size  Location     Type
 31556 ;;                  1    wreg      void 
 31557 ;; Registers used:
 31558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31559 ;; Tracked objects:
 31560 ;;		On entry : 3F/1
 31561 ;;		On exit  : 3F/0
 31562 ;;		Unchanged: 0/0
 31563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31568 ;;Total ram usage:        0 bytes
 31569 ;; Hardware stack levels used:    1
 31570 ;; Hardware stack levels required when called:    1
 31571 ;; This function calls:
 31572 ;;		_UART1_RxDataHandler
 31573 ;; This function is called by:
 31574 ;;		_UART1_Initialize
 31575 ;;		_UART1_Receive_ISR
 31576 ;; This function uses a non-reentrant model
 31577 ;;
 31578                           
 31579                           	psect	text226
 31580  008504                     __ptext226:
 31581                           	opt callstack 0
 31582  008504                     _UART1_DefaultErrorHandler:
 31583                           	opt callstack 9
 31584                           
 31585                           ; BSR set to: 1
 31586                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 31587                           
 31588                           ; BSR set to: 1
 31589                           ;incstack = 0
 31590  008504  ECEC  F03F         	call	_UART1_RxDataHandler	;wreg free
 31591                           
 31592                           ; BSR set to: 0
 31593  008508  0012               	return		;funcret
 31594  00850A                     __end_of_UART1_DefaultErrorHandler:
 31595                           	opt callstack 0
 31596                           
 31597 ;; *************** function _UART1_RxDataHandler *****************
 31598 ;; Defined at:
 31599 ;;		line 316 in file "mcc_generated_files/uart1.c"
 31600 ;; Parameters:    Size  Location     Type
 31601 ;;		None
 31602 ;; Auto vars:     Size  Location     Type
 31603 ;;		None
 31604 ;; Return value:  Size  Location     Type
 31605 ;;                  1    wreg      void 
 31606 ;; Registers used:
 31607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31608 ;; Tracked objects:
 31609 ;;		On entry : 0/3D
 31610 ;;		On exit  : 3F/0
 31611 ;;		Unchanged: 0/0
 31612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31617 ;;Total ram usage:        0 bytes
 31618 ;; Hardware stack levels used:    1
 31619 ;; This function calls:
 31620 ;;		Nothing
 31621 ;; This function is called by:
 31622 ;;		_UART1_Receive_ISR
 31623 ;;		_UART1_DefaultErrorHandler
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text227
 31628  007FD8                     __ptext227:
 31629                           	opt callstack 0
 31630  007FD8                     _UART1_RxDataHandler:
 31631                           	opt callstack 10
 31632                           
 31633                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 31634                           
 31635                           ; BSR set to: 0
 31636                           ;incstack = 0
 31637  007FD8  0E38               	movlw	low _uart1RxBuffer
 31638  007FDA  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 31639  007FDC  6ED9               	movwf	fsr2l,c
 31640  007FDE  6ADA               	clrf	fsr2h,c
 31641  007FE0  0E01               	movlw	high _uart1RxBuffer
 31642  007FE2  22DA               	addwfc	fsr2h,f,c
 31643  007FE4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31644  007FEA  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 31645                           
 31646                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31647  007FEC  0E0F               	movlw	15
 31648  007FEE  645E               	cpfsgt	_uart1RxHead^0,c
 31649  007FF0  D002               	goto	i2l11558
 31650                           
 31651                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 31652  007FF2  0E00               	movlw	0
 31653  007FF4  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 31654  007FF6                     i2l11558:
 31655                           
 31656                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 31657  007FF6  0100               	movlb	0	; () banked
 31658  007FF8  2BE6               	incf	_uart1RxCount& (0+255),f,b	;volatile
 31659                           
 31660                           ; BSR set to: 0
 31661  007FFA  0012               	return		;funcret
 31662  007FFC                     __end_of_UART1_RxDataHandler:
 31663                           	opt callstack 0
 31664                           
 31665                           ;
 31666                           ; Interrupt Vector Table @ 0x8
 31667                           ;
 31668                           
 31669                           	psect	ivt0x8
 31670  000008                     __pivt0x8:
 31671                           	opt callstack 0
 31672  000008                     ivt0x8_base:
 31673                           	opt callstack 0
 31674                           
 31675                           ; Vector 0 : SWINT
 31676  000008  2148               	dw	_Default_ISR shr (0+2)
 31677                           
 31678                           ; Vector 1 : HLVD
 31679  00000A  2148               	dw	_Default_ISR shr (0+2)
 31680                           
 31681                           ; Vector 2 : OSF
 31682  00000C  2148               	dw	_Default_ISR shr (0+2)
 31683                           
 31684                           ; Vector 3 : CSW
 31685  00000E  2148               	dw	_Default_ISR shr (0+2)
 31686                           
 31687                           ; Vector 4 : NVM
 31688  000010  2148               	dw	_Default_ISR shr (0+2)
 31689                           
 31690                           ; Vector 5 : SCAN
 31691  000012  2148               	dw	_Default_ISR shr (0+2)
 31692                           
 31693                           ; Vector 6 : CRC
 31694  000014  2148               	dw	_Default_ISR shr (0+2)
 31695                           
 31696                           ; Vector 7 : IOC
 31697  000016  2148               	dw	_Default_ISR shr (0+2)
 31698                           
 31699                           ; Vector 8 : INT0
 31700  000018  2148               	dw	_Default_ISR shr (0+2)
 31701                           
 31702                           ; Vector 9 : ZCD
 31703  00001A  2148               	dw	_Default_ISR shr (0+2)
 31704                           
 31705                           ; Vector 10 : AD
 31706  00001C  2148               	dw	_Default_ISR shr (0+2)
 31707                           
 31708                           ; Vector 11 : ADT
 31709  00001E  2148               	dw	_Default_ISR shr (0+2)
 31710                           
 31711                           ; Vector 12 : CMP1
 31712  000020  2148               	dw	_Default_ISR shr (0+2)
 31713                           
 31714                           ; Vector 13 : SMT1
 31715  000022  2148               	dw	_Default_ISR shr (0+2)
 31716                           
 31717                           ; Vector 14 : SMT1PRA
 31718  000024  2148               	dw	_Default_ISR shr (0+2)
 31719                           
 31720                           ; Vector 15 : SMT1PRW
 31721  000026  2148               	dw	_Default_ISR shr (0+2)
 31722                           
 31723                           ; Vector 16 : DMA1SCNT
 31724  000028  2148               	dw	_Default_ISR shr (0+2)
 31725                           
 31726                           ; Vector 17 : DMA1DCNT
 31727  00002A  2148               	dw	_Default_ISR shr (0+2)
 31728                           
 31729                           ; Vector 18 : DMA1OR
 31730  00002C  2148               	dw	_Default_ISR shr (0+2)
 31731                           
 31732                           ; Vector 19 : DMA1A
 31733  00002E  2148               	dw	_Default_ISR shr (0+2)
 31734                           
 31735                           ; Vector 20 : SPI1RX
 31736  000030  2148               	dw	_Default_ISR shr (0+2)
 31737                           
 31738                           ; Vector 21 : SPI1TX
 31739  000032  2148               	dw	_Default_ISR shr (0+2)
 31740                           
 31741                           ; Vector 22 : SPI1
 31742  000034  2148               	dw	_Default_ISR shr (0+2)
 31743                           
 31744                           ; Vector 23 : I2C1RX
 31745  000036  2148               	dw	_Default_ISR shr (0+2)
 31746                           
 31747                           ; Vector 24 : I2C1TX
 31748  000038  2148               	dw	_Default_ISR shr (0+2)
 31749                           
 31750                           ; Vector 25 : I2C1
 31751  00003A  2148               	dw	_Default_ISR shr (0+2)
 31752                           
 31753                           ; Vector 26 : I2C1E
 31754  00003C  2148               	dw	_Default_ISR shr (0+2)
 31755                           
 31756                           ; Vector 27 : U1RX
 31757  00003E  205B               	dw	_UART1_rx_vect_isr shr (0+2)
 31758                           
 31759                           ; Vector 28 : U1TX
 31760  000040  2053               	dw	_UART1_tx_vect_isr shr (0+2)
 31761                           
 31762                           ; Vector 29 : U1E
 31763  000042  2148               	dw	_Default_ISR shr (0+2)
 31764                           
 31765                           ; Vector 30 : U1
 31766  000044  2148               	dw	_Default_ISR shr (0+2)
 31767                           
 31768                           ; Vector 31 : TMR0
 31769  000046  2032               	dw	_TMR0_ISR shr (0+2)
 31770                           
 31771                           ; Vector 32 : TMR1
 31772  000048  2148               	dw	_Default_ISR shr (0+2)
 31773                           
 31774                           ; Vector 33 : TMR1G
 31775  00004A  2148               	dw	_Default_ISR shr (0+2)
 31776                           
 31777                           ; Vector 34 : TMR2
 31778  00004C  2148               	dw	_Default_ISR shr (0+2)
 31779                           
 31780                           ; Vector 35 : CCP1
 31781  00004E  2148               	dw	_Default_ISR shr (0+2)
 31782                           
 31783                           ; Vector 36 : Undefined
 31784  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 31785                           
 31786                           ; Vector 37 : NCO1
 31787  000052  2148               	dw	_Default_ISR shr (0+2)
 31788                           
 31789                           ; Vector 38 : CWG1
 31790  000054  2148               	dw	_Default_ISR shr (0+2)
 31791                           
 31792                           ; Vector 39 : CLC1
 31793  000056  2148               	dw	_Default_ISR shr (0+2)
 31794                           
 31795                           ; Vector 40 : INT1
 31796  000058  2148               	dw	_Default_ISR shr (0+2)
 31797                           
 31798                           ; Vector 41 : CMP2
 31799  00005A  2148               	dw	_Default_ISR shr (0+2)
 31800                           
 31801                           ; Vector 42 : DMA2SCNT
 31802  00005C  2148               	dw	_Default_ISR shr (0+2)
 31803                           
 31804                           ; Vector 43 : DMA2DCNT
 31805  00005E  2148               	dw	_Default_ISR shr (0+2)
 31806                           
 31807                           ; Vector 44 : DMA2OR
 31808  000060  2148               	dw	_Default_ISR shr (0+2)
 31809                           
 31810                           ; Vector 45 : DMA2A
 31811  000062  2148               	dw	_Default_ISR shr (0+2)
 31812                           
 31813                           ; Vector 46 : I2C2RX
 31814  000064  2148               	dw	_Default_ISR shr (0+2)
 31815                           
 31816                           ; Vector 47 : I2C2TX
 31817  000066  2148               	dw	_Default_ISR shr (0+2)
 31818                           
 31819                           ; Vector 48 : I2C2
 31820  000068  2148               	dw	_Default_ISR shr (0+2)
 31821                           
 31822                           ; Vector 49 : I2C2E
 31823  00006A  2148               	dw	_Default_ISR shr (0+2)
 31824                           
 31825                           ; Vector 50 : U2RX
 31826  00006C  2148               	dw	_Default_ISR shr (0+2)
 31827                           
 31828                           ; Vector 51 : U2TX
 31829  00006E  2148               	dw	_Default_ISR shr (0+2)
 31830                           
 31831                           ; Vector 52 : U2E
 31832  000070  2148               	dw	_Default_ISR shr (0+2)
 31833                           
 31834                           ; Vector 53 : U2
 31835  000072  2148               	dw	_Default_ISR shr (0+2)
 31836                           
 31837                           ; Vector 54 : TMR3
 31838  000074  2148               	dw	_Default_ISR shr (0+2)
 31839                           
 31840                           ; Vector 55 : TMR3G
 31841  000076  2148               	dw	_Default_ISR shr (0+2)
 31842                           
 31843                           ; Vector 56 : TMR4
 31844  000078  2148               	dw	_Default_ISR shr (0+2)
 31845                           
 31846                           ; Vector 57 : CCP2
 31847  00007A  2148               	dw	_Default_ISR shr (0+2)
 31848                           
 31849                           ; Vector 58 : Undefined
 31850  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 31851                           
 31852                           ; Vector 59 : CWG2
 31853  00007E  2148               	dw	_Default_ISR shr (0+2)
 31854                           
 31855                           ; Vector 60 : CLC2
 31856  000080  2148               	dw	_Default_ISR shr (0+2)
 31857                           
 31858                           ; Vector 61 : INT2
 31859  000082  2148               	dw	_Default_ISR shr (0+2)
 31860                           
 31861                           ; Vector 62 : Undefined
 31862  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 31863                           
 31864                           ; Vector 63 : Undefined
 31865  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 31866                           
 31867                           ; Vector 64 : Undefined
 31868  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 31869                           
 31870                           ; Vector 65 : Undefined
 31871  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 31872                           
 31873                           ; Vector 66 : Undefined
 31874  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 31875                           
 31876                           ; Vector 67 : Undefined
 31877  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 31878                           
 31879                           ; Vector 68 : Undefined
 31880  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 31881                           
 31882                           ; Vector 69 : Undefined
 31883  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 31884                           
 31885                           ; Vector 70 : TMR5
 31886  000094  2148               	dw	_Default_ISR shr (0+2)
 31887                           
 31888                           ; Vector 71 : TMR5G
 31889  000096  2148               	dw	_Default_ISR shr (0+2)
 31890                           
 31891                           ; Vector 72 : TMR6
 31892  000098  2148               	dw	_Default_ISR shr (0+2)
 31893                           
 31894                           ; Vector 73 : CCP3
 31895  00009A  2148               	dw	_Default_ISR shr (0+2)
 31896                           
 31897                           ; Vector 74 : CWG3
 31898  00009C  2148               	dw	_Default_ISR shr (0+2)
 31899                           
 31900                           ; Vector 75 : CLC3
 31901  00009E  2148               	dw	_Default_ISR shr (0+2)
 31902                           
 31903                           ; Vector 76 : Undefined
 31904  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 31905                           
 31906                           ; Vector 77 : Undefined
 31907  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 31908                           
 31909                           ; Vector 78 : Undefined
 31910  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 31911                           
 31912                           ; Vector 79 : Undefined
 31913  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 31914                           
 31915                           ; Vector 80 : CCP4
 31916  0000A8  2148               	dw	_Default_ISR shr (0+2)
 31917                           
 31918                           ; Vector 81 : CLC4
 31919  0000AA  2148               	dw	_Default_ISR shr (0+2)
 31920  0000AC                     ivt0x8_undefint:
 31921                           	opt callstack 0
 31922  0000AC  00FF               	reset	
 31923                           
 31924                           	psect	text228
 31925  000000                     __ptext228:
 31926                           	opt callstack 0
 31927                           
 31928                           	psect	rparam
 31929  0000                     tosu	equ	0x3FFF
 31930                           tosh	equ	0x3FFE
 31931                           tosl	equ	0x3FFD
 31932                           stkptr	equ	0x3FFC
 31933                           pclatu	equ	0x3FFB
 31934                           pclath	equ	0x3FFA
 31935                           pcl	equ	0x3FF9
 31936                           tblptru	equ	0x3FF8
 31937                           tblptrh	equ	0x3FF7
 31938                           tblptrl	equ	0x3FF6
 31939                           tablat	equ	0x3FF5
 31940                           prodh	equ	0x3FF4
 31941                           prodl	equ	0x3FF3
 31942                           indf0	equ	0x3FEF
 31943                           postinc0	equ	0x3FEE
 31944                           postdec0	equ	0x3FED
 31945                           preinc0	equ	0x3FEC
 31946                           plusw0	equ	0x3FEB
 31947                           fsr0h	equ	0x3FEA
 31948                           fsr0l	equ	0x3FE9
 31949                           wreg	equ	0x3FE8
 31950                           indf1	equ	0x3FE7
 31951                           postinc1	equ	0x3FE6
 31952                           postdec1	equ	0x3FE5
 31953                           preinc1	equ	0x3FE4
 31954                           plusw1	equ	0x3FE3
 31955                           fsr1h	equ	0x3FE2
 31956                           fsr1l	equ	0x3FE1
 31957                           bsr	equ	0x3FE0
 31958                           indf2	equ	0x3FDF
 31959                           postinc2	equ	0x3FDE
 31960                           postdec2	equ	0x3FDD
 31961                           preinc2	equ	0x3FDC
 31962                           plusw2	equ	0x3FDB
 31963                           fsr2h	equ	0x3FDA
 31964                           fsr2l	equ	0x3FD9
 31965                           status	equ	0x3FD8


Data Sizes:
    Strings     552
    Constant    270
    Data        30
    BSS         2193
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    122     159
    BANK1           256      4     256
    BANK2           256      0     212
    BANK3           256      0     242
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    S4569$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S84$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2743$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7758_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), appDataInd@data(BANK0[65]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), appDataInd@data(BANK0[65]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), appDataInd@data(BANK0[65]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    nwkFrame@nwkFramePayloadSize@frame_7058...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_7058.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6634...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6634.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5548...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5548.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5326...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5326.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4601PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4569SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4569SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4470...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4470.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3915...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3915.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3491...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3491.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkFrame@nwkFramePayloadSize@frame_3045...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3045.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2743NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame_2841...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2841.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    nwkFrame@nwkFramePayloadSize@frame_1621...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1621.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    S891$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    S173NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S115NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S115NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    S84$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S83NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _CircularBufferPushBack->_memcpy
    _executeATCommand->_printf
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_initRadio
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_PHY_DataInd
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxSendAck->_nwkTxFrame
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxIndicateFrame->_appDataInd
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _NWK_TaskHandler->_nwkRxTaskHandler

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2296729
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1864998
                                             73 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0    9491
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9423
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    6724
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1850452
                                             68 BANK0      5     3      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   42647
                                             22 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                      2     0      2   42647
                                             22 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  164675
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  160172
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  161639
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   55496
                                             22 BANK0      2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  161895
                                             22 BANK0      7     5      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    5225
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  160141
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5600
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2    9654
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2316
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4     891
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4     891
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   62670
                                             22 BANK0      8     6      2
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   75313
                                             22 BANK0     46    44      2
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   72956
                                             22 BANK0     16    14      2
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7160
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4883
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     422
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   42642
                                             22 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   42543
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   48505
                                             22 BANK0      2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   65562
                                             22 BANK0      7     5      2
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12668
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     492
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     622
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     288
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     332
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  6     6      0   37701
                                             47 COMRAM     6     6      0
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0      88
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   17925
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    7672
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    5962
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    3556
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1514
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  304166
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    8904
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2787
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2954
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    2026
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  162480
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  162480
                                             57 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   18974
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   10406
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       4     0      4    1270
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     773
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   34233
                                             24 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _receive
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    8524
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  132782
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   23992
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    2031
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     840
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   17505
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    5203
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   94577
                                              0 BANK1      4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18523
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9171
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    5012
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1828
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     908
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     234
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    2513
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     424
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   59575
                                            117 BANK0      5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    8122
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   51055
                                             91 BANK0     26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     197
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    3575
                                             22 BANK0      5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1    1076
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     684
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    2298
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    2067
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                          69    68      1   45789
                                             22 BANK0     69    68      1
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                               9     3      6   42543
                                             84 COMRAM     9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   37446
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    38      4   36841
                                             69 COMRAM     8     4      4
                                              0 BANK0     22    22      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    9037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    8141
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _stoa                                                20    17      3    3900
                                             12 COMRAM    20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    9009
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    6645
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1254
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    2329
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1773
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2727
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1332
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   15156
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    8361
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     447
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   14213
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   13498
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    4165
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     512
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     512
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2614
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1766
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1223
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     338
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    4840
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   88802
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   88134
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   88134
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     111
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    5294
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   10337
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   13589
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1127
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1161
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1123
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1784
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5337
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    7650
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    6463
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   17925
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6330
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6330
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6330
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    5203
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2     864
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     446
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1127
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1028
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     329
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2398
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     515
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1586
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     668
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     321
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (17) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (18) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _memset
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                     _isdigit
                     _stoa
                       _fputc
                         _putch
                           _UART1_Write
                       _strlen
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                       _toupper
                         _islower
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     4B9      37       29.5%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F2      11       94.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E0      32        0.0%
DATA                 0      0     999       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 08 00:30:16 2020

                         cmdSetNaddr@tempaddr 007C                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 8288                                    _RSSITarget 00F9  
                              _setCodingRate4 7CD6                            _commandByteCounter 00F0  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0033                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 003C  
              __end_of_nwkRouteNormalizeRanks 7B88                                _SYS_TimerStart 7F1A  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 000E                                           l206 6EEA  
                                         l329 62CC                                           l338 5206  
                                         l355 850C                                           l348 60DA  
                                         l606 6944                                           l379 602C  
                                         _GIE 01FE97                      __end_of_DIO0_Receive_ISR 6392  
                                         _SNR 0167                            _CircularBufferSize 707C  
                        __end_of_cmdSetParity 66FC                                           _cad 5B50  
                                         _abs 796E                                           _pad 5D8E  
                                ?_loadMACAddr 0001                             _NWK_GroupIsMember 7E12  
                          nwkRouteFrame@frame 0033                               nwkRxSendAck@ack 002E  
                     __size_of_PMD_Initialize 0022                           ??_SPI1_ExchangeByte 0002  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                      nwkDataReqSendFrame@frame 002F  
                        _FirmwareVersionMajor FDD4                      _DATAEE_ReadByte_Platform 4E8A  
                          _UART1_Transmit_ISR 7B88                          _FirmwareVersionMinor FDD3  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                              ?_queueLedEvent 001C                              _SX1276ReadBuffer 7F42  
                       __end_of_SYS_TimerInit 84C4                         queueLedEvent@LEDState 001E  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_get_timer0base 0002  
                                        ?_cad 0001                                          l1040 8296  
                                        ?_abs 0014                               nwkTxFrame@frame 0024  
                                        l3100 3F52                                          l1180 7822  
                                        l2126 1690                                          l1600 5782  
                                        l3121 262A                                          l2313 65AA  
                                        l3060 5DCA                                          l3230 67F6  
                                        l3134 1C90                                          l3071 1A46  
                                        l3119 261E                                          l3136 1C9C  
                                        l2184 5992                                          l4024 54BC  
                                        l3073 1A52                                          l1395 7742  
                                        l2293 3588                                          l4039 73E8  
                                        l1591 7290                                          l1592 7278  
                                        l1913 7610                                          l4091 0D62  
                                        l4084 0D2C                                          l1933 30D8  
                                        l4085 0D5A                                          l3623 6C66  
                                        l1775 18A8                                          l2648 4524  
                                        l3641 53BC                                          l2586 79CA  
                             PHY_DataReq@size 0013                                          l3651 5D5C  
                                        l3468 58B2                                          ?_pad 0014  
                                        l3909 396A                                          l3865 3A4C  
                                        l3858 39C6                                          l3878 799E  
                                        l9092 7D1A                                          l9096 7D30  
                                        l9520 749E                                          l9526 74DC  
                                        l9800 67E8                                          l9528 74DE  
                        nwkDataReqConfirm@req 0009                                          l9812 5886  
                                        l9830 6C24                                          l9822 58EA  
                        _SYS_TimerTaskHandler 4862                                          l9832 6C30  
                                        l9816 589C                                          l9808 5852  
                                        l9860 3A34                                          l9790 67B4  
                                        l9838 6C58                                          l9854 39FC  
                                        l9774 70EA                                          STR_1 FE8D  
                                        l9856 3A02                                          l9848 39DE  
                                        STR_2 FF66                                          STR_3 FFDF  
                                        l9866 3A72                                          l9858 3A0E  
                                        l9778 70FE                                          STR_4 FECC  
                                        STR_5 FECC                                          l9788 67A8  
                                        l9884 3AC2                                          l9868 3A7E  
                                        STR_6 FED0                                          STR_7 FFDF  
                                        l9894 68D6                                          STR_8 FECC  
                                        STR_9 FECC                                          l9998 7B52  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                    __end_of_explicitHeaderMode 82EC  
                                        u5225 78A8                                          u5226 78AA  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u9030 726A                                          u8400 47AC  
                                        u7530 67B8                                          u7610 6C34  
                                        u9035 7264                                          u8407 479E  
                                        u9208 513E                                          u8440 4818  
                                        u7730 68C2                                          u8450 4842  
                                        u8445 4812                                          u7750 690C  
                                        u8470 6FAE                                          u8447 4804  
                                        u7737 68B4                                          u8457 4834  
                                        u7690 3A88                                          u8490 700E  
                                        u7757 68FE                                          u7795 7830  
                                        u7796 7832                             ?_PHY_SetShortAddr 0002  
                                        _RSSI 0169                    _nwkRouteFrameReceived$4119 0012  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUE 003A81  
                         _CircularBufferSpace 7C6A                              PHY_DataInd@frame 0017  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
            __end_of_nwkTxAckWaitTimerHandler 65E6                                          abs@a 0014  
                                        _cmdI 84F2                           ??_NWK_GroupIsMember 0004  
                                        _dbuf 0175                                          _idle 84AC  
                                        _atoi 3808                                          _main 7EF2  
                                        _dtoa 19C4                           nwkRouteFrame@header 0035  
                            ?_NWK_TaskHandler 0001                                          _rand 497C  
                                        _seed 01D2                                          _prec 00DC  
                                        _nout 0159                                          pad@i 001B  
                                        pad@p 0018                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 001D  
                                        fsr2l 003FD9                                          _stoa 3EE6  
                          ??_PHY_SetShortAddr 0004                                          _utoa 2602  
                                        _xtoa 1C74                       __size_of_SPI1_ReadBlock 0038  
                    nwkRxRejectDuplicate@diff 001A                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                              NWK_DataReq@req 0002                     __end_of_SPI1_ExchangeByte 82A2  
               ??_UART1_SetTxInterruptHandler 0004    nwkRxDuplicateRejectionTimerHandler@restart 0014  
                      CircularBufferSpace@ctx 000A                        __end_of_setCodingRate4 7D0C  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 816C  
                                ___param_bank 000000                          __end_of_DIA_ReadByte 801E  
                  ??_nwkRxHandleReceivedFrame 002B                             nwkFrameFree@frame 0002  
                  __size_of_UART1_is_rx_ready 000E                          ??_CircularBufferSize 0004  
                                 ?_UART1_Read 0001                              _SYS_TimerStarted 76E6  
                     ??_nwkRxHandleIndication 00D7                            ?_UART1_rx_vect_isr 0001  
                                       ??_cad 0011                                         ??_abs 0016  
                                       ??_pad 001A                     __size_of_DATAEE_WriteByte 0040  
                      __end_of_SYS_TimerStart 7F42                       __end_of_TMR0_Initialize 7A28  
              __end_of_nwkTxDelayTimerHandler 6672                ??_TMR0_DefaultInterruptHandler 0001  
                        __size_of_cmdGetRxCnt 0002                          ?_CircularBufferSpace 000A  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                            nwkTxFrame@header 0028                 __end_of_OSCILLATOR_Initialize 8304  
                        __size_of_cmdBootLoad 003A                      ??_nwkRouteSendRouteError 002F  
                                ?_SX1276Write 000F                                         l10250 7BCA  
                                       l10254 7BCE                                         l10246 7BC6  
                                       l10422 4774                                         l10264 7BD6  
                                       l12112 7A2C                                         l10424 4782  
                                       l10440 6F6E                                         l10274 7ED4  
                                       l10258 7BD2                                         l10610 7050  
                                       l13100 7956                                         l10278 7EDE  
                                       l13110 5DB0                                         l11502 57E6  
                                       l10606 7040                                         l10614 7058  
                                       l10446 6FC6                                         l10438 6F66  
                                       l13200 3D60                                         l13120 5DF0  
                                       l12160 4ED4                                         l12136 6962  
                                       l10608 7048                                         l10448 6FCE  
                                       l13050 772C                                         l13114 5DC2  
                                       l11506 5808                                         l10730 5414  
                                       l11620 7F6E                                         l10388 3388  
                                       l13220 41DA                                         l13212 419C  
                                       l13124 5E26                                         l13116 5DD4  
                                       l12172 4EFC                                         l10830 50A0  
                                       l14030 3570                                         l13222 41EE  
                                       l13310 1A70                                         l14110 6D0C  
                                       l10654 6AFC                                         l11608 74EA  
                                       l10832 50B8                                         l14008 5EE6  
                                       l13232 424C                                         l13216 41C0  
                                       l13064 7764                                         l14120 6D18  
                                       l12184 4F26                                         l10656 6B0A  
                                       l13066 7768                                         l13314 1A80  
                                       l14106 6D00                                         l11490 577A  
                                       l10586 6EE2                                         l10578 6EA4  
                                       l10746 54B4                                         l10738 5462  
                                       l14140 4666                                         l14132 4642  
                                       l10836 510E                                         l10828 5092  
                                       l14036 35BA                                         l13500 381E  
                                       l13180 3CB4                                         l13236 4272  
                                       l13228 4236                                         l13076 6D70  
                                       l13324 1BBC                                         l12196 4F4E  
                                       l14038 35DE                                         l13182 3CC8  
                                       l13174 3C8E                                         l13086 7456  
                                       l13246 5336                                         l13406 2676  
                                       l14070 5ACC                                         l14062 5A9C  
                                       l15022 5B72                                         l10774 7284  
                                       l15110 2248                                         l14160 46C0  
                                       l14152 469C                                         l14144 4678  
                                       l14136 4654                                         l14128 4630  
                                       l14048 3664                                         l13520 38BE  
                                       l13192 3D24                                         l13168 3C66  
                                       l13096 793A                                         l13088 745A  
                                       l13344 1C24                                         l13360 3F0A  
                                       l13248 534A                                         l13416 27A2  
                                       l13440 1CB4                                         l14224 3054  
                                       l15104 2228                                         l11594 8066  
                                       l14170 46E4                                         l13514 3882  
                                       l13370 3F72                                         l13258 53A6  
                                       l13274 5D46                                         l13266 5CEA  
                                       l13610 06B2                                         l13602 06A4  
                                       l14250 316C                                         l11930 5A52  
                                       l16010 37A4                                         l14172 4730  
                                       l14164 46D2                                         l14156 46AE  
                                       l14148 468A                                         l13524 38FC  
                                       l13516 388A                                         l13508 3870  
                                       l13196 3D3A                                         l13348 1C3E  
                                       l13268 5CFE                                         l13612 06F8  
                                       l14076 5B00                                         l14228 306A  
                                       l15028 5B90                                         l11908 5A18  
                                       l11932 5A82                                         l16004 3792  
                                       l13542 7C40                                         l14502 4BA4  
                                       l13286 77A8                                         l13518 3890  
                                       l13374 3F8E                                         l13454 1D16  
                                       l13446 1CF4                                         l13630 078A  
                                       l13606 06A8                                         l11918 5A34  
                                       l11862 7692                                         l14520 0FB0  
                                       l13800 3DE2                                         l13296 1A2A  
                                       l13392 400A                                         l13384 3FD2  
                                       l13720 6730                                         l14256 31C4  
                                       l14352 24CC                                         l14336 23DC  
                                       l15056 5BE2                                         l16120 20E0  
                                       l16104 20A8                                         l15152 2892  
                                       l14600 0C12                                         l13546 7C58  
                                       l14506 4BAE                                         l13562 6E86  
                                       l13554 6E34                                         l13378 3FAC  
                                       l13626 075A                                         l14450 2B18  
                                       l14290 431C                                         l16114 20D6  
                                       l16050 1F6A                                         l15146 2872  
                                       l15226 7546                                         l15250 2C56  
                                       l16018 37CA                                         l14540 114A  
                                       l14532 10A6                                         l14524 1002  
                                       l13820 3EDC                                         l13812 3E8A  
                                       l13388 3FEE                                         l13492 1EBE  
                                       l13468 1DAC                                         l13476 1E44  
                                       l13628 077E                                         l14436 2A52  
                                       l13900 76F4                                         l14380 2582  
                                       l14356 24D0                                         l14364 24FA  
                                       l15500 5F28                                         l14700 0F44  
                                       l14612 0C3A                                         l15252 2C5C  
                                       l15260 2CB6                                         l15412 66C2  
                                       l13814 3EC0                                         l13806 3E4E  
                                       l13590 0698                                         l13726 6750  
                                       l14358 24F6                                         l15502 5F3A  
                                       l15086 638A                                         l11878 59C4  
                                       l16134 212E                                         l16038 1F40  
                                       l14710 54F0                                         l14614 0C6C  
                                       l14552 1240                                         l14544 119C  
                                       l14536 10F8                                         l14528 1054  
                                       l13744 7E38                                         l13648 089A  
                                       l14376 2564                                         l11888 59E0  
                                       l16064 1FDC                                         l14640 0D1C  
                                       l15248 2C52                                         l15416 66EA  
                                       l15408 669A                                         l15360 518E  
                                       l13738 7E16                                         l13834 4AC2  
                                       l13498 381A                                         l13682 0A94  
                                       l13658 08FC                                         l13594 069C  
                                       l13586 0688                                         l14490 2BC6  
                                       l14482 2BA4                                         l14474 2B72  
                                       l14466 2B50                                         l14458 2B34  
                                       l13906 7706                                         l13922 3228  
                                       l15506 5F4C                                         l11898 59FC  
                                       l16074 200E                                         l14634 0D08  
                                       l14618 0C74                                         l15282 2D42  
                                       l15274 2D1E                                         l15258 2C6E  
                                       l14564 7CE2                                         l14548 11EE  
                                       l13844 4B4E                                         l13692 0AE0  
                                       l13668 09A8                                         l13588 068A  
                                       l13852 721E                                         l13908 771E  
                                       l13932 32A6                                         l15508 5F80  
                                       l15524 2E4E                                         l15612 7384  
                                       l16084 2040                                         l14716 552E  
                                       l15268 2CF2                                         l15196 6544  
                                       l13838 4AF8                                         l13782 639E  
                                       l13598 06A0                                         l13942 3318  
                                       l15550 2F1A                                         l15526 2E5E  
                                       l15518 2E1C                                         l15710 45E2  
                                       l15606 7358                                         l16094 207A  
                                       l14718 5560                                         l14590 0BB0  
                                       l15294 2DD2                                         l14568 7CEC  
                                       l14808 16CC                                         l13688 0AD6  
                                       l13776 6F12                                         l13880 5CAA  
                                       l13944 3330                                         l13928 3266  
                                       l14912 13F0                                         l15552 2F2C  
                                       l15536 2EAA                                         l15640 65F4  
                                       l15624 6564                                         l14648 0D48  
                                       l15800 03CC                                         l15720 00B4  
                                       l15482 7584                                         l14578 79C6  
                                       l13786 63C2                                         l13698 0AF6  
                                       l13778 6F36                                         l13962 69D6  
                                       l13946 333E                                         l14906 13CA  
                                       l14842 6224                                         l15562 2F9C  
                                       l15706 45DA                                         l14682 0EC0  
                                       l14666 0E02                                         l14658 0DCA  
                                       l15298 2DFA                                         l16178 7F10  
                                       l13868 5C44                                         l14916 140C  
                                       l14836 61BC                                         l14844 623C  
                                       l14852 4F92                                         l15548 2F1A  
                                       l15564 2FDC                                         l14692 0F12  
                                       l15820 0488                                         l15812 0432  
                                       l15804 03EE                                         l15740 017C  
                                       l15732 012E                                         l15724 00E2  
                                       ?_cmdI 0001                                         l15590 6A54  
                                       l15582 6A42                                         l14942 157E  
                                       l14934 14FA                                         l15558 2F62  
                                       l15662 450A                                         l14686 0EF6  
                                       l15592 6A82                                         l15576 6A30  
                                       l14944 158E                                         l14936 1564  
                                       l15496 5F04                                         l15672 452E  
                                       l15656 44FC                                         l15648 6636  
                                       l15840 0544                                         l15832 04F8  
                                       l15824 04AA                                         l15816 045E  
                                       l15808 0410                                         l15760 0244  
                                       l15752 0200                                         l15744 01A8  
                                       l15736 0150                                         l15728 0104  
                                       l14792 4DF4                                         l13978 6BBA  
                                       l13986 6C00                                         l13994 5E48  
                                       l15594 6A9A                                         l14962 1622  
                                       l14954 15D0                                         l15498 5F16  
                                       l14866 5026                                         l15674 4532  
                                       l15666 4516                                         l14698 0F2C  
                                       l14980 591C                                         l14948 15A4  
                                       l15692 4582                                         l15676 453A  
                                       l15932 48F2                                         l15924 4890  
                                       l15852 059E                                         l15836 051A  
                                       l15828 04CC                                         l15780 0302  
                                       l15772 02BE                                         l15764 0270  
                                       l15756 0222                                         l15748 01D6  
                                       l15860 05E0                                         l14878 56F4  
                                       l14992 5980                                         l14968 1666  
                                       l14896 1370                                         l15696 459C  
                                       l15688 457A                                         l15792 037A  
                                       l15784 032E                                         l15776 02E0  
                                       l15768 029C                                         l15856 05CA  
                                       l15890 72C2                                         l15874 730E  
                                       l14988 5964                       __end_of_SYS_TaskHandler 843C  
                                       l15796 03A6                                         l15788 0350  
                                       l15972 371C                                         l15964 36EC  
                                       l15956 36CA                                         l15948 36A0  
                                       l14998 59AA                                         l15974 3724  
                                       l15966 3700                                         l15958 36D2  
                                       l15994 3772                                         l15986 3756  
                                       ?_idle 0001                               __end_of___aodiv 3D92  
                                       ?_atoi 0009                     __end_of_NWK_GroupIsMember 7E44  
                                       ?_main 0001                                         ?_dtoa 001F  
                             __end_of___aomod 42A4                                         ?_rand 001A  
                                       STR_10 FED0                                         STR_11 FE46  
                                       STR_20 FFD4                                         STR_12 FFDF  
                                       STR_21 FFD7                                         STR_13 FFD7  
                                       STR_30 FFD7                                         STR_14 FECC  
                                       STR_22 FF66                                         STR_23 FECC  
                                       STR_15 FE73                                         STR_31 FE34  
                                       STR_40 FECC                                         STR_24 FECC  
                                       STR_16 FFDF                                         STR_32 FE22  
                                       STR_41 FFD7                                         STR_17 FFD7  
                                       STR_25 FFDF                                         STR_33 FE9A  
                               __CFG_WDTE$OFF 000000                                         STR_26 FECC  
                                       STR_34 FFDF                                         STR_18 FFDC  
                                       STR_50 FFC6                                         STR_42 FE80  
                                       STR_35 FECC                                         STR_27 FECC  
                                       STR_43 FFDF                                         STR_51 FFC6  
                                       STR_19 FFF5                                         STR_36 FFD7  
                                       STR_28 FFD7                                         STR_52 FECC  
                                       STR_44 FECC                                         STR_60 FEB4  
                                       STR_61 FFD7                                         STR_53 FFD7  
                                       STR_45 FFD7                                         STR_37 FE65  
                                       STR_29 FE0D                                         STR_54 FFDF  
                                       STR_38 FFDF                                         STR_46 FFEB  
                                       STR_70 FFE1                                         STR_62 FF61  
                                       STR_39 FECC                                         STR_63 FF61  
                                       STR_71 FFE1                                         STR_47 FFEB  
                                       STR_55 FFFD                                         STR_48 FFC0  
                                       STR_80 FF92                                         STR_56 FF39  
                                       STR_64 FF30                                         STR_72 FED8  
                                       STR_57 FFDF                                         STR_81 FF92  
                                       STR_73 FED8                                         STR_49 FFC0  
                                       STR_65 FF30                                         STR_58 FECC  
                                       STR_66 FFA7                                         STR_82 FF76  
                                       STR_74 FF51                                         STR_90 FEF7  
                                       STR_59 FFD7                                         STR_83 FF76  
                                       STR_75 FF51                                         STR_91 FEF7  
                                       STR_67 FFA7                                         STR_68 FFE6  
                                       STR_76 FF68                                         STR_84 FF15  
                                       STR_92 FEE3                                         STR_85 FF15  
                                       STR_77 FF68                                         STR_93 FEE3  
                                       STR_69 FFE6                                         STR_94 FF99  
                                       STR_78 FF0B                                         STR_86 FEA7  
                                       STR_87 FEA7                                         STR_95 FF99  
                                       STR_79 FF0B                                         STR_96 FF7D  
                                       STR_88 FE56                                         STR_97 FF7D  
                                       STR_89 FE56                                         STR_98 FF1E  
                                       STR_99 FF1E                            _implicitHeaderMode 82BC  
                                       ?_stoa 000D                         nwkDataReqConfirm@prev 000D  
                             __end_of___lldiv 6810                                         u10004 57CE  
                                       u10005 57C8                                         ?_utoa 001F  
                                       u12000 1BCA                                         u12020 1BEC  
                                       u12021 1BEA                                         u12030 1BFA  
                                       u12040 1C00                                         u13000 32AE  
                                       u12130 3FA2                                         u12210 27CC  
                             __end_of___lodiv 53EE                                         u12211 27CA  
                                       u12060 1C0E                                         u12220 27DA  
                                       u13030 6BE4                                         u11510 6DB0  
                                       u12230 27E0                                         u12310 1D82  
                                       u10390 842A                                         ?_xtoa 001F  
                                       u11520 7484                                         u12160 401E  
                                       u12320 1D84                                         u13200 3052  
                                       u14000 0DF2                               __end_of___llmod 6C80  
                                       u12081 3EF0                                         u11610 797C  
                                       u12250 1C86                                         u10810 4ED0  
                                       _U1P1H 003DED                                         u12500 6E6C  
                                       u11700 7E0C                                         u12420 386C  
                                       u12180 2614                                         u11620 7DA2  
                                       u12340 1E10                                         _U1P2H 003DEF  
                                       u13037 6BD6                                         u13070 352A  
                                       u11630 7DA4                                         u11550 7D6E  
                                       u12350 1E54                                         u12270 1D12  
                                       u13150 5AF4                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         u11527 7476  
                                       u14200 172A                                         u12440 3932  
                                       u11640 7DD6                                         u11560 7D70  
                                       u12280 1D48                                         u12600 07C8  
                                       u13160 5B10                                         _U1P2L 003DEE  
                                       u12345 1DFE                                         u12506 6E6E  
                                       u14210 1742                                         u12450 3934  
                                       u11810 41F2                                         u11490 6D68  
                                       u11650 7DD8                                         u12370 1E76  
                                       u12290 1D4A                                         u12610 07D6  
                                       u13250 30E2                                         u13330 430A  
                                       _U1P3L 003DF0                                         u11731 3C94  
                                       u12371 1E74                                         u11660 73D0  
                                       u12380 1E84                                         u13180 6CFC  
                                       u13260 30E4                                         u10780 696E  
                                       u14060 0E9A                                         u14230 1770  
                                       u11750 3CCC                                         u11670 73D2  
                                       u12390 1E8A                                         u12630 0812  
                                       u13270 310C                                         u13414 2472  
                                       u14150 5592                                         u14070 0EEE  
                                       u13415 246E                                         u13600 4C00  
                                       u11920 77A4                                         u12720 677C  
                                       u13280 312C                                         u16000 2064  
                                       u14160 5598                                         u15040 601A  
                                       u11841 5316                                         u14250 17A2  
                                       u11690 7E0A                                         u11930 19FC  
                                       u13290 3132                                         u14410 13A2  
                                       u13700 128A                                         u14228 1744  
                                       u11940 19FE                                         u11860 534E  
                                       u13540 2B6E                                         u13444 24E2  
                                       u14500 14B2                                         u14420 13B8  
                                       u16020 2094                                         u13605 4BF6  
                                       u13445 24DE                                         u14421 13B6  
                                       u14157 5584                                         u14077 0EE0  
                                       u14190 1728                                         u12670 09E4  
                                       u12590 07C6                                         u12910 5C40  
                                       u13550 2BA0                                         u13454 2548  
                                       u14510 14B4                                         u13375 4D06  
                                       u13455 2544                                         u13391 2422  
                                       u14248 1772                                         u14360 56BE  
                                       u13560 2BC2                                         u13376 4D08  
                                       u14600 163E                                         u14520 1514  
                                       u13800 0C0E                                         u13705 1280  
                             __end_of___lomod 5D8E                                         u11970 1A3C  
                                       u11890 5D02                                         u14610 1654  
                                       u14530 1516                                         u14290 6244  
                                       u16107 3BF8                                         u14268 17A4  
                                       u15148 2F8A                                         u14700 5B6E  
                                       u15340 45BA                                         u13900 0CCE  
                                       u12781 6398                                         u12950 4A78  
                                       u11990 1A6A                                         u13910 0D04  
                                       u13830 0C68                                         u13750 0B7E  
                                       u15280 4510                                         u14800 2216  
                                       u15520 034A                                         u13578 2C04  
                                       u13770 0BAE                                         u15530 036C  
                                       u12955 4A66                                         u14580 1602  
                                       u13860 0CAA                                         u13780 0BDE  
                                       u16077 7B02                                         u13917 0CF6  
                                       u13837 0C5A                                         u13757 0B70  
                                       u14750 5BFC                                         u14830 2860  
                                       u16087 3AE8                                         u13960 0DA8  
                                       u13880 0CBE                                         u16097 3B06  
                                       u13777 0BA0                                         u13970 0DAA  
                                       u15810 36B0                                         u13867 0C9C  
                                       u13787 0BD0                                         u14860 652A  
                                       u13990 0DF0                                __CFG_DEBUG$OFF 000000  
                                       u15760 4956                                         u14890 2C98  
                                       u14970 51F0                                         u15748 491A  
                                       u15749 492C                                         u14990 60C8  
                                       u15960 1FF8                                         u14897 2C8A  
                                       u15980 202A                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                   computeFRF@i 002F  
                                       _U1TXB 003DEA                           ??_UART1_rx_vect_isr 0001  
                                       i1l996 7440                             ?_NWK_OpenEndpoint 0002  
                                       _OSCEN 0039DD                               __end_of_cmdAddr 81AA  
                                vfpfcnvrt@fmt 0048                                 strtoul@endptr 0036  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 006E  
                                       _TMR0L 003FB6                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                 _Default_ISR 8520                               __end_of_cmdRecv 8514  
                             __end_of_cmdSend 23D0                     ??_CRC_CalculatedResultGet 000B  
           __size_of_TMR0_SetInterruptHandler 000E                           ___lmul@multiplicand 0006  
                   ?_TMR0_SetInterruptHandler 0002                            ??_NWK_OpenEndpoint 0004  
                            __end_of_TMR0_ISR 80EA                             _UART1_tx_vect_isr 814C  
                               __CFG_WRTB$OFF 000000                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                      __end_of_NWK_RouteNextHop 7616  
                      cmdSetCADRSSI@atCommand 0076                               _DATAEE_ReadByte 81E6  
                         ?_implicitHeaderMode 0001                          __size_of_cmdSetNaddr 007C  
                            __end_of_PHY_Init 8504                 nwkRouteSendRouteError@command 002F  
                       __end_of_Timer0Handler 7448                                         _flags 00DE  
                        __size_of_cmdSendSink 0002                     __size_of_CRC_ReverseValue 0058  
                                       _errno 0155                                         _fputc 6D58  
                             __end_of_isalpha 7DDE                                         _fputs 7930  
                             __end_of_isdigit 7E12                         ?_SYS_TimerTaskHandler 0001  
                                       _nwkIb 0100                              __end_of_NWK_Init 72FC  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                             __end_of_receive 79EA                                         _srand 7BFA  
                                       atoi@n 0016                                         pad@fp 0014  
                                       atoi@s 0009                                         _width 00DA  
                                       _putch 84DA                                         dtoa@d 0021  
                                       dtoa@i 0041                                         dtoa@n 0039  
                                       dtoa@p 0033                                         dtoa@s 0037  
                                       dtoa@w 0035                               __end_of_islower 7D76  
                             __end_of_isspace 77B2                          __size_of_appDataConf 0022  
                             __end_of_isupper 7DAA                                         pclath 003FFA  
                                       tablat 003FF5                              _nwkTxTaskHandler 2E12  
                           nwkRxSendAck@frame 002A                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 0018  
                                       stoa@l 001F                                         stoa@p 001D  
                                       stoa@s 000F                                         stoa@w 001A  
                         nwkDataReqTxConf@req 0008                                         utoa@d 0021  
                                       utoa@i 003D                                         utoa@n 0035  
                                       utoa@p 0031                                         utoa@w 0033  
                 nwkTxConvertPhyStatus@status 0004                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 8474                   _UART1_SetRxInterruptHandler 8466  
                __size_of_nwkRxServiceDataInd 006C                                         xtoa@c 0044  
                                       xtoa@d 0021                                         xtoa@i 0042  
                                       xtoa@n 003A                                         xtoa@p 0036  
                                       xtoa@w 0038                                         xtoa@x 0029  
             nwkTxAckWaitTimerHandler@restart 0016                               __end_of_strcspn 701C  
                             __end_of_strncmp 4862                               __end_of_toupper 73F6  
                            ___lodiv@dividend 0002      __end_of_UART1_DefaultFramingErrorHandler 8526  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 8524  
                             __end_of_strtoul 765C                       SX1276WriteBuffer@buffer 0009  
                         ??_UART1_tx_vect_isr 0001                              __end_of_SYS_Init 8458  
                   __end_of_UART1_rx_vect_isr 818C                      __size_of_SPI1_Initialize 001A  
                  __size_of_setPreambleLength 001A                                nwkFrameAlloc@i 0012  
                                _toupper$7870 000E                             nwkTxConfirm@frame 0002  
                             ?_setCodingRate4 0001                               __initialization 55A2  
                  __end_of_NWK_RouteFindEntry 6E98                          ??_implicitHeaderMode 0011  
                                __end_of_cmdI 84F8                                  __end_of_idle 84B8  
                                __end_of_atoi 3978                                  __end_of_main 7F1A  
                                __end_of_dtoa 1C74                                  __end_of_rand 4A8A  
                           nwkFrameNext@frame 0002                   SYS_TimerTaskHandler@elapsed 001E  
                                __end_of_stoa 402C                                  __end_of_utoa 2816  
                                __end_of_xtoa 1EF4                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                               ?_SYS_TimerStart 0010  
                         __size_of_SX1276Read 0016                         ??_CircularBufferSpace 000C  
                             cmdSend@destaddr 007A                    __end_of_NWK_RouteFreeEntry 7CD6  
                            _need_radio_reset 016A                              ??_CRC_Initialize 0002  
                                ?_UART1_Write 0001                                _free_tx_buffer 7498  
                                      ??_cmdI 005E                             cmdSetSF@atCommand 0076  
                                      ??_idle 0011                                        ??_atoi 000B  
                                      ??_main 005E                                        ??_dtoa 0029  
                                      ??_rand 001C                                __CFG_PR1WAY$ON 000000  
                                      ??_stoa 0010                                        ??_utoa 0029  
                                      ??_xtoa 002A                                 __activetblptr 000003  
                 __size_of_getSignalBandwidth 0122                   __size_of_setSignalBandwidth 03C6  
        __size_of_UART1_SetTxInterruptHandler 000E                           executeATCommand@cmd 00A4  
                   __end_of_UART1_tx_vect_isr 816C                                __CFG_MVECEN$ON 000000  
                  __end_of_nwkRxIndicateFrame 2C16                               ??_queueLedEvent 001E  
                         computeFRF@frequency 0023                              ___lodiv@quotient 0012  
                    __end_of_executeATCommand 0640                           CRC_ReverseValue@crc 0002  
                            _UART1_Initialize 6104                      ??_CircularBufferPushBack 0016  
                              _nwkDataReqInit 84C4                         queueLedEvent@duration 001C  
                DIO0_Receive_ISR@packetLength 0019                           NWK_RouteNextHop@dst 0008  
                           ??_start_radio_cad 0011                           _bootLoadApplication 1EF4  
                __end_of_nwkRxRejectDuplicate 2602                  __size_of_nwkDataReqSendFrame 0332  
                                      ?_fputc 0004                              ___llmod@dividend 0002  
                                      STR_100 FFFA                                        STR_101 FFFA  
                                      STR_102 FFB4                                        STR_110 FF27  
                                      ?_fputs 000D                                        STR_111 FF27  
                                      STR_103 FFB4                                        STR_112 FFCC  
                                      STR_120 FFA0                                        STR_104 FF84  
                                      STR_105 FF84                                        STR_121 FFA0  
                                      STR_113 FFCC                                        STR_130 FECC  
                                      STR_122 FFBA                                        STR_114 FF8B  
                                      STR_106 FF59                                        STR_115 FF8B  
                                      STR_123 FFBA                                        STR_107 FF59  
                                      STR_131 FEC0                                        STR_124 FFAE  
                                      STR_116 FF6F                                        STR_108 FF49  
                                      STR_132 FDF3                                        STR_117 FF6F  
                                      STR_125 FFAE                                        STR_109 FF49  
                                      STR_133 FDD7                                        STR_118 FFF0  
                                      STR_134 FF41                                        STR_126 FF01  
                                      STR_127 FF01                                        STR_119 FFF0  
                                      STR_135 FFD2                                        STR_128 FEED  
                                      STR_129 FEED                               cmdSend@tempaddr 007F  
                                      ?_srand 0002                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                         __end_of_nwkFrameAlloc 5EF8  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                            _processATCommand 368E                                        _U1CON0 003DF2  
                    nwkRxHandleIndication@ack 00D9                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                           __size_of_UART1_Read 0046  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _RB0PPS 003A08  
                          __CFG_PWRTS$PWRT_64 000000                                        _RC0PPS 003A10  
                                      _RC1PPS 003A11                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _RC7PPS 003A17                                __CFG_WDTCCS$SC 000000  
                                loadMACAddr@i 0006                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLE 003A84                                        _TABLAT 003FF5  
                           ?_nwkDataReqTxConf 0004                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 006A                              __end_of_cmdBcast 2A16  
                                      _NVMDAT 0039E3                              __end_of_cmdGetSF 8346  
                            __end_of_cmdGetTX 8330                         _UART1_SetErrorHandler 8490  
                            __end_of_cmdNaddr 831A                                placeTimer@prev 000C  
                                ?_setSyncWord 0001                              __end_of___xxtofl 3ADC  
                            __end_of_cmdSetSF 6056                              __end_of_cmdSetTX 5230  
                          ??_nwkDataReqTxConf 0006                              __end_of_cmdReset 850E  
                          PHY_DataConf@status 0005                              set_parity@parity 0004  
                  __size_of_SPI1_ExchangeByte 001A                                __CFG_XINST$OFF 000000  
                                ___strtoxl@cp 0031                                  vfprintf@cfmt 0053  
                               ?_radio_engine 0001                                  ?_PHY_DataInd 0013  
                                ?_PHY_DataReq 0011                          ?_bootLoadApplication 0001  
                                      ___flge 581E                              __end_of_fhssList FDC5  
                                      ___lmul 70DA                                        ___omul 6392  
                                   ??___aodiv 0012                                     ??___aomod 0012  
                                      ___wmul 7E44                                        _cmdMac 7534  
                              __CFG_STVREN$ON 000000                                        _crcObj 01DA  
                                   ??___lldiv 001E                                     ??___lodiv 0012  
                                   ??___llmod 000A                        __end_of_free_tx_buffer 74E6  
                                   ??___lomod 0012                         __size_of_cmdSetParity 008A  
                                   ??_cmdAddr 005E                                        _memcpy 6BA0  
                            ?_TMR0_Initialize 0001                      __end_of_nwkRxTaskHandler 5FA8  
                                      _memset 3D92                                     ??_cmdRecv 0002  
                                   ??_cmdSend 0078                              ___strtoxl@endptr 0012  
                                      clear_0 5610                                        clear_1 5622  
                                      clear_2 562E                                        clear_3 563A  
                                      clear_4 5646                                        clear_5 5652  
                                      clear_6 565E                              setCodingRate4@cr 0012  
                   CircularBufferPushBack@ctx 0013                     CircularBufferPushBack@val 0015  
               DATAEE_ReadByte_Platform@copy1 000A                 DATAEE_ReadByte_Platform@copy2 0009  
               DATAEE_ReadByte_Platform@copy3 0008                                        _timers 00E0  
                                      _printf 801E                                        pad@buf 0016  
           __size_of_nwkTxAckWaitTimerHandler 0090                    __size_of_NWK_GroupIsMember 0032  
             __size_of_nwkRouteSendRouteError 00E0                              ?_SYS_TaskHandler 0001  
                                      dtoa@fp 001F                                        _strchr 6898  
                   ?_nwkTxAckWaitTimerHandler 0012                       __end_of_DATAEE_ReadByte 8204  
                            ___strtoxl@prev_a 001B                              __end_of_sendInfo 7196  
                                      _strlen 7448                                        _strtok 53EE  
                                      _strspn 6F5C                                        _strtol 78B4  
                                      _strstr 54CA                                 cmdSetAES@byte 00A0  
              __size_of_nwkTxConvertPhyStatus 0038                                 cmdSetAES@temp 009C  
               __end_of_nwkTxConvertPhyStatus 7BFA                                        fputc@c 0004  
                              _PMD_Initialize 80A6                                        fputs@c 0011  
                                      fputs@i 0012                                  __packetIndex 016B  
                                      fputs@s 000D                                     ??_isalpha 0004  
                                   ??_isdigit 0004                        __end_of_nwkDataReqInit 84D0  
              __size_of_nwkRouteFrameReceived 01E2                                     ??_receive 0011  
                     _setSpreadingFactor$8634 0027                 __end_of_nwkRouteFrameReceived 31E4  
                                   ??_islower 0004                                  __mediumconst FCC8  
                                   ??_isspace 0004                                        tblptrh 003FF7  
                                   ??_isupper 0004                                        tblptrl 003FF6  
                                      tblptru 003FF8                   __end_ofNWK_LinearizeLqi@val FDCE  
                                      srand@s 0002                        ??_SYS_TimerTaskHandler 0019  
                                ?_NWK_DataReq 0002                                        stoa@cp 001C  
                                      stoa@fp 000D                          __size_of_loadMACAddr 003C  
                       __end_of_TMR0_CallBack 814A                              __end_of_vfprintf 6F5C  
                                      utoa@fp 001F                          processATCommand@data 00AC  
 UART1_SetTxInterruptHandler@InterruptHandler 0002   UART1_SetRxInterruptHandler@InterruptHandler 0002  
    TMR0_SetInterruptHandler@InterruptHandler 0002          __end_of_UART1_SetOverrunErrorHandler 8482  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler 8474  
                               _curent_parity 0171                     _UART1_DefaultErrorHandler 8504  
                                      xtoa@fp 001F                                     ??_strcspn 000C  
                                   ??_strncmp 0008                                     ??_toupper 000A  
                                   ??_strtoul 003A                 __size_of_INTERRUPT_Initialize 0040  
                __size_of_UART1_RxDataHandler 0024                                    ___flge@ff1 0010  
                                  ___flge@ff2 0014                                 cmdSetRFCH@cmd 0076  
                     ??_nwkRouteErrorReceived 000E                                  ___xxtofl@arg 000C  
                                ___xxtofl@exp 000B                             _SYSTEM_Initialize 8084  
                                ___xxtofl@val 0002                                 cmdSetSF@CHstr 007A  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                        cmdGetRxCnt@atCommand 0002                       __end_of__initialization 5672  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0035  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 7C32  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 6E98  
                          _getSpreadingFactor 8254                                    _cadCounter 00ED  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 4B98  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                             _PHY_TaskHandler 84F8                                  _cmdSetParity 6672  
                    ??_queue_serial_led_event 0022                       SYS_TimerTaskHandler@cnt 001D  
                              ??_radio_engine 003A                            ??_nwkTxAckReceived 0009  
            __end_of_nwkRxHandleReceivedFrame 1692                         ??_bootLoadApplication 0030  
                          __size_of_cmdGetCAD 0016                                    _cadTimeOut 00F5  
                              __pcstackCOMRAM 0001                            CRC_Initialize@seed 0005  
                          __size_of_cmdGetTTL 0002                            __size_of___strtoxl 042E  
                          CRC_Initialize@poly 0003                      __end_of_SX1276ReadBuffer 7F6A  
                               cmdSetTX@CHstr 007D                  __size_of_nwkFrameCommandInit 0040  
                      __size_of_cmdGetCADRSSI 001A                                 cmdSetAddr@cmd 0076  
                                __pidataBANK0 84EC                                  __pidataBANK1 83DA  
                                __pidataBANK2 84D0                            nwkTxConfirm@status 0004  
                         ??_SYSTEM_Initialize 0007                           ?_get_free_tx_buffer 0002  
                         ?_getSpreadingFactor 000F                                   placeTimer@t 000E  
                                   ?_TMR0_ISR 0001                            __size_of_cmdSetAES 01FC  
                         ?_setSpreadingFactor 0001                nwkRxHandleReceivedFrame@header 0031  
                          __size_of_cmdSetTTL 0002                              _DATAEE_WriteByte 77F4  
                              ivt0x8_undefint 00AC                               ?_free_tx_buffer 0002  
                           PHY_SetPanId@panId 0002                            __size_of_cmdRstCAD 0014  
                                   ?_PHY_Init 0001                                 __end_of_fputc 6DC4  
                               cmdSetBaud@ptr 003D                                 __end_of_fputs 796E  
                           ??_SPI1_Initialize 0002                      nwkRxIndicateFrame@header 00C7  
              nwkRxHandleReceivedFrame@member 002E                                 __end_of_srand 7C32  
                               __end_of_putch 84E4                         SX1276WriteBuffer@addr 000B  
                  ??_DATAEE_ReadByte_Platform 0008                                     ?_NWK_Init 0001  
                                 receive@size 0011          __size_ofnwkFrame@nwkFramePayloadSize 002A  
                       SX1276WriteBuffer@size 000A                        __end_of_PMD_Initialize 80C8  
                       SPI1_ExchangeByte@data 0002                                 cmdSend@buf_id 0085  
                    nwkDataReqTaskHandler@req 0033                            _spi1_configuration FDCE  
                          __size_of_enableCrc 0012                __size_of_nwkDataReqTaskHandler 0082  
                  __size_of_UART1_tx_vect_isr 0020                             ?_DIO0_Receive_ISR 0001  
               __end_of_nwkDataReqTaskHandler 6AA4                              ??_get_timer0base 0004  
                        __size_of_SX1276Write 0012                               ?_nwkDataReqInit 0001  
                               cmdSetNaddr@p1 007A                                 cmdSetNaddr@p2 0078  
                                crc16_app@len 0015                                  crc16_app@ptr 001B  
                                   ?_SYS_Init 0001                                _nwkFrameFrames 05BD  
                   _UART1_FramingErrorHandler 01E3                                    _cmdGetRFCH 8204  
                          ??_DIO0_Receive_ISR 0019               __size_of_CircularBufferPushBack 00F4  
                       __end_of_set_uart_baud 5A88                                    _cmdGetMode 8412  
                                _DIA_ReadByte 7FFC                          ??_get_free_tx_buffer 0003  
                        ??_getSpreadingFactor 0013                              _CRC_ReverseValue 724E  
                                ??_SX1276Read 000D                          ??_setSpreadingFactor 0023  
                                     ??_fputc 0008                     __end_of_SYSTEM_Initialize 80A6  
                                     ??_fputs 0011                      __end_of_SYS_TimerStarted 772A  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0004  
                                     ??_putch 0003                                    _cmdSetRFCH 6256  
                               ?_setFrequency 0023                        __end_of_SPI1_ReadBlock 7C6A  
                                  __pbssBANK0 00DA                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
                                  __pbssBANK4 0400                                    __pbssBANK5 0500  
                                  _cmdSetAddr 64C4                                    _cmdSetBaud 6C80  
               ?_UART1_SetOverrunErrorHandler 0002                        ?_UART1_SetErrorHandler 0002  
                                  _cmdSetSink 8404                         __end_of_nwkRouteFrame 574E  
                      _nwkRouteSendRouteError 5230                                    _appDataInd 69A0  
                          __size_of_initRadio 015E                                    crc16_app@i 001D  
                __size_of_nwkTxBroadcastFrame 0144                                    _atStateVar 00EF  
                 nwkTxBroadcastFrame@newFrame 0027                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                        CRC_ReverseValue@mask 0007                               setTxPower@power 0011  
                     setPreambleLength@length 0011                                       ?___flge 0010  
            __end_of_TMR0_SetInterruptHandler 84AC                                       ?___lmul 0002  
                          _explicitHeaderMode 82D4                                       ?___omul 0002  
                                ??_UART1_Read 0002                      __size_of_print_hop_table 000E  
                                     ?___wmul 0002                               _nwkDataReqQueue 00E2  
                                     ?_cmdMac 0001                                    ??_TMR0_ISR 0001  
                             __CFG_PPS1WAY$ON 000000                            NWK_OpenEndpoint@id 0004  
                        _nwkRxRejectDuplicate 23D0                             _nwkDataReqConfirm 5068  
                     __size_of_set_timer0base 0020                                    ??_PHY_Init 003A  
                   __size_of_PHY_SetShortAddr 0002                           nwkTxAckReceived@ind 0008  
                                     ?_memcpy 0008                                       ?_memset 0002  
              __size_of_nwkRxHandleIndication 00CE                           ___omul@multiplicand 000A  
                              ___lmul@product 000A                                    ??_NWK_Init 0006  
                          __end_of_SX1276Read 8372                             _SX1276WriteBuffer 7FB4  
               __end_of_nwkRxHandleIndication 59BC                      __end_of_nwkTxTaskHandler 3002  
                          ?_nwkDataReqConfirm 0009                                       _CRCACCH 003963  
                                     _CRCACCL 003962                                       ?_printf 0055  
                             ?_PMD_Initialize 0001                                       _CRCDATH 003961  
                                     _CRCDATL 003960                             _UART1_Receive_ISR 642C  
                                     _CRCCON0 003968                                       _CRCCON1 003969  
                          __size_of_nwkRxInit 004C                           _nwkRxServiceDataInd 6CEC  
                          __size_of_nwkTxInit 0042                                       ?_strchr 0002  
                         ?_explicitHeaderMode 0001                                       ?_strlen 0002  
                                     ?_strtok 000F                                       ?_strtol 0034  
                                     ?_strspn 0008                                       ?_strstr 000D  
                                     _CRCXORH 003967                                       _CRCXORL 003966  
                            ?_DATAEE_ReadByte 0002                             __end_of_crc16_app 69A0  
                               ?_nwkFrameFree 0002                            ?_SX1276WriteBuffer 0009  
                               ?_nwkFrameInit 0001                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                                 ?_nwkFrameNext 0002  
                                   ?_cmdBcast 0076                                       i1l12230 7430  
                                     i1l12222 7414                                       i1l12226 7422  
                                     i1l12218 7406                                     ?_cmdGetSF 0001  
                                   ?_cmdGetTX 0001                             _CRC_8BitDataWrite 83BA  
                                     i2l11558 7FF6                                       i2l12624 7BB0  
                                     i2l12626 7BB6                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 0044                                       i2l12648 64BE  
                                   ?_cmdNaddr 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0002  
                                   ?_cmdSetSF 0076                                     ?_cmdSetTX 0076  
                               computeFRF@num 002B                                     ?_cmdReset 0001  
                               appDataInd@ind 0076                                    ??_SYS_Init 003A  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                     nwkRouteNormalizeRanks@i 0003                           ??_nwkDataReqConfirm 000B  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 04F0  
                                     _TBLPTRH 003FF7                                       _TBLPTRL 003FF6  
                          ?_CRC_8BitDataWrite 0001                                       _SPI1CLK 003D1C  
                                     _TBLPTRU 003FF8                      print_hop_table@atCommand 0076  
                                     _SPI1RXB 003D10                                       _NVMADRH 0039E1  
                                     _NVMADRL 0039E0                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _NVMCON2 0039E6  
                           __end_of_cmdGetCAD 835C                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                               _cmdGetCADRSSI 8220                             __end_of_cmdGetTTL 8516  
                           __end_of___strtoxl 0F5E            __size_of_DATAEE_WriteByte_Platform 0044  
                           ?_NWK_RouteNextHop 0008                           ??_SX1276WriteBuffer 000B  
                      __size_of_cmdSetCADRSSI 00AE                                    cmdBcast@p1 007A  
                              ??_setFrequency 0027                    ?_DATAEE_WriteByte_Platform 0006  
                           __end_of_cmdSetAES 2E12                           ??_UART1_Receive_ISR 0001  
                             placeTimer@timer 0002                       __end_of_PHY_TaskHandler 84FE  
                            ___lomod@dividend 0002                             __end_of_cmdSetTTL 8510  
                       nwkTxAckReceived@frame 000D                             __end_of_cmdRstCAD 8386  
                             ?_SPI1_ReadBlock 0003                               crc16_app@result 0019  
                          ??_NWK_RouteNextHop 000B                                    _computeFRF 3384  
                          __end_of_UART1_Read 76A2                                     NWK_Init@i 0006  
                               ?_nwkGroupInit 0001                           ??_CRC_8BitDataWrite 0002  
                     __size_of_nwkRouteRemove 003C                          DATAEE_WriteByte@bAdd 0002  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 0076  
                        ??_explicitHeaderMode 0011                                       _TXPower 00EA  
                   __size_of_NWK_OpenEndpoint 0020                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 8398                                    _dwellTimer 0165  
                                   ?_sendInfo 0001                                    _packetRSSI 0168  
                                     __Hparam 0000                              ??_SYS_TimerStart 0012  
             __size_of_queue_serial_led_event 0054                          __size_of_setSyncWord 0010  
                                     __Lparam 0000                      __end_of_UART1_Initialize 61AE  
                      _CircularBufferPushBack 4D96                     __end_of_nwkDataReqConfirm 5150  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ??_cmdGetRxCnt 0004                                    cmdSetAES@i 00A3  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 1692                                 ??_cmdBootLoad 0076  
                             __size_of___flge 00D0                         ?_nwkRxRejectDuplicate 0012  
                                     ___aodiv 3C3A                                       ___aomod 4170  
                         nwkRouteRemove@entry 000B                      __size_of_NWK_TaskHandler 000E  
                                     _cadDone 00EE                     __end_of_SX1276WriteBuffer 7FD8  
                                  cmdSetSF@p1 0078                               __size_of___lmul 005E  
                                  cmdSetSF@p2 007D                               __size_of___omul 009A  
                 __size_of_CircularBufferSize 005E                                       ___lldiv 6786  
                             __size_of___wmul 002E                                       ___lodiv 5310  
                                     ___llmod 6C12                               __size_of_cmdMac 004C  
                      __size_of_SYS_TimerInit 000C                                       ___lomod 5CD0  
                                  cmdSetTX@p1 007A                                    cmdSetTX@p2 0078  
                       nwkRxIndicateFrame@ind 00C9                     __end_of_UART1_Receive_ISR 64C4  
                                   ?_vfprintf 004E                                    cmdSend@cmd 0076  
                                     cad@temp 0014                          __size_of_PHY_DataInd 012C  
                    __end_of_processATCommand 3808                          __size_of_PHY_DataReq 005C  
                                     _cmdAddr 818C                             cmdSetCADRSSI@temp 007F  
                                     _aes_key 0224                                       _cmdRecv 8512  
                                  _current_sf 00EC                               _start_radio_cad 83CA  
                                     _cmdSend 2166                                       _channel 00EB  
                                     __pcinit 55A2                               __size_of_memcpy 0072  
                             __size_of_memset 0154                                       __ramtop 1000  
                   __end_of_CRC_8BitDataWrite 83CA                   __size_of_UART1_Transmit_ISR 003A  
                     __size_of_PHY_SetChannel 003E                                ??_nwkFrameFree 0004  
                                     __ptext0 7EF2                                       __ptext1 368E  
                                     __ptext2 72FC                                       __ptext3 7AA0  
                                     __ptext4 7C6A                                       __ptext5 707C  
                                     __ptext6 4D96                                       __ptext7 00B2  
                                     __ptext8 83E8                                       __ptext9 83F6  
                              ??_nwkFrameInit 0002                                ??_nwkFrameNext 0004  
                             __size_of_printf 0022                      SPI1_WriteBlock@blockSize 0005  
                                     _fhssReg 0500                             __end_of_initRadio 3C3A  
                                     cmdMac@i 0077                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strchr 0084                               __size_of_strlen 0050  
                                  ??_cmdBcast 0078                               __size_of_strtok 00DC  
                             __size_of_strspn 0060                               __size_of_strtol 003E  
                             __size_of_strstr 00D8                                    ??_cmdGetSF 005E  
                                  ??_cmdGetTX 005E                         _OSCILLATOR_Initialize 82EC  
                               ?_nwkRouteInit 0001                                 ??_cmdSetNaddr 005E  
                                __size_of_cad 00C0                                  __size_of_abs 003E  
                                  ??_cmdNaddr 005E                                    _placeTimer 31E4  
                                __size_of_pad 00B6                                       _isalpha 7DAA  
                                     _isdigit 7DDE                                 ??_cmdSendSink 0004  
                                  ??_cmdSetSF 005E                                    ??___xxtofl 0006  
                          _NWK_RouteFindEntry 6E30                                       _net_key 0214  
                                  ??_cmdSetTX 005E                                       _receive 79AC  
                                  ??_cmdReset 0002                      nwkFrameCommandInit@frame 0002  
        ??strspn@nwkFrame@nwkFramePayloadSize 0004           ?strspn@nwkFrame@nwkFramePayloadSize 0002  
                             _radio_state_var 0164                                       _islower 7D42  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 776E  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 7D76                                ?_cmdGetCADRSSI 0001  
                           ?_executeATCommand 00A4                                 ??_appDataConf 0009  
           __size_of_nwkRxHandleReceivedFrame 036E                          __end_of_radio_engine 4620  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 0148                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 7CA0                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 00F1                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00A6                                       _strcspn 6FBC  
                                     _strncmp 4742                                       _toupper 73A4  
                         SYS_TimerStart@timer 0010                          end_of_initialization 5672  
                         ?_NWK_RouteFindEntry 0002                                       _strtoul 7616  
                                 ?_cmdSetRFCH 0076                                     _SCANHADRH 00397A  
                                   _SCANHADRL 003979                                     _SCANHADRU 00397B  
                         __implicitHeaderMode 016C                                ??_nwkGroupInit 0002  
                        __size_of_NWK_DataReq 0080             __end_of_DATAEE_WriteByte_Platform 76E6  
                                 ?_cmdSetAddr 0076                                     _SCANLADRH 003977  
                                   _SCANLADRL 003976                                   ?_cmdSetBaud 003A  
                                   _SCANLADRU 003978          nwkRxDuplicateRejectionTimerHandler@i 0015  
                                 ?_cmdSetSink 0001                             queueLedEvent@temp 001F  
                              ___omul@product 0012                         ??_nwkRxServiceDataInd 0077  
                                     memcpy@d 000F                                       memcpy@n 000C  
                                     memcpy@s 0011                                       fputc@fp 0006  
                                 ?_appDataInd 0076                                     i1u1132_28 8138  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 8466                   _UART1_SetTxInterruptHandler 8458  
                                     fputs@fp 000F                   CRC_CalculatedResultGet@mask 000E  
                         ?_NWK_RouteFreeEntry 0002                             __end_of_nwkRxInit 75CC  
                          _nwkRxIndicateFrame 2A16                   nwkTxDelayTimerHandler@frame 0017  
                           __end_of_nwkTxInit 77F4                                     i2u1140_48 64AA  
                                   i2u1142_48 815A                                     i2u1136_48 6456  
                                   i2u1144_48 817A                                     i2u1136_49 6468  
                                   i2u1138_48 6482                                     i2u1138_49 6494  
                                  _setTxPower 7EC8                         NWK_RouteNewEntry@iter 0007  
                         nwkRxSendAck@command 002C                   nwkTxDelayTimerHandler@timer 0012  
                                  ??_sendInfo 005E                          __size_of_NWK_SetAddr 001E  
              ??_UART1_SetOverrunErrorHandler 0004                               ___lldiv@divisor 001A  
                             ___lldiv@counter 0022                   __end_of_CircularBufferSpace 7CA0  
                              ??_PHY_DataConf 0005                                ??_nwkRxSendAck 002C  
                              ??_nwkTxConfirm 0005                      ??_nwkRouteNormalizeRanks 0002  
                           __end_of_vfpfcnvrt 0B30                                    _nwkTxFrame 350E  
                                  _set_parity 701C                                     _SPI1TCNTL 003D12  
                         ?_nwkRxIndicateFrame 00BB                   __size_of_implicitHeaderMode 0018  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                   _SPI1SSPPS 003AE0                                 _cmdSetCADRSSI 6056  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                         nwkDataReqTxConf@frame 0004  
                        ??_NWK_RouteFindEntry 0005                        __size_of_Timer0Handler 0052  
                                  ??_vfprintf 0053                     __size_of_nwkDataReqTxConf 00A8  
                                     strchr@c 0004                             UART1_Write@txData 0002  
                         _UART1_RxDataHandler 7FD8                                       strchr@s 0002  
                       __CFG_WDTCPS$WDTCPS_31 000000                    __end_of_getSignalBandwidth 4742  
                                     strlen@a 0004                             initRadio@wideRSSI 0038  
                  __end_of_setSignalBandwidth 1324                                       strlen@s 0002  
                       nwkTxTaskHandler@frame 0016                      ?_CRC_CalculatedResultGet 0009  
                           ?_nwkRxTaskHandler 0001                    nwkRxHandleIndication@frame 00D5  
                                     strspn@c 000A                                       strspn@i 000D  
                                     strtok@p 0157                                       strtok@s 000F  
                                     strtol@s 0034                                       strspn@s 0008  
                                     strstr@h 000D                      _TMR0_SetInterruptHandler 849E  
                                     strstr@n 000F                                     _PORTBbits 003FCB  
                        ??_NWK_RouteFreeEntry 0004                           __end_of_cmdGetRxCnt 8518  
                              ??_nwkRouteInit 0002                             ??_print_hop_table 005E  
                         __end_of_cmdBootLoad 7B14                            ??_nwkRxTaskHandler 01FC  
                                  _test_timer 01FA                        _queue_serial_led_event 72FC  
                              cmdSetRFCH@temp 007F                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 7ADA                          ??_nwkRxIndicateFrame 00BD  
                         _nwkFrameCommandInit 7834                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 84B8  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 7834  
                         __end_of_cmdSetNaddr 6BA0                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 8512  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                       _nwkRxIndicateFrame$5152 00C1  
                     _nwkRxIndicateFrame$5153 00C2                       _nwkRxIndicateFrame$5154 00C3  
                     _nwkRxIndicateFrame$5155 00C4                       _nwkRxIndicateFrame$5156 00C5  
                     _nwkRxIndicateFrame$5157 00C6                           __end_of_appDataConf 8062  
              __size_of_nwkRouteErrorReceived 005C                         setSignalBandwidth@sbw 0023  
                             _SPI1_Initialize 82A2                 __end_of_nwkRouteErrorReceived 724E  
                            ??_free_tx_buffer 0004                             _nwkTxAckWaitTimer 01A2  
                    ??_nwkTxDelayTimerHandler 0014                       __end_of_start_radio_cad 83DA  
                      ??_nwkRxRejectDuplicate 0014                    __size_of_nwkDataReqConfirm 00E8  
                        _timer0ReloadVal16bit 01E7                                ?_cmdSetCADRSSI 0076  
                         __size_of_cmdGetRFCH 001C                         CircularBufferSize@ctx 0002  
                        ?_nwkFrameCommandInit 0002                      __end_of_CRC_ReverseValue 72A6  
                         __size_of_cmdGetMode 000E                    __size_of_SX1276WriteBuffer 0024  
                           ?_SX1276ReadBuffer 0009                                _set_timer0base 80EA  
                __end_of_INTERRUPT_Initialize 78B4                       queue_serial_led_event@i 0022  
                     nwkRouteRemove@multicast 000A                              _PHY_SetShortAddr 851A  
                              __end_of___flge 58EE                    __size_of_UART1_Receive_ISR 0098  
                        __end_of_setFrequency 44FA                                __end_of___lmul 7138  
                              __end_of___omul 642C                                   vfpfcnvrt@ap 0049  
                                 vfpfcnvrt@cp 0069                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 7E72  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 7580  
                          ??_SX1276ReadBuffer 000C                        __size_of_nwkFrameAlloc 00B4  
                         __size_of_cmdSetRFCH 00A0               CircularBufferPushBack@write_pos 001A  
                           __size_of_TMR0_ISR 0022                    __size_of_CRC_8BitDataWrite 0010  
                         __size_of_cmdSetAddr 0092                           __size_of_cmdSetBaud 006C  
                           __size_of_PHY_Init 0006                                __end_of_memcpy 6C12  
                      ?_OSCILLATOR_Initialize 0001                           __size_of_cmdSetSink 000E  
                              __end_of_memset 3EE6                     __size_of_nwkTxAckReceived 00C0  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 0082  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0056  
                           ??_NWK_TaskHandler 005E                                __end_of_printf 8040  
                         _nwkTxBroadcastFrame 402C                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 005E                                   ?_placeTimer 0002  
                              __end_of_strchr 691C                                __end_of_strlen 7498  
                              __end_of_strtok 54CA                                __end_of_strspn 6FBC  
                              __end_of_strtol 78F2                                __end_of_strstr 55A2  
                         start_initialization 55A2                               ___lodiv@divisor 000A  
                             ___lodiv@counter 001A                      __size_of_TMR0_Initialize 003E  
                       _nwkTxConvertPhyStatus 7BC2               __size_of_PIN_MANAGER_Initialize 0088  
                           cmdSetAES@key_type 009F                                ??_NWK_SetPanId 0006  
                                 __end_of_cad 5C10                                   __end_of_abs 79AC  
                               nwkFrameInit@i 0002                                   __end_of_pad 5E44  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0004  
                              ?_SYS_TimerInit 0001                         _nwkRouteFrameReceived 3002  
                     __size_of_CRC_Initialize 006C                       ?_nwkRouteSendRouteError 002A  
                    __size_of_SYS_TaskHandler 000E                             __size_of_SYS_Init 000E  
                       ??_UART1_RxDataHandler 0001                                 _Timer0Handler 73F6  
                                 putch@txData 0003                                    ivt0x8_base 0008  
               __size_of_SYS_TimerTaskHandler 011A                       NWK_RouteFreeEntry@entry 0002  
                           ?_SYS_TimerStarted 0002                                _nwkRouteRemove 7A64  
                               _uart1RxBuffer 0138                                  _msgIDCounter 00F2  
                 __end_of_bootLoadApplication 2166                            ??_SYS_TimerStarted 0004  
                           ___omul@multiplier 0002                                 _uart1TxBuffer 0300  
                            _NWK_OpenEndpoint 810A                               ___llmod@divisor 0006  
                        __end_of_nwkFrameFree 8254                          __end_of_nwkFrameInit 8084  
                   __size_of_DIO0_Receive_ISR 009C                                   ?_setTxPower 0001  
                        __end_of_nwkFrameNext 6786                          ?_nwkTxBroadcastFrame 0024  
                             ___llmod@counter 000A                           DATAEE_ReadByte@bAdd 0002  
                              cmdSetNaddr@cmd 0076                        nwkRouteFrameSent@frame 0008  
                               crc16_app@dptr 0013                        nwkRouteFrameSent@entry 000C  
                               crc16_app@seed 0017                              __CFG_LPBOREN$OFF 000000  
                           _nwkRouteFrameSent 4F7C                        __end_of_set_timer0base 810A  
                                 ___strtoxl@a 002D                                   ___strtoxl@c 0033  
                                 ___strtoxl@s 0010                         ??_nwkFrameCommandInit 0004  
                             NWK_SetAddr@addr 0004                                   vfprintf@fmt 0050  
                                 ?_nwkTxFrame 0024                             nwkRouteRemove@dst 0008  
                                 ?_set_parity 0001               __end_of_CRC_CalculatedResultGet 581E  
                                    ??___flge 0018                 nwkTxDelayTimerHandler@restart 0016  
                            ??_PMD_Initialize 0002               __size_of_nwkRouteNormalizeRanks 003A  
                                    ??___lmul 000A                                      ??___omul 0012  
                                 _cmdGetRxCnt 8516                                      ??___wmul 0006  
             CRC_CalculatedResultGet@xorValue 0009                                      ??_cmdMac 0076  
                          ?_nwkRouteFrameSent 0008                                   _cmdBootLoad 7ADA  
                    _nwkTxAckWaitTimerHandler 6556                               ___strtoxl@limit 0027  
                      __size_of_TMR0_CallBack 0020                             NWK_SetPanId@panId 0004  
                                cmdSetAES@cmd 0076                                   __pdataBANK0 00F9  
                                 __pdataBANK1 01EE                                   __pdataBANK2 02CA  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 78F2                          __end_of_nwkGroupInit 7F90  
                                  memset@dest 0002                                      ??_printf 005B  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 0173                                      ??_strchr 0006  
                       __size_of_radio_engine 0126                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                  cmdSetRFCH@p1 0078  
                                cmdSetRFCH@p2 007D                         PHY_SetChannel@channel 002F  
                              _symbolDuration 014E                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 6B24  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 8510                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01DF                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01FC                                  cmdSetSF@temp 007F  
              __end_of_nwkRouteSendRouteError 5310                       nwkRoutePrepareTx@header 0011  
                        setSpreadingFactor@sf 002B                              ___aodiv@dividend 0002  
                           __size_of_cmdBcast 0200                             __size_of_cmdGetSF 0016  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                           __size_of_cmdGetTX 0016                     bootLoadApplication@buf_id 0032  
                                cmdSetAddr@p1 007A                                  cmdSetAddr@p2 0078  
                       _nwkDataReqTaskHandler 6A22                           cmdSetBaud@atCommand 003A  
                                   _crc16_app 691C                             __size_of_cmdNaddr 0016  
                        __end_of_PHY_DataConf 7B4E                                _PHY_SetRxState 84E4  
                        __end_of_nwkRxSendAck 4D96                                   _appDataConf 8040  
                        __end_of_nwkTxConfirm 7FB4                                  cmdSetTTL@cmd 0002  
                           __size_of___xxtofl 0164                             __size_of_cmdSetSF 00AE  
                           __size_of_cmdSetTX 00E0                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 82BC                      _UART1_RxInterruptHandler 01EB  
                           __size_of_cmdReset 0004                        __end_of_nwkRouteRemove 7AA0  
               nwkRxHandleReceivedFrame@frame 0029                   __size_of_get_free_tx_buffer 0062  
                     nwkRxIndicateFrame@frame 00BB                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 0102  
                                cmdSetTX@temp 007C                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 7A64             __size_of_DATAEE_ReadByte_Platform 00F2  
                     CRC_ReverseValue@reverse 0005                               _SPI1_WriteBlock 7D0C  
                                   _atCommand 0234                     ?_DATAEE_ReadByte_Platform 0006  
                                _currentAddr0 00FC                                  _currentAddr1 00FB  
                               _nwkFrameAlloc 5E44                                     _cmdGetCAD 8346  
                               setSyncWord@sw 0011                             _nwkRoutePrepareTx 4A8A  
                         _nwkTxPhyActiveFrame 015B                                  _currentNetID 00FA  
                                   _cmdGetTTL 8514                                     ___strtoxl 0B30  
                                _currentMsgID 0170                         ??_nwkTxBroadcastFrame 0026  
                     ?_CircularBufferPushBack 0013                                     _cmdSetAES 2C16  
                ?_UART1_SetRxInterruptHandler 0002               nwkRouteSendRouteError@multicast 002E  
                                   _cmdSetTTL 850E                         _TMR0_InterruptHandler 01E5  
                          ?_nwkRoutePrepareTx 000D                     __end_of_nwkRouteFrameSent 5068  
                                   _atoi$7704 0011                                     _atoi$7705 0015  
                                   _atoi$7706 0013                                     _cmdRstCAD 8372  
                                   __pnvBANK1 01DF                          __end_of_nwkRouteInit 7534  
                             ??_cmdSetCADRSSI 005E                                _ATTimeoutTimer 00FD  
                         __size_of_placeTimer 01A0                        _PIN_MANAGER_Initialize 6810  
                                   _dtoa$7201 0031                              ?_start_radio_cad 0001  
                             ?_set_timer0base 0002               __size_of_nwkTxDelayTimerHandler 008C  
                           ?_UART1_Initialize 0001                     __size_of_NWK_RouteNextHop 004A  
        __end_of_UART1_SetFramingErrorHandler 8490         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler 8482                             __size_of_sendInfo 005E  
                                _radio_engine 44FA                          __end_of_PHY_SetPanId 851A  
                               __pmediumconst FCC8                                     _enableCrc 8386  
                                    ?___aodiv 0002                                      ?___aomod 0002  
                         UART1_Read@readValue 0002                           ??_nwkRoutePrepareTx 000F  
                                   __ptext100 402C                                     __ptext101 23D0  
                               nwkGroupInit@i 0002                                     __ptext110 7E9E  
                                   __ptext102 7F1A                              ___aodiv@quotient 0014  
                                   __ptext111 69A0                                     __ptext103 31E4  
                                   __ptext200 8084                                     __ptext120 0640  
                                   __ptext112 6CEC                                     __ptext104 76E6  
                                   __ptext201 6104                                     __ptext121 1C74  
                                   __ptext113 5C10                                     __ptext105 3002  
                                   __ptext210 80A6                                     __ptext202 8458  
                                   __ptext130 19C4                                     __ptext122 73A4  
                                   __ptext114 66FC                                     __ptext106 5A88  
                                   __ptext211 6810                                     __ptext203 8466  
                                   __ptext131 5D8E                                     __ptext123 7D42  
                                   __ptext115 71F2                                     __ptext107 58EE  
                                   __ptext220 814C                                     __ptext212 82EC  
                                   __ptext204 8474                                     __ptext140 3808  
                                   __ptext132 7448                                     __ptext124 7D76  
                                   __ptext116 7A64                                     __ptext108 4C9A  
                                   __ptext221 7B88                                     __ptext213 7874  
                                   __ptext205 8482                                     __ptext141 776E  
                                   __ptext133 7930                                     __ptext125 7DAA  
                                   __ptext117 7CA0                                     __ptext109 2A16  
                                   __ptext222 816C                                     __ptext214 6DC4  
                                   __ptext206 8490                                     __ptext150 350E  
                                   __ptext142 7DDE                                     __ptext134 6D58  
                                   __ptext126 2602                                     __ptext118 801E  
                                   __ptext223 642C                                     __ptext215 80C8  
                                   __ptext207 79EA                                     __ptext151 497C  
                                   __ptext143 7E44                                     __ptext135 84DA  
                                   __ptext127 5CD0                                     __ptext119 6EFA  
                                   __ptext224 8522                                     __ptext216 812A  
                                   __ptext208 849E                                     __ptext160 5068  
                                   __ptext152 6392                                     __ptext144 5678  
                                   __ptext136 772A                                     __ptext128 5310  
                                   __ptext225 8524                                     __ptext217 851C  
                                   __ptext209 82A2                                     __ptext161 8040  
                                   __ptext153 4A8A                                     __ptext145 5230  
                                   __ptext137 796E                                     __ptext129 3EE6  
                                   __ptext226 8504                                     __ptext218 73F6  
                                   __ptext170 0F5E                                     __ptext162 7498  
                                   __ptext154 75CC                                     __ptext146 7834  
                                   __ptext138 4170                                     __ptext227 7FD8  
                                   __ptext219 8520                                     __ptext171 8254  
                                   __ptext163 844A                                     __ptext155 6E30  
                                   __ptext147 823A                                     __ptext139 3C3A  
                                   __ptext228 0000                                     __ptext180 82D4  
                                   __ptext172 4620                                     __ptext164 84B8  
                                   __ptext156 7E12                                     __ptext148 6A22  
                                   __ptext181 8386                                     __ptext173 3978  
                                   __ptext165 84FE                                     __ptext157 5E44  
                                   __ptext149 1692                                     __ptext190 6C12  
                                   __ptext182 8398                                     __ptext174 581E  
                                   __ptext166 3ADC                                     __ptext158 3D92  
                                   __ptext191 6786                                     __ptext183 7FB4  
                                   __ptext175 826E                                     __ptext167 7BFA  
                                   __ptext159 6BA0                                     __ptext192 72A6  
                                   __ptext184 7D0C                                     __ptext176 43D0  
                                   __ptext168 7EC8                                     __ptext193 77B2  
                                   __ptext185 835C                                     __ptext177 7CD6  
                                   __ptext169 4B98                                     __ptext194 7580  
                                   __ptext186 7F42                                     __ptext178 79AC  
                                   __ptext195 810A                                     __ptext187 7C32  
                                   __ptext179 82BC                                     __ptext196 74E6  
                                   __ptext188 8288                                     __ptext197 7F6A  
                                   __ptext189 3384                        __end_of_PHY_SetChannel 7930  
                                   __ptext198 8062                        __size_of_set_uart_baud 00CC  
                                   __ptext199 84C4                                      ?___lldiv 0016  
                                    ?___lodiv 0002                                      ?___llmod 0002  
                                    ?___lomod 0002                            ??_UART1_Initialize 0004  
                            _nwkDataReqTxConf 61AE                                      ?_cmdAddr 0001  
                       NWK_RouteNextHop@entry 000B                                      ?_cmdRecv 0001  
                                    ?_cmdSend 0076                              _uart1RxLastError 0162  
                           ?_processATCommand 0001                                 ??_UART1_Write 0002  
                           __size_of_vfprintf 0062                        __size_of_nwkRouteFrame 00D6  
                          ??_processATCommand 00A9                               ___lomod@divisor 000A  
                      __CFG_BBSIZE$BBSIZE_512 000000                         _nwkRxHandleIndication 58EE  
                                   _fhssdebug 0166                               ___lomod@counter 0012  
    __end_of_UART1_DefaultOverrunErrorHandler 8524     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 8522                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 002A  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 84EC  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 005E                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 83AA  
                                ??_cmdGetMode 005E                        _nwkRouteNormalizeRanks 7B4E  
                                   _initRadio 3ADC                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0083  
                                   cmdSend@p2 0081                           __size_of_nwkTxFrame 0180  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 812A  
                   __end_of_nwkRoutePrepareTx 4B98                                __size_of_fputc 006C  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005E  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005E                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 7874                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F7                __end_of_CircularBufferPushBack 4E8A  
                                ??_cmdSetSink 005E                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 005E                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 002C  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                           free_tx_buffer@req 0002                                ___wmul@product 0006  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0018                                    ?_cmdSetAES 0076  
                                    _SCANCON0 00397C                                      _EUIDbyte 01BC  
                                  ?_cmdSetTTL 0002                                   _ledTimerVar 015D  
                           ??_SYS_TaskHandler 005E                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                              appDataInd@data 0077                            cmdSetAddr@tempaddr 007C  
                         __CFG_BORV$VBOR_2P45 000000                                   _ledStateVar 0163  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                             _NWK_RouteNewEntry 5A88  
                                   _sinkAddr0 016F                                     _sinkAddr1 016E  
               ??_UART1_SetRxInterruptHandler 0004                         __size_of_setFrequency 012A  
                   __size_of_executeATCommand 058E                    ??_TMR0_SetInterruptHandler 0004  
                                    _PIR0bits 0039A0                                     _nwkGroups 0200  
                  __end_of_CircularBufferSize 70DA                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                               ??_PHY_DataInd 0014                                     _nwkRxInit 7580  
                               ??_PHY_DataReq 0014                               _print_hop_table 83F6  
                                   _nwkTxInit 77B2                           ___strtoxl@is_signed 0016  
                          ?_NWK_RouteNewEntry 0002                       _eeprom_write_flags_enum 0174  
                              _ATVersionMajor FDD6                          __end_of_NWK_SetPanId 81C8  
                                  ?_enableCrc 0001                                _ATVersionMinor FDD5  
                     _setSignalBandwidth$8635 002B                            __end_of_cmdGetRFCH 8220  
                                    _TMR0_ISR 80C8                     _DATAEE_WriteByte_Platform 76A2  
                             ?_PHY_SetChannel 0001                    __end_of_UART1_Transmit_ISR 7BC2  
                          __end_of_cmdGetMode 8420                                      _PHY_Init 84FE  
               ?_UART1_SetFramingErrorHandler 0002                              initRadio@version 0037  
                                   _vfpfcnvrt 0640                                      _NWK_Init 72A6  
                                 cmdBcast@cmd 0076                                     _txTimeOut 00F3  
                          SPI1_ReadBlock@data 0007                                     _xtoa$7230 0034  
                     ?_queue_serial_led_event 0001                                     _xtoa$7229 0032  
                          NWK_GroupIsMember@i 0006                            __end_of_cmdSetRFCH 62F6  
                        free_tx_buffer@buf_id 0006                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 5C10  
                          __end_of_cmdSetAddr 6556                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 6CEC             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 8412                        nwkDataReqSendFrame@req 002A  
                                   _tx_buffer 086A                            __end_of_appDataInd 6A22  
                        setSignalBandwidth@bw 002F                                   _loadMACAddr 7A28  
                             ?_PHY_SetRxState 0001                        ?_nwkDataReqTaskHandler 0001  
                     __end_of_SPI1_WriteBlock 7D42                               ??_Timer0Handler 0001  
                      _nwkTxDelayTimerHandler 65E6                                      _SYS_Init 844A  
                         __end_of_UART1_Write 776E                         DATAEE_WriteByte@bData 0004  
                               ??_NWK_DataReq 0004                   __end_of_nwkRxServiceDataInd 6D58  
                                  ?_initRadio 0001                                  _isspace$7731 0008  
                              _CRC_Initialize 6DC4                                ?_TMR0_CallBack 0001  
                                 strtoul@base 0038                                 _set_uart_baud 59BC  
                                  vfpfcnvrt@c 0068                              ?_SPI1_Initialize 0001  
                          _getSignalBandwidth 4620                            _setSignalBandwidth 0F5E  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 0002  
                       __size_of_nwkFrameFree 001A                                     copy_data0 55B6  
                                   copy_data1 55D8                                     copy_data2 55FA  
                       __size_of_nwkFrameInit 0022                         ?_INTERRUPT_Initialize 0001  
                       __size_of_nwkFrameNext 008A                   nwkDataReqSendFrame@mcHeader 002D  
            __size_of_CRC_CalculatedResultGet 00D0                      __end_of_PHY_SetShortAddr 851C  
                                ??_computeFRF 0023                 nwkRxRejectDuplicate@freeEntry 001B  
                           ?_DATAEE_WriteByte 0002                                  _setFrequency 43D0  
                   __size_of_nwkRxTaskHandler 00B0                                 ??_NWK_SetAddr 0006  
                      _uart1TxBufferRemaining 01ED                                ___strtoxl$7892 001F  
                              ___strtoxl$7893 0025                                ___strtoxl$7894 0021  
                              ___strtoxl$7895 0023                  _nwkRxDuplicateRejectionTable 03C0  
                _nwkRxDuplicateRejectionTimer 01AF                     __end_of_NWK_RouteNewEntry 5B50  
                               _nwkRouteFrame 5678                            ??_DATAEE_WriteByte 0005  
                                 _ledtasksbuf 01C8                              _DIO0_Receive_ISR 62F6  
                               _nwkRouteTable 0284                           ?_getSignalBandwidth 000F  
                         ?_setSignalBandwidth 0023                    __size_of_nwkRouteFrameSent 00EC  
                               ?_cmdSetParity 0076                                  _uart1RxCount 00E6  
                  __end_of_implicitHeaderMode 82D4                                      __Hrparam 0000  
                      __end_of_ATVersionMajor FDD7                        __end_of_ATVersionMinor FDD6  
                           computeFRF@num_mod 0027                                     memcpy@tmp 000E  
                                  ?_nwkRxInit 0001                                    vfprintf@ap 0052  
                                    __Lrparam 0000                                    vfprintf@fp 004E  
                                  ?_nwkTxInit 0001                               _NWK_TaskHandler 843C  
                       __size_of_nwkGroupInit 0026                            __CFG_BOREN$SBORDIS 000000  
                              ___strtoxl@base 0014                               _nwkRxAckControl 0161  
                                 cmdSetAES@p1 00A1                                   cmdSetAES@p2 009A  
                         __end_of_setSyncWord 83BA                                ___strtoxl@sign 002B  
                              ___strtoxl@skip 002C                            cmdSetCADRSSI@CHstr 007A  
                     ??_OSCILLATOR_Initialize 0002                             ?_CRC_ReverseValue 0002  
                     __size_of_setCodingRate4 0036                             appDataInd@dataptr 00B8  
              __end_of_queue_serial_led_event 7350                              __size_of___aodiv 0158  
                nwkRouteErrorReceived@command 000F                              __size_of___aomod 0134  
                 __size_of_NWK_RouteFindEntry 0068                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 008A                              __size_of___lodiv 00DE  
                            __size_of___llmod 006E                      processATCommand@data_828 00AB  
                            __size_of___lomod 00BE                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 01FE  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 001E  
                          ??_CRC_ReverseValue 0004   __end_of_nwkRxDuplicateRejectionTimerHandler 73A4  
__size_of_nwkRxDuplicateRejectionTimerHandler 0054         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 7350  
                      nwkRoutePrepareTx@frame 000D                               ___aodiv@divisor 000A  
                                 _SX1276Write 8398                           __end_of_PHY_DataInd 43D0  
                      ?_nwkRxHandleIndication 00D5                           __end_of_PHY_DataReq 71F2  
                            __size_of_cmdRecv 0002                              __size_of_cmdSend 026A  
                 __end_of_nwkDataReqSendFrame 19C4                           NWK_LinearizeLqi@val FDC5  
                             ___aodiv@counter 0012                                   cmdSetTX@cmd 0076  
                     __size_of_SYS_TimerStart 0028                          ??_getSignalBandwidth 0013  
                 __size_of_NWK_RouteFreeEntry 0036                      __end_of_NWK_OpenEndpoint 812A  
                        ??_setSignalBandwidth 0027                            __end_of_computeFRF 350E  
                       __size_of_PHY_DataConf 003A                         __size_of_nwkRxSendAck 00FC  
                       __size_of_nwkTxConfirm 0024                      _nwkRxHandleReceivedFrame 1324  
                                    _cmdBcast 2816                                  _nwkFrameFree 823A  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 8062  
                                    _cmdGetSF 8330                                  ??_placeTimer 0004  
                                    _cmdGetTX 831A                                  _nwkFrameNext 66FC  
                                 _currentMode 016D                                      _cmdNaddr 8304  
                                    ___xxtofl 3978                                      _cmdSetSF 5FA8  
                      __end_of_CRC_Initialize 6E30                                      _cmdSetTX 5150  
                                    _cmdReset 850A                             _set_hop_table_ttl 83E8  
                            __size_of_isalpha 0034                              __size_of_isdigit 0034  
                                    __pivt0x8 0008                              __size_of_receive 003E  
                 nwkRouteSendRouteError@frame 0031                                   ??_crc16_app 0019  
                            __size_of_islower 0034                                ?_set_uart_baud 0001  
                            __size_of_isspace 0044                                 ?_DIA_ReadByte 0002  
                             ??_nwkFrameAlloc 0010                     __size_of_SX1276ReadBuffer 0028  
                                    __ptext10 5150                                      __ptext11 850E  
                                    __ptext20 6C80                                      __ptext12 8404  
                                    __ptext21 53EE                                      __ptext13 5FA8  
                                    __ptext30 70DA                                      __ptext22 6F5C  
                                    __ptext14 6256                                      __ptext31 8372  
                                    __ptext23 6FBC                                      __ptext15 6672  
                                    __ptext40 8330                                      __ptext32 850A  
                                    __ptext24 64C4                                      __ptext16 6B24  
                                    __ptext41 8516                                      __ptext33 8512  
                                    __ptext25 2C16                                      __ptext17 83AA  
                                    __ptext50 6898                                      __ptext42 8204  
                                    __ptext34 8304                                      __ptext26 8510  
                                    __ptext18 6056                                      __ptext51 6E98  
                                    __ptext43 8412                                      __ptext35 7534  
                                    __ptext27 2166                                      __ptext19 78B4  
                                    __ptext60 7FFC                                      __ptext52 6AA4  
                                    __ptext44 8220                                      __ptext36 84F2  
                                    __ptext28 7616                                      __ptext61 691C  
                                    __ptext53 818C                                      __ptext45 8346  
                                    __ptext37 7138                                      __ptext29 0B30  
                                    __ptext70 851A                                      __ptext62 574E  
                                    __ptext54 8420                                      __ptext46 7ADA  
                                    __ptext38 831A                                      __ptext71 76A2  
                                    __ptext63 724E                                      __ptext55 765C  
                                    __ptext47 2816                                      __ptext39 8514  
                                    __ptext80 7F90                                      __ptext72 4E8A  
                                    __ptext64 83BA                                      __ptext56 1EF4  
                                    __ptext48 54CA                                      __ptext81 84F8  
                                    __ptext73 77F4                                      __ptext65 84E4  
                                    __ptext57 59BC                                      __ptext49 4742  
                                    __ptext90 42A4                                      __ptext82 44FA  
                                    __ptext74 81E6                                      __ptext66 78F2  
                                    __ptext58 701C                                      __ptext91 843C  
                                    __ptext83 5B50                                      __ptext75 842E  
                                    __ptext67 81AA                                      __ptext59 7A28  
                                    __ptext92 2E12                                      __ptext84 83CA  
                                    __ptext76 4862                                      __ptext68 8518  
                                    __ptext93 4F7C                                      __ptext85 80EA  
                                    __ptext77 6556                                      __ptext69 81C8  
                                    __ptext94 7B4E                                      __ptext86 7E72  
                                    __ptext78 7350                                      __ptext95 61AE  
                                    __ptext87 7B14                                      __ptext79 65E6  
                                    __ptext96 7196                                      __ptext88 7BC2  
                                    __ptext97 84AC                                      __ptext89 62F6  
                                    __ptext98 5EF8                                      __ptext99 1324  
                            __size_of_isupper 0034                            ?_set_hop_table_ttl 0076  
                 __size_of_nwkRxIndicateFrame 0200                                   appDataInd@i 00BA  
                  __size_of_nwkRoutePrepareTx 010E                          set_hop_table_ttl@cmd 0076  
              __size_of_UART1_SetErrorHandler 000E                                      _fhssList FCC9  
               __end_of_UART1_SetErrorHandler 849E                         __size_of_nwkRouteInit 004E  
                 DATAEE_WriteByte@GIEBitValue 0005                                 nwkRouteInit@i 0002  
                            __size_of_strcspn 0060                              __size_of_strncmp 0120  
                            __size_of_toupper 0052                      nwkTxBroadcastFrame@frame 0024  
                                 ??_cmdGetCAD 005E                              __size_of_strtoul 0046  
                                    _ledtimer 01DD                                      _ledqueue 0400  
                                 ??_cmdGetTTL 0002                                   ??___strtoxl 0017  
                              ?_nwkRouteFrame 0033                       __end_of_print_hop_table 8404  
                                _nwkGroupInit 7F6A                               cmdSetCADRSSI@p1 0078  
                             cmdSetCADRSSI@p2 007D                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 6B24                                 __size_of_idle 000C  
                               __size_of_atoi 0170                                 __size_of_main 0028  
                               __size_of_dtoa 02B0                           ??_set_hop_table_ttl 005E  
                               __size_of_rand 010E                                   ??_cmdSetAES 0078  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005E  
                               __size_of_stoa 0146                                 __size_of_utoa 0214  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 0280                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 005E                               cmdSetAES@AESstr 007A  
        __end_of_TMR0_DefaultInterruptHandler 851E         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 851C                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 7138                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDD5                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDD4                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 71F2                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                           sendOKMessage@F16640 01F5  
                  nwkRouteFrameReceived@frame 000B                     _UART1_OverrunErrorHandler 01E1  
                         __end_of_NWK_SetAddr 81E6                            __end_of_placeTimer 3384  
                                ??_set_parity 0002                              _NWK_RouteNextHop 75CC  
                                   stoa@F1139 01EE  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                                ?_cmdGetRxCnt 0002                                   ??_enableCrc 0011  
                                _PHY_DataConf 7B14                                  _nwkRxSendAck 4C9A  
                                _nwkTxConfirm 7F90                  __end_of_SYS_TimerTaskHandler 497C  
                   __size_of_SYS_TimerStarted 0044                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 003A  
                                  strtol@base 0036                 __size_of_nwkRxRejectDuplicate 0232  
                                    _vfprintf 6EFA                                     printf@fmt 0055  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 8420  
                       cmdSetParity@atCommand 0076                                      _syncList 02CA  
               nwkTxAckWaitTimerHandler@timer 0012                           setFrequency@num_mod 0027  
                                 _UART1_Write 772A              __end_of_DATAEE_ReadByte_Platform 4F7C  
                            ___aomod@dividend 0002                     __end_of_set_hop_table_ttl 83F6  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 7FFC  
                              _vfpfcnvrt$7244 006C                                  _nwkRouteInit 74E6  
                                ?_cmdSetNaddr 0076                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00E9  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00E7  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0340  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00E8  
                                    memcpy@d1 0008                            __end_of_setTxPower 7EF2  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 823A                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                                  ?_appDataConf 0007  
                                    isalpha@c 0002                                      isdigit@c 0002  
                      ??_INTERRUPT_Initialize 0002                           DIO0_Receive_ISR@ind 001B  
                         ??_UART1_is_rx_ready 0002                                  _PHY_SetPanId 8518  
                                  _SX1276Read 835C                            __end_of_nwkTxFrame 368E  
                          __end_of_set_parity 707C                      __end_of_nwkDataReqTxConf 6256  
                                    intlevel1 0000                                      intlevel2 0000  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _get_timer0base 7E72                     __size_of_nwkTxTaskHandler 01F0  
                      NWK_RouteNewEntry@entry 0009                       __end_of_NWK_TaskHandler 844A  
                                    islower@c 0002                              ??_set_timer0base 0006  
                                    isspace@c 0002                   __end_of_nwkFrameCommandInit 7874  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 00C8                                   _setSyncWord 83AA  
                           __CFG_CLKOUTEN$OFF 000000                         __size_of_NWK_SetPanId 001E  
                                    isupper@c 0002                                     strncmp@_l 0002  
                                   strncmp@_r 0004                              _executeATCommand 00B2  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 0076                            set_timer0base@tval 0004  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 0128  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkTxDelayTimer 0195  
                           _setPreambleLength 826E                                   _PHY_DataInd 42A4  
                                 _PHY_DataReq 7196                          PHY_SetShortAddr@addr 0002  
                __size_of_bootLoadApplication 0272                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                                     strtok@sep 0011  
                                    printf@ap 005D                     __end_of_UART1_is_rx_ready 842E  
                                  _UART1_Read 765C  UART1_SetFramingErrorHandler@interruptHandler 0002  
                          ?_setPreambleLength 0011             __end_of_UART1_DefaultErrorHandler 850A  
                             ___aomod@divisor 000A                      nwkRouteErrorReceived@ind 000D  
                                 ??_vfpfcnvrt 004A                                      stoa@nuls 0011  
                             ___aomod@counter 0012                           SPI1_WriteBlock@data 0007  
                     ??_nwkTxConvertPhyStatus 0002                       __size_of_free_tx_buffer 004E  
                     ??_nwkRouteFrameReceived 000D                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_4705 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 00E4                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                                   _uart_parity 0172  
                             _TMR0_Initialize 79EA                               ??_set_uart_baud 0002  
                                    strcspn@c 000A                                      strcspn@i 000D  
                                    strcspn@s 0008                             _current_baud_rate 0152  
                  __end_of_get_free_tx_buffer 6EFA                                      strncmp@l 0009  
                                    strncmp@n 0006                    __end_of_getSpreadingFactor 826E  
                                    strncmp@r 000B                                      toupper@c 0008  
                  __end_of_setSpreadingFactor 4C9A                     __size_of_UART1_Initialize 00AA  
                    DIO0_Receive_ISR@irqFlags 001A                               _SYS_TaskHandler 842E  
                                 _NWK_DataReq 6AA4                                      strstr@nl 0011  
                     __size_of_nwkDataReqInit 000C                                      strtoul@s 0034  
                     _CRC_CalculatedResultGet 574E                      _UART1_TxInterruptHandler 01E9  
                 __end_of_nwkTxBroadcastFrame 4170                                 _queueLedEvent 7AA0  
                                _NWK_SetPanId 81AA                        __end_of_get_timer0base 7E9E  
                         __end_of_Default_ISR 8522                               ??_nwkRouteFrame 0035  
                             cmdSetRFCH@CHstr 007A                     __size_of_processATCommand 017A  
                                ___aodiv@sign 0013                              _nwkRxTaskHandler 5EF8  
              __end_of_PIN_MANAGER_Initialize 6898                       SPI1_ReadBlock@blockSize 0005  
                       NWK_RouteFindEntry@dst 0002                                   _NWK_SetAddr 81C8  
                              cmdBcast@buf_id 007C                              ?_print_hop_table 0076  
         __end_ofnwkFrame@nwkFramePayloadSize 7EC8                   nwkFrame@nwkFramePayloadSize 7E9E  
                    __end_of_nwkTxAckReceived 5CD0                  ?_UART1_SetTxInterruptHandler 0002  
                      ?_nwkRouteErrorReceived 000D                            _eeprom_write_flags 015F  
                            ??_PHY_SetChannel 002F                     __end_of_setPreambleLength 8288  
                                ___aomod@sign 0013                           NWK_RouteFindEntry@i 0007  
                    get_free_tx_buffer@buf_id 0002                    __end_of_spi1_configuration FDD3  
                  nwkRxRejectDuplicate@header 0012                CRC_CalculatedResultGet@reverse 0010  
               CRC_CalculatedResultGet@result 0011                         __end_of_cmdSetCADRSSI 6104  
