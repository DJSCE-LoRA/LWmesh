

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 09 20:23:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=2
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=2
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=2
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=2
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=2
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=2
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=2
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1,group=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=4,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=4,class=CODE,delta=1
   250                           	psect	text225,global,reloc=4,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=4,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   259                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   260                           	psect	text233,global,reloc=2,class=CODE,delta=1
   261                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   262  0000                     
   263                           ; Version 2.10
   264                           ; Generated 31/07/2019 GMT
   265                           ; 
   266                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   267                           ; All rights reserved.
   268                           ; 
   269                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   270                           ; 
   271                           ; Redistribution and use in source and binary forms, with or without modification, are
   272                           ; permitted provided that the following conditions are met:
   273                           ; 
   274                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   275                           ;        conditions and the following disclaimer.
   276                           ; 
   277                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   278                           ;        of conditions and the following disclaimer in the documentation and/or other
   279                           ;        materials provided with the distribution.
   280                           ; 
   281                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   282                           ;        software without specific prior written permission.
   283                           ; 
   284                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   285                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   286                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   287                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   288                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   289                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   290                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   291                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   292                           ; 
   293                           ; 
   294                           ; Code-generator required, PIC18F26K42 Definitions
   295                           ; 
   296                           ; SFR Addresses
   297  0000                     
   298                           	psect	idataBANK0
   299  008D44                     __pidataBANK0:
   300                           	opt callstack 0
   301                           
   302                           ;initializer for _RSSITarget
   303  008D44  B0                 	db	176
   304                           
   305                           ;initializer for _currentNetID
   306  008D45  55                 	db	85
   307                           
   308                           ;initializer for _currentAddr1
   309  008D46  34                 	db	52
   310                           
   311                           ;initializer for _currentAddr0
   312  008D47  12                 	db	18
   313                           
   314                           ;initializer for _ATTimeoutTimer
   315  008D48  03E8               	dw	1000
   316                           
   317                           	psect	idataBANK1
   318  008C32                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for stoa@F1139
   322  008C32  28                 	db	40
   323  008C33  6E                 	db	110
   324  008C34  75                 	db	117
   325  008C35  6C                 	db	108
   326  008C36  6C                 	db	108
   327  008C37  29                 	db	41
   328  008C38  00                 	db	0
   329                           
   330                           ;initializer for sendOKMessage@F16637
   331  008C39  4F                 	db	79
   332  008C3A  4B                 	db	75
   333  008C3B  0D                 	db	13
   334  008C3C  0A                 	db	10
   335  008C3D  00                 	db	0
   336                           
   337                           ;initializer for _test_timer
   338  008C3E  1388               	dw	5000
   339                           
   340                           	psect	idataBANK2
   341  008D28                     __pidataBANK2:
   342                           	opt callstack 0
   343                           
   344                           ;initializer for _syncList
   345  008D28  12                 	db	18
   346  008D29  23                 	db	35
   347  008D2A  45                 	db	69
   348  008D2B  56                 	db	86
   349  008D2C  67                 	db	103
   350  008D2D  78                 	db	120
   351  008D2E  89                 	db	137
   352  008D2F  9A                 	db	154
   353  008D30  AB                 	db	171
   354  008D31  BC                 	db	188
   355                           
   356                           	psect	mediumconst
   357  00FCC8                     __pmediumconst:
   358                           	opt callstack 0
   359  00FCC8  00                 	db	0
   360  00FCC9                     _fhssList:
   361                           	opt callstack 0
   362  00FCC9  7680               	dw	30336
   363  00FCCB  3600               	dw	13824
   364  00FCCD  FB00               	dw	64256
   365  00FCCF  361E               	dw	13854
   366  00FCD1  7F80               	dw	32640
   367  00FCD3  363D               	dw	13885
   368  00FCD5  0400               	dw	1024
   369  00FCD7  365C               	dw	13916
   370  00FCD9  8880               	dw	34944
   371  00FCDB  367A               	dw	13946
   372  00FCDD  0D00               	dw	3328
   373  00FCDF  3699               	dw	13977
   374  00FCE1  9180               	dw	37248
   375  00FCE3  36B7               	dw	14007
   376  00FCE5  1600               	dw	5632
   377  00FCE7  36D6               	dw	14038
   378  00FCE9  9A80               	dw	39552
   379  00FCEB  36F4               	dw	14068
   380  00FCED  1F00               	dw	7936
   381  00FCEF  3713               	dw	14099
   382  00FCF1  DCC0               	dw	56512
   383  00FCF3  3703               	dw	14083
   384  00FCF5  5840               	dw	22592
   385  00FCF7  36E5               	dw	14053
   386  00FCF9  D3C0               	dw	54208
   387  00FCFB  36C6               	dw	14022
   388  00FCFD  4F40               	dw	20288
   389  00FCFF  36A8               	dw	13992
   390  00FD01  CAC0               	dw	51904
   391  00FD03  3689               	dw	13961
   392  00FD05  4640               	dw	17984
   393  00FD07  366B               	dw	13931
   394  00FD09  C1C0               	dw	49600
   395  00FD0B  364C               	dw	13900
   396  00FD0D  3D40               	dw	15680
   397  00FD0F  362E               	dw	13870
   398  00FD11  B8C0               	dw	47296
   399  00FD13  360F               	dw	13839
   400  00FD15  3440               	dw	13376
   401  00FD17  35F1               	dw	13809
   402  00FD19  AFC0               	dw	44992
   403  00FD1B  35D2               	dw	13778
   404  00FD1D  D560               	dw	54624
   405  00FD1F  35F8               	dw	13816
   406  00FD21  59E0               	dw	23008
   407  00FD23  3617               	dw	13847
   408  00FD25  DE60               	dw	56928
   409  00FD27  3635               	dw	13877
   410  00FD29  6BE0               	dw	27616
   411  00FD2B  3691               	dw	13969
   412  00FD2D  F060               	dw	61536
   413  00FD2F  36AF               	dw	13999
   414  00FD31  74E0               	dw	29920
   415  00FD33  36CE               	dw	14030
   416  00FD35  F960               	dw	63840
   417  00FD37  36EC               	dw	14060
   418  00FD39  7DE0               	dw	32224
   419  00FD3B  370B               	dw	14091
   420  00FD3D  C020               	dw	49184
   421  00FD3F  371A               	dw	14106
   422  00FD41  4710               	dw	18192
   423  00FD43  3604               	dw	13828
   424  00FD45  6CB0               	dw	27824
   425  00FD47  362A               	dw	13866
   426  00FD49  5010               	dw	20496
   427  00FD4B  3641               	dw	13889
   428  00FD4D  75B0               	dw	30128
   429  00FD4F  3667               	dw	13927
   430  00FD51  5910               	dw	22800
   431  00FD53  367E               	dw	13950
   432  00FD55  7EB0               	dw	32432
   433  00FD57  36A4               	dw	13988
   434  00FD59  6210               	dw	25104
   435  00FD5B  36BB               	dw	14011
   436  00FD5D  87B0               	dw	34736
   437  00FD5F  36E1               	dw	14049
   438  00FD61  6B10               	dw	27408
   439  00FD63  36F8               	dw	14072
   440  00FD65  90B0               	dw	37040
   441  00FD67  371E               	dw	14110
   442  00FD69  AD50               	dw	44368
   443  00FD6B  3707               	dw	14087
   444  00FD6D  28D0               	dw	10448
   445  00FD6F  36E9               	dw	14057
   446  00FD71  A450               	dw	42064
   447  00FD73  36CA               	dw	14026
   448  00FD75  C0F0               	dw	49392
   449  00FD77  36B3               	dw	14003
   450  00FD79  9B50               	dw	39760
   451  00FD7B  368D               	dw	13965
   452  00FD7D  B7F0               	dw	47088
   453  00FD7F  3676               	dw	13942
   454  00FD81  9250               	dw	37456
   455  00FD83  3650               	dw	13904
   456  00FD85  AEF0               	dw	44784
   457  00FD87  3639               	dw	13881
   458  00FD89  8950               	dw	35152
   459  00FD8B  3613               	dw	13843
   460  00FD8D  A5F0               	dw	42480
   461  00FD8F  35FC               	dw	13820
   462  00FD91  50E0               	dw	20704
   463  00FD93  35DA               	dw	13786
   464  00FD95  04D0               	dw	1232
   465  00FD97  35F5               	dw	13813
   466  00FD99  2A70               	dw	10864
   467  00FD9B  361B               	dw	13851
   468  00FD9D  0DD0               	dw	3536
   469  00FD9F  3632               	dw	13874
   470  00FDA1  3C70               	dw	15472
   471  00FDA3  3695               	dw	13973
   472  00FDA5  1FD0               	dw	8144
   473  00FDA7  36AC               	dw	13996
   474  00FDA9  4570               	dw	17776
   475  00FDAB  36D2               	dw	14034
   476  00FDAD  28D0               	dw	10448
   477  00FDAF  36E9               	dw	14057
   478  00FDB1  4E70               	dw	20080
   479  00FDB3  370F               	dw	14095
   480  00FDB5  0E40               	dw	3648
   481  00FDB7  371B               	dw	14107
   482  00FDB9  A5F0               	dw	42480
   483  00FDBB  35FC               	dw	13820
   484  00FDBD  F130               	dw	61744
   485  00FDBF  3648               	dw	13896
   486  00FDC1  75B0               	dw	30128
   487  00FDC3  3667               	dw	13927
   488  00FDC5                     __end_of_fhssList:
   489                           	opt callstack 0
   490  00FDC5  03                 	db	3
   491  00FDC6  08                 	db	8
   492  00FDC7  1A                 	db	26
   493  00FDC8  40                 	db	64
   494  00FDC9  80                 	db	128
   495  00FDCA  BE                 	db	190
   496  00FDCB  E6                 	db	230
   497  00FDCC  F7                 	db	247
   498  00FDCD  FC                 	db	252
   499  00FDCE                     __end_ofNWK_LinearizeLqi@val:
   500                           	opt callstack 0
   501  00FDCE  82                 	db	130
   502  00FDCF  C0                 	db	192
   503  00FDD0  03                 	db	3
   504  00FDD1  03                 	db	3
   505  00FDD2  00                 	db	0
   506  00FDD3                     __end_of_spi1_configuration:
   507                           	opt callstack 0
   508  00FDD3  01                 	db	1
   509  00FDD4                     __end_of_FirmwareVersionMinor:
   510                           	opt callstack 0
   511  00FDD4  02                 	db	2
   512  00FDD5                     __end_of_FirmwareVersionMajor:
   513                           	opt callstack 0
   514  00FDD5  00                 	db	0
   515  00FDD6                     __end_of_ATVersionMinor:
   516                           	opt callstack 0
   517  00FDD6  01                 	db	1
   518  00FDD7                     __end_of_ATVersionMajor:
   519                           	opt callstack 0
   520  00FDD7                     STR_133:
   521                           
   522                           ; BSR set to: 0
   523  00FDD7  46                 	db	70	;'F'
   524  00FDD8  69                 	db	105	;'i'
   525  00FDD9  72                 	db	114	;'r'
   526  00FDDA  6D                 	db	109	;'m'
   527  00FDDB  77                 	db	119	;'w'
   528  00FDDC  61                 	db	97	;'a'
   529  00FDDD  72                 	db	114	;'r'
   530  00FDDE  65                 	db	101	;'e'
   531  00FDDF  20                 	db	32
   532  00FDE0  56                 	db	86	;'V'
   533  00FDE1  65                 	db	101	;'e'
   534  00FDE2  72                 	db	114	;'r'
   535  00FDE3  73                 	db	115	;'s'
   536  00FDE4  69                 	db	105	;'i'
   537  00FDE5  6F                 	db	111	;'o'
   538  00FDE6  6E                 	db	110	;'n'
   539  00FDE7  20                 	db	32
   540  00FDE8  25                 	db	37
   541  00FDE9  31                 	db	49	;'1'
   542  00FDEA  75                 	db	117	;'u'
   543  00FDEB  2E                 	db	46
   544  00FDEC  25                 	db	37
   545  00FDED  30                 	db	48	;'0'
   546  00FDEE  32                 	db	50	;'2'
   547  00FDEF  75                 	db	117	;'u'
   548  00FDF0  0D                 	db	13
   549  00FDF1  0A                 	db	10
   550  00FDF2  00                 	db	0
   551  00FDF3                     STR_132:
   552                           
   553                           ; BSR set to: 0
   554  00FDF3  41                 	db	65	;'A'
   555  00FDF4  54                 	db	84	;'T'
   556  00FDF5  20                 	db	32
   557  00FDF6  43                 	db	67	;'C'
   558  00FDF7  6F                 	db	111	;'o'
   559  00FDF8  6D                 	db	109	;'m'
   560  00FDF9  6D                 	db	109	;'m'
   561  00FDFA  61                 	db	97	;'a'
   562  00FDFB  6E                 	db	110	;'n'
   563  00FDFC  64                 	db	100	;'d'
   564  00FDFD  20                 	db	32
   565  00FDFE  53                 	db	83	;'S'
   566  00FDFF  65                 	db	101	;'e'
   567  00FE00  74                 	db	116	;'t'
   568  00FE01  20                 	db	32
   569  00FE02  25                 	db	37
   570  00FE03  31                 	db	49	;'1'
   571  00FE04  75                 	db	117	;'u'
   572  00FE05  2E                 	db	46
   573  00FE06  25                 	db	37
   574  00FE07  30                 	db	48	;'0'
   575  00FE08  32                 	db	50	;'2'
   576  00FE09  75                 	db	117	;'u'
   577  00FE0A  0D                 	db	13
   578  00FE0B  0A                 	db	10
   579  00FE0C  00                 	db	0
   580  00FE0D                     STR_29:
   581                           
   582                           ; BSR set to: 0
   583  00FE0D  43                 	db	67	;'C'
   584  00FE0E  41                 	db	65	;'A'
   585  00FE0F  44                 	db	68	;'D'
   586  00FE10  20                 	db	32
   587  00FE11  43                 	db	67	;'C'
   588  00FE12  4F                 	db	79	;'O'
   589  00FE13  55                 	db	85	;'U'
   590  00FE14  4E                 	db	78	;'N'
   591  00FE15  54                 	db	84	;'T'
   592  00FE16  45                 	db	69	;'E'
   593  00FE17  52                 	db	82	;'R'
   594  00FE18  20                 	db	32
   595  00FE19  3D                 	db	61	;'='
   596  00FE1A  20                 	db	32
   597  00FE1B  25                 	db	37
   598  00FE1C  30                 	db	48	;'0'
   599  00FE1D  32                 	db	50	;'2'
   600  00FE1E  58                 	db	88	;'X'
   601  00FE1F  0D                 	db	13
   602  00FE20  0A                 	db	10
   603  00FE21  00                 	db	0
   604  00FE22                     
   605                           ; BSR set to: 0
   606  00FE22  4D                 	db	77	;'M'
   607  00FE23  4F                 	db	79	;'O'
   608  00FE24  44                 	db	68	;'D'
   609  00FE25  45                 	db	69	;'E'
   610  00FE26  20                 	db	32
   611  00FE27  3D                 	db	61	;'='
   612  00FE28  20                 	db	32
   613  00FE29  45                 	db	69	;'E'
   614  00FE2A  4E                 	db	78	;'N'
   615  00FE2B  44                 	db	68	;'D'
   616  00FE2C  20                 	db	32
   617  00FE2D  4E                 	db	78	;'N'
   618  00FE2E  4F                 	db	79	;'O'
   619  00FE2F  44                 	db	68	;'D'
   620  00FE30  45                 	db	69	;'E'
   621  00FE31  0D                 	db	13
   622  00FE32  0A                 	db	10
   623  00FE33  00                 	db	0
   624  00FE34                     STR_31:
   625                           
   626                           ; BSR set to: 0
   627  00FE34  4D                 	db	77	;'M'
   628  00FE35  4F                 	db	79	;'O'
   629  00FE36  44                 	db	68	;'D'
   630  00FE37  45                 	db	69	;'E'
   631  00FE38  20                 	db	32
   632  00FE39  3D                 	db	61	;'='
   633  00FE3A  20                 	db	32
   634  00FE3B  52                 	db	82	;'R'
   635  00FE3C  45                 	db	69	;'E'
   636  00FE3D  50                 	db	80	;'P'
   637  00FE3E  45                 	db	69	;'E'
   638  00FE3F  41                 	db	65	;'A'
   639  00FE40  54                 	db	84	;'T'
   640  00FE41  45                 	db	69	;'E'
   641  00FE42  52                 	db	82	;'R'
   642  00FE43  0D                 	db	13
   643  00FE44  0A                 	db	10
   644  00FE45  00                 	db	0
   645  00FE46                     STR_11:
   646                           
   647                           ; BSR set to: 0
   648  00FE46  41                 	db	65	;'A'
   649  00FE47  44                 	db	68	;'D'
   650  00FE48  44                 	db	68	;'D'
   651  00FE49  52                 	db	82	;'R'
   652  00FE4A  3D                 	db	61	;'='
   653  00FE4B  25                 	db	37
   654  00FE4C  30                 	db	48	;'0'
   655  00FE4D  32                 	db	50	;'2'
   656  00FE4E  58                 	db	88	;'X'
   657  00FE4F  25                 	db	37
   658  00FE50  30                 	db	48	;'0'
   659  00FE51  32                 	db	50	;'2'
   660  00FE52  58                 	db	88	;'X'
   661  00FE53  0D                 	db	13
   662  00FE54  0A                 	db	10
   663  00FE55  00                 	db	0
   664  00FE56                     STR_88:
   665                           
   666                           ; BSR set to: 0
   667  00FE56  2B                 	db	43
   668  00FE57  43                 	db	67	;'C'
   669  00FE58  41                 	db	65	;'A'
   670  00FE59  44                 	db	68	;'D'
   671  00FE5A  43                 	db	67	;'C'
   672  00FE5B  4F                 	db	79	;'O'
   673  00FE5C  55                 	db	85	;'U'
   674  00FE5D  4E                 	db	78	;'N'
   675  00FE5E  54                 	db	84	;'T'
   676  00FE5F  45                 	db	69	;'E'
   677  00FE60  52                 	db	82	;'R'
   678  00FE61  52                 	db	82	;'R'
   679  00FE62  53                 	db	83	;'S'
   680  00FE63  54                 	db	84	;'T'
   681  00FE64  00                 	db	0
   682  00FE65                     STR_37:
   683                           
   684                           ; BSR set to: 0
   685  00FE65  54                 	db	84	;'T'
   686  00FE66  58                 	db	88	;'X'
   687  00FE67  20                 	db	32
   688  00FE68  50                 	db	80	;'P'
   689  00FE69  4F                 	db	79	;'O'
   690  00FE6A  57                 	db	87	;'W'
   691  00FE6B  45                 	db	69	;'E'
   692  00FE6C  52                 	db	82	;'R'
   693  00FE6D  3D                 	db	61	;'='
   694  00FE6E  25                 	db	37
   695  00FE6F  75                 	db	117	;'u'
   696  00FE70  0D                 	db	13
   697  00FE71  0A                 	db	10
   698  00FE72  00                 	db	0
   699  00FE73                     STR_15:
   700                           
   701                           ; BSR set to: 0
   702  00FE73  4E                 	db	78	;'N'
   703  00FE74  41                 	db	65	;'A'
   704  00FE75  44                 	db	68	;'D'
   705  00FE76  44                 	db	68	;'D'
   706  00FE77  52                 	db	82	;'R'
   707  00FE78  3D                 	db	61	;'='
   708  00FE79  25                 	db	37
   709  00FE7A  30                 	db	48	;'0'
   710  00FE7B  32                 	db	50	;'2'
   711  00FE7C  58                 	db	88	;'X'
   712  00FE7D  0D                 	db	13
   713  00FE7E  0A                 	db	10
   714  00FE7F  00                 	db	0
   715  00FE80                     STR_42:
   716                           
   717                           ; BSR set to: 0
   718  00FE80  43                 	db	67	;'C'
   719  00FE81  41                 	db	65	;'A'
   720  00FE82  44                 	db	68	;'D'
   721  00FE83  20                 	db	32
   722  00FE84  52                 	db	82	;'R'
   723  00FE85  53                 	db	83	;'S'
   724  00FE86  53                 	db	83	;'S'
   725  00FE87  3D                 	db	61	;'='
   726  00FE88  25                 	db	37
   727  00FE89  69                 	db	105	;'i'
   728  00FE8A  0D                 	db	13
   729  00FE8B  0A                 	db	10
   730  00FE8C  00                 	db	0
   731  00FE8D                     STR_1:
   732                           
   733                           ; BSR set to: 0
   734  00FE8D  52                 	db	82	;'R'
   735  00FE8E  58                 	db	88	;'X'
   736  00FE8F  3A                 	db	58	;':'
   737  00FE90  25                 	db	37
   738  00FE91  30                 	db	48	;'0'
   739  00FE92  34                 	db	52	;'4'
   740  00FE93  58                 	db	88	;'X'
   741  00FE94  3A                 	db	58	;':'
   742  00FE95  25                 	db	37
   743  00FE96  73                 	db	115	;'s'
   744  00FE97  0D                 	db	13
   745  00FE98  0A                 	db	10
   746  00FE99  00                 	db	0
   747  00FE9A                     STR_33:
   748                           
   749                           ; BSR set to: 0
   750  00FE9A  43                 	db	67	;'C'
   751  00FE9B  48                 	db	72	;'H'
   752  00FE9C  41                 	db	65	;'A'
   753  00FE9D  4E                 	db	78	;'N'
   754  00FE9E  4E                 	db	78	;'N'
   755  00FE9F  45                 	db	69	;'E'
   756  00FEA0  4C                 	db	76	;'L'
   757  00FEA1  3D                 	db	61	;'='
   758  00FEA2  25                 	db	37
   759  00FEA3  75                 	db	117	;'u'
   760  00FEA4  0D                 	db	13
   761  00FEA5  0A                 	db	10
   762  00FEA6  00                 	db	0
   763  00FEA7                     STR_86:
   764                           
   765                           ; BSR set to: 0
   766  00FEA7  2B                 	db	43
   767  00FEA8  43                 	db	67	;'C'
   768  00FEA9  41                 	db	65	;'A'
   769  00FEAA  44                 	db	68	;'D'
   770  00FEAB  43                 	db	67	;'C'
   771  00FEAC  4F                 	db	79	;'O'
   772  00FEAD  55                 	db	85	;'U'
   773  00FEAE  4E                 	db	78	;'N'
   774  00FEAF  54                 	db	84	;'T'
   775  00FEB0  45                 	db	69	;'E'
   776  00FEB1  52                 	db	82	;'R'
   777  00FEB2  3F                 	db	63	;'?'
   778  00FEB3  00                 	db	0
   779  00FEB4                     STR_60:
   780                           
   781                           ; BSR set to: 0
   782  00FEB4  48                 	db	72	;'H'
   783  00FEB5  6F                 	db	111	;'o'
   784  00FEB6  70                 	db	112	;'p'
   785  00FEB7  20                 	db	32
   786  00FEB8  74                 	db	116	;'t'
   787  00FEB9  61                 	db	97	;'a'
   788  00FEBA  62                 	db	98	;'b'
   789  00FEBB  6C                 	db	108	;'l'
   790  00FEBC  65                 	db	101	;'e'
   791  00FEBD  0D                 	db	13
   792  00FEBE  0A                 	db	10
   793  00FEBF  00                 	db	0
   794  00FEC0                     STR_131:
   795                           
   796                           ; BSR set to: 0
   797  00FEC0  4C                 	db	76	;'L'
   798  00FEC1  6F                 	db	111	;'o'
   799  00FEC2  52                 	db	82	;'R'
   800  00FEC3  61                 	db	97	;'a'
   801  00FEC4  20                 	db	32
   802  00FEC5  4D                 	db	77	;'M'
   803  00FEC6  65                 	db	101	;'e'
   804  00FEC7  73                 	db	115	;'s'
   805  00FEC8  68                 	db	104	;'h'
   806  00FEC9  0D                 	db	13
   807  00FECA  0A                 	db	10
   808  00FECB  00                 	db	0
   809  00FECC                     STR_4:
   810                           
   811                           ; BSR set to: 0
   812  00FECC  4E                 	db	78	;'N'
   813  00FECD  4F                 	db	79	;'O'
   814  00FECE  54                 	db	84	;'T'
   815  00FECF  20                 	db	32
   816  00FED0  4F                 	db	79	;'O'
   817  00FED1  4B                 	db	75	;'K'
   818  00FED2  3A                 	db	58	;':'
   819  00FED3  25                 	db	37
   820  00FED4  75                 	db	117	;'u'
   821  00FED5  0D                 	db	13
   822  00FED6  0A                 	db	10
   823  00FED7  00                 	db	0
   824  00FED8                     STR_72:
   825                           
   826                           ; BSR set to: 0
   827  00FED8  2B                 	db	43
   828  00FED9  53                 	db	83	;'S'
   829  00FEDA  48                 	db	72	;'H'
   830  00FEDB  4F                 	db	79	;'O'
   831  00FEDC  57                 	db	87	;'W'
   832  00FEDD  48                 	db	72	;'H'
   833  00FEDE  4F                 	db	79	;'O'
   834  00FEDF  50                 	db	80	;'P'
   835  00FEE0  53                 	db	83	;'S'
   836  00FEE1  3F                 	db	63	;'?'
   837  00FEE2  00                 	db	0
   838  00FEE3                     STR_92:
   839                           
   840                           ; BSR set to: 0
   841  00FEE3  2B                 	db	43
   842  00FEE4  43                 	db	67	;'C'
   843  00FEE5  41                 	db	65	;'A'
   844  00FEE6  44                 	db	68	;'D'
   845  00FEE7  52                 	db	82	;'R'
   846  00FEE8  53                 	db	83	;'S'
   847  00FEE9  53                 	db	83	;'S'
   848  00FEEA  49                 	db	73	;'I'
   849  00FEEB  3D                 	db	61	;'='
   850  00FEEC  00                 	db	0
   851  00FEED                     STR_128:
   852                           
   853                           ; BSR set to: 0
   854  00FEED  2B                 	db	43
   855  00FEEE  54                 	db	84	;'T'
   856  00FEEF  58                 	db	88	;'X'
   857  00FEF0  50                 	db	80	;'P'
   858  00FEF1  4F                 	db	79	;'O'
   859  00FEF2  57                 	db	87	;'W'
   860  00FEF3  45                 	db	69	;'E'
   861  00FEF4  52                 	db	82	;'R'
   862  00FEF5  3D                 	db	61	;'='
   863  00FEF6  00                 	db	0
   864  00FEF7                     STR_90:
   865                           
   866                           ; BSR set to: 0
   867  00FEF7  2B                 	db	43
   868  00FEF8  43                 	db	67	;'C'
   869  00FEF9  41                 	db	65	;'A'
   870  00FEFA  44                 	db	68	;'D'
   871  00FEFB  52                 	db	82	;'R'
   872  00FEFC  53                 	db	83	;'S'
   873  00FEFD  53                 	db	83	;'S'
   874  00FEFE  49                 	db	73	;'I'
   875  00FEFF  3F                 	db	63	;'?'
   876  00FF00  00                 	db	0
   877  00FF01                     STR_126:
   878                           
   879                           ; BSR set to: 0
   880  00FF01  2B                 	db	43
   881  00FF02  54                 	db	84	;'T'
   882  00FF03  58                 	db	88	;'X'
   883  00FF04  50                 	db	80	;'P'
   884  00FF05  4F                 	db	79	;'O'
   885  00FF06  57                 	db	87	;'W'
   886  00FF07  45                 	db	69	;'E'
   887  00FF08  52                 	db	82	;'R'
   888  00FF09  3F                 	db	63	;'?'
   889  00FF0A  00                 	db	0
   890  00FF0B                     STR_78:
   891                           
   892                           ; BSR set to: 0
   893  00FF0B  2B                 	db	43
   894  00FF0C  42                 	db	66	;'B'
   895  00FF0D  4F                 	db	79	;'O'
   896  00FF0E  4F                 	db	79	;'O'
   897  00FF0F  54                 	db	84	;'T'
   898  00FF10  4C                 	db	76	;'L'
   899  00FF11  4F                 	db	79	;'O'
   900  00FF12  41                 	db	65	;'A'
   901  00FF13  44                 	db	68	;'D'
   902  00FF14  00                 	db	0
   903  00FF15                     STR_84:
   904                           
   905                           ; BSR set to: 0
   906  00FF15  2B                 	db	43
   907  00FF16  41                 	db	65	;'A'
   908  00FF17  45                 	db	69	;'E'
   909  00FF18  53                 	db	83	;'S'
   910  00FF19  4B                 	db	75	;'K'
   911  00FF1A  45                 	db	69	;'E'
   912  00FF1B  59                 	db	89	;'Y'
   913  00FF1C  3A                 	db	58	;':'
   914  00FF1D  00                 	db	0
   915  00FF1E                     STR_98:
   916                           
   917                           ; BSR set to: 0
   918  00FF1E  2B                 	db	43
   919  00FF1F  48                 	db	72	;'H'
   920  00FF20  4F                 	db	79	;'O'
   921  00FF21  50                 	db	80	;'P'
   922  00FF22  54                 	db	84	;'T'
   923  00FF23  54                 	db	84	;'T'
   924  00FF24  4C                 	db	76	;'L'
   925  00FF25  3D                 	db	61	;'='
   926  00FF26  00                 	db	0
   927  00FF27                     STR_110:
   928                           
   929                           ; BSR set to: 0
   930  00FF27  2B                 	db	43
   931  00FF28  50                 	db	80	;'P'
   932  00FF29  41                 	db	65	;'A'
   933  00FF2A  52                 	db	82	;'R'
   934  00FF2B  49                 	db	73	;'I'
   935  00FF2C  54                 	db	84	;'T'
   936  00FF2D  59                 	db	89	;'Y'
   937  00FF2E  3D                 	db	61	;'='
   938  00FF2F  00                 	db	0
   939  00FF30                     STR_64:
   940                           
   941                           ; BSR set to: 0
   942  00FF30  2B                 	db	43
   943  00FF31  53                 	db	83	;'S'
   944  00FF32  45                 	db	69	;'E'
   945  00FF33  54                 	db	84	;'T'
   946  00FF34  53                 	db	83	;'S'
   947  00FF35  49                 	db	73	;'I'
   948  00FF36  4E                 	db	78	;'N'
   949  00FF37  4B                 	db	75	;'K'
   950  00FF38  00                 	db	0
   951  00FF39                     STR_56:
   952                           
   953                           ; BSR set to: 0
   954  00FF39  53                 	db	83	;'S'
   955  00FF3A  46                 	db	70	;'F'
   956  00FF3B  3D                 	db	61	;'='
   957  00FF3C  25                 	db	37
   958  00FF3D  75                 	db	117	;'u'
   959  00FF3E  0D                 	db	13
   960  00FF3F  0A                 	db	10
   961  00FF40  00                 	db	0
   962  00FF41                     STR_134:
   963                           
   964                           ; BSR set to: 0
   965  00FF41  52                 	db	82	;'R'
   966  00FF42  65                 	db	101	;'e'
   967  00FF43  67                 	db	103	;'g'
   968  00FF44  69                 	db	105	;'i'
   969  00FF45  6F                 	db	111	;'o'
   970  00FF46  6E                 	db	110	;'n'
   971  00FF47  20                 	db	32
   972  00FF48  00                 	db	0
   973  00FF49                     STR_108:
   974                           
   975                           ; BSR set to: 0
   976  00FF49  2B                 	db	43
   977  00FF4A  4E                 	db	78	;'N'
   978  00FF4B  41                 	db	65	;'A'
   979  00FF4C  44                 	db	68	;'D'
   980  00FF4D  44                 	db	68	;'D'
   981  00FF4E  52                 	db	82	;'R'
   982  00FF4F  3D                 	db	61	;'='
   983  00FF50  00                 	db	0
   984  00FF51                     STR_74:
   985                           
   986                           ; BSR set to: 0
   987  00FF51  2B                 	db	43
   988  00FF52  42                 	db	66	;'B'
   989  00FF53  43                 	db	67	;'C'
   990  00FF54  41                 	db	65	;'A'
   991  00FF55  53                 	db	83	;'S'
   992  00FF56  54                 	db	84	;'T'
   993  00FF57  3D                 	db	61	;'='
   994  00FF58  00                 	db	0
   995  00FF59                     STR_106:
   996                           
   997                           ; BSR set to: 0
   998  00FF59  2B                 	db	43
   999  00FF5A  4E                 	db	78	;'N'
  1000  00FF5B  41                 	db	65	;'A'
  1001  00FF5C  44                 	db	68	;'D'
  1002  00FF5D  44                 	db	68	;'D'
  1003  00FF5E  52                 	db	82	;'R'
  1004  00FF5F  3F                 	db	63	;'?'
  1005  00FF60  00                 	db	0
  1006  00FF61                     STR_62:
  1007                           
  1008                           ; BSR set to: 0
  1009  00FF61  2B                 	db	43
  1010  00FF62  53                 	db	83	;'S'
  1011  00FF63  45                 	db	69	;'E'
  1012  00FF64  4E                 	db	78	;'N'
  1013  00FF65  44                 	db	68	;'D'
  1014  00FF66  3A                 	db	58	;':'
  1015  00FF67  00                 	db	0
  1016  00FF68                     STR_76:
  1017                           
  1018                           ; BSR set to: 0
  1019  00FF68  2B                 	db	43
  1020  00FF69  42                 	db	66	;'B'
  1021  00FF6A  41                 	db	65	;'A'
  1022  00FF6B  55                 	db	85	;'U'
  1023  00FF6C  44                 	db	68	;'D'
  1024  00FF6D  3D                 	db	61	;'='
  1025  00FF6E  00                 	db	0
  1026  00FF6F                     STR_116:
  1027                           
  1028                           ; BSR set to: 0
  1029  00FF6F  2B                 	db	43
  1030  00FF70  52                 	db	82	;'R'
  1031  00FF71  46                 	db	70	;'F'
  1032  00FF72  43                 	db	67	;'C'
  1033  00FF73  48                 	db	72	;'H'
  1034  00FF74  3D                 	db	61	;'='
  1035  00FF75  00                 	db	0
  1036  00FF76                     STR_82:
  1037                           
  1038                           ; BSR set to: 0
  1039  00FF76  2B                 	db	43
  1040  00FF77  41                 	db	65	;'A'
  1041  00FF78  44                 	db	68	;'D'
  1042  00FF79  44                 	db	68	;'D'
  1043  00FF7A  52                 	db	82	;'R'
  1044  00FF7B  3D                 	db	61	;'='
  1045  00FF7C  00                 	db	0
  1046  00FF7D                     STR_96:
  1047                           
  1048                           ; BSR set to: 0
  1049  00FF7D  2B                 	db	43
  1050  00FF7E  48                 	db	72	;'H'
  1051  00FF7F  4F                 	db	79	;'O'
  1052  00FF80  50                 	db	80	;'P'
  1053  00FF81  53                 	db	83	;'S'
  1054  00FF82  3D                 	db	61	;'='
  1055  00FF83  00                 	db	0
  1056  00FF84                     STR_104:
  1057                           
  1058                           ; BSR set to: 0
  1059  00FF84  2B                 	db	43
  1060  00FF85  4D                 	db	77	;'M'
  1061  00FF86  4F                 	db	79	;'O'
  1062  00FF87  44                 	db	68	;'D'
  1063  00FF88  45                 	db	69	;'E'
  1064  00FF89  3F                 	db	63	;'?'
  1065  00FF8A  00                 	db	0
  1066  00FF8B                     STR_114:
  1067                           
  1068                           ; BSR set to: 0
  1069  00FF8B  2B                 	db	43
  1070  00FF8C  52                 	db	82	;'R'
  1071  00FF8D  46                 	db	70	;'F'
  1072  00FF8E  43                 	db	67	;'C'
  1073  00FF8F  48                 	db	72	;'H'
  1074  00FF90  3F                 	db	63	;'?'
  1075  00FF91  00                 	db	0
  1076  00FF92                     STR_80:
  1077                           
  1078                           ; BSR set to: 0
  1079  00FF92  2B                 	db	43
  1080  00FF93  41                 	db	65	;'A'
  1081  00FF94  44                 	db	68	;'D'
  1082  00FF95  44                 	db	68	;'D'
  1083  00FF96  52                 	db	82	;'R'
  1084  00FF97  3F                 	db	63	;'?'
  1085  00FF98  00                 	db	0
  1086  00FF99                     STR_94:
  1087                           
  1088                           ; BSR set to: 0
  1089  00FF99  2B                 	db	43
  1090  00FF9A  48                 	db	72	;'H'
  1091  00FF9B  4F                 	db	79	;'O'
  1092  00FF9C  50                 	db	80	;'P'
  1093  00FF9D  53                 	db	83	;'S'
  1094  00FF9E  3F                 	db	63	;'?'
  1095  00FF9F  00                 	db	0
  1096  00FFA0                     STR_120:
  1097                           
  1098                           ; BSR set to: 0
  1099  00FFA0  2B                 	db	43
  1100  00FFA1  52                 	db	82	;'R'
  1101  00FFA2  58                 	db	88	;'X'
  1102  00FFA3  43                 	db	67	;'C'
  1103  00FFA4  54                 	db	84	;'T'
  1104  00FFA5  3F                 	db	63	;'?'
  1105  00FFA6  00                 	db	0
  1106  00FFA7                     STR_66:
  1107                           
  1108                           ; BSR set to: 0
  1109  00FFA7  2B                 	db	43
  1110  00FFA8  53                 	db	83	;'S'
  1111  00FFA9  53                 	db	83	;'S'
  1112  00FFAA  49                 	db	73	;'I'
  1113  00FFAB  4E                 	db	78	;'N'
  1114  00FFAC  4B                 	db	75	;'K'
  1115  00FFAD  00                 	db	0
  1116  00FFAE                     STR_124:
  1117                           
  1118                           ; BSR set to: 0
  1119  00FFAE  2B                 	db	43
  1120  00FFAF  54                 	db	84	;'T'
  1121  00FFB0  54                 	db	84	;'T'
  1122  00FFB1  4C                 	db	76	;'L'
  1123  00FFB2  3D                 	db	61	;'='
  1124  00FFB3  00                 	db	0
  1125  00FFB4                     STR_102:
  1126                           
  1127                           ; BSR set to: 0
  1128  00FFB4  2B                 	db	43
  1129  00FFB5  4D                 	db	77	;'M'
  1130  00FFB6  41                 	db	65	;'A'
  1131  00FFB7  43                 	db	67	;'C'
  1132  00FFB8  3F                 	db	63	;'?'
  1133  00FFB9  00                 	db	0
  1134  00FFBA                     STR_122:
  1135                           
  1136                           ; BSR set to: 0
  1137  00FFBA  2B                 	db	43
  1138  00FFBB  54                 	db	84	;'T'
  1139  00FFBC  54                 	db	84	;'T'
  1140  00FFBD  4C                 	db	76	;'L'
  1141  00FFBE  3F                 	db	63	;'?'
  1142  00FFBF  00                 	db	0
  1143  00FFC0                     STR_48:
  1144                           
  1145                           ; BSR set to: 0
  1146  00FFC0  3D                 	db	61	;'='
  1147  00FFC1  4E                 	db	78	;'N'
  1148  00FFC2  4F                 	db	79	;'O'
  1149  00FFC3  4E                 	db	78	;'N'
  1150  00FFC4  45                 	db	69	;'E'
  1151  00FFC5  00                 	db	0
  1152  00FFC6                     STR_50:
  1153                           
  1154                           ; BSR set to: 0
  1155  00FFC6  3D                 	db	61	;'='
  1156  00FFC7  45                 	db	69	;'E'
  1157  00FFC8  56                 	db	86	;'V'
  1158  00FFC9  45                 	db	69	;'E'
  1159  00FFCA  4E                 	db	78	;'N'
  1160  00FFCB  00                 	db	0
  1161  00FFCC                     STR_112:
  1162                           
  1163                           ; BSR set to: 0
  1164  00FFCC  2B                 	db	43
  1165  00FFCD  52                 	db	82	;'R'
  1166  00FFCE  45                 	db	69	;'E'
  1167  00FFCF  43                 	db	67	;'C'
  1168  00FFD0  56                 	db	86	;'V'
  1169  00FFD1  00                 	db	0
  1170  00FFD2                     STR_135:
  1171                           
  1172                           ; BSR set to: 0
  1173  00FFD2  4E                 	db	78	;'N'
  1174  00FFD3  41                 	db	65	;'A'
  1175  00FFD4  0D                 	db	13
  1176  00FFD5  0A                 	db	10
  1177  00FFD6  00                 	db	0
  1178  00FFD7                     STR_13:
  1179                           
  1180                           ; BSR set to: 0
  1181  00FFD7  4F                 	db	79	;'O'
  1182  00FFD8  4B                 	db	75	;'K'
  1183  00FFD9  0D                 	db	13
  1184  00FFDA  0A                 	db	10
  1185  00FFDB  00                 	db	0
  1186  00FFDC                     STR_18:
  1187                           
  1188                           ; BSR set to: 0
  1189  00FFDC  4D                 	db	77	;'M'
  1190  00FFDD  41                 	db	65	;'A'
  1191  00FFDE  43                 	db	67	;'C'
  1192  00FFDF  3D                 	db	61	;'='
  1193  00FFE0  00                 	db	0
  1194  00FFE1                     STR_70:
  1195                           
  1196                           ; BSR set to: 0
  1197  00FFE1  2B                 	db	43
  1198  00FFE2  53                 	db	83	;'S'
  1199  00FFE3  46                 	db	70	;'F'
  1200  00FFE4  3D                 	db	61	;'='
  1201  00FFE5  00                 	db	0
  1202  00FFE6                     STR_68:
  1203                           
  1204                           ; BSR set to: 0
  1205  00FFE6  2B                 	db	43
  1206  00FFE7  53                 	db	83	;'S'
  1207  00FFE8  46                 	db	70	;'F'
  1208  00FFE9  3F                 	db	63	;'?'
  1209  00FFEA  00                 	db	0
  1210  00FFEB                     STR_46:
  1211                           
  1212                           ; BSR set to: 0
  1213  00FFEB  3D                 	db	61	;'='
  1214  00FFEC  4F                 	db	79	;'O'
  1215  00FFED  44                 	db	68	;'D'
  1216  00FFEE  44                 	db	68	;'D'
  1217  00FFEF  00                 	db	0
  1218  00FFF0                     STR_118:
  1219                           
  1220                           ; BSR set to: 0
  1221  00FFF0  2B                 	db	43
  1222  00FFF1  52                 	db	82	;'R'
  1223  00FFF2  53                 	db	83	;'S'
  1224  00FFF3  54                 	db	84	;'T'
  1225  00FFF4  00                 	db	0
  1226  00FFF5                     STR_19:
  1227                           
  1228                           ; BSR set to: 0
  1229  00FFF5  25                 	db	37
  1230  00FFF6  30                 	db	48	;'0'
  1231  00FFF7  32                 	db	50	;'2'
  1232  00FFF8  58                 	db	88	;'X'
  1233  00FFF9  00                 	db	0
  1234  00FFFA                     STR_100:
  1235                           
  1236                           ; BSR set to: 0
  1237  00FFFA  2B                 	db	43
  1238  00FFFB  49                 	db	73	;'I'
  1239  00FFFC  00                 	db	0
  1240  00FFFD                     STR_55:
  1241                           
  1242                           ; BSR set to: 0
  1243  00FFFD  0D                 	db	13
  1244  00FFFE  00                 	db	0
  1245  0000                     
  1246                           ; #config settings
  1247  00FFFF  00                 	db	0	; dummy byte at the end
  1248  0000                     
  1249                           	psect	nvBANK1
  1250  0001DF                     __pnvBANK1:
  1251                           	opt callstack 0
  1252  0001DF                     _UART1_ErrorHandler:
  1253                           	opt callstack 0
  1254  0001DF                     	ds	2
  1255  0001E1                     _UART1_OverrunErrorHandler:
  1256                           	opt callstack 0
  1257  0001E1                     	ds	2
  1258  0001E3                     _UART1_FramingErrorHandler:
  1259                           	opt callstack 0
  1260  0001E3                     	ds	2
  1261  0001E5                     _TMR0_InterruptHandler:
  1262                           	opt callstack 0
  1263  0001E5                     	ds	2
  1264  0001E7                     _timer0ReloadVal16bit:
  1265                           	opt callstack 0
  1266  0001E7                     	ds	2
  1267  0001E9                     _UART1_TxInterruptHandler:
  1268                           	opt callstack 0
  1269  0001E9                     	ds	2
  1270  0001EB                     _UART1_RxInterruptHandler:
  1271                           	opt callstack 0
  1272  0001EB                     	ds	2
  1273  0001ED                     _uart1TxBufferRemaining:
  1274                           	opt callstack 0
  1275  0001ED                     	ds	1
  1276  0000                     _CRCDATH	set	14689
  1277  0000                     _CRCDATL	set	14688
  1278  0000                     _CRCCON1bits	set	14697
  1279  0000                     _CRCXORL	set	14694
  1280  0000                     _CRCXORH	set	14695
  1281  0000                     _SCANTRIG	set	14717
  1282  0000                     _SCANHADRL	set	14713
  1283  0000                     _SCANHADRH	set	14714
  1284  0000                     _SCANHADRU	set	14715
  1285  0000                     _SCANLADRL	set	14710
  1286  0000                     _SCANLADRH	set	14711
  1287  0000                     _SCANLADRU	set	14712
  1288  0000                     _SCANCON0	set	14716
  1289  0000                     _CRCCON1	set	14697
  1290  0000                     _CRCCON0	set	14696
  1291  0000                     _PMD7	set	14791
  1292  0000                     _PMD6	set	14790
  1293  0000                     _PMD5	set	14789
  1294  0000                     _PMD4	set	14788
  1295  0000                     _PMD3	set	14787
  1296  0000                     _PMD2	set	14786
  1297  0000                     _PMD1	set	14785
  1298  0000                     _PMD0	set	14784
  1299  0000                     _OSCTUNE	set	14814
  1300  0000                     _OSCFRQ	set	14815
  1301  0000                     _OSCEN	set	14813
  1302  0000                     _OSCCON3	set	14811
  1303  0000                     _OSCCON1	set	14809
  1304  0000                     _IPR3bits	set	14723
  1305  0000                     _PIR0bits	set	14752
  1306  0000                     _NVMCON2	set	14822
  1307  0000                     _NVMDAT	set	14819
  1308  0000                     _NVMADRL	set	14816
  1309  0000                     _NVMADRH	set	14817
  1310  0000                     _NVMCON1bits	set	14821
  1311  0000                     _PIR3bits	set	14755
  1312  0000                     _PIR2bits	set	14754
  1313  0000                     _PIE3bits	set	14739
  1314  0000                     _CRCCON0bits	set	14696
  1315  0000                     _CRCACCH	set	14691
  1316  0000                     _CRCACCL	set	14690
  1317  0000                     _SPI1SDIPPS	set	15071
  1318  0000                     _RC7PPS	set	14871
  1319  0000                     _U1CTSPPS	set	15078
  1320  0000                     _U1RXPPS	set	15077
  1321  0000                     _RC1PPS	set	14865
  1322  0000                     _RB0PPS	set	14856
  1323  0000                     _SPI1SSPPS	set	15072
  1324  0000                     _SPI1SCKPPS	set	15070
  1325  0000                     _RC0PPS	set	14864
  1326  0000                     _INLVLE	set	14980
  1327  0000                     _INLVLC	set	14948
  1328  0000                     _INLVLB	set	14932
  1329  0000                     _INLVLA	set	14916
  1330  0000                     _SLRCONC	set	14947
  1331  0000                     _SLRCONB	set	14931
  1332  0000                     _SLRCONA	set	14915
  1333  0000                     _ODCONC	set	14946
  1334  0000                     _ODCONB	set	14930
  1335  0000                     _ODCONA	set	14914
  1336  0000                     _RC4I2C	set	14955
  1337  0000                     _RC3I2C	set	14954
  1338  0000                     _RB2I2C	set	14939
  1339  0000                     _RB1I2C	set	14938
  1340  0000                     _WPUC	set	14945
  1341  0000                     _WPUA	set	14913
  1342  0000                     _WPUB	set	14929
  1343  0000                     _WPUE	set	14977
  1344  0000                     _ANSELA	set	14912
  1345  0000                     _ANSELB	set	14928
  1346  0000                     _ANSELC	set	14944
  1347  0000                     _U1TXB	set	15850
  1348  0000                     _U1ERRIE	set	15866
  1349  0000                     _U1UIR	set	15864
  1350  0000                     _U1P3H	set	15857
  1351  0000                     _U1P3L	set	15856
  1352  0000                     _U1P2H	set	15855
  1353  0000                     _U1P2L	set	15854
  1354  0000                     _U1P1H	set	15853
  1355  0000                     _U1P1L	set	15852
  1356  0000                     _SPI1RXB	set	15632
  1357  0000                     _SPI1TXB	set	15633
  1358  0000                     _SPI1TCNTL	set	15634
  1359  0000                     _SPI1BAUD	set	15641
  1360  0000                     _SPI1CLK	set	15644
  1361  0000                     _SPI1CON2	set	15638
  1362  0000                     _SPI1CON1	set	15637
  1363  0000                     _SPI1CON0	set	15636
  1364  0000                     _U1ERRIR	set	15865
  1365  0000                     _U1FIFO	set	15863
  1366  0000                     _U1ERRIRbits	set	15865
  1367  0000                     _U1BRGH	set	15862
  1368  0000                     _U1BRGL	set	15861
  1369  0000                     _U1CON2	set	15860
  1370  0000                     _U1CON0	set	15858
  1371  0000                     _U1CON1	set	15859
  1372  0000                     _U1RXB	set	15848
  1373  0000                     _PORTBbits	set	16331
  1374  0000                     _LATCbits	set	16316
  1375  0000                     _TRISC	set	16324
  1376  0000                     _TRISB	set	16323
  1377  0000                     _TRISA	set	16322
  1378  0000                     _LATC	set	16316
  1379  0000                     _LATB	set	16315
  1380  0000                     _LATA	set	16314
  1381  0000                     _IVTBASEL	set	16341
  1382  0000                     _IVTBASEH	set	16342
  1383  0000                     _IVTBASEU	set	16343
  1384  0000                     _IVTLOCKbits	set	16340
  1385  0000                     _IVTLOCK	set	16340
  1386  0000                     _INTCON0bits	set	16338
  1387  0000                     _TABLAT	set	16373
  1388  0000                     _TBLPTRL	set	16374
  1389  0000                     _TBLPTRH	set	16375
  1390  0000                     _TBLPTRU	set	16376
  1391  0000                     _T0CON0	set	16312
  1392  0000                     _TMR0L	set	16310
  1393  0000                     _TMR0H	set	16311
  1394  0000                     _T0CON1	set	16313
  1395  0000                     _TRISBbits	set	16323
  1396  0000                     _LATAbits	set	16314
  1397  0000                     _GIE	set	130711
  1398                           
  1399                           	psect	cinit
  1400  005C6E                     __pcinit:
  1401                           	opt callstack 0
  1402  005C6E                     start_initialization:
  1403                           	opt callstack 0
  1404  005C6E                     __initialization:
  1405                           	opt callstack 0
  1406                           
  1407                           ; Initialize objects allocated to BANK2 (10 bytes)
  1408                           ; load TBLPTR registers with __pidataBANK2
  1409  005C6E  0E28               	movlw	low __pidataBANK2
  1410  005C70  6EF6               	movwf	tblptrl,c
  1411  005C72  0E8D               	movlw	high __pidataBANK2
  1412  005C74  6EF7               	movwf	tblptrh,c
  1413  005C76  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1414  005C78  6EF8               	movwf	tblptru,c
  1415  005C7A  EE00  F2CA         	lfsr	0,__pdataBANK2
  1416  005C7E  EE10 F00A          	lfsr	1,10
  1417  005C82                     copy_data0:
  1418  005C82  0009               	tblrd		*+
  1419  005C84  006F FFD7 FFEE     	movff	tablat,postinc0
  1420  005C8A  50E5               	movf	postdec1,w,c
  1421  005C8C  50E1               	movf	fsr1l,w,c
  1422  005C8E  E1F9               	bnz	copy_data0
  1423                           
  1424                           ; Initialize objects allocated to BANK1 (14 bytes)
  1425                           ; load TBLPTR registers with __pidataBANK1
  1426  005C90  0E32               	movlw	low __pidataBANK1
  1427  005C92  6EF6               	movwf	tblptrl,c
  1428  005C94  0E8C               	movlw	high __pidataBANK1
  1429  005C96  6EF7               	movwf	tblptrh,c
  1430  005C98  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1431  005C9A  6EF8               	movwf	tblptru,c
  1432  005C9C  EE00  F1EE         	lfsr	0,__pdataBANK1
  1433  005CA0  EE10 F00E          	lfsr	1,14
  1434  005CA4                     copy_data1:
  1435  005CA4  0009               	tblrd		*+
  1436  005CA6  006F FFD7 FFEE     	movff	tablat,postinc0
  1437  005CAC  50E5               	movf	postdec1,w,c
  1438  005CAE  50E1               	movf	fsr1l,w,c
  1439  005CB0  E1F9               	bnz	copy_data1
  1440                           
  1441                           ; Initialize objects allocated to BANK0 (6 bytes)
  1442                           ; load TBLPTR registers with __pidataBANK0
  1443  005CB2  0E44               	movlw	low __pidataBANK0
  1444  005CB4  6EF6               	movwf	tblptrl,c
  1445  005CB6  0E8D               	movlw	high __pidataBANK0
  1446  005CB8  6EF7               	movwf	tblptrh,c
  1447  005CBA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1448  005CBC  6EF8               	movwf	tblptru,c
  1449  005CBE  EE00  F0F9         	lfsr	0,__pdataBANK0
  1450  005CC2  EE10 F006          	lfsr	1,6
  1451  005CC6                     copy_data2:
  1452  005CC6  0009               	tblrd		*+
  1453  005CC8  006F FFD7 FFEE     	movff	tablat,postinc0
  1454  005CCE  50E5               	movf	postdec1,w,c
  1455  005CD0  50E1               	movf	fsr1l,w,c
  1456  005CD2  E1F9               	bnz	copy_data2
  1457                           
  1458                           ; Clear objects allocated to BIGRAM (1209 bytes)
  1459  005CD4  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1460  005CD8  EE11 F0B9          	lfsr	1,1209
  1461  005CDC                     clear_0:
  1462  005CDC  6AEE               	clrf	postinc0,c
  1463  005CDE  50E5               	movf	postdec1,w,c
  1464  005CE0  50E1               	movf	fsr1l,w,c
  1465  005CE2  E1FC               	bnz	clear_0
  1466  005CE4  50E2               	movf	fsr1h,w,c
  1467  005CE6  E1FA               	bnz	clear_0
  1468                           
  1469                           ; Clear objects allocated to BANK5 (189 bytes)
  1470  005CE8  EE01  F100         	lfsr	0,__pbssBANK5
  1471  005CEC  0EBD               	movlw	189
  1472  005CEE                     clear_1:
  1473  005CEE  6AEE               	clrf	postinc0,c
  1474  005CF0  06E8               	decf	wreg,f,c
  1475  005CF2  E1FD               	bnz	clear_1
  1476                           
  1477                           ; Clear objects allocated to BANK4 (96 bytes)
  1478  005CF4  EE01  F000         	lfsr	0,__pbssBANK4
  1479  005CF8  0E60               	movlw	96
  1480  005CFA                     clear_2:
  1481  005CFA  6AEE               	clrf	postinc0,c
  1482  005CFC  06E8               	decf	wreg,f,c
  1483  005CFE  E1FD               	bnz	clear_2
  1484                           
  1485                           ; Clear objects allocated to BANK3 (242 bytes)
  1486  005D00  EE00  F300         	lfsr	0,__pbssBANK3
  1487  005D04  0EF2               	movlw	242
  1488  005D06                     clear_3:
  1489  005D06  6AEE               	clrf	postinc0,c
  1490  005D08  06E8               	decf	wreg,f,c
  1491  005D0A  E1FD               	bnz	clear_3
  1492                           
  1493                           ; Clear objects allocated to BANK2 (202 bytes)
  1494  005D0C  EE00  F200         	lfsr	0,__pbssBANK2
  1495  005D10  0ECA               	movlw	202
  1496  005D12                     clear_4:
  1497  005D12  6AEE               	clrf	postinc0,c
  1498  005D14  06E8               	decf	wreg,f,c
  1499  005D16  E1FD               	bnz	clear_4
  1500                           
  1501                           ; Clear objects allocated to BANK1 (223 bytes)
  1502  005D18  EE00  F100         	lfsr	0,__pbssBANK1
  1503  005D1C  0EDF               	movlw	223
  1504  005D1E                     clear_5:
  1505  005D1E  6AEE               	clrf	postinc0,c
  1506  005D20  06E8               	decf	wreg,f,c
  1507  005D22  E1FD               	bnz	clear_5
  1508                           
  1509                           ; Clear objects allocated to BANK0 (31 bytes)
  1510  005D24  EE00  F0DA         	lfsr	0,__pbssBANK0
  1511  005D28  0E1F               	movlw	31
  1512  005D2A                     clear_6:
  1513  005D2A  6AEE               	clrf	postinc0,c
  1514  005D2C  06E8               	decf	wreg,f,c
  1515  005D2E  E1FD               	bnz	clear_6
  1516                           
  1517                           ; Clear objects allocated to COMRAM (1 bytes)
  1518  005D30  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1519                           
  1520                           ;
  1521                           ; Setup IVTBASE
  1522                           ;
  1523  005D32  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1524  005D34  6ED5               	movwf	213,c
  1525  005D36  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1526  005D38  6ED6               	movwf	214,c
  1527  005D3A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1528  005D3C  6ED7               	movwf	215,c
  1529  005D3E                     end_of_initialization:
  1530                           	opt callstack 0
  1531  005D3E                     __end_of__initialization:
  1532                           	opt callstack 0
  1533  005D3E  0100               	movlb	0
  1534  005D40  EFA5  F043         	goto	_main	;jump to C main() function
  1535                           
  1536                           	psect	bssCOMRAM
  1537  00005E                     __pbssCOMRAM:
  1538                           	opt callstack 0
  1539  00005E                     _uart1RxHead:
  1540                           	opt callstack 0
  1541  00005E                     	ds	1
  1542                           
  1543                           	psect	bssBANK0
  1544  0000DA                     __pbssBANK0:
  1545                           	opt callstack 0
  1546  0000DA                     _width:
  1547                           	opt callstack 0
  1548  0000DA                     	ds	2
  1549  0000DC                     _prec:
  1550                           	opt callstack 0
  1551  0000DC                     	ds	2
  1552  0000DE                     _flags:
  1553                           	opt callstack 0
  1554  0000DE                     	ds	2
  1555  0000E0                     _timers:
  1556                           	opt callstack 0
  1557  0000E0                     	ds	2
  1558  0000E2                     _nwkDataReqQueue:
  1559                           	opt callstack 0
  1560  0000E2                     	ds	2
  1561  0000E4                     _halTimerIrqCount:
  1562                           	opt callstack 0
  1563  0000E4                     	ds	2
  1564  0000E6                     _uart1RxCount:
  1565                           	opt callstack 0
  1566  0000E6                     	ds	1
  1567  0000E7                     _uart1RxTail:
  1568                           	opt callstack 0
  1569  0000E7                     	ds	1
  1570  0000E8                     _uart1TxTail:
  1571                           	opt callstack 0
  1572  0000E8                     	ds	1
  1573  0000E9                     _uart1TxHead:
  1574                           	opt callstack 0
  1575  0000E9                     	ds	1
  1576  0000EA                     _TXPower:
  1577                           	opt callstack 0
  1578  0000EA                     	ds	1
  1579  0000EB                     _channel:
  1580                           	opt callstack 0
  1581  0000EB                     	ds	1
  1582  0000EC                     _current_sf:
  1583                           	opt callstack 0
  1584  0000EC                     	ds	1
  1585  0000ED                     _cadCounter:
  1586                           	opt callstack 0
  1587  0000ED                     	ds	1
  1588  0000EE                     _cadDone:
  1589                           	opt callstack 0
  1590  0000EE                     	ds	1
  1591  0000EF                     _atStateVar:
  1592                           	opt callstack 0
  1593  0000EF                     	ds	1
  1594  0000F0                     _commandByteCounter:
  1595                           	opt callstack 0
  1596  0000F0                     	ds	1
  1597  0000F1                     _tx_done:
  1598                           	opt callstack 0
  1599  0000F1                     	ds	1
  1600  0000F2                     _msgIDCounter:
  1601                           	opt callstack 0
  1602  0000F2                     	ds	1
  1603  0000F3                     _txTimeOut:
  1604                           	opt callstack 0
  1605  0000F3                     	ds	2
  1606  0000F5                     _cadTimeOut:
  1607                           	opt callstack 0
  1608  0000F5                     	ds	2
  1609  0000F7                     __cadBackoffTimer:
  1610                           	opt callstack 0
  1611  0000F7                     	ds	2
  1612                           
  1613                           	psect	dataBANK0
  1614  0000F9                     __pdataBANK0:
  1615                           	opt callstack 0
  1616  0000F9                     _RSSITarget:
  1617                           	opt callstack 0
  1618  0000F9                     	ds	1
  1619  0000FA                     _currentNetID:
  1620                           	opt callstack 0
  1621  0000FA                     	ds	1
  1622  0000FB                     _currentAddr1:
  1623                           	opt callstack 0
  1624  0000FB                     	ds	1
  1625  0000FC                     _currentAddr0:
  1626                           	opt callstack 0
  1627  0000FC                     	ds	1
  1628  0000FD                     _ATTimeoutTimer:
  1629                           	opt callstack 0
  1630  0000FD                     	ds	2
  1631                           
  1632                           	psect	bssBANK1
  1633  000100                     __pbssBANK1:
  1634                           	opt callstack 0
  1635  000100                     _nwkIb:
  1636                           	opt callstack 0
  1637  000100                     	ds	40
  1638  000128                     _uart1RxStatusBuffer:
  1639                           	opt callstack 0
  1640  000128                     	ds	16
  1641  000138                     _uart1RxBuffer:
  1642                           	opt callstack 0
  1643  000138                     	ds	16
  1644  000148                     _uartmsg:
  1645                           	opt callstack 0
  1646  000148                     	ds	6
  1647  00014E                     _symbolDuration:
  1648                           	opt callstack 0
  1649  00014E                     	ds	4
  1650  000152                     _current_baud_rate:
  1651                           	opt callstack 0
  1652  000152                     	ds	3
  1653  000155                     _errno:
  1654                           	opt callstack 0
  1655  000155                     	ds	2
  1656  000157                     strtok@p:
  1657                           	opt callstack 0
  1658  000157                     	ds	2
  1659  000159                     _nout:
  1660                           	opt callstack 0
  1661  000159                     	ds	2
  1662  00015B                     _nwkTxPhyActiveFrame:
  1663                           	opt callstack 0
  1664  00015B                     	ds	2
  1665  00015D                     _ledTimerVar:
  1666                           	opt callstack 0
  1667  00015D                     	ds	2
  1668  00015F                     _eeprom_write_flags:
  1669                           	opt callstack 0
  1670  00015F                     	ds	2
  1671  000161                     _nwkRxAckControl:
  1672                           	opt callstack 0
  1673  000161                     	ds	1
  1674  000162                     _uart1RxLastError:
  1675                           	opt callstack 0
  1676  000162                     	ds	1
  1677  000163                     _ledStateVar:
  1678                           	opt callstack 0
  1679  000163                     	ds	1
  1680  000164                     _radio_state_var:
  1681                           	opt callstack 0
  1682  000164                     	ds	1
  1683  000165                     _dwellTimer:
  1684                           	opt callstack 0
  1685  000165                     	ds	1
  1686  000166                     _fhssdebug:
  1687                           	opt callstack 0
  1688  000166                     	ds	1
  1689  000167                     _SNR:
  1690                           	opt callstack 0
  1691  000167                     	ds	1
  1692  000168                     _packetRSSI:
  1693                           	opt callstack 0
  1694  000168                     	ds	1
  1695  000169                     _RSSI:
  1696                           	opt callstack 0
  1697  000169                     	ds	1
  1698  00016A                     _need_radio_reset:
  1699                           	opt callstack 0
  1700  00016A                     	ds	1
  1701  00016B                     __packetIndex:
  1702                           	opt callstack 0
  1703  00016B                     	ds	1
  1704  00016C                     __implicitHeaderMode:
  1705                           	opt callstack 0
  1706  00016C                     	ds	1
  1707  00016D                     _currentMode:
  1708                           	opt callstack 0
  1709  00016D                     	ds	1
  1710  00016E                     _sinkAddr1:
  1711                           	opt callstack 0
  1712  00016E                     	ds	1
  1713  00016F                     _sinkAddr0:
  1714                           	opt callstack 0
  1715  00016F                     	ds	1
  1716  000170                     _currentMsgID:
  1717                           	opt callstack 0
  1718  000170                     	ds	1
  1719  000171                     _curent_parity:
  1720                           	opt callstack 0
  1721  000171                     	ds	1
  1722  000172                     _uart_parity:
  1723                           	opt callstack 0
  1724  000172                     	ds	1
  1725  000173                     _uart_baud_rate:
  1726                           	opt callstack 0
  1727  000173                     	ds	1
  1728  000174                     _eeprom_write_flags_enum:
  1729                           	opt callstack 0
  1730  000174                     	ds	1
  1731  000175                     _dbuf:
  1732                           	opt callstack 0
  1733  000175                     	ds	32
  1734  000195                     _nwkTxDelayTimer:
  1735                           	opt callstack 0
  1736  000195                     	ds	13
  1737  0001A2                     _nwkTxAckWaitTimer:
  1738                           	opt callstack 0
  1739  0001A2                     	ds	13
  1740  0001AF                     _nwkRxDuplicateRejectionTimer:
  1741                           	opt callstack 0
  1742  0001AF                     	ds	13
  1743  0001BC                     _EUIDbyte:
  1744                           	opt callstack 0
  1745  0001BC                     	ds	12
  1746  0001C8                     _ledtasksbuf:
  1747                           	opt callstack 0
  1748  0001C8                     	ds	10
  1749  0001D2                     _seed:
  1750                           	opt callstack 0
  1751  0001D2                     	ds	8
  1752  0001DA                     _crcObj:
  1753                           	opt callstack 0
  1754  0001DA                     	ds	3
  1755  0001DD                     _ledtimer:
  1756                           	opt callstack 0
  1757  0001DD                     	ds	2
  1758                           
  1759                           	psect	dataBANK1
  1760  0001EE                     __pdataBANK1:
  1761                           	opt callstack 0
  1762  0001EE                     stoa@F1139:
  1763                           	opt callstack 0
  1764  0001EE                     	ds	7
  1765  0001F5                     	ds	5
  1766  0001FA                     _test_timer:
  1767                           	opt callstack 0
  1768  0001FA                     	ds	2
  1769                           
  1770                           	psect	bssBANK2
  1771  000200                     __pbssBANK2:
  1772                           	opt callstack 0
  1773  000200                     _nwkGroups:
  1774                           	opt callstack 0
  1775  000200                     	ds	20
  1776  000214                     _net_key:
  1777                           	opt callstack 0
  1778  000214                     	ds	16
  1779  000224                     _aes_key:
  1780                           	opt callstack 0
  1781  000224                     	ds	16
  1782  000234                     _atCommand:
  1783                           	opt callstack 0
  1784  000234                     	ds	80
  1785  000284                     _nwkRouteTable:
  1786                           	opt callstack 0
  1787  000284                     	ds	70
  1788                           
  1789                           	psect	dataBANK2
  1790  0002CA                     __pdataBANK2:
  1791                           	opt callstack 0
  1792  0002CA                     _syncList:
  1793                           	opt callstack 0
  1794  0002CA                     	ds	10
  1795                           
  1796                           	psect	bssBANK3
  1797  000300                     __pbssBANK3:
  1798                           	opt callstack 0
  1799  000300                     _uart1TxBuffer:
  1800                           	opt callstack 0
  1801  000300                     	ds	64
  1802  000340                     _phyRxBuffer:
  1803                           	opt callstack 0
  1804  000340                     	ds	128
  1805  0003C0                     _nwkRxDuplicateRejectionTable:
  1806                           	opt callstack 0
  1807  0003C0                     	ds	50
  1808                           
  1809                           	psect	bssBANK4
  1810  000400                     __pbssBANK4:
  1811                           	opt callstack 0
  1812  000400                     _ledqueue:
  1813                           	opt callstack 0
  1814  000400                     	ds	96
  1815                           
  1816                           	psect	bssBANK5
  1817  000500                     __pbssBANK5:
  1818                           	opt callstack 0
  1819  000500                     _fhssReg:
  1820                           	opt callstack 0
  1821  000500                     	ds	189
  1822                           
  1823                           	psect	bssBIGRAM
  1824  0005BD                     __pbssBIGRAM:
  1825                           	opt callstack 0
  1826  0005BD                     _nwkFrameFrames:
  1827                           	opt callstack 0
  1828  0005BD                     	ds	685
  1829  00086A                     _tx_buffer:
  1830                           	opt callstack 0
  1831  00086A                     	ds	524
  1832                           
  1833                           	psect	cstackBANK1
  1834  0001FC                     __pcstackBANK1:
  1835                           	opt callstack 0
  1836  0001FC                     ??_nwkRxTaskHandler:
  1837                           
  1838                           ; 1 bytes @ 0x0
  1839  0001FC                     	ds	2
  1840  0001FE                     nwkRxTaskHandler@frame:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 2 bytes @ 0x2
  1844  0001FE                     	ds	2
  1845                           
  1846                           	psect	cstackBANK0
  1847  000060                     __pcstackBANK0:
  1848                           	opt callstack 0
  1849  000060                     vfpfcnvrt@ll:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 8 bytes @ 0x0
  1853  000060                     	ds	8
  1854  000068                     vfpfcnvrt@c:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 1 bytes @ 0x8
  1858  000068                     	ds	1
  1859  000069                     vfpfcnvrt@cp:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 1 bytes @ 0x9
  1863  000069                     	ds	1
  1864  00006A                     vfpfcnvrt@done:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 2 bytes @ 0xA
  1868  00006A                     	ds	2
  1869  00006C                     _vfpfcnvrt$7242:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 2 bytes @ 0xC
  1873  00006C                     	ds	2
  1874  00006E                     vfpfcnvrt@llu:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 8 bytes @ 0xE
  1878  00006E                     	ds	8
  1879  000076                     ??_cmdMac:
  1880  000076                     ??_cmdBootLoad:
  1881  000076                     appDataInd@ind:
  1882                           	opt callstack 0
  1883  000076                     nwkRxServiceDataInd@ind:
  1884                           	opt callstack 0
  1885  000076                     cmdSend@cmd:
  1886                           	opt callstack 0
  1887  000076                     cmdBcast@cmd:
  1888                           	opt callstack 0
  1889  000076                     cmdSetAddr@cmd:
  1890                           	opt callstack 0
  1891  000076                     cmdSetNaddr@cmd:
  1892                           	opt callstack 0
  1893  000076                     cmdSetAES@cmd:
  1894                           	opt callstack 0
  1895  000076                     cmdSetRFCH@cmd:
  1896                           	opt callstack 0
  1897  000076                     cmdSetTX@cmd:
  1898                           	opt callstack 0
  1899  000076                     cmdSetCADRSSI@atCommand:
  1900                           	opt callstack 0
  1901  000076                     cmdSetParity@atCommand:
  1902                           	opt callstack 0
  1903  000076                     cmdSetSF@atCommand:
  1904                           	opt callstack 0
  1905  000076                     print_hop_table@atCommand:
  1906                           	opt callstack 0
  1907  000076                     set_hop_table_ttl@cmd:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x16
  1911  000076                     	ds	1
  1912  000077                     ??_nwkRxServiceDataInd:
  1913  000077                     cmdMac@i:
  1914                           	opt callstack 0
  1915  000077                     appDataInd@data:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 65 bytes @ 0x17
  1919  000077                     	ds	1
  1920  000078                     ??_cmdSend:
  1921  000078                     ??_cmdBcast:
  1922  000078                     ??_cmdSetAES:
  1923  000078                     cmdSetAddr@p2:
  1924                           	opt callstack 0
  1925  000078                     cmdSetNaddr@p2:
  1926                           	opt callstack 0
  1927  000078                     cmdSetRFCH@p1:
  1928                           	opt callstack 0
  1929  000078                     cmdSetTX@p2:
  1930                           	opt callstack 0
  1931  000078                     cmdSetCADRSSI@p1:
  1932                           	opt callstack 0
  1933  000078                     cmdSetSF@p1:
  1934                           	opt callstack 0
  1935                           
  1936                           ; 2 bytes @ 0x18
  1937  000078                     	ds	2
  1938  00007A                     cmdBcast@p1:
  1939                           	opt callstack 0
  1940  00007A                     cmdSetAddr@p1:
  1941                           	opt callstack 0
  1942  00007A                     cmdSetNaddr@p1:
  1943                           	opt callstack 0
  1944  00007A                     cmdSetTX@p1:
  1945                           	opt callstack 0
  1946  00007A                     cmdSetRFCH@CHstr:
  1947                           	opt callstack 0
  1948  00007A                     cmdSetCADRSSI@CHstr:
  1949                           	opt callstack 0
  1950  00007A                     cmdSetSF@CHstr:
  1951                           	opt callstack 0
  1952  00007A                     cmdSend@destaddr:
  1953                           	opt callstack 0
  1954  00007A                     cmdSetAES@AESstr:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 32 bytes @ 0x1A
  1958  00007A                     	ds	2
  1959  00007C                     cmdBcast@buf_id:
  1960                           	opt callstack 0
  1961  00007C                     cmdSetNaddr@tempaddr:
  1962                           	opt callstack 0
  1963  00007C                     cmdSetTX@temp:
  1964                           	opt callstack 0
  1965  00007C                     cmdSetAddr@tempaddr:
  1966                           	opt callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x1C
  1969  00007C                     	ds	1
  1970  00007D                     cmdSetRFCH@p2:
  1971                           	opt callstack 0
  1972  00007D                     cmdSetCADRSSI@p2:
  1973                           	opt callstack 0
  1974  00007D                     cmdSetSF@p2:
  1975                           	opt callstack 0
  1976  00007D                     cmdSetTX@CHstr:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 3 bytes @ 0x1D
  1980  00007D                     	ds	2
  1981  00007F                     cmdSetRFCH@temp:
  1982                           	opt callstack 0
  1983  00007F                     cmdSetCADRSSI@temp:
  1984                           	opt callstack 0
  1985  00007F                     cmdSetSF@temp:
  1986                           	opt callstack 0
  1987  00007F                     cmdSend@tempaddr:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x1F
  1991  00007F                     	ds	2
  1992  000081                     cmdSend@p2:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x21
  1996  000081                     	ds	2
  1997  000083                     cmdSend@p1:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x23
  2001  000083                     	ds	2
  2002  000085                     cmdSend@buf_id:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 1 bytes @ 0x25
  2006  000085                     	ds	21
  2007  00009A                     cmdSetAES@p2:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 2 bytes @ 0x3A
  2011  00009A                     	ds	2
  2012  00009C                     cmdSetAES@temp:
  2013                           	opt callstack 0
  2014                           
  2015                           ; 3 bytes @ 0x3C
  2016  00009C                     	ds	3
  2017  00009F                     cmdSetAES@key_type:
  2018                           	opt callstack 0
  2019                           
  2020                           ; 1 bytes @ 0x3F
  2021  00009F                     	ds	1
  2022  0000A0                     cmdSetAES@byte:
  2023                           	opt callstack 0
  2024                           
  2025                           ; 1 bytes @ 0x40
  2026  0000A0                     	ds	1
  2027  0000A1                     cmdSetAES@p1:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 2 bytes @ 0x41
  2031  0000A1                     	ds	2
  2032  0000A3                     cmdSetAES@i:
  2033                           	opt callstack 0
  2034                           
  2035                           ; 1 bytes @ 0x43
  2036  0000A3                     	ds	1
  2037  0000A4                     executeATCommand@cmd:
  2038                           	opt callstack 0
  2039                           
  2040                           ; 2 bytes @ 0x44
  2041  0000A4                     	ds	2
  2042  0000A6                     ??_executeATCommand:
  2043                           
  2044                           ; 1 bytes @ 0x46
  2045  0000A6                     	ds	3
  2046  0000A9                     ??_processATCommand:
  2047                           
  2048                           ; 1 bytes @ 0x49
  2049  0000A9                     	ds	2
  2050  0000AB                     processATCommand@data_828:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x4B
  2054  0000AB                     	ds	1
  2055  0000AC                     processATCommand@data:
  2056                           	opt callstack 0
  2057                           
  2058                           ; 1 bytes @ 0x4C
  2059  0000AC                     	ds	12
  2060  0000B8                     appDataInd@dataptr:
  2061                           	opt callstack 0
  2062                           
  2063                           ; 2 bytes @ 0x58
  2064  0000B8                     	ds	2
  2065  0000BA                     appDataInd@i:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 1 bytes @ 0x5A
  2069  0000BA                     	ds	1
  2070  0000BB                     nwkRxIndicateFrame@frame:
  2071                           	opt callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x5B
  2074  0000BB                     	ds	2
  2075  0000BD                     ??_nwkRxIndicateFrame:
  2076                           
  2077                           ; 1 bytes @ 0x5D
  2078  0000BD                     	ds	4
  2079  0000C1                     _nwkRxIndicateFrame$5152:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 1 bytes @ 0x61
  2083  0000C1                     	ds	1
  2084  0000C2                     _nwkRxIndicateFrame$5153:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 1 bytes @ 0x62
  2088  0000C2                     	ds	1
  2089  0000C3                     _nwkRxIndicateFrame$5154:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 1 bytes @ 0x63
  2093  0000C3                     	ds	1
  2094  0000C4                     _nwkRxIndicateFrame$5155:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x64
  2098  0000C4                     	ds	1
  2099  0000C5                     _nwkRxIndicateFrame$5156:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x65
  2103  0000C5                     	ds	1
  2104  0000C6                     _nwkRxIndicateFrame$5157:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x66
  2108  0000C6                     	ds	1
  2109  0000C7                     nwkRxIndicateFrame@header:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 2 bytes @ 0x67
  2113  0000C7                     	ds	2
  2114  0000C9                     nwkRxIndicateFrame@ind:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 12 bytes @ 0x69
  2118  0000C9                     	ds	12
  2119  0000D5                     nwkRxHandleIndication@frame:
  2120                           	opt callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x75
  2123  0000D5                     	ds	2
  2124  0000D7                     
  2125                           ; 1 bytes @ 0x77
  2126  0000D7                     	ds	2
  2127  0000D9                     nwkRxHandleIndication@ack:
  2128                           	opt callstack 0
  2129                           
  2130                           ; 1 bytes @ 0x79
  2131  0000D9                     	ds	1
  2132                           
  2133                           	psect	cstackCOMRAM
  2134  000001                     __pcstackCOMRAM:
  2135                           	opt callstack 0
  2136  000001                     ??_TMR0_ISR:
  2137  000001                     
  2138                           ; 1 bytes @ 0x0
  2139  000001                     	ds	1
  2140  000002                     ??_CRC_Initialize:
  2141  000002                     ??_nwkRouteNormalizeRanks:
  2142  000002                     ??_set_parity:
  2143  000002                     ??_set_uart_baud:
  2144  000002                     ??_nwkTxConvertPhyStatus:
  2145  000002                     ?_strlen:
  2146                           	opt callstack 0
  2147  000002                     ?_get_timer0base:
  2148                           	opt callstack 0
  2149  000002                     ?_nwkFrameNext:
  2150                           	opt callstack 0
  2151  000002                     ?_NWK_RouteFindEntry:
  2152                           	opt callstack 0
  2153  000002                     ?_NWK_RouteNewEntry:
  2154                           	opt callstack 0
  2155  000002                     ?_isupper:
  2156                           	opt callstack 0
  2157  000002                     ?_isalpha:
  2158                           	opt callstack 0
  2159  000002                     ?_isdigit:
  2160                           	opt callstack 0
  2161  000002                     ?_isspace:
  2162                           	opt callstack 0
  2163  000002                     ?_strncmp:
  2164                           	opt callstack 0
  2165  000002                     ?_strchr:
  2166                           	opt callstack 0
  2167  000002                     ?_islower:
  2168                           	opt callstack 0
  2169  000002                     ?_CircularBufferSize:
  2170                           	opt callstack 0
  2171  000002                     ?_CRC_ReverseValue:
  2172                           	opt callstack 0
  2173  000002                     ?___wmul:
  2174                           	opt callstack 0
  2175  000002                     ?___lmul:
  2176                           	opt callstack 0
  2177  000002                     ?___llmod:
  2178                           	opt callstack 0
  2179  000002                     ?___xxtofl:
  2180                           	opt callstack 0
  2181  000002                     ?___omul:
  2182                           	opt callstack 0
  2183  000002                     ?___aodiv:
  2184                           	opt callstack 0
  2185  000002                     ?___aomod:
  2186                           	opt callstack 0
  2187  000002                     ?___lodiv:
  2188                           	opt callstack 0
  2189  000002                     ?___lomod:
  2190                           	opt callstack 0
  2191  000002                     get_free_tx_buffer@buf_id:
  2192                           	opt callstack 0
  2193  000002                     SPI1_ExchangeByte@data:
  2194                           	opt callstack 0
  2195  000002                     INTERRUPT_Initialize@state:
  2196                           	opt callstack 0
  2197  000002                     UART1_Read@readValue:
  2198                           	opt callstack 0
  2199  000002                     UART1_Write@txData:
  2200                           	opt callstack 0
  2201  000002                     CRC_8BitDataWrite@data:
  2202                           	opt callstack 0
  2203  000002                     nwkFrameInit@i:
  2204                           	opt callstack 0
  2205  000002                     nwkGroupInit@i:
  2206                           	opt callstack 0
  2207  000002                     nwkRouteInit@i:
  2208                           	opt callstack 0
  2209  000002                     get_rssi@rssi_reg:
  2210                           	opt callstack 0
  2211  000002                     free_tx_buffer@req:
  2212                           	opt callstack 0
  2213  000002                     cmdSendSink@cmd:
  2214                           	opt callstack 0
  2215  000002                     cmdSetTTL@cmd:
  2216                           	opt callstack 0
  2217  000002                     cmdGetRxCnt@atCommand:
  2218                           	opt callstack 0
  2219  000002                     CircularBufferSize@ctx:
  2220                           	opt callstack 0
  2221  000002                     get_timer0base@timer:
  2222                           	opt callstack 0
  2223  000002                     set_timer0base@timer:
  2224                           	opt callstack 0
  2225  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2226                           	opt callstack 0
  2227  000002                     DATAEE_WriteByte@bAdd:
  2228                           	opt callstack 0
  2229  000002                     DATAEE_ReadByte@bAdd:
  2230                           	opt callstack 0
  2231  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2232                           	opt callstack 0
  2233  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2234                           	opt callstack 0
  2235  000002                     UART1_SetErrorHandler@interruptHandler:
  2236                           	opt callstack 0
  2237  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2238                           	opt callstack 0
  2239  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2240                           	opt callstack 0
  2241  000002                     CRC_ReverseValue@crc:
  2242                           	opt callstack 0
  2243  000002                     NWK_OpenEndpoint@handler:
  2244                           	opt callstack 0
  2245  000002                     NWK_DataReq@req:
  2246                           	opt callstack 0
  2247  000002                     nwkFrameFree@frame:
  2248                           	opt callstack 0
  2249  000002                     nwkFrameNext@frame:
  2250                           	opt callstack 0
  2251  000002                     nwkFrameCommandInit@frame:
  2252                           	opt callstack 0
  2253  000002                     NWK_GroupIsMember@group:
  2254                           	opt callstack 0
  2255  000002                     NWK_RouteFindEntry@dst:
  2256                           	opt callstack 0
  2257  000002                     NWK_RouteFreeEntry@entry:
  2258                           	opt callstack 0
  2259  000002                     nwkFrame@nwkFramePayloadSize@frame_4705:
  2260                           	opt callstack 0
  2261  000002                     nwkTxConfirm@frame:
  2262                           	opt callstack 0
  2263  000002                     PHY_SetPanId@panId:
  2264                           	opt callstack 0
  2265  000002                     PHY_SetShortAddr@addr:
  2266                           	opt callstack 0
  2267  000002                     SYS_TimerStarted@timer:
  2268                           	opt callstack 0
  2269  000002                     placeTimer@timer:
  2270                           	opt callstack 0
  2271  000002                     ___wmul@multiplier:
  2272                           	opt callstack 0
  2273  000002                     isalpha@c:
  2274                           	opt callstack 0
  2275  000002                     isdigit@c:
  2276                           	opt callstack 0
  2277  000002                     isspace@c:
  2278                           	opt callstack 0
  2279  000002                     isupper@c:
  2280                           	opt callstack 0
  2281  000002                     memset@dest:
  2282                           	opt callstack 0
  2283  000002                     srand@s:
  2284                           	opt callstack 0
  2285  000002                     strlen@s:
  2286                           	opt callstack 0
  2287  000002                     islower@c:
  2288                           	opt callstack 0
  2289  000002                     strchr@s:
  2290                           	opt callstack 0
  2291  000002                     strncmp@_l:
  2292                           	opt callstack 0
  2293  000002                     DIA_ReadByte@flashAddr:
  2294                           	opt callstack 0
  2295  000002                     ___lmul@multiplier:
  2296                           	opt callstack 0
  2297  000002                     ___llmod@dividend:
  2298                           	opt callstack 0
  2299  000002                     ___xxtofl@val:
  2300                           	opt callstack 0
  2301  000002                     ___omul@multiplier:
  2302                           	opt callstack 0
  2303  000002                     ___aodiv@dividend:
  2304                           	opt callstack 0
  2305  000002                     ___aomod@dividend:
  2306                           	opt callstack 0
  2307  000002                     ___lodiv@dividend:
  2308                           	opt callstack 0
  2309  000002                     ___lomod@dividend:
  2310                           	opt callstack 0
  2311                           
  2312                           ; 8 bytes @ 0x1
  2313  000002                     	ds	1
  2314  000003                     ??_get_free_tx_buffer:
  2315  000003                     putch@txData:
  2316                           	opt callstack 0
  2317  000003                     nwkRouteNormalizeRanks@i:
  2318                           	opt callstack 0
  2319  000003                     SPI1_WriteBlock@block:
  2320                           	opt callstack 0
  2321  000003                     SPI1_ReadBlock@block:
  2322                           	opt callstack 0
  2323  000003                     CRC_Initialize@poly:
  2324                           	opt callstack 0
  2325  000003                     get_rssi@temp_rssi:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x2
  2329  000003                     	ds	1
  2330  000004                     ??_free_tx_buffer:
  2331  000004                     ??_nwkFrameNext:
  2332  000004                     ??_srand:
  2333  000004                     ??_isupper:
  2334  000004                     ??_isalpha:
  2335  000004                     ??_isdigit:
  2336  000004                     ??_isspace:
  2337  000004                     ??_islower:
  2338  000004                     ??_CircularBufferSize:
  2339  000004                     ??_TMR0_Initialize:
  2340  000004                     ??_CRC_ReverseValue:
  2341  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2342  000004                     set_parity@parity:
  2343                           	opt callstack 0
  2344  000004                     set_uart_baud@i:
  2345                           	opt callstack 0
  2346  000004                     DATAEE_WriteByte@bData:
  2347                           	opt callstack 0
  2348  000004                     NWK_OpenEndpoint@id:
  2349                           	opt callstack 0
  2350  000004                     NWK_RouteFindEntry@multicast:
  2351                           	opt callstack 0
  2352  000004                     nwkTxConfirm@status:
  2353                           	opt callstack 0
  2354  000004                     nwkTxConvertPhyStatus@status:
  2355                           	opt callstack 0
  2356  000004                     get_timer0base@tval:
  2357                           	opt callstack 0
  2358  000004                     set_timer0base@tval:
  2359                           	opt callstack 0
  2360  000004                     NWK_SetAddr@addr:
  2361                           	opt callstack 0
  2362  000004                     NWK_SetPanId@panId:
  2363                           	opt callstack 0
  2364  000004                     nwkDataReqTxConf@frame:
  2365                           	opt callstack 0
  2366  000004                     SYS_TimerStarted@t:
  2367                           	opt callstack 0
  2368  000004                     ___wmul@multiplicand:
  2369                           	opt callstack 0
  2370  000004                     memset@c:
  2371                           	opt callstack 0
  2372  000004                     fputc@c:
  2373                           	opt callstack 0
  2374  000004                     strlen@a:
  2375                           	opt callstack 0
  2376  000004                     strchr@c:
  2377                           	opt callstack 0
  2378  000004                     strncmp@_r:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x3
  2382  000004                     	ds	1
  2383  000005                     DATAEE_WriteByte@GIEBitValue:
  2384                           	opt callstack 0
  2385  000005                     nwkRxInit@i:
  2386                           	opt callstack 0
  2387  000005                     PHY_DataConf@status:
  2388                           	opt callstack 0
  2389  000005                     SPI1_WriteBlock@blockSize:
  2390                           	opt callstack 0
  2391  000005                     SPI1_ReadBlock@blockSize:
  2392                           	opt callstack 0
  2393  000005                     CRC_Initialize@seed:
  2394                           	opt callstack 0
  2395  000005                     CRC_ReverseValue@reverse:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x4
  2399  000005                     	ds	1
  2400  000006                     ??_strchr:
  2401  000006                     ??___xxtofl:
  2402  000006                     free_tx_buffer@buf_id:
  2403                           	opt callstack 0
  2404  000006                     loadMACAddr@i:
  2405                           	opt callstack 0
  2406  000006                     NWK_Init@i:
  2407                           	opt callstack 0
  2408  000006                     NWK_GroupIsMember@i:
  2409                           	opt callstack 0
  2410  000006                     NWK_RouteNewEntry@i:
  2411                           	opt callstack 0
  2412  000006                     DATAEE_ReadByte_Platform@addr:
  2413                           	opt callstack 0
  2414  000006                     DATAEE_WriteByte_Platform@addr:
  2415                           	opt callstack 0
  2416  000006                     ___wmul@product:
  2417                           	opt callstack 0
  2418  000006                     memset@n:
  2419                           	opt callstack 0
  2420  000006                     fputc@fp:
  2421                           	opt callstack 0
  2422  000006                     strncmp@n:
  2423                           	opt callstack 0
  2424  000006                     ___lmul@multiplicand:
  2425                           	opt callstack 0
  2426  000006                     ___llmod@divisor:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 4 bytes @ 0x5
  2430  000006                     	ds	1
  2431  000007                     NWK_RouteFindEntry@i:
  2432                           	opt callstack 0
  2433  000007                     appDataConf@req:
  2434                           	opt callstack 0
  2435  000007                     SPI1_WriteBlock@data:
  2436                           	opt callstack 0
  2437  000007                     SPI1_ReadBlock@data:
  2438                           	opt callstack 0
  2439  000007                     CRC_ReverseValue@mask:
  2440                           	opt callstack 0
  2441  000007                     NWK_RouteNewEntry@iter:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x6
  2445  000007                     	ds	1
  2446  000008                     ??_memset:
  2447  000008                     ??_fputc:
  2448  000008                     ??_strncmp:
  2449  000008                     ?_toupper:
  2450                           	opt callstack 0
  2451  000008                     ?_strspn:
  2452                           	opt callstack 0
  2453  000008                     ?_strcspn:
  2454                           	opt callstack 0
  2455  000008                     ?_NWK_RouteNextHop:
  2456                           	opt callstack 0
  2457  000008                     DATAEE_ReadByte_Platform@copy3:
  2458                           	opt callstack 0
  2459  000008                     DATAEE_WriteByte_Platform@data:
  2460                           	opt callstack 0
  2461  000008                     nwkTxAckReceived@ind:
  2462                           	opt callstack 0
  2463  000008                     _isspace$7729:
  2464                           	opt callstack 0
  2465  000008                     nwkDataReqTxConf@req:
  2466                           	opt callstack 0
  2467  000008                     NWK_RouteNextHop@dst:
  2468                           	opt callstack 0
  2469  000008                     nwkRouteRemove@dst:
  2470                           	opt callstack 0
  2471  000008                     nwkRouteFrameSent@frame:
  2472                           	opt callstack 0
  2473  000008                     memcpy@d1:
  2474                           	opt callstack 0
  2475  000008                     toupper@c:
  2476                           	opt callstack 0
  2477  000008                     strcspn@s:
  2478                           	opt callstack 0
  2479  000008                     strspn@s:
  2480                           	opt callstack 0
  2481  000008                     placeTimer@timeout:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x7
  2485  000008                     	ds	1
  2486  000009                     ?_CRC_CalculatedResultGet:
  2487                           	opt callstack 0
  2488  000009                     ?_atoi:
  2489                           	opt callstack 0
  2490  000009                     DATAEE_ReadByte_Platform@copy2:
  2491                           	opt callstack 0
  2492  000009                     SX1276WriteBuffer@buffer:
  2493                           	opt callstack 0
  2494  000009                     CRC_CalculatedResultGet@xorValue:
  2495                           	opt callstack 0
  2496  000009                     nwkDataReqConfirm@req:
  2497                           	opt callstack 0
  2498  000009                     NWK_RouteNewEntry@entry:
  2499                           	opt callstack 0
  2500  000009                     SX1276ReadBuffer@buffer:
  2501                           	opt callstack 0
  2502  000009                     atoi@s:
  2503                           	opt callstack 0
  2504  000009                     strncmp@l:
  2505                           	opt callstack 0
  2506                           
  2507                           ; 2 bytes @ 0x8
  2508  000009                     	ds	1
  2509  00000A                     ??_toupper:
  2510  00000A                     ??_nwkRouteFrameSent:
  2511  00000A                     ?_CircularBufferSpace:
  2512                           	opt callstack 0
  2513  00000A                     DATAEE_ReadByte_Platform@copy1:
  2514                           	opt callstack 0
  2515  00000A                     NWK_RouteNextHop@multicast:
  2516                           	opt callstack 0
  2517  00000A                     nwkRouteRemove@multicast:
  2518                           	opt callstack 0
  2519  00000A                     SX1276WriteBuffer@size:
  2520                           	opt callstack 0
  2521  00000A                     ___llmod@counter:
  2522                           	opt callstack 0
  2523  00000A                     ___xxtofl@sign:
  2524                           	opt callstack 0
  2525  00000A                     CircularBufferSpace@ctx:
  2526                           	opt callstack 0
  2527  00000A                     memcpy@s1:
  2528                           	opt callstack 0
  2529  00000A                     memset@k:
  2530                           	opt callstack 0
  2531  00000A                     strcspn@c:
  2532                           	opt callstack 0
  2533  00000A                     strspn@c:
  2534                           	opt callstack 0
  2535  00000A                     ___lmul@product:
  2536                           	opt callstack 0
  2537  00000A                     ___omul@multiplicand:
  2538                           	opt callstack 0
  2539  00000A                     ___aodiv@divisor:
  2540                           	opt callstack 0
  2541  00000A                     ___aomod@divisor:
  2542                           	opt callstack 0
  2543  00000A                     ___lodiv@divisor:
  2544                           	opt callstack 0
  2545  00000A                     ___lomod@divisor:
  2546                           	opt callstack 0
  2547                           
  2548                           ; 8 bytes @ 0x9
  2549  00000A                     	ds	1
  2550  00000B                     ??_CRC_CalculatedResultGet:
  2551  00000B                     ??_atoi:
  2552  00000B                     ??_nwkDataReqConfirm:
  2553  00000B                     SX1276ReadBuffer@size:
  2554                           	opt callstack 0
  2555  00000B                     SX1276WriteBuffer@addr:
  2556                           	opt callstack 0
  2557  00000B                     ___xxtofl@exp:
  2558                           	opt callstack 0
  2559  00000B                     NWK_RouteNextHop@entry:
  2560                           	opt callstack 0
  2561  00000B                     nwkRouteRemove@entry:
  2562                           	opt callstack 0
  2563  00000B                     nwkRouteFrameReceived@frame:
  2564                           	opt callstack 0
  2565  00000B                     nwkTxAckReceived@command:
  2566                           	opt callstack 0
  2567  00000B                     strncmp@r:
  2568                           	opt callstack 0
  2569                           
  2570                           ; 2 bytes @ 0xA
  2571  00000B                     	ds	1
  2572  00000C                     ??_strspn:
  2573  00000C                     ??_strcspn:
  2574  00000C                     ??_CircularBufferSpace:
  2575  00000C                     SX1276ReadBuffer@addr:
  2576                           	opt callstack 0
  2577  00000C                     nwkRouteFrameSent@entry:
  2578                           	opt callstack 0
  2579  00000C                     placeTimer@prev:
  2580                           	opt callstack 0
  2581  00000C                     memcpy@n:
  2582                           	opt callstack 0
  2583  00000C                     memset@s:
  2584                           	opt callstack 0
  2585  00000C                     ___xxtofl@arg:
  2586                           	opt callstack 0
  2587                           
  2588                           ; 4 bytes @ 0xB
  2589  00000C                     	ds	1
  2590  00000D                     ??_nwkRouteFrameReceived:
  2591  00000D                     ?_strstr:
  2592                           	opt callstack 0
  2593  00000D                     ?_stoa:
  2594                           	opt callstack 0
  2595  00000D                     nwkRouteErrorReceived@ind:
  2596                           	opt callstack 0
  2597  00000D                     SX1276Read@addr:
  2598                           	opt callstack 0
  2599  00000D                     nwkDataReqConfirm@prev:
  2600                           	opt callstack 0
  2601  00000D                     nwkRoutePrepareTx@frame:
  2602                           	opt callstack 0
  2603  00000D                     nwkTxAckReceived@frame:
  2604                           	opt callstack 0
  2605  00000D                     stoa@fp:
  2606                           	opt callstack 0
  2607  00000D                     fputs@s:
  2608                           	opt callstack 0
  2609  00000D                     strstr@h:
  2610                           	opt callstack 0
  2611  00000D                     strcspn@i:
  2612                           	opt callstack 0
  2613  00000D                     strspn@i:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0xC
  2617  00000D                     	ds	1
  2618  00000E                     ?_nwkFrameAlloc:
  2619                           	opt callstack 0
  2620  00000E                     SX1276Read@data:
  2621                           	opt callstack 0
  2622  00000E                     memcpy@tmp:
  2623                           	opt callstack 0
  2624  00000E                     CRC_CalculatedResultGet@mask:
  2625                           	opt callstack 0
  2626  00000E                     placeTimer@t:
  2627                           	opt callstack 0
  2628  00000E                     _toupper$7868:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 2 bytes @ 0xD
  2632  00000E                     	ds	1
  2633  00000F                     ?_strtok:
  2634                           	opt callstack 0
  2635  00000F                     ?_getSignalBandwidth:
  2636                           	opt callstack 0
  2637  00000F                     ?_getSpreadingFactor:
  2638                           	opt callstack 0
  2639  00000F                     SX1276Write@data:
  2640                           	opt callstack 0
  2641  00000F                     stoa@s:
  2642                           	opt callstack 0
  2643  00000F                     nwkRouteErrorReceived@command:
  2644                           	opt callstack 0
  2645  00000F                     atoi@neg:
  2646                           	opt callstack 0
  2647  00000F                     memcpy@d:
  2648                           	opt callstack 0
  2649  00000F                     fputs@fp:
  2650                           	opt callstack 0
  2651  00000F                     strstr@n:
  2652                           	opt callstack 0
  2653  00000F                     strtok@s:
  2654                           	opt callstack 0
  2655                           
  2656                           ; 2 bytes @ 0xE
  2657  00000F                     	ds	1
  2658  000010                     ??_nwkFrameAlloc:
  2659  000010                     ??_stoa:
  2660  000010                     ?___flmul:
  2661                           	opt callstack 0
  2662  000010                     ?___strtoxl:
  2663                           	opt callstack 0
  2664  000010                     CRC_CalculatedResultGet@reverse:
  2665                           	opt callstack 0
  2666  000010                     SX1276Write@addr:
  2667                           	opt callstack 0
  2668  000010                     SYS_TimerStart@timer:
  2669                           	opt callstack 0
  2670  000010                     ___strtoxl@s:
  2671                           	opt callstack 0
  2672  000010                     ___flge@ff1:
  2673                           	opt callstack 0
  2674  000010                     ___flmul@b:
  2675                           	opt callstack 0
  2676                           
  2677                           ; 4 bytes @ 0xF
  2678  000010                     	ds	1
  2679  000011                     ??_setCodingRate4:
  2680  000011                     ??_cad:
  2681  000011                     nwkRouteFrameReceived@discovery:
  2682                           	opt callstack 0
  2683  000011                     setTxPower@power:
  2684                           	opt callstack 0
  2685  000011                     setSyncWord@sw:
  2686                           	opt callstack 0
  2687  000011                     receive@size:
  2688                           	opt callstack 0
  2689  000011                     fputs@c:
  2690                           	opt callstack 0
  2691  000011                     CRC_CalculatedResultGet@result:
  2692                           	opt callstack 0
  2693  000011                     nwkRoutePrepareTx@header:
  2694                           	opt callstack 0
  2695  000011                     setPreambleLength@length:
  2696                           	opt callstack 0
  2697  000011                     PHY_DataReq@data:
  2698                           	opt callstack 0
  2699  000011                     _atoi$7702:
  2700                           	opt callstack 0
  2701  000011                     memcpy@s:
  2702                           	opt callstack 0
  2703  000011                     strstr@nl:
  2704                           	opt callstack 0
  2705  000011                     strtok@sep:
  2706                           	opt callstack 0
  2707  000011                     stoa@nuls:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 7 bytes @ 0x10
  2711  000011                     	ds	1
  2712  000012                     nwkFrameAlloc@i:
  2713                           	opt callstack 0
  2714  000012                     _nwkRouteFrameReceived$4119:
  2715                           	opt callstack 0
  2716  000012                     setCodingRate4@cr:
  2717                           	opt callstack 0
  2718  000012                     ___aodiv@counter:
  2719                           	opt callstack 0
  2720  000012                     ___aomod@counter:
  2721                           	opt callstack 0
  2722  000012                     ___lomod@counter:
  2723                           	opt callstack 0
  2724  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2725                           	opt callstack 0
  2726  000012                     nwkRxRejectDuplicate@header:
  2727                           	opt callstack 0
  2728  000012                     nwkTxAckWaitTimerHandler@timer:
  2729                           	opt callstack 0
  2730  000012                     nwkTxDelayTimerHandler@timer:
  2731                           	opt callstack 0
  2732  000012                     cad@RSSI:
  2733                           	opt callstack 0
  2734  000012                     fputs@i:
  2735                           	opt callstack 0
  2736  000012                     ___strtoxl@endptr:
  2737                           	opt callstack 0
  2738  000012                     ___omul@product:
  2739                           	opt callstack 0
  2740  000012                     ___lodiv@quotient:
  2741                           	opt callstack 0
  2742                           
  2743                           ; 8 bytes @ 0x11
  2744  000012                     	ds	1
  2745  000013                     ??_getSignalBandwidth:
  2746  000013                     ??_getSpreadingFactor:
  2747  000013                     ?_crc16_app:
  2748                           	opt callstack 0
  2749  000013                     PHY_DataInd@ind:
  2750                           	opt callstack 0
  2751  000013                     setCodingRate4@denominator:
  2752                           	opt callstack 0
  2753  000013                     PHY_DataReq@size:
  2754                           	opt callstack 0
  2755  000013                     ___aodiv@sign:
  2756                           	opt callstack 0
  2757  000013                     ___aomod@sign:
  2758                           	opt callstack 0
  2759  000013                     CircularBufferPushBack@ctx:
  2760                           	opt callstack 0
  2761  000013                     crc16_app@dptr:
  2762                           	opt callstack 0
  2763  000013                     nwkRouteFrameReceived@entry:
  2764                           	opt callstack 0
  2765  000013                     _atoi$7704:
  2766                           	opt callstack 0
  2767                           
  2768                           ; 2 bytes @ 0x12
  2769  000013                     	ds	1
  2770  000014                     ??_nwkTxTaskHandler:
  2771  000014                     ??_PHY_DataInd:
  2772  000014                     ??_nwkRxRejectDuplicate:
  2773  000014                     ?_abs:
  2774                           	opt callstack 0
  2775  000014                     ?_pad:
  2776                           	opt callstack 0
  2777  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2778                           	opt callstack 0
  2779  000014                     cad@temp:
  2780                           	opt callstack 0
  2781  000014                     pad@fp:
  2782                           	opt callstack 0
  2783  000014                     abs@a:
  2784                           	opt callstack 0
  2785  000014                     ___strtoxl@base:
  2786                           	opt callstack 0
  2787  000014                     ___flge@ff2:
  2788                           	opt callstack 0
  2789  000014                     ___flmul@a:
  2790                           	opt callstack 0
  2791  000014                     ___aodiv@quotient:
  2792                           	opt callstack 0
  2793                           
  2794                           ; 8 bytes @ 0x13
  2795  000014                     	ds	1
  2796  000015                     CircularBufferPushBack@val:
  2797                           	opt callstack 0
  2798  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2799                           	opt callstack 0
  2800  000015                     getSignalBandwidth@bw:
  2801                           	opt callstack 0
  2802  000015                     _atoi$7703:
  2803                           	opt callstack 0
  2804  000015                     crc16_app@len:
  2805                           	opt callstack 0
  2806  000015                     nwkRouteFrameReceived@header:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 2 bytes @ 0x14
  2810  000015                     	ds	1
  2811  000016                     ??_abs:
  2812  000016                     ??_CircularBufferPushBack:
  2813  000016                     ?___lldiv:
  2814                           	opt callstack 0
  2815  000016                     nwkTxAckWaitTimerHandler@restart:
  2816                           	opt callstack 0
  2817  000016                     nwkTxDelayTimerHandler@restart:
  2818                           	opt callstack 0
  2819  000016                     ___strtoxl@is_signed:
  2820                           	opt callstack 0
  2821  000016                     nwkTxTaskHandler@frame:
  2822                           	opt callstack 0
  2823  000016                     pad@buf:
  2824                           	opt callstack 0
  2825  000016                     atoi@n:
  2826                           	opt callstack 0
  2827  000016                     ___lldiv@dividend:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 4 bytes @ 0x15
  2831  000016                     	ds	1
  2832  000017                     ??___strtoxl:
  2833  000017                     crc16_app@seed:
  2834                           	opt callstack 0
  2835  000017                     PHY_DataInd@frame:
  2836                           	opt callstack 0
  2837  000017                     nwkTxAckWaitTimerHandler@frame:
  2838                           	opt callstack 0
  2839  000017                     nwkTxDelayTimerHandler@frame:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x16
  2843  000017                     	ds	1
  2844  000018                     ??___flmul:
  2845  000018                     ??___flge:
  2846  000018                     nwkRxRejectDuplicate@shift:
  2847                           	opt callstack 0
  2848  000018                     pad@p:
  2849                           	opt callstack 0
  2850  000018                     stoa@i:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x17
  2854  000018                     	ds	1
  2855  000019                     ??_SYS_TimerTaskHandler:
  2856  000019                     nwkRxRejectDuplicate@i:
  2857                           	opt callstack 0
  2858  000019                     crc16_app@result:
  2859                           	opt callstack 0
  2860                           
  2861                           ; 2 bytes @ 0x18
  2862  000019                     	ds	1
  2863  00001A                     ??_pad:
  2864  00001A                     ?_rand:
  2865                           	opt callstack 0
  2866  00001A                     nwkRxRejectDuplicate@diff:
  2867                           	opt callstack 0
  2868  00001A                     ___lodiv@counter:
  2869                           	opt callstack 0
  2870  00001A                     CircularBufferPushBack@write_pos:
  2871                           	opt callstack 0
  2872  00001A                     stoa@w:
  2873                           	opt callstack 0
  2874  00001A                     ___lldiv@divisor:
  2875                           	opt callstack 0
  2876                           
  2877                           ; 4 bytes @ 0x19
  2878  00001A                     	ds	1
  2879  00001B                     crc16_app@ptr:
  2880                           	opt callstack 0
  2881  00001B                     nwkRxRejectDuplicate@freeEntry:
  2882                           	opt callstack 0
  2883  00001B                     pad@i:
  2884                           	opt callstack 0
  2885  00001B                     ___strtoxl@prev_a:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 4 bytes @ 0x1A
  2889  00001B                     	ds	1
  2890  00001C                     ??_rand:
  2891  00001C                     stoa@cp:
  2892                           	opt callstack 0
  2893  00001C                     ___flmul@sign:
  2894                           	opt callstack 0
  2895  00001C                     queueLedEvent@duration:
  2896                           	opt callstack 0
  2897                           
  2898                           ; 2 bytes @ 0x1B
  2899  00001C                     	ds	1
  2900  00001D                     SYS_TimerTaskHandler@cnt:
  2901                           	opt callstack 0
  2902  00001D                     ___flmul@aexp:
  2903                           	opt callstack 0
  2904  00001D                     crc16_app@i:
  2905                           	opt callstack 0
  2906  00001D                     nwkRxRejectDuplicate@entry:
  2907                           	opt callstack 0
  2908  00001D                     pad@w:
  2909                           	opt callstack 0
  2910  00001D                     stoa@p:
  2911                           	opt callstack 0
  2912                           
  2913                           ; 2 bytes @ 0x1C
  2914  00001D                     	ds	1
  2915  00001E                     queueLedEvent@LEDState:
  2916                           	opt callstack 0
  2917  00001E                     SYS_TimerTaskHandler@elapsed:
  2918                           	opt callstack 0
  2919  00001E                     ___lldiv@quotient:
  2920                           	opt callstack 0
  2921  00001E                     ___flmul@grs:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 4 bytes @ 0x1D
  2925  00001E                     	ds	1
  2926  00001F                     ?_dtoa:
  2927                           	opt callstack 0
  2928  00001F                     ?_utoa:
  2929                           	opt callstack 0
  2930  00001F                     ?_xtoa:
  2931                           	opt callstack 0
  2932  00001F                     dtoa@fp:
  2933                           	opt callstack 0
  2934  00001F                     stoa@l:
  2935                           	opt callstack 0
  2936  00001F                     utoa@fp:
  2937                           	opt callstack 0
  2938  00001F                     xtoa@fp:
  2939                           	opt callstack 0
  2940  00001F                     ___strtoxl$7890:
  2941                           	opt callstack 0
  2942  00001F                     queueLedEvent@temp:
  2943                           	opt callstack 0
  2944                           
  2945                           ; 3 bytes @ 0x1E
  2946  00001F                     	ds	2
  2947  000021                     ___strtoxl$7892:
  2948                           	opt callstack 0
  2949  000021                     dtoa@d:
  2950                           	opt callstack 0
  2951  000021                     utoa@d:
  2952                           	opt callstack 0
  2953  000021                     xtoa@d:
  2954                           	opt callstack 0
  2955                           
  2956                           ; 8 bytes @ 0x20
  2957  000021                     	ds	1
  2958  000022                     queue_serial_led_event@i:
  2959                           	opt callstack 0
  2960  000022                     ___lldiv@counter:
  2961                           	opt callstack 0
  2962  000022                     ___flmul@bexp:
  2963                           	opt callstack 0
  2964  000022                     SYS_TimerTaskHandler@timer:
  2965                           	opt callstack 0
  2966                           
  2967                           ; 2 bytes @ 0x21
  2968  000022                     	ds	1
  2969  000023                     ??_setSpreadingFactor:
  2970  000023                     ___strtoxl$7893:
  2971                           	opt callstack 0
  2972  000023                     setFrequency@frequency:
  2973                           	opt callstack 0
  2974  000023                     setSignalBandwidth@sbw:
  2975                           	opt callstack 0
  2976  000023                     computeFRF@frequency:
  2977                           	opt callstack 0
  2978  000023                     ___flmul@prod:
  2979                           	opt callstack 0
  2980                           
  2981                           ; 4 bytes @ 0x22
  2982  000023                     	ds	1
  2983  000024                     nwkTxFrame@frame:
  2984                           	opt callstack 0
  2985  000024                     nwkTxBroadcastFrame@frame:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x23
  2989  000024                     	ds	1
  2990  000025                     ___strtoxl$7891:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 1 bytes @ 0x24
  2994  000025                     	ds	1
  2995  000026                     ??_nwkTxBroadcastFrame:
  2996  000026                     ___strtoxl@conv_done:
  2997                           	opt callstack 0
  2998                           
  2999                           ; 1 bytes @ 0x25
  3000  000026                     	ds	1
  3001  000027                     ??_setSignalBandwidth:
  3002  000027                     nwkTxBroadcastFrame@newFrame:
  3003                           	opt callstack 0
  3004  000027                     ___flmul@temp:
  3005                           	opt callstack 0
  3006  000027                     setFrequency@num_mod:
  3007                           	opt callstack 0
  3008  000027                     computeFRF@num_mod:
  3009                           	opt callstack 0
  3010  000027                     ___strtoxl@limit:
  3011                           	opt callstack 0
  3012  000027                     _setSpreadingFactor$8634:
  3013                           	opt callstack 0
  3014                           
  3015                           ; 4 bytes @ 0x26
  3016  000027                     	ds	1
  3017  000028                     nwkTxFrame@header:
  3018                           	opt callstack 0
  3019                           
  3020                           ; 2 bytes @ 0x27
  3021  000028                     	ds	1
  3022  000029                     ??_dtoa:
  3023  000029                     ??_utoa:
  3024  000029                     ?___fladd:
  3025                           	opt callstack 0
  3026  000029                     xtoa@x:
  3027                           	opt callstack 0
  3028  000029                     nwkRxHandleReceivedFrame@frame:
  3029                           	opt callstack 0
  3030  000029                     ___fladd@b:
  3031                           	opt callstack 0
  3032                           
  3033                           ; 4 bytes @ 0x28
  3034  000029                     	ds	1
  3035  00002A                     ??_xtoa:
  3036  00002A                     nwkDataReqSendFrame@req:
  3037                           	opt callstack 0
  3038  00002A                     nwkRouteSendRouteError@src:
  3039                           	opt callstack 0
  3040  00002A                     nwkRxSendAck@frame:
  3041                           	opt callstack 0
  3042                           
  3043                           ; 2 bytes @ 0x29
  3044  00002A                     	ds	1
  3045  00002B                     ??_nwkRxHandleReceivedFrame:
  3046  00002B                     setSpreadingFactor@sf:
  3047                           	opt callstack 0
  3048  00002B                     ___strtoxl@sign:
  3049                           	opt callstack 0
  3050  00002B                     setFrequency@num:
  3051                           	opt callstack 0
  3052  00002B                     computeFRF@num:
  3053                           	opt callstack 0
  3054  00002B                     _setSignalBandwidth$8635:
  3055                           	opt callstack 0
  3056                           
  3057                           ; 4 bytes @ 0x2A
  3058  00002B                     	ds	1
  3059  00002C                     ??_nwkDataReqSendFrame:
  3060  00002C                     ___strtoxl@skip:
  3061                           	opt callstack 0
  3062  00002C                     nwkRouteSendRouteError@dst:
  3063                           	opt callstack 0
  3064  00002C                     nwkRxSendAck@command:
  3065                           	opt callstack 0
  3066                           
  3067                           ; 2 bytes @ 0x2B
  3068  00002C                     	ds	1
  3069  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3070                           	opt callstack 0
  3071  00002D                     nwkDataReqSendFrame@mcHeader:
  3072                           	opt callstack 0
  3073  00002D                     ___fladd@a:
  3074                           	opt callstack 0
  3075  00002D                     ___strtoxl@a:
  3076                           	opt callstack 0
  3077                           
  3078                           ; 4 bytes @ 0x2C
  3079  00002D                     	ds	1
  3080  00002E                     nwkRouteSendRouteError@multicast:
  3081                           	opt callstack 0
  3082  00002E                     nwkRxHandleReceivedFrame@member:
  3083                           	opt callstack 0
  3084  00002E                     nwkRxSendAck@ack:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 2 bytes @ 0x2D
  3088  00002E                     	ds	1
  3089  00002F                     computeFRF@i:
  3090                           	opt callstack 0
  3091  00002F                     PHY_SetChannel@channel:
  3092                           	opt callstack 0
  3093  00002F                     nwkDataReqSendFrame@frame:
  3094                           	opt callstack 0
  3095  00002F                     nwkRouteSendRouteError@command:
  3096                           	opt callstack 0
  3097  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3098                           	opt callstack 0
  3099  00002F                     setSignalBandwidth@bw:
  3100                           	opt callstack 0
  3101                           
  3102                           ; 4 bytes @ 0x2E
  3103  00002F                     	ds	1
  3104  000030                     ??_bootLoadApplication:
  3105                           
  3106                           ; 1 bytes @ 0x2F
  3107  000030                     	ds	1
  3108  000031                     ??_nwkDataReqTaskHandler:
  3109  000031                     ??___fladd:
  3110  000031                     nwkRouteSendRouteError@frame:
  3111                           	opt callstack 0
  3112  000031                     nwkRxHandleReceivedFrame@header:
  3113                           	opt callstack 0
  3114  000031                     _dtoa$7199:
  3115                           	opt callstack 0
  3116  000031                     utoa@p:
  3117                           	opt callstack 0
  3118  000031                     ___strtoxl@cp:
  3119                           	opt callstack 0
  3120                           
  3121                           ; 2 bytes @ 0x30
  3122  000031                     	ds	1
  3123  000032                     bootLoadApplication@buf_id:
  3124                           	opt callstack 0
  3125  000032                     _xtoa$7227:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 2 bytes @ 0x31
  3129  000032                     	ds	1
  3130  000033                     ??_initRadio:
  3131  000033                     ___strtoxl@c:
  3132                           	opt callstack 0
  3133  000033                     bootLoadApplication@temp:
  3134                           	opt callstack 0
  3135  000033                     nwkDataReqTaskHandler@req:
  3136                           	opt callstack 0
  3137  000033                     nwkRouteFrame@frame:
  3138                           	opt callstack 0
  3139  000033                     dtoa@p:
  3140                           	opt callstack 0
  3141  000033                     utoa@w:
  3142                           	opt callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x32
  3145  000033                     	ds	1
  3146  000034                     ?_strtoul:
  3147                           	opt callstack 0
  3148  000034                     ?_strtol:
  3149                           	opt callstack 0
  3150  000034                     strtol@s:
  3151                           	opt callstack 0
  3152  000034                     _xtoa$7228:
  3153                           	opt callstack 0
  3154  000034                     strtoul@s:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 2 bytes @ 0x33
  3158  000034                     	ds	1
  3159  000035                     bootLoadApplication@i:
  3160                           	opt callstack 0
  3161  000035                     ___fladd@signs:
  3162                           	opt callstack 0
  3163  000035                     strtol@endptr:
  3164                           	opt callstack 0
  3165  000035                     nwkRouteFrame@header:
  3166                           	opt callstack 0
  3167  000035                     dtoa@w:
  3168                           	opt callstack 0
  3169  000035                     utoa@n:
  3170                           	opt callstack 0
  3171                           
  3172                           ; 8 bytes @ 0x34
  3173  000035                     	ds	1
  3174  000036                     ___fladd@aexp:
  3175                           	opt callstack 0
  3176  000036                     xtoa@p:
  3177                           	opt callstack 0
  3178  000036                     strtol@base:
  3179                           	opt callstack 0
  3180  000036                     strtoul@endptr:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x35
  3184  000036                     	ds	1
  3185  000037                     initRadio@version:
  3186                           	opt callstack 0
  3187  000037                     ___fladd@bexp:
  3188                           	opt callstack 0
  3189  000037                     dtoa@s:
  3190                           	opt callstack 0
  3191                           
  3192                           ; 2 bytes @ 0x36
  3193  000037                     	ds	1
  3194  000038                     ___fladd@grs:
  3195                           	opt callstack 0
  3196  000038                     initRadio@wideRSSI:
  3197                           	opt callstack 0
  3198  000038                     xtoa@w:
  3199                           	opt callstack 0
  3200  000038                     strtoul@base:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 2 bytes @ 0x37
  3204  000038                     	ds	1
  3205  000039                     ?___fltol:
  3206                           	opt callstack 0
  3207  000039                     ___fltol@f1:
  3208                           	opt callstack 0
  3209  000039                     dtoa@n:
  3210                           	opt callstack 0
  3211                           
  3212                           ; 8 bytes @ 0x38
  3213  000039                     	ds	1
  3214  00003A                     cmdSetBaud@atCommand:
  3215                           	opt callstack 0
  3216  00003A                     xtoa@n:
  3217                           	opt callstack 0
  3218                           
  3219                           ; 8 bytes @ 0x39
  3220  00003A                     	ds	2
  3221  00003C                     cmdSetBaud@tempbaud:
  3222                           	opt callstack 0
  3223                           
  3224                           ; 1 bytes @ 0x3B
  3225  00003C                     	ds	1
  3226  00003D                     ??___fltol:
  3227  00003D                     cmdSetBaud@ptr:
  3228                           	opt callstack 0
  3229  00003D                     utoa@i:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x3C
  3233  00003D                     	ds	4
  3234  000041                     ___fltol@sign1:
  3235                           	opt callstack 0
  3236  000041                     dtoa@i:
  3237                           	opt callstack 0
  3238                           
  3239                           ; 2 bytes @ 0x40
  3240  000041                     	ds	1
  3241  000042                     ___fltol@exp1:
  3242                           	opt callstack 0
  3243  000042                     xtoa@i:
  3244                           	opt callstack 0
  3245                           
  3246                           ; 2 bytes @ 0x41
  3247  000042                     	ds	1
  3248  000043                     get_lqi@rssi:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 1 bytes @ 0x42
  3252  000043                     	ds	1
  3253  000044                     DIO0_Receive_ISR@packetLength:
  3254                           	opt callstack 0
  3255  000044                     xtoa@c:
  3256                           	opt callstack 0
  3257                           
  3258                           ; 2 bytes @ 0x43
  3259  000044                     	ds	1
  3260  000045                     DIO0_Receive_ISR@irqFlags:
  3261                           	opt callstack 0
  3262                           
  3263                           ; 1 bytes @ 0x44
  3264  000045                     	ds	1
  3265  000046                     ?_vfpfcnvrt:
  3266                           	opt callstack 0
  3267  000046                     vfpfcnvrt@fp:
  3268                           	opt callstack 0
  3269  000046                     DIO0_Receive_ISR@ind:
  3270                           	opt callstack 0
  3271                           
  3272                           ; 5 bytes @ 0x45
  3273  000046                     	ds	2
  3274  000048                     vfpfcnvrt@fmt:
  3275                           	opt callstack 0
  3276                           
  3277                           ; 1 bytes @ 0x47
  3278  000048                     	ds	1
  3279  000049                     vfpfcnvrt@ap:
  3280                           	opt callstack 0
  3281                           
  3282                           ; 1 bytes @ 0x48
  3283  000049                     	ds	1
  3284  00004A                     ??_vfpfcnvrt:
  3285                           
  3286                           ; 1 bytes @ 0x49
  3287  00004A                     	ds	1
  3288  00004B                     ??_radio_engine:
  3289                           
  3290                           ; 1 bytes @ 0x4A
  3291  00004B                     	ds	2
  3292  00004D                     
  3293                           ; 1 bytes @ 0x4C
  3294  00004D                     	ds	1
  3295  00004E                     ?_vfprintf:
  3296                           	opt callstack 0
  3297  00004E                     vfprintf@fp:
  3298                           	opt callstack 0
  3299                           
  3300                           ; 2 bytes @ 0x4D
  3301  00004E                     	ds	2
  3302  000050                     vfprintf@fmt:
  3303                           	opt callstack 0
  3304                           
  3305                           ; 2 bytes @ 0x4F
  3306  000050                     	ds	2
  3307  000052                     vfprintf@ap:
  3308                           	opt callstack 0
  3309                           
  3310                           ; 1 bytes @ 0x51
  3311  000052                     	ds	1
  3312  000053                     vfprintf@cfmt:
  3313                           	opt callstack 0
  3314                           
  3315                           ; 2 bytes @ 0x52
  3316  000053                     	ds	2
  3317  000055                     ?_printf:
  3318                           	opt callstack 0
  3319  000055                     printf@fmt:
  3320                           	opt callstack 0
  3321                           
  3322                           ; 2 bytes @ 0x54
  3323  000055                     	ds	6
  3324  00005B                     
  3325                           ; 1 bytes @ 0x5A
  3326  00005B                     	ds	2
  3327  00005D                     printf@ap:
  3328                           	opt callstack 0
  3329                           
  3330                           ; 1 bytes @ 0x5C
  3331  00005D                     	ds	1
  3332  00005E                     
  3333                           ; 1 bytes @ 0x5D
  3334 ;;
  3335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3336 ;;
  3337 ;; *************** function _main *****************
  3338 ;; Defined at:
  3339 ;;		line 51 in file "main.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 6/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels required when called:   22
  3359 ;; This function calls:
  3360 ;;		_SYSTEM_Initialize
  3361 ;;		_SYS_Init
  3362 ;;		_SYS_TaskHandler
  3363 ;;		_TMR0_SetInterruptHandler
  3364 ;;		_bootLoadApplication
  3365 ;;		_processATCommand
  3366 ;; This function is called by:
  3367 ;;		Startup code after reset
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text0
  3372  00874A                     __ptext0:
  3373                           	opt callstack 0
  3374  00874A                     _main:
  3375                           	opt callstack 9
  3376                           
  3377                           ;main.c: 54:     SYSTEM_Initialize();
  3378                           
  3379                           ;incstack = 0
  3380  00874A  EC6E  F044         	call	_SYSTEM_Initialize	;wreg free
  3381                           
  3382                           ; BSR set to: 61
  3383                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3384  00874E  8ED2               	bsf	210,7,c	;volatile
  3385                           
  3386                           ; BSR set to: 61
  3387                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3388  008750  8CD2               	bsf	210,6,c	;volatile
  3389                           
  3390                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3391  008752  0E24               	movlw	low _Timer0Handler
  3392  008754  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3393  008756  0E7C               	movlw	high _Timer0Handler
  3394  008758  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3395  00875A  EC7B  F046         	call	_TMR0_SetInterruptHandler	;wreg free
  3396                           
  3397                           ;main.c: 73:     SYS_Init();
  3398  00875E  EC51  F046         	call	_SYS_Init	;wreg free
  3399                           
  3400                           ; BSR set to: 2
  3401                           ;main.c: 74:     bootLoadApplication();
  3402  008762  ECE0  F012         	call	_bootLoadApplication	;wreg free
  3403  008766  86BA               	bsf	186,3,c	;volatile
  3404  008768                     l16955:
  3405                           
  3406                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3407  008768  EC43  F046         	call	_SYS_TaskHandler	;wreg free
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 79:         processATCommand();
  3411  00876C  ECAD  F01E         	call	_processATCommand	;wreg free
  3412  008770  D7FB               	goto	l16955
  3413  008772                     __end_of_main:
  3414                           	opt callstack 0
  3415                           
  3416 ;; *************** function _processATCommand *****************
  3417 ;; Defined at:
  3418 ;;		line 1008 in file "../app/app_src/application.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  data            1   75[BANK0 ] unsigned char 
  3423 ;;  data            1   76[BANK0 ] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 3F/0
  3430 ;;		On exit  : 6/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;Total ram usage:        4 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:   19
  3440 ;; This function calls:
  3441 ;;		_UART1_Read
  3442 ;;		_UART1_is_rx_ready
  3443 ;;		_executeATCommand
  3444 ;;		_get_timer0base
  3445 ;;		_memset
  3446 ;;		_queue_serial_led_event
  3447 ;;		_set_timer0base
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text1
  3454  003D5A                     __ptext1:
  3455                           	opt callstack 0
  3456  003D5A                     _processATCommand:
  3457                           	opt callstack 11
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;../app/app_src/application.c: 1011:     if(tx_done && U1ERRIRbits.TXMTIF){
  3461                           
  3462                           ;incstack = 0
  3463  003D5A  51F1               	movf	_tx_done& (0+255),w,b	;volatile
  3464  003D5C  B4D8               	btfsc	status,2,c
  3465  003D5E  D006               	goto	l16725
  3466                           
  3467                           ; BSR set to: 0
  3468  003D60  013D               	movlb	61	; () banked
  3469  003D62  AFF9               	btfss	249,7,b	;volatile
  3470  003D64  D003               	goto	l16725
  3471                           
  3472                           ; BSR set to: 61
  3473                           ;../app/app_src/application.c: 1013:        tx_done = 0;
  3474  003D66  0E00               	movlw	0
  3475  003D68  0100               	movlb	0	; () banked
  3476  003D6A  6FF1               	movwf	_tx_done& (0+255),b	;volatile
  3477  003D6C                     l16725:
  3478                           
  3479                           ;../app/app_src/application.c: 1016:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3480  003D6C  0100               	movlb	0	; () banked
  3481  003D6E  05EF               	decf	_atStateVar& (0+255),w,b
  3482  003D70  A4D8               	btfss	status,2,c
  3483  003D72  D004               	goto	u17130
  3484                           
  3485                           ; BSR set to: 0
  3486  003D74  0E05               	movlw	5
  3487  003D76  19EF               	xorwf	_atStateVar& (0+255),w,b
  3488  003D78  B4D8               	btfsc	status,2,c
  3489  003D7A  D08D               	goto	l16795
  3490  003D7C                     u17130:
  3491                           
  3492                           ; BSR set to: 0
  3493  003D7C  0EFD               	movlw	low _ATTimeoutTimer
  3494  003D7E  6E02               	movwf	get_timer0base@timer^0,c
  3495  003D80  6A03               	clrf	(get_timer0base@timer+1)^0,c
  3496  003D82  EC50  F043         	call	_get_timer0base	;wreg free
  3497  003D86  5002               	movf	?_get_timer0base^0,w,c
  3498  003D88  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3499  003D8A  A4D8               	btfss	status,2,c
  3500  003D8C  D084               	goto	l16795
  3501                           
  3502                           ; BSR set to: 57
  3503                           ;../app/app_src/application.c: 1017:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1018:         atStateVar = resetATMachine;
  3504  003D8E  0E06               	movlw	6
  3505  003D90  0100               	movlb	0	; () banked
  3506  003D92  6FEF               	movwf	_atStateVar& (0+255),b
  3507  003D94  D080               	goto	l16795
  3508  003D96                     l16733:
  3509                           
  3510                           ;../app/app_src/application.c: 1022:             atStateVar = resetATMachine;
  3511  003D96  0E06               	movlw	6
  3512  003D98  0100               	movlb	0	; () banked
  3513  003D9A  6FEF               	movwf	_atStateVar& (0+255),b
  3514                           
  3515                           ;../app/app_src/application.c: 1023:             break;
  3516  003D9C  0012               	return	
  3517  003D9E                     l16735:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;../app/app_src/application.c: 1026:             if(UART1_is_rx_ready()){
  3521  003D9E  EC3C  F046         	call	_UART1_is_rx_ready	;wreg free
  3522  003DA2  0900               	iorlw	0
  3523  003DA4  B4D8               	btfsc	status,2,c
  3524  003DA6  0012               	return	
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;../app/app_src/application.c: 1028:                 if(UART1_Read() == 'A')
  3528  003DA8  EC45  F03F         	call	_UART1_Read	;wreg free
  3529  003DAC  0A41               	xorlw	65
  3530  003DAE  A4D8               	btfss	status,2,c
  3531  003DB0  0012               	return	
  3532                           
  3533                           ; BSR set to: 57
  3534                           ;../app/app_src/application.c: 1029:                 {;../app/app_src/application.c: 103
      +                          1:                     atStateVar = lookingForT;
  3535  003DB2  0E02               	movlw	2
  3536  003DB4  0100               	movlb	0	; () banked
  3537  003DB6  6FEF               	movwf	_atStateVar& (0+255),b
  3538  003DB8                     l16741:
  3539                           
  3540                           ;../app/app_src/application.c: 1032:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3541  003DB8  0EFD               	movlw	low _ATTimeoutTimer
  3542  003DBA  6E02               	movwf	set_timer0base@timer^0,c
  3543  003DBC  6A03               	clrf	(set_timer0base@timer+1)^0,c
  3544  003DBE  0E03               	movlw	3
  3545  003DC0  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3546  003DC2  0EE8               	movlw	232
  3547  003DC4  6E04               	movwf	set_timer0base@tval^0,c
  3548  003DC6  ECA1  F044         	call	_set_timer0base	;wreg free
  3549  003DCA  0012               	return	
  3550  003DCC                     l16743:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;../app/app_src/application.c: 1037:             if(UART1_is_rx_ready()){
  3554  003DCC  EC3C  F046         	call	_UART1_is_rx_ready	;wreg free
  3555  003DD0  0900               	iorlw	0
  3556  003DD2  B4D8               	btfsc	status,2,c
  3557  003DD4  0012               	return	
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;../app/app_src/application.c: 1039:                 if(UART1_Read() == 'T')
  3561  003DD6  EC45  F03F         	call	_UART1_Read	;wreg free
  3562  003DDA  0A54               	xorlw	84
  3563  003DDC  A4D8               	btfss	status,2,c
  3564  003DDE  D004               	goto	l16749
  3565                           
  3566                           ; BSR set to: 57
  3567                           ;../app/app_src/application.c: 1040:                 {;../app/app_src/application.c: 104
      +                          2:                     atStateVar = readingCommand;
  3568  003DE0  0E03               	movlw	3
  3569  003DE2  0100               	movlb	0	; () banked
  3570  003DE4  6FEF               	movwf	_atStateVar& (0+255),b
  3571                           
  3572                           ;../app/app_src/application.c: 1043:                 }
  3573  003DE6  0012               	return	
  3574  003DE8                     l16749:
  3575                           
  3576                           ; BSR set to: 57
  3577                           ;../app/app_src/application.c: 1045:                 {;../app/app_src/application.c: 104
      +                          6:                     atStateVar = lookingForA;
  3578  003DE8  0E01               	movlw	1
  3579  003DEA  0100               	movlb	0	; () banked
  3580  003DEC  6FEF               	movwf	_atStateVar& (0+255),b
  3581  003DEE  0012               	return	
  3582  003DF0                     l16751:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;../app/app_src/application.c: 1052:             if(UART1_is_rx_ready())
  3586  003DF0  EC3C  F046         	call	_UART1_is_rx_ready	;wreg free
  3587  003DF4  0900               	iorlw	0
  3588  003DF6  B4D8               	btfsc	status,2,c
  3589  003DF8  0012               	return	
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;../app/app_src/application.c: 1053:             {;../app/app_src/application.c: 1054:  
      +                                         uint8_t data = UART1_Read();
  3593  003DFA  EC45  F03F         	call	_UART1_Read	;wreg free
  3594  003DFE  0100               	movlb	0	; () banked
  3595  003E00  6FAC               	movwf	processATCommand@data& (0+255),b
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;../app/app_src/application.c: 1055:                 if(data == '\r')
  3599  003E02  0E0D               	movlw	13
  3600  003E04  19AC               	xorwf	processATCommand@data& (0+255),w,b
  3601  003E06  A4D8               	btfss	status,2,c
  3602  003E08  D00C               	goto	l16763
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;../app/app_src/application.c: 1056:                 {;../app/app_src/application.c: 105
      +                          8:                     atStateVar = endingCommand;
  3606  003E0A  0E04               	movlw	4
  3607  003E0C  6FEF               	movwf	_atStateVar& (0+255),b
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;../app/app_src/application.c: 1060:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3611  003E0E  0E34               	movlw	low _atCommand
  3612  003E10  25F0               	addwf	_commandByteCounter& (0+255),w,b
  3613  003E12  6ED9               	movwf	fsr2l,c
  3614  003E14  6ADA               	clrf	fsr2h,c
  3615  003E16  0E02               	movlw	high _atCommand
  3616  003E18  22DA               	addwfc	fsr2h,f,c
  3617  003E1A  0E00               	movlw	0
  3618  003E1C  6EDF               	movwf	indf2,c
  3619                           
  3620                           ; BSR set to: 0
  3621  003E1E  2BF0               	incf	_commandByteCounter& (0+255),f,b
  3622                           
  3623                           ;../app/app_src/application.c: 1061:                 }
  3624  003E20  0012               	return	
  3625  003E22                     l16763:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;../app/app_src/application.c: 1063:                 {;../app/app_src/application.c: 106
      +                          4:                     atCommand[commandByteCounter++] = data;
  3629  003E22  0E34               	movlw	low _atCommand
  3630  003E24  25F0               	addwf	_commandByteCounter& (0+255),w,b
  3631  003E26  6ED9               	movwf	fsr2l,c
  3632  003E28  6ADA               	clrf	fsr2h,c
  3633  003E2A  0E02               	movlw	high _atCommand
  3634  003E2C  22DA               	addwfc	fsr2h,f,c
  3635  003E2E  0060  F2B3  FFDF   	movff	processATCommand@data,indf2
  3636                           
  3637                           ; BSR set to: 0
  3638  003E34  2BF0               	incf	_commandByteCounter& (0+255),f,b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;../app/app_src/application.c: 1065:                     if(commandByteCounter >= 80)
  3642  003E36  0E4F               	movlw	79
  3643  003E38  65F0               	cpfsgt	_commandByteCounter& (0+255),b
  3644  003E3A  0012               	return	
  3645  003E3C  D7AC               	goto	l16733
  3646  003E3E                     l16771:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;../app/app_src/application.c: 1075:             if(UART1_is_rx_ready())
  3650  003E3E  EC3C  F046         	call	_UART1_is_rx_ready	;wreg free
  3651  003E42  0900               	iorlw	0
  3652  003E44  B4D8               	btfsc	status,2,c
  3653  003E46  0012               	return	
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;../app/app_src/application.c: 1076:             {;../app/app_src/application.c: 1077:  
      +                                         uint8_t data = UART1_Read();
  3657  003E48  EC45  F03F         	call	_UART1_Read	;wreg free
  3658  003E4C  0100               	movlb	0	; () banked
  3659  003E4E  6FAB               	movwf	processATCommand@data_828& (0+255),b
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;../app/app_src/application.c: 1078:                 if(data == '\n')
  3663  003E50  0E0A               	movlw	10
  3664  003E52  19AB               	xorwf	processATCommand@data_828& (0+255),w,b
  3665  003E54  A4D8               	btfss	status,2,c
  3666  003E56  D79F               	goto	l16733
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;../app/app_src/application.c: 1079:                 {;../app/app_src/application.c: 108
      +                          1:                     atStateVar = processCommand;
  3670  003E58  0E05               	movlw	5
  3671  003E5A  6FEF               	movwf	_atStateVar& (0+255),b
  3672                           
  3673                           ;../app/app_src/application.c: 1082:                 }
  3674  003E5C  0012               	return	
  3675  003E5E                     l16781:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;../app/app_src/application.c: 1092:             executeATCommand(atCommand);
  3679  003E5E  0E34               	movlw	low _atCommand
  3680  003E60  6FA4               	movwf	executeATCommand@cmd& (0+255),b
  3681  003E62  0E02               	movlw	high _atCommand
  3682  003E64  6FA5               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3683  003E66  EC59  F000         	call	_executeATCommand	;wreg free
  3684                           
  3685                           ;../app/app_src/application.c: 1093:             queue_serial_led_event();
  3686  003E6A  EC95  F03D         	call	_queue_serial_led_event	;wreg free
  3687  003E6E  D793               	goto	l16733
  3688  003E70                     l16787:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;../app/app_src/application.c: 1097:             atStateVar = lookingForA;
  3692  003E70  0E01               	movlw	1
  3693  003E72  6FEF               	movwf	_atStateVar& (0+255),b
  3694                           
  3695                           ;../app/app_src/application.c: 1098:             commandByteCounter = 0;
  3696  003E74  0E00               	movlw	0
  3697  003E76  6FF0               	movwf	_commandByteCounter& (0+255),b
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;../app/app_src/application.c: 1100:             memset(atCommand,0,sizeof(atCommand));
  3701  003E78  0E34               	movlw	low _atCommand
  3702  003E7A  6E02               	movwf	memset@dest^0,c
  3703  003E7C  0E02               	movlw	high _atCommand
  3704  003E7E  6E03               	movwf	(memset@dest+1)^0,c
  3705  003E80  0E00               	movlw	0
  3706  003E82  6E05               	movwf	(memset@c+1)^0,c
  3707  003E84  0E00               	movlw	0
  3708  003E86  6E04               	movwf	memset@c^0,c
  3709  003E88  0E00               	movlw	0
  3710  003E8A  6E07               	movwf	(memset@n+1)^0,c
  3711  003E8C  0E50               	movlw	80
  3712  003E8E  6E06               	movwf	memset@n^0,c
  3713  003E90  EC2F  F022         	call	_memset	;wreg free
  3714  003E94  D791               	goto	l16741
  3715  003E96                     l16795:
  3716  003E96  0100               	movlb	0	; () banked
  3717  003E98  51EF               	movf	_atStateVar& (0+255),w,b
  3718  003E9A  6FA9               	movwf	??_processATCommand& (0+255),b
  3719  003E9C  6BAA               	clrf	(??_processATCommand+1)& (0+255),b
  3720                           
  3721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3722                           ; Switch size 1, requested type "simple"
  3723                           ; Number of cases is 1, Range of values is 0 to 0
  3724                           ; switch strategies available:
  3725                           ; Name         Instructions Cycles
  3726                           ; simple_byte            4     3 (average)
  3727                           ;	Chosen strategy is simple_byte
  3728  003E9E  51AA               	movf	(??_processATCommand+1)& (0+255),w,b
  3729  003EA0  0A00               	xorlw	0	; case 0
  3730  003EA2  A4D8               	btfss	status,2,c
  3731  003EA4  D778               	goto	l16733
  3732                           
  3733                           ; BSR set to: 0
  3734                           ; Switch size 1, requested type "simple"
  3735                           ; Number of cases is 7, Range of values is 0 to 6
  3736                           ; switch strategies available:
  3737                           ; Name         Instructions Cycles
  3738                           ; simple_byte           22    12 (average)
  3739                           ;	Chosen strategy is simple_byte
  3740  003EA6  51A9               	movf	??_processATCommand& (0+255),w,b
  3741  003EA8  0A00               	xorlw	0	; case 0
  3742  003EAA  B4D8               	btfsc	status,2,c
  3743  003EAC  D774               	goto	l16733
  3744  003EAE  0A01               	xorlw	1	; case 1
  3745  003EB0  B4D8               	btfsc	status,2,c
  3746  003EB2  D775               	goto	l16735
  3747  003EB4  0A03               	xorlw	3	; case 2
  3748  003EB6  B4D8               	btfsc	status,2,c
  3749  003EB8  D789               	goto	l16743
  3750  003EBA  0A01               	xorlw	1	; case 3
  3751  003EBC  B4D8               	btfsc	status,2,c
  3752  003EBE  D798               	goto	l16751
  3753  003EC0  0A07               	xorlw	7	; case 4
  3754  003EC2  B4D8               	btfsc	status,2,c
  3755  003EC4  D7BC               	goto	l16771
  3756  003EC6  0A01               	xorlw	1	; case 5
  3757  003EC8  B4D8               	btfsc	status,2,c
  3758  003ECA  D7C9               	goto	l16781
  3759  003ECC  0A03               	xorlw	3	; case 6
  3760  003ECE  B4D8               	btfsc	status,2,c
  3761  003ED0  D7CF               	goto	l16787
  3762  003ED2  D761               	goto	l16733
  3763  003ED4                     __end_of_processATCommand:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _queue_serial_led_event *****************
  3767 ;; Defined at:
  3768 ;;		line 96 in file "../app/app_src/led.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  i               1   33[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:   10
  3789 ;; This function calls:
  3790 ;;		_queueLedEvent
  3791 ;; This function is called by:
  3792 ;;		_processATCommand
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text2
  3797  007B2A                     __ptext2:
  3798                           	opt callstack 0
  3799  007B2A                     _queue_serial_led_event:
  3800                           	opt callstack 19
  3801                           
  3802                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3803                           
  3804                           ;incstack = 0
  3805  007B2A  0E01               	movlw	1
  3806  007B2C  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3807  007B2E  0E90               	movlw	144
  3808  007B30  6E1C               	movwf	queueLedEvent@duration^0,c
  3809  007B32  0E00               	movlw	0
  3810  007B34  EC67  F041         	call	_queueLedEvent
  3811                           
  3812                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3813  007B38  0E00               	movlw	0
  3814  007B3A  6E22               	movwf	queue_serial_led_event@i^0,c
  3815  007B3C                     l16651:
  3816                           
  3817                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3818  007B3C  0E00               	movlw	0
  3819  007B3E  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3820  007B40  0E64               	movlw	100
  3821  007B42  6E1C               	movwf	queueLedEvent@duration^0,c
  3822  007B44  0E01               	movlw	1
  3823  007B46  EC67  F041         	call	_queueLedEvent
  3824                           
  3825                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3826  007B4A  0E00               	movlw	0
  3827  007B4C  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3828  007B4E  0E64               	movlw	100
  3829  007B50  6E1C               	movwf	queueLedEvent@duration^0,c
  3830  007B52  0E00               	movlw	0
  3831  007B54  EC67  F041         	call	_queueLedEvent
  3832                           
  3833                           ;../app/app_src/led.c: 103:     }
  3834  007B58  2A22               	incf	queue_serial_led_event@i^0,f,c
  3835  007B5A  0E01               	movlw	1
  3836  007B5C  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3837  007B5E  D7EE               	goto	l16651
  3838                           
  3839                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3840  007B60  0E00               	movlw	0
  3841  007B62  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3842  007B64  0E64               	movlw	100
  3843  007B66  6E1C               	movwf	queueLedEvent@duration^0,c
  3844  007B68  0E00               	movlw	0
  3845  007B6A  EC67  F041         	call	_queueLedEvent
  3846                           
  3847                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3848  007B6E  0E00               	movlw	0
  3849  007B70  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3850  007B72  0E64               	movlw	100
  3851  007B74  6E1C               	movwf	queueLedEvent@duration^0,c
  3852  007B76  0E01               	movlw	1
  3853  007B78  EC67  F041         	call	_queueLedEvent
  3854  007B7C  0012               	return		;funcret
  3855  007B7E                     __end_of_queue_serial_led_event:
  3856                           	opt callstack 0
  3857                           
  3858 ;; *************** function _queueLedEvent *****************
  3859 ;; Defined at:
  3860 ;;		line 53 in file "../app/app_src/led.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  LEDState        1    wreg     unsigned char 
  3863 ;;  duration        2   27[COMRAM] unsigned short 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  LEDState        1   29[COMRAM] unsigned char 
  3866 ;;  temp            3   30[COMRAM] struct ledEvent
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      char 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        6 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    9
  3883 ;; This function calls:
  3884 ;;		_CircularBufferPushBack
  3885 ;;		_CircularBufferSpace
  3886 ;; This function is called by:
  3887 ;;		_queue_serial_led_event
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text3
  3892  0082CE                     __ptext3:
  3893                           	opt callstack 0
  3894  0082CE                     _queueLedEvent:
  3895                           	opt callstack 19
  3896                           
  3897                           ;incstack = 0
  3898                           ;queueLedEvent@LEDState stored from wreg
  3899  0082CE  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3900                           
  3901                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3902  0082D0  0EC8               	movlw	low _ledtasksbuf
  3903  0082D2  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3904  0082D4  0E01               	movlw	high _ledtasksbuf
  3905  0082D6  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3906  0082D8  EC4C  F042         	call	_CircularBufferSpace	;wreg free
  3907  0082DC  500A               	movf	?_CircularBufferSpace^0,w,c
  3908  0082DE  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3909  0082E0  B4D8               	btfsc	status,2,c
  3910  0082E2  0012               	return	
  3911                           
  3912                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3913  0082E4  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3914                           
  3915                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  3916  0082EA  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3917  0082F0  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3918                           
  3919                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3920  0082F6  0EC8               	movlw	low _ledtasksbuf
  3921  0082F8  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3922  0082FA  0E01               	movlw	high _ledtasksbuf
  3923  0082FC  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3924  0082FE  0E1F               	movlw	low queueLedEvent@temp
  3925  008300  6E15               	movwf	CircularBufferPushBack@val^0,c
  3926  008302  EC31  F02A         	call	_CircularBufferPushBack	;wreg free
  3927  008306  0012               	return		;funcret
  3928  008308                     __end_of_queueLedEvent:
  3929                           	opt callstack 0
  3930                           
  3931 ;; *************** function _CircularBufferSpace *****************
  3932 ;; Defined at:
  3933 ;;		line 126 in file "../app/app_src/circular buffer.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  ctx             2    9[COMRAM] PTR const struct .
  3936 ;;		 -> ledtasksbuf(10), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2    9[COMRAM] unsigned int 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:        4 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    8
  3955 ;; This function calls:
  3956 ;;		_CircularBufferSize
  3957 ;; This function is called by:
  3958 ;;		_queueLedEvent
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text4
  3963  008498                     __ptext4:
  3964                           	opt callstack 0
  3965  008498                     _CircularBufferSpace:
  3966                           	opt callstack 19
  3967                           
  3968                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  3969                           
  3970                           ;incstack = 0
  3971  008498  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3972  00849E  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3973  0084A4  EC55  F03C         	call	_CircularBufferSize	;wreg free
  3974  0084A8  EE20 F008          	lfsr	2,8
  3975  0084AC  500A               	movf	CircularBufferSpace@ctx^0,w,c
  3976  0084AE  26D9               	addwf	fsr2l,f,c
  3977  0084B0  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  3978  0084B2  22DA               	addwfc	fsr2h,f,c
  3979  0084B4  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  3980  0084BA  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  3981  0084C0  5002               	movf	?_CircularBufferSize^0,w,c
  3982  0084C2  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  3983  0084C4  6E0A               	movwf	?_CircularBufferSpace^0,c
  3984  0084C6  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  3985  0084C8  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  3986  0084CA  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  3987  0084CC  0012               	return		;funcret
  3988  0084CE                     __end_of_CircularBufferSpace:
  3989                           	opt callstack 0
  3990                           
  3991 ;; *************** function _CircularBufferSize *****************
  3992 ;; Defined at:
  3993 ;;		line 122 in file "../app/app_src/circular buffer.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  ctx             2    1[COMRAM] PTR const struct .
  3996 ;;		 -> ledtasksbuf(10), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    1[COMRAM] unsigned int 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;Total ram usage:        8 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    7
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_CircularBufferSpace
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text5
  4023  0078AA                     __ptext5:
  4024                           	opt callstack 0
  4025  0078AA                     _CircularBufferSize:
  4026                           	opt callstack 19
  4027                           
  4028                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  4029                           
  4030                           ;incstack = 0
  4031  0078AA  EE20 F008          	lfsr	2,8
  4032  0078AE  5002               	movf	CircularBufferSize@ctx^0,w,c
  4033  0078B0  26D9               	addwf	fsr2l,f,c
  4034  0078B2  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4035  0078B4  22DA               	addwfc	fsr2h,f,c
  4036  0078B6  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4037  0078BC  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4038  0078C2  EE20 F004          	lfsr	2,4
  4039  0078C6  5002               	movf	CircularBufferSize@ctx^0,w,c
  4040  0078C8  26D9               	addwf	fsr2l,f,c
  4041  0078CA  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4042  0078CC  22DA               	addwfc	fsr2h,f,c
  4043  0078CE  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4044  0078D4  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4045  0078DA  EE20 F002          	lfsr	2,2
  4046  0078DE  5002               	movf	CircularBufferSize@ctx^0,w,c
  4047  0078E0  26D9               	addwf	fsr2l,f,c
  4048  0078E2  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4049  0078E4  22DA               	addwfc	fsr2h,f,c
  4050  0078E6  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4051  0078EC  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4052  0078F2  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4053  0078F4  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4054  0078F6  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4055  0078F8  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4056  0078FA  5004               	movf	??_CircularBufferSize^0,w,c
  4057  0078FC  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4058  0078FE  6E02               	movwf	?_CircularBufferSize^0,c
  4059  007900  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4060  007902  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4061  007904  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4062  007906  0012               	return		;funcret
  4063  007908                     __end_of_CircularBufferSize:
  4064                           	opt callstack 0
  4065                           
  4066 ;; *************** function _CircularBufferPushBack *****************
  4067 ;; Defined at:
  4068 ;;		line 71 in file "../app/app_src/circular buffer.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  ctx             2   18[COMRAM] PTR struct .
  4071 ;;		 -> ledtasksbuf(10), 
  4072 ;;  val             1   20[COMRAM] PTR void 
  4073 ;;		 -> queueLedEvent@temp(3), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  write_pos       2   25[COMRAM] unsigned int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      char 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        9 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    8
  4092 ;; This function calls:
  4093 ;;		___wmul
  4094 ;;		_memcpy
  4095 ;; This function is called by:
  4096 ;;		_queueLedEvent
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text6
  4101  005462                     __ptext6:
  4102                           	opt callstack 0
  4103  005462                     _CircularBufferPushBack:
  4104                           	opt callstack 19
  4105                           
  4106                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
  4107                           
  4108                           ;incstack = 0
  4109  005462  EE20 F008          	lfsr	2,8
  4110  005466  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4111  005468  26D9               	addwf	fsr2l,f,c
  4112  00546A  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4113  00546C  22DA               	addwfc	fsr2h,f,c
  4114  00546E  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4115  005474  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4116  00547A  EE20 F002          	lfsr	2,2
  4117  00547E  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4118  005480  26D9               	addwf	fsr2l,f,c
  4119  005482  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4120  005484  22DA               	addwfc	fsr2h,f,c
  4121  005486  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
  4122  00548C  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
  4123  005492  0E01               	movlw	1
  4124  005494  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
  4125  005496  0E00               	movlw	0
  4126  005498  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
  4127  00549A  5016               	movf	??_CircularBufferPushBack^0,w,c
  4128  00549C  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
  4129  00549E  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
  4130  0054A0  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
  4131  0054A2  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
  4132  0054A4  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
  4133                           
  4134                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
  4135  0054A6  EE20 F004          	lfsr	2,4
  4136  0054AA  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4137  0054AC  26D9               	addwf	fsr2l,f,c
  4138  0054AE  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4139  0054B0  22DA               	addwfc	fsr2h,f,c
  4140  0054B2  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
  4141  0054B4  18DE               	xorwf	postinc2,w,c
  4142  0054B6  E104               	bnz	l15569
  4143  0054B8  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
  4144  0054BA  18DE               	xorwf	postinc2,w,c
  4145  0054BC  B4D8               	btfsc	status,2,c
  4146  0054BE  0012               	return	
  4147  0054C0                     l15569:
  4148                           
  4149                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
  4150  0054C0  EE20 F002          	lfsr	2,2
  4151  0054C4  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4152  0054C6  26D9               	addwf	fsr2l,f,c
  4153  0054C8  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4154  0054CA  22DA               	addwfc	fsr2h,f,c
  4155  0054CC  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  4156  0054D2  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  4157  0054D8  EE20 F006          	lfsr	2,6
  4158  0054DC  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4159  0054DE  26D9               	addwf	fsr2l,f,c
  4160  0054E0  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4161  0054E2  22DA               	addwfc	fsr2h,f,c
  4162  0054E4  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  4163  0054EA  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  4164  0054F0  EC39  F043         	call	___wmul	;wreg free
  4165  0054F4  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
  4166  0054FA  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
  4167  005500  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4168  005506  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4169  00550C  5002               	movf	?___wmul^0,w,c
  4170  00550E  2416               	addwf	??_CircularBufferPushBack^0,w,c
  4171  005510  6E08               	movwf	memcpy@d1^0,c
  4172  005512  5003               	movf	(?___wmul+1)^0,w,c
  4173  005514  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
  4174  005516  6E09               	movwf	(memcpy@d1+1)^0,c
  4175  005518  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
  4176  00551E  6A0B               	clrf	(memcpy@s1+1)^0,c
  4177  005520  EE20 F006          	lfsr	2,6
  4178  005524  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4179  005526  26D9               	addwf	fsr2l,f,c
  4180  005528  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4181  00552A  22DA               	addwfc	fsr2h,f,c
  4182  00552C  006F FF78  F00C    	movff	postinc2,memcpy@n
  4183  005532  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  4184  005538  ECE7  F039         	call	_memcpy	;wreg free
  4185                           
  4186                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
  4187  00553C  EE20 F002          	lfsr	2,2
  4188  005540  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4189  005542  26D9               	addwf	fsr2l,f,c
  4190  005544  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4191  005546  22DA               	addwfc	fsr2h,f,c
  4192  005548  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
  4193  00554E  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
  4194  005554  0012               	return		;funcret
  4195  005556                     __end_of_CircularBufferPushBack:
  4196                           	opt callstack 0
  4197                           
  4198 ;; *************** function _executeATCommand *****************
  4199 ;; Defined at:
  4200 ;;		line 831 in file "../app/app_src/application.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  cmd             2   68[BANK0 ] PTR unsigned char 
  4203 ;;		 -> atCommand(80), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  retcode         1    0        unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      unsigned char 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 3F/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;Total ram usage:        5 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:   18
  4222 ;; This function calls:
  4223 ;;		_cmdAddr
  4224 ;;		_cmdBcast
  4225 ;;		_cmdBootLoad
  4226 ;;		_cmdGetCAD
  4227 ;;		_cmdGetCADRSSI
  4228 ;;		_cmdGetMode
  4229 ;;		_cmdGetRFCH
  4230 ;;		_cmdGetRxCnt
  4231 ;;		_cmdGetSF
  4232 ;;		_cmdGetTTL
  4233 ;;		_cmdGetTX
  4234 ;;		_cmdI
  4235 ;;		_cmdMac
  4236 ;;		_cmdNaddr
  4237 ;;		_cmdRecv
  4238 ;;		_cmdReset
  4239 ;;		_cmdRstCAD
  4240 ;;		_cmdSend
  4241 ;;		_cmdSendSink
  4242 ;;		_cmdSetAES
  4243 ;;		_cmdSetAddr
  4244 ;;		_cmdSetBaud
  4245 ;;		_cmdSetCADRSSI
  4246 ;;		_cmdSetNaddr
  4247 ;;		_cmdSetParity
  4248 ;;		_cmdSetRFCH
  4249 ;;		_cmdSetSF
  4250 ;;		_cmdSetSink
  4251 ;;		_cmdSetTTL
  4252 ;;		_cmdSetTX
  4253 ;;		_print_hop_table
  4254 ;;		_printf
  4255 ;;		_set_hop_table_ttl
  4256 ;;		_strstr
  4257 ;; This function is called by:
  4258 ;;		_processATCommand
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text7
  4263  0000B2                     __ptext7:
  4264                           	opt callstack 0
  4265  0000B2                     _executeATCommand:
  4266                           	opt callstack 11
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;../app/app_src/application.c: 834:     switch(*(cmd+1))
  4270                           
  4271                           ;incstack = 0
  4272  0000B2  D296               	goto	l16637
  4273  0000B4                     l16497:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;../app/app_src/application.c: 837:          if(strstr(atCommand,"+SEND:")){
  4277  0000B4  0E34               	movlw	low _atCommand
  4278  0000B6  6E0D               	movwf	strstr@h^0,c
  4279  0000B8  0E02               	movlw	high _atCommand
  4280  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4281  0000BC  0E61               	movlw	low STR_62
  4282  0000BE  6E0F               	movwf	strstr@n^0,c
  4283  0000C0  0EFF               	movlw	high STR_62
  4284  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4285  0000C4  ECCB  F02D         	call	_strstr	;wreg free
  4286  0000C8  500D               	movf	?_strstr^0,w,c
  4287  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4288  0000CC  B4D8               	btfsc	status,2,c
  4289  0000CE  D009               	goto	l16501
  4290                           
  4291                           ;../app/app_src/application.c: 838:           cmdSend(cmd);
  4292  0000D0  0060  F290  F076   	movff	executeATCommand@cmd,cmdSend@cmd
  4293  0000D6  0060  F294  F077   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4294  0000DC  EC19  F014         	call	_cmdSend	;wreg free
  4295                           
  4296                           ;../app/app_src/application.c: 839:          }
  4297  0000E0  0012               	return	
  4298  0000E2                     l16501:
  4299  0000E2  0E34               	movlw	low _atCommand
  4300  0000E4  6E0D               	movwf	strstr@h^0,c
  4301  0000E6  0E02               	movlw	high _atCommand
  4302  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4303  0000EA  0E30               	movlw	low STR_64
  4304  0000EC  6E0F               	movwf	strstr@n^0,c
  4305  0000EE  0EFF               	movlw	high STR_64
  4306  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4307  0000F2  ECCB  F02D         	call	_strstr	;wreg free
  4308  0000F6  500D               	movf	?_strstr^0,w,c
  4309  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4310  0000FA  B4D8               	btfsc	status,2,c
  4311  0000FC  D003               	goto	l16505
  4312                           
  4313                           ;../app/app_src/application.c: 841:           cmdSetSink();
  4314  0000FE  EC2E  F046         	call	_cmdSetSink	;wreg free
  4315                           
  4316                           ;../app/app_src/application.c: 842:          }
  4317  000102  0012               	return	
  4318  000104                     l16505:
  4319  000104  0E34               	movlw	low _atCommand
  4320  000106  6E0D               	movwf	strstr@h^0,c
  4321  000108  0E02               	movlw	high _atCommand
  4322  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4323  00010C  0EA7               	movlw	low STR_66
  4324  00010E  6E0F               	movwf	strstr@n^0,c
  4325  000110  0EFF               	movlw	high STR_66
  4326  000112  6E10               	movwf	(strstr@n+1)^0,c
  4327  000114  ECCB  F02D         	call	_strstr	;wreg free
  4328  000118  500D               	movf	?_strstr^0,w,c
  4329  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4330  00011C  B4D8               	btfsc	status,2,c
  4331  00011E  D007               	goto	l16509
  4332                           
  4333                           ;../app/app_src/application.c: 844:           cmdSendSink(atCommand);
  4334  000120  0E34               	movlw	low _atCommand
  4335  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4336  000124  0E02               	movlw	high _atCommand
  4337  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4338  000128  ECB4  F046         	call	_cmdSendSink	;wreg free
  4339                           
  4340                           ;../app/app_src/application.c: 845:          }
  4341  00012C  0012               	return	
  4342  00012E                     l16509:
  4343  00012E  0E34               	movlw	low _atCommand
  4344  000130  6E0D               	movwf	strstr@h^0,c
  4345  000132  0E02               	movlw	high _atCommand
  4346  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4347  000136  0EE6               	movlw	low STR_68
  4348  000138  6E0F               	movwf	strstr@n^0,c
  4349  00013A  0EFF               	movlw	high STR_68
  4350  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4351  00013E  ECCB  F02D         	call	_strstr	;wreg free
  4352  000142  500D               	movf	?_strstr^0,w,c
  4353  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4354  000146  B4D8               	btfsc	status,2,c
  4355  000148  D003               	goto	l16513
  4356                           
  4357                           ;../app/app_src/application.c: 847:           cmdGetSF();
  4358  00014A  ECC4  F045         	call	_cmdGetSF	;wreg free
  4359                           
  4360                           ;../app/app_src/application.c: 848:          }
  4361  00014E  0012               	return	
  4362  000150                     l16513:
  4363  000150  0E34               	movlw	low _atCommand
  4364  000152  6E0D               	movwf	strstr@h^0,c
  4365  000154  0E02               	movlw	high _atCommand
  4366  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4367  000158  0EE1               	movlw	low STR_70
  4368  00015A  6E0F               	movwf	strstr@n^0,c
  4369  00015C  0EFF               	movlw	high STR_70
  4370  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4371  000160  ECCB  F02D         	call	_strstr	;wreg free
  4372  000164  500D               	movf	?_strstr^0,w,c
  4373  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4374  000168  B4D8               	btfsc	status,2,c
  4375  00016A  D008               	goto	l16517
  4376                           
  4377                           ;../app/app_src/application.c: 850:           cmdSetSF(atCommand);
  4378  00016C  0E34               	movlw	low _atCommand
  4379  00016E  0100               	movlb	0	; () banked
  4380  000170  6F76               	movwf	cmdSetSF@atCommand& (0+255),b
  4381  000172  0E02               	movlw	high _atCommand
  4382  000174  6F77               	movwf	(cmdSetSF@atCommand+1)& (0+255),b
  4383  000176  EC9F  F033         	call	_cmdSetSF	;wreg free
  4384                           
  4385                           ;../app/app_src/application.c: 851:          }
  4386  00017A  0012               	return	
  4387  00017C                     l16517:
  4388  00017C  0E34               	movlw	low _atCommand
  4389  00017E  6E0D               	movwf	strstr@h^0,c
  4390  000180  0E02               	movlw	high _atCommand
  4391  000182  6E0E               	movwf	(strstr@h+1)^0,c
  4392  000184  0ED8               	movlw	low STR_72
  4393  000186  6E0F               	movwf	strstr@n^0,c
  4394  000188  0EFE               	movlw	high STR_72
  4395  00018A  6E10               	movwf	(strstr@n+1)^0,c
  4396  00018C  ECCB  F02D         	call	_strstr	;wreg free
  4397  000190  500D               	movf	?_strstr^0,w,c
  4398  000192  100E               	iorwf	(?_strstr+1)^0,w,c
  4399  000194  B4D8               	btfsc	status,2,c
  4400  000196  D219               	goto	l16633
  4401                           
  4402                           ;../app/app_src/application.c: 853:                 print_hop_table(atCommand);
  4403  000198  0E34               	movlw	low _atCommand
  4404  00019A  0100               	movlb	0	; () banked
  4405  00019C  6F76               	movwf	print_hop_table@atCommand& (0+255),b
  4406  00019E  0E02               	movlw	high _atCommand
  4407  0001A0  6F77               	movwf	(print_hop_table@atCommand+1)& (0+255),b
  4408  0001A2  EC27  F046         	call	_print_hop_table	;wreg free
  4409                           
  4410                           ;../app/app_src/application.c: 854:             }
  4411  0001A6  0012               	return	
  4412  0001A8                     l16521:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;../app/app_src/application.c: 860:          if(strstr(atCommand,"+BCAST=")){
  4416  0001A8  0E34               	movlw	low _atCommand
  4417  0001AA  6E0D               	movwf	strstr@h^0,c
  4418  0001AC  0E02               	movlw	high _atCommand
  4419  0001AE  6E0E               	movwf	(strstr@h+1)^0,c
  4420  0001B0  0E51               	movlw	low STR_74
  4421  0001B2  6E0F               	movwf	strstr@n^0,c
  4422  0001B4  0EFF               	movlw	high STR_74
  4423  0001B6  6E10               	movwf	(strstr@n+1)^0,c
  4424  0001B8  ECCB  F02D         	call	_strstr	;wreg free
  4425  0001BC  500D               	movf	?_strstr^0,w,c
  4426  0001BE  100E               	iorwf	(?_strstr+1)^0,w,c
  4427  0001C0  B4D8               	btfsc	status,2,c
  4428  0001C2  D009               	goto	l16525
  4429                           
  4430                           ;../app/app_src/application.c: 861:     cmdBcast(cmd);
  4431  0001C4  0060  F290  F076   	movff	executeATCommand@cmd,cmdBcast@cmd
  4432  0001CA  0060  F294  F077   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4433  0001D0  EC71  F017         	call	_cmdBcast	;wreg free
  4434                           
  4435                           ;../app/app_src/application.c: 862:    }
  4436  0001D4  0012               	return	
  4437  0001D6                     l16525:
  4438  0001D6  0E34               	movlw	low _atCommand
  4439  0001D8  6E0D               	movwf	strstr@h^0,c
  4440  0001DA  0E02               	movlw	high _atCommand
  4441  0001DC  6E0E               	movwf	(strstr@h+1)^0,c
  4442  0001DE  0E68               	movlw	low STR_76
  4443  0001E0  6E0F               	movwf	strstr@n^0,c
  4444  0001E2  0EFF               	movlw	high STR_76
  4445  0001E4  6E10               	movwf	(strstr@n+1)^0,c
  4446  0001E6  ECCB  F02D         	call	_strstr	;wreg free
  4447  0001EA  500D               	movf	?_strstr^0,w,c
  4448  0001EC  100E               	iorwf	(?_strstr+1)^0,w,c
  4449  0001EE  B4D8               	btfsc	status,2,c
  4450  0001F0  D007               	goto	l16529
  4451                           
  4452                           ;../app/app_src/application.c: 864:                 cmdSetBaud(atCommand);
  4453  0001F2  0E34               	movlw	low _atCommand
  4454  0001F4  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4455  0001F6  0E02               	movlw	high _atCommand
  4456  0001F8  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4457  0001FA  EC57  F03A         	call	_cmdSetBaud	;wreg free
  4458                           
  4459                           ;../app/app_src/application.c: 865:             }
  4460  0001FE  0012               	return	
  4461  000200                     l16529:
  4462  000200  0E34               	movlw	low _atCommand
  4463  000202  6E0D               	movwf	strstr@h^0,c
  4464  000204  0E02               	movlw	high _atCommand
  4465  000206  6E0E               	movwf	(strstr@h+1)^0,c
  4466  000208  0E0B               	movlw	low STR_78
  4467  00020A  6E0F               	movwf	strstr@n^0,c
  4468  00020C  0EFF               	movlw	high STR_78
  4469  00020E  6E10               	movwf	(strstr@n+1)^0,c
  4470  000210  ECCB  F02D         	call	_strstr	;wreg free
  4471  000214  500D               	movf	?_strstr^0,w,c
  4472  000216  100E               	iorwf	(?_strstr+1)^0,w,c
  4473  000218  B4D8               	btfsc	status,2,c
  4474  00021A  D1D7               	goto	l16633
  4475                           
  4476                           ;../app/app_src/application.c: 867:                 cmdBootLoad();
  4477  00021C  EC84  F041         	call	_cmdBootLoad	;wreg free
  4478                           
  4479                           ;../app/app_src/application.c: 868:             }
  4480  000220  0012               	return	
  4481  000222                     l16533:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;../app/app_src/application.c: 874:          if(strstr(atCommand,"+ADDR?")){
  4485  000222  0E34               	movlw	low _atCommand
  4486  000224  6E0D               	movwf	strstr@h^0,c
  4487  000226  0E02               	movlw	high _atCommand
  4488  000228  6E0E               	movwf	(strstr@h+1)^0,c
  4489  00022A  0E92               	movlw	low STR_80
  4490  00022C  6E0F               	movwf	strstr@n^0,c
  4491  00022E  0EFF               	movlw	high STR_80
  4492  000230  6E10               	movwf	(strstr@n+1)^0,c
  4493  000232  ECCB  F02D         	call	_strstr	;wreg free
  4494  000236  500D               	movf	?_strstr^0,w,c
  4495  000238  100E               	iorwf	(?_strstr+1)^0,w,c
  4496  00023A  B4D8               	btfsc	status,2,c
  4497  00023C  D003               	goto	l16537
  4498                           
  4499                           ;../app/app_src/application.c: 875:           cmdAddr();
  4500  00023E  ECF2  F044         	call	_cmdAddr	;wreg free
  4501                           
  4502                           ;../app/app_src/application.c: 876:          }
  4503  000242  0012               	return	
  4504  000244                     l16537:
  4505  000244  0E34               	movlw	low _atCommand
  4506  000246  6E0D               	movwf	strstr@h^0,c
  4507  000248  0E02               	movlw	high _atCommand
  4508  00024A  6E0E               	movwf	(strstr@h+1)^0,c
  4509  00024C  0E76               	movlw	low STR_82
  4510  00024E  6E0F               	movwf	strstr@n^0,c
  4511  000250  0EFF               	movlw	high STR_82
  4512  000252  6E10               	movwf	(strstr@n+1)^0,c
  4513  000254  ECCB  F02D         	call	_strstr	;wreg free
  4514  000258  500D               	movf	?_strstr^0,w,c
  4515  00025A  100E               	iorwf	(?_strstr+1)^0,w,c
  4516  00025C  B4D8               	btfsc	status,2,c
  4517  00025E  D008               	goto	l16541
  4518                           
  4519                           ;../app/app_src/application.c: 878:     cmdSetAddr(atCommand);
  4520  000260  0E34               	movlw	low _atCommand
  4521  000262  0100               	movlb	0	; () banked
  4522  000264  6F76               	movwf	cmdSetAddr@cmd& (0+255),b
  4523  000266  0E02               	movlw	high _atCommand
  4524  000268  6F77               	movwf	(cmdSetAddr@cmd+1)& (0+255),b
  4525  00026A  EC79  F036         	call	_cmdSetAddr	;wreg free
  4526                           
  4527                           ;../app/app_src/application.c: 879:    }
  4528  00026E  0012               	return	
  4529  000270                     l16541:
  4530  000270  0E34               	movlw	low _atCommand
  4531  000272  6E0D               	movwf	strstr@h^0,c
  4532  000274  0E02               	movlw	high _atCommand
  4533  000276  6E0E               	movwf	(strstr@h+1)^0,c
  4534  000278  0E15               	movlw	low STR_84
  4535  00027A  6E0F               	movwf	strstr@n^0,c
  4536  00027C  0EFF               	movlw	high STR_84
  4537  00027E  6E10               	movwf	(strstr@n+1)^0,c
  4538  000280  ECCB  F02D         	call	_strstr	;wreg free
  4539  000284  500D               	movf	?_strstr^0,w,c
  4540  000286  100E               	iorwf	(?_strstr+1)^0,w,c
  4541  000288  B4D8               	btfsc	status,2,c
  4542  00028A  D19F               	goto	l16633
  4543                           
  4544                           ;../app/app_src/application.c: 881:           cmdSetAES(atCommand);
  4545  00028C  0E34               	movlw	low _atCommand
  4546  00028E  0100               	movlb	0	; () banked
  4547  000290  6F76               	movwf	cmdSetAES@cmd& (0+255),b
  4548  000292  0E02               	movlw	high _atCommand
  4549  000294  6F77               	movwf	(cmdSetAES@cmd+1)& (0+255),b
  4550  000296  EC71  F019         	call	_cmdSetAES	;wreg free
  4551                           
  4552                           ;../app/app_src/application.c: 882:          }
  4553  00029A  0012               	return	
  4554  00029C                     l16545:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;../app/app_src/application.c: 888:          if(strstr(atCommand,"+CADCOUNTER?")){
  4558  00029C  0E34               	movlw	low _atCommand
  4559  00029E  6E0D               	movwf	strstr@h^0,c
  4560  0002A0  0E02               	movlw	high _atCommand
  4561  0002A2  6E0E               	movwf	(strstr@h+1)^0,c
  4562  0002A4  0EA7               	movlw	low STR_86
  4563  0002A6  6E0F               	movwf	strstr@n^0,c
  4564  0002A8  0EFE               	movlw	high STR_86
  4565  0002AA  6E10               	movwf	(strstr@n+1)^0,c
  4566  0002AC  ECCB  F02D         	call	_strstr	;wreg free
  4567  0002B0  500D               	movf	?_strstr^0,w,c
  4568  0002B2  100E               	iorwf	(?_strstr+1)^0,w,c
  4569  0002B4  B4D8               	btfsc	status,2,c
  4570  0002B6  D003               	goto	l16549
  4571                           
  4572                           ;../app/app_src/application.c: 889:           cmdGetCAD();
  4573  0002B8  ECCF  F045         	call	_cmdGetCAD	;wreg free
  4574                           
  4575                           ;../app/app_src/application.c: 890:          }
  4576  0002BC  0012               	return	
  4577  0002BE                     l16549:
  4578  0002BE  0E34               	movlw	low _atCommand
  4579  0002C0  6E0D               	movwf	strstr@h^0,c
  4580  0002C2  0E02               	movlw	high _atCommand
  4581  0002C4  6E0E               	movwf	(strstr@h+1)^0,c
  4582  0002C6  0E56               	movlw	low STR_88
  4583  0002C8  6E0F               	movwf	strstr@n^0,c
  4584  0002CA  0EFE               	movlw	high STR_88
  4585  0002CC  6E10               	movwf	(strstr@n+1)^0,c
  4586  0002CE  ECCB  F02D         	call	_strstr	;wreg free
  4587  0002D2  500D               	movf	?_strstr^0,w,c
  4588  0002D4  100E               	iorwf	(?_strstr+1)^0,w,c
  4589  0002D6  B4D8               	btfsc	status,2,c
  4590  0002D8  D003               	goto	l16553
  4591                           
  4592                           ;../app/app_src/application.c: 892:           cmdRstCAD();
  4593  0002DA  ECE5  F045         	call	_cmdRstCAD	;wreg free
  4594                           
  4595                           ;../app/app_src/application.c: 893:          }
  4596  0002DE  0012               	return	
  4597  0002E0                     l16553:
  4598  0002E0  0E34               	movlw	low _atCommand
  4599  0002E2  6E0D               	movwf	strstr@h^0,c
  4600  0002E4  0E02               	movlw	high _atCommand
  4601  0002E6  6E0E               	movwf	(strstr@h+1)^0,c
  4602  0002E8  0EF7               	movlw	low STR_90
  4603  0002EA  6E0F               	movwf	strstr@n^0,c
  4604  0002EC  0EFE               	movlw	high STR_90
  4605  0002EE  6E10               	movwf	(strstr@n+1)^0,c
  4606  0002F0  ECCB  F02D         	call	_strstr	;wreg free
  4607  0002F4  500D               	movf	?_strstr^0,w,c
  4608  0002F6  100E               	iorwf	(?_strstr+1)^0,w,c
  4609  0002F8  B4D8               	btfsc	status,2,c
  4610  0002FA  D003               	goto	l16557
  4611                           
  4612                           ;../app/app_src/application.c: 895:           cmdGetCADRSSI();
  4613  0002FC  EC3C  F045         	call	_cmdGetCADRSSI	;wreg free
  4614                           
  4615                           ;../app/app_src/application.c: 896:          }
  4616  000300  0012               	return	
  4617  000302                     l16557:
  4618  000302  0E34               	movlw	low _atCommand
  4619  000304  6E0D               	movwf	strstr@h^0,c
  4620  000306  0E02               	movlw	high _atCommand
  4621  000308  6E0E               	movwf	(strstr@h+1)^0,c
  4622  00030A  0EE3               	movlw	low STR_92
  4623  00030C  6E0F               	movwf	strstr@n^0,c
  4624  00030E  0EFE               	movlw	high STR_92
  4625  000310  6E10               	movwf	(strstr@n+1)^0,c
  4626  000312  ECCB  F02D         	call	_strstr	;wreg free
  4627  000316  500D               	movf	?_strstr^0,w,c
  4628  000318  100E               	iorwf	(?_strstr+1)^0,w,c
  4629  00031A  B4D8               	btfsc	status,2,c
  4630  00031C  D156               	goto	l16633
  4631                           
  4632                           ;../app/app_src/application.c: 898:           cmdSetCADRSSI(atCommand);
  4633  00031E  0E34               	movlw	low _atCommand
  4634  000320  0100               	movlb	0	; () banked
  4635  000322  6F76               	movwf	cmdSetCADRSSI@atCommand& (0+255),b
  4636  000324  0E02               	movlw	high _atCommand
  4637  000326  6F77               	movwf	(cmdSetCADRSSI@atCommand+1)& (0+255),b
  4638  000328  ECF6  F033         	call	_cmdSetCADRSSI	;wreg free
  4639                           
  4640                           ;../app/app_src/application.c: 899:          }
  4641  00032C  0012               	return	
  4642  00032E                     l16561:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;../app/app_src/application.c: 905:             if(strstr(atCommand,"+HOPS?")){
  4646  00032E  0E34               	movlw	low _atCommand
  4647  000330  6E0D               	movwf	strstr@h^0,c
  4648  000332  0E02               	movlw	high _atCommand
  4649  000334  6E0E               	movwf	(strstr@h+1)^0,c
  4650  000336  0E99               	movlw	low STR_94
  4651  000338  6E0F               	movwf	strstr@n^0,c
  4652  00033A  0EFF               	movlw	high STR_94
  4653  00033C  6E10               	movwf	(strstr@n+1)^0,c
  4654  00033E  ECCB  F02D         	call	_strstr	;wreg free
  4655  000342  500D               	movf	?_strstr^0,w,c
  4656  000344  100E               	iorwf	(?_strstr+1)^0,w,c
  4657  000346  B4D8               	btfsc	status,2,c
  4658  000348  D003               	goto	l16565
  4659  00034A                     u16840:
  4660                           
  4661                           ;../app/app_src/application.c: 906:                 cmdGetTTL();
  4662  00034A  ECB6  F046         	call	_cmdGetTTL	;wreg free
  4663                           
  4664                           ;../app/app_src/application.c: 907:             }
  4665  00034E  0012               	return	
  4666  000350                     l16565:
  4667  000350  0E34               	movlw	low _atCommand
  4668  000352  6E0D               	movwf	strstr@h^0,c
  4669  000354  0E02               	movlw	high _atCommand
  4670  000356  6E0E               	movwf	(strstr@h+1)^0,c
  4671  000358  0E7D               	movlw	low STR_96
  4672  00035A  6E0F               	movwf	strstr@n^0,c
  4673  00035C  0EFF               	movlw	high STR_96
  4674  00035E  6E10               	movwf	(strstr@n+1)^0,c
  4675  000360  ECCB  F02D         	call	_strstr	;wreg free
  4676  000364  500D               	movf	?_strstr^0,w,c
  4677  000366  100E               	iorwf	(?_strstr+1)^0,w,c
  4678  000368  B4D8               	btfsc	status,2,c
  4679  00036A  D007               	goto	l16569
  4680  00036C                     u16850:
  4681                           
  4682                           ;../app/app_src/application.c: 909:                 cmdSetTTL(atCommand);
  4683  00036C  0E34               	movlw	low _atCommand
  4684  00036E  6E02               	movwf	cmdSetTTL@cmd^0,c
  4685  000370  0E02               	movlw	high _atCommand
  4686  000372  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4687  000374  ECB3  F046         	call	_cmdSetTTL	;wreg free
  4688                           
  4689                           ;../app/app_src/application.c: 910:             }
  4690  000378  0012               	return	
  4691  00037A                     l16569:
  4692  00037A  0E34               	movlw	low _atCommand
  4693  00037C  6E0D               	movwf	strstr@h^0,c
  4694  00037E  0E02               	movlw	high _atCommand
  4695  000380  6E0E               	movwf	(strstr@h+1)^0,c
  4696  000382  0E1E               	movlw	low STR_98
  4697  000384  6E0F               	movwf	strstr@n^0,c
  4698  000386  0EFF               	movlw	high STR_98
  4699  000388  6E10               	movwf	(strstr@n+1)^0,c
  4700  00038A  ECCB  F02D         	call	_strstr	;wreg free
  4701  00038E  500D               	movf	?_strstr^0,w,c
  4702  000390  100E               	iorwf	(?_strstr+1)^0,w,c
  4703  000392  B4D8               	btfsc	status,2,c
  4704  000394  D11A               	goto	l16633
  4705                           
  4706                           ;../app/app_src/application.c: 912:                 set_hop_table_ttl(atCommand);
  4707  000396  0E34               	movlw	low _atCommand
  4708  000398  0100               	movlb	0	; () banked
  4709  00039A  6F76               	movwf	set_hop_table_ttl@cmd& (0+255),b
  4710  00039C  0E02               	movlw	high _atCommand
  4711  00039E  6F77               	movwf	(set_hop_table_ttl@cmd+1)& (0+255),b
  4712  0003A0  EC20  F046         	call	_set_hop_table_ttl	;wreg free
  4713                           
  4714                           ;../app/app_src/application.c: 913:             }
  4715  0003A4  0012               	return	
  4716  0003A6                     l16573:
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;../app/app_src/application.c: 919:             if(strstr(cmd,"+I")){
  4720  0003A6  0060  F290  F00D   	movff	executeATCommand@cmd,strstr@h
  4721  0003AC  0060  F294  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4722  0003B2  0EFA               	movlw	low STR_100
  4723  0003B4  6E0F               	movwf	strstr@n^0,c
  4724  0003B6  0EFF               	movlw	high STR_100
  4725  0003B8  6E10               	movwf	(strstr@n+1)^0,c
  4726  0003BA  ECCB  F02D         	call	_strstr	;wreg free
  4727  0003BE  500D               	movf	?_strstr^0,w,c
  4728  0003C0  100E               	iorwf	(?_strstr+1)^0,w,c
  4729  0003C2  B4D8               	btfsc	status,2,c
  4730  0003C4  D102               	goto	l16633
  4731                           
  4732                           ;../app/app_src/application.c: 920:                 cmdI();
  4733  0003C6  ECA5  F046         	call	_cmdI	;wreg free
  4734                           
  4735                           ;../app/app_src/application.c: 921:             }
  4736  0003CA  0012               	return	
  4737  0003CC                     l16577:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;../app/app_src/application.c: 927:          if(strstr(atCommand,"+MAC?")){
  4741  0003CC  0E34               	movlw	low _atCommand
  4742  0003CE  6E0D               	movwf	strstr@h^0,c
  4743  0003D0  0E02               	movlw	high _atCommand
  4744  0003D2  6E0E               	movwf	(strstr@h+1)^0,c
  4745  0003D4  0EB4               	movlw	low STR_102
  4746  0003D6  6E0F               	movwf	strstr@n^0,c
  4747  0003D8  0EFF               	movlw	high STR_102
  4748  0003DA  6E10               	movwf	(strstr@n+1)^0,c
  4749  0003DC  ECCB  F02D         	call	_strstr	;wreg free
  4750  0003E0  500D               	movf	?_strstr^0,w,c
  4751  0003E2  100E               	iorwf	(?_strstr+1)^0,w,c
  4752  0003E4  B4D8               	btfsc	status,2,c
  4753  0003E6  D003               	goto	l16581
  4754                           
  4755                           ;../app/app_src/application.c: 928:           cmdMac();
  4756  0003E8  ECB1  F03E         	call	_cmdMac	;wreg free
  4757                           
  4758                           ;../app/app_src/application.c: 929:          }
  4759  0003EC  0012               	return	
  4760  0003EE                     l16581:
  4761  0003EE  0E34               	movlw	low _atCommand
  4762  0003F0  6E0D               	movwf	strstr@h^0,c
  4763  0003F2  0E02               	movlw	high _atCommand
  4764  0003F4  6E0E               	movwf	(strstr@h+1)^0,c
  4765  0003F6  0E84               	movlw	low STR_104
  4766  0003F8  6E0F               	movwf	strstr@n^0,c
  4767  0003FA  0EFF               	movlw	high STR_104
  4768  0003FC  6E10               	movwf	(strstr@n+1)^0,c
  4769  0003FE  ECCB  F02D         	call	_strstr	;wreg free
  4770  000402  500D               	movf	?_strstr^0,w,c
  4771  000404  100E               	iorwf	(?_strstr+1)^0,w,c
  4772  000406  B4D8               	btfsc	status,2,c
  4773  000408  D0E0               	goto	l16633
  4774                           
  4775                           ;../app/app_src/application.c: 931:           cmdGetMode();
  4776  00040A  EC35  F046         	call	_cmdGetMode	;wreg free
  4777                           
  4778                           ;../app/app_src/application.c: 932:          }
  4779  00040E  0012               	return	
  4780  000410                     l16585:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;../app/app_src/application.c: 938:          if(strstr(atCommand,"+NADDR?")){
  4784  000410  0E34               	movlw	low _atCommand
  4785  000412  6E0D               	movwf	strstr@h^0,c
  4786  000414  0E02               	movlw	high _atCommand
  4787  000416  6E0E               	movwf	(strstr@h+1)^0,c
  4788  000418  0E59               	movlw	low STR_106
  4789  00041A  6E0F               	movwf	strstr@n^0,c
  4790  00041C  0EFF               	movlw	high STR_106
  4791  00041E  6E10               	movwf	(strstr@n+1)^0,c
  4792  000420  ECCB  F02D         	call	_strstr	;wreg free
  4793  000424  500D               	movf	?_strstr^0,w,c
  4794  000426  100E               	iorwf	(?_strstr+1)^0,w,c
  4795  000428  B4D8               	btfsc	status,2,c
  4796  00042A  D003               	goto	l16589
  4797                           
  4798                           ;../app/app_src/application.c: 939:     cmdNaddr();
  4799  00042C  ECAE  F045         	call	_cmdNaddr	;wreg free
  4800                           
  4801                           ;../app/app_src/application.c: 940:    }
  4802  000430  0012               	return	
  4803  000432                     l16589:
  4804  000432  0E34               	movlw	low _atCommand
  4805  000434  6E0D               	movwf	strstr@h^0,c
  4806  000436  0E02               	movlw	high _atCommand
  4807  000438  6E0E               	movwf	(strstr@h+1)^0,c
  4808  00043A  0E49               	movlw	low STR_108
  4809  00043C  6E0F               	movwf	strstr@n^0,c
  4810  00043E  0EFF               	movlw	high STR_108
  4811  000440  6E10               	movwf	(strstr@n+1)^0,c
  4812  000442  ECCB  F02D         	call	_strstr	;wreg free
  4813  000446  500D               	movf	?_strstr^0,w,c
  4814  000448  100E               	iorwf	(?_strstr+1)^0,w,c
  4815  00044A  B4D8               	btfsc	status,2,c
  4816  00044C  D0BE               	goto	l16633
  4817                           
  4818                           ;../app/app_src/application.c: 942:     cmdSetNaddr(atCommand);
  4819  00044E  0E34               	movlw	low _atCommand
  4820  000450  0100               	movlb	0	; () banked
  4821  000452  6F76               	movwf	cmdSetNaddr@cmd& (0+255),b
  4822  000454  0E02               	movlw	high _atCommand
  4823  000456  6F77               	movwf	(cmdSetNaddr@cmd+1)& (0+255),b
  4824  000458  ECA9  F039         	call	_cmdSetNaddr	;wreg free
  4825                           
  4826                           ;../app/app_src/application.c: 943:    }
  4827  00045C  0012               	return	
  4828  00045E                     l16593:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;../app/app_src/application.c: 949:             if(strstr(atCommand,"+PARITY=")){
  4832  00045E  0E34               	movlw	low _atCommand
  4833  000460  6E0D               	movwf	strstr@h^0,c
  4834  000462  0E02               	movlw	high _atCommand
  4835  000464  6E0E               	movwf	(strstr@h+1)^0,c
  4836  000466  0E27               	movlw	low STR_110
  4837  000468  6E0F               	movwf	strstr@n^0,c
  4838  00046A  0EFF               	movlw	high STR_110
  4839  00046C  6E10               	movwf	(strstr@n+1)^0,c
  4840  00046E  ECCB  F02D         	call	_strstr	;wreg free
  4841  000472  500D               	movf	?_strstr^0,w,c
  4842  000474  100E               	iorwf	(?_strstr+1)^0,w,c
  4843  000476  B4D8               	btfsc	status,2,c
  4844  000478  D0A8               	goto	l16633
  4845                           
  4846                           ;../app/app_src/application.c: 950:                 cmdSetParity(atCommand);
  4847  00047A  0E34               	movlw	low _atCommand
  4848  00047C  0100               	movlb	0	; () banked
  4849  00047E  6F76               	movwf	cmdSetParity@atCommand& (0+255),b
  4850  000480  0E02               	movlw	high _atCommand
  4851  000482  6F77               	movwf	(cmdSetParity@atCommand+1)& (0+255),b
  4852  000484  EC50  F037         	call	_cmdSetParity	;wreg free
  4853  000488                     l16597:
  4854                           
  4855                           ;../app/app_src/application.c: 956:          if(strstr(atCommand,"+RECV")){
  4856  000488  0E34               	movlw	low _atCommand
  4857  00048A  6E0D               	movwf	strstr@h^0,c
  4858  00048C  0E02               	movlw	high _atCommand
  4859  00048E  6E0E               	movwf	(strstr@h+1)^0,c
  4860  000490  0ECC               	movlw	low STR_112
  4861  000492  6E0F               	movwf	strstr@n^0,c
  4862  000494  0EFF               	movlw	high STR_112
  4863  000496  6E10               	movwf	(strstr@n+1)^0,c
  4864  000498  ECCB  F02D         	call	_strstr	;wreg free
  4865  00049C  500D               	movf	?_strstr^0,w,c
  4866  00049E  100E               	iorwf	(?_strstr+1)^0,w,c
  4867  0004A0  B4D8               	btfsc	status,2,c
  4868  0004A2  D003               	goto	l16601
  4869                           
  4870                           ;../app/app_src/application.c: 957:           cmdRecv();
  4871  0004A4  ECB5  F046         	call	_cmdRecv	;wreg free
  4872                           
  4873                           ;../app/app_src/application.c: 958:          }
  4874  0004A8  0012               	return	
  4875  0004AA                     l16601:
  4876  0004AA  0E34               	movlw	low _atCommand
  4877  0004AC  6E0D               	movwf	strstr@h^0,c
  4878  0004AE  0E02               	movlw	high _atCommand
  4879  0004B0  6E0E               	movwf	(strstr@h+1)^0,c
  4880  0004B2  0E8B               	movlw	low STR_114
  4881  0004B4  6E0F               	movwf	strstr@n^0,c
  4882  0004B6  0EFF               	movlw	high STR_114
  4883  0004B8  6E10               	movwf	(strstr@n+1)^0,c
  4884  0004BA  ECCB  F02D         	call	_strstr	;wreg free
  4885  0004BE  500D               	movf	?_strstr^0,w,c
  4886  0004C0  100E               	iorwf	(?_strstr+1)^0,w,c
  4887  0004C2  B4D8               	btfsc	status,2,c
  4888  0004C4  D003               	goto	l16605
  4889                           
  4890                           ;../app/app_src/application.c: 960:           cmdGetRFCH();
  4891  0004C6  EC2E  F045         	call	_cmdGetRFCH	;wreg free
  4892                           
  4893                           ;../app/app_src/application.c: 961:          }
  4894  0004CA  0012               	return	
  4895  0004CC                     l16605:
  4896  0004CC  0E34               	movlw	low _atCommand
  4897  0004CE  6E0D               	movwf	strstr@h^0,c
  4898  0004D0  0E02               	movlw	high _atCommand
  4899  0004D2  6E0E               	movwf	(strstr@h+1)^0,c
  4900  0004D4  0E6F               	movlw	low STR_116
  4901  0004D6  6E0F               	movwf	strstr@n^0,c
  4902  0004D8  0EFF               	movlw	high STR_116
  4903  0004DA  6E10               	movwf	(strstr@n+1)^0,c
  4904  0004DC  ECCB  F02D         	call	_strstr	;wreg free
  4905  0004E0  500D               	movf	?_strstr^0,w,c
  4906  0004E2  100E               	iorwf	(?_strstr+1)^0,w,c
  4907  0004E4  B4D8               	btfsc	status,2,c
  4908  0004E6  D008               	goto	l16609
  4909                           
  4910                           ;../app/app_src/application.c: 963:           cmdSetRFCH(atCommand);
  4911  0004E8  0E34               	movlw	low _atCommand
  4912  0004EA  0100               	movlb	0	; () banked
  4913  0004EC  6F76               	movwf	cmdSetRFCH@cmd& (0+255),b
  4914  0004EE  0E02               	movlw	high _atCommand
  4915  0004F0  6F77               	movwf	(cmdSetRFCH@cmd+1)& (0+255),b
  4916  0004F2  ECF6  F034         	call	_cmdSetRFCH	;wreg free
  4917                           
  4918                           ;../app/app_src/application.c: 964:          }
  4919  0004F6  0012               	return	
  4920  0004F8                     l16609:
  4921  0004F8  0E34               	movlw	low _atCommand
  4922  0004FA  6E0D               	movwf	strstr@h^0,c
  4923  0004FC  0E02               	movlw	high _atCommand
  4924  0004FE  6E0E               	movwf	(strstr@h+1)^0,c
  4925  000500  0EF0               	movlw	low STR_118
  4926  000502  6E0F               	movwf	strstr@n^0,c
  4927  000504  0EFF               	movlw	high STR_118
  4928  000506  6E10               	movwf	(strstr@n+1)^0,c
  4929  000508  ECCB  F02D         	call	_strstr	;wreg free
  4930  00050C  500D               	movf	?_strstr^0,w,c
  4931  00050E  100E               	iorwf	(?_strstr+1)^0,w,c
  4932  000510  B4D8               	btfsc	status,2,c
  4933  000512  D003               	goto	l16613
  4934                           
  4935                           ;../app/app_src/application.c: 966:           cmdReset();
  4936  000514  ECB1  F046         	call	_cmdReset	;wreg free
  4937                           
  4938                           ;../app/app_src/application.c: 967:          }
  4939  000518  0012               	return	
  4940  00051A                     l16613:
  4941  00051A  0E34               	movlw	low _atCommand
  4942  00051C  6E0D               	movwf	strstr@h^0,c
  4943  00051E  0E02               	movlw	high _atCommand
  4944  000520  6E0E               	movwf	(strstr@h+1)^0,c
  4945  000522  0EA0               	movlw	low STR_120
  4946  000524  6E0F               	movwf	strstr@n^0,c
  4947  000526  0EFF               	movlw	high STR_120
  4948  000528  6E10               	movwf	(strstr@n+1)^0,c
  4949  00052A  ECCB  F02D         	call	_strstr	;wreg free
  4950  00052E  500D               	movf	?_strstr^0,w,c
  4951  000530  100E               	iorwf	(?_strstr+1)^0,w,c
  4952  000532  B4D8               	btfsc	status,2,c
  4953  000534  D04A               	goto	l16633
  4954                           
  4955                           ;../app/app_src/application.c: 969:           cmdGetRxCnt(atCommand);
  4956  000536  0E34               	movlw	low _atCommand
  4957  000538  6E02               	movwf	cmdGetRxCnt@atCommand^0,c
  4958  00053A  0E02               	movlw	high _atCommand
  4959  00053C  6E03               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4960  00053E  ECB7  F046         	call	_cmdGetRxCnt	;wreg free
  4961                           
  4962                           ;../app/app_src/application.c: 970:          }
  4963  000542  0012               	return	
  4964  000544                     l16617:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;../app/app_src/application.c: 976:          if(strstr(atCommand,"+TTL?")){
  4968  000544  0E34               	movlw	low _atCommand
  4969  000546  6E0D               	movwf	strstr@h^0,c
  4970  000548  0E02               	movlw	high _atCommand
  4971  00054A  6E0E               	movwf	(strstr@h+1)^0,c
  4972  00054C  0EBA               	movlw	low STR_122
  4973  00054E  6E0F               	movwf	strstr@n^0,c
  4974  000550  0EFF               	movlw	high STR_122
  4975  000552  6E10               	movwf	(strstr@n+1)^0,c
  4976  000554  ECCB  F02D         	call	_strstr	;wreg free
  4977  000558  500D               	movf	?_strstr^0,w,c
  4978  00055A  100E               	iorwf	(?_strstr+1)^0,w,c
  4979  00055C  A4D8               	btfss	status,2,c
  4980  00055E  D6F5               	goto	u16840
  4981  000560  0E34               	movlw	low _atCommand
  4982  000562  6E0D               	movwf	strstr@h^0,c
  4983  000564  0E02               	movlw	high _atCommand
  4984  000566  6E0E               	movwf	(strstr@h+1)^0,c
  4985  000568  0EAE               	movlw	low STR_124
  4986  00056A  6E0F               	movwf	strstr@n^0,c
  4987  00056C  0EFF               	movlw	high STR_124
  4988  00056E  6E10               	movwf	(strstr@n+1)^0,c
  4989  000570  ECCB  F02D         	call	_strstr	;wreg free
  4990  000574  500D               	movf	?_strstr^0,w,c
  4991  000576  100E               	iorwf	(?_strstr+1)^0,w,c
  4992  000578  A4D8               	btfss	status,2,c
  4993  00057A  D6F8               	goto	u16850
  4994  00057C  0E34               	movlw	low _atCommand
  4995  00057E  6E0D               	movwf	strstr@h^0,c
  4996  000580  0E02               	movlw	high _atCommand
  4997  000582  6E0E               	movwf	(strstr@h+1)^0,c
  4998  000584  0E01               	movlw	low STR_126
  4999  000586  6E0F               	movwf	strstr@n^0,c
  5000  000588  0EFF               	movlw	high STR_126
  5001  00058A  6E10               	movwf	(strstr@n+1)^0,c
  5002  00058C  ECCB  F02D         	call	_strstr	;wreg free
  5003  000590  500D               	movf	?_strstr^0,w,c
  5004  000592  100E               	iorwf	(?_strstr+1)^0,w,c
  5005  000594  B4D8               	btfsc	status,2,c
  5006  000596  D003               	goto	l16629
  5007                           
  5008                           ;../app/app_src/application.c: 983:           cmdGetTX();
  5009  000598  ECB9  F045         	call	_cmdGetTX	;wreg free
  5010                           
  5011                           ;../app/app_src/application.c: 984:          }
  5012  00059C  0012               	return	
  5013  00059E                     l16629:
  5014  00059E  0E34               	movlw	low _atCommand
  5015  0005A0  6E0D               	movwf	strstr@h^0,c
  5016  0005A2  0E02               	movlw	high _atCommand
  5017  0005A4  6E0E               	movwf	(strstr@h+1)^0,c
  5018  0005A6  0EED               	movlw	low STR_128
  5019  0005A8  6E0F               	movwf	strstr@n^0,c
  5020  0005AA  0EFE               	movlw	high STR_128
  5021  0005AC  6E10               	movwf	(strstr@n+1)^0,c
  5022  0005AE  ECCB  F02D         	call	_strstr	;wreg free
  5023  0005B2  500D               	movf	?_strstr^0,w,c
  5024  0005B4  100E               	iorwf	(?_strstr+1)^0,w,c
  5025  0005B6  B4D8               	btfsc	status,2,c
  5026  0005B8  D008               	goto	l16633
  5027                           
  5028                           ;../app/app_src/application.c: 986:           cmdSetTX(atCommand);
  5029  0005BA  0E34               	movlw	low _atCommand
  5030  0005BC  0100               	movlb	0	; () banked
  5031  0005BE  6F76               	movwf	cmdSetTX@cmd& (0+255),b
  5032  0005C0  0E02               	movlw	high _atCommand
  5033  0005C2  6F77               	movwf	(cmdSetTX@cmd+1)& (0+255),b
  5034  0005C4  EC0E  F02C         	call	_cmdSetTX	;wreg free
  5035                           
  5036                           ;../app/app_src/application.c: 987:          }
  5037  0005C8  0012               	return	
  5038  0005CA                     l16633:
  5039                           
  5040                           ;../app/app_src/application.c: 996:             printf("NOT OK:%u\r\n", (uint16_t)UNDEFC
      +                          MD);
  5041  0005CA  0ECC               	movlw	low STR_4
  5042  0005CC  6E55               	movwf	printf@fmt^0,c
  5043  0005CE  0EFE               	movlw	high STR_4
  5044  0005D0  6E56               	movwf	(printf@fmt+1)^0,c
  5045  0005D2  0E00               	movlw	0
  5046  0005D4  6E58               	movwf	(?_printf+3)^0,c
  5047  0005D6  0E09               	movlw	9
  5048  0005D8  6E57               	movwf	(?_printf+2)^0,c
  5049  0005DA  EC3B  F044         	call	_printf	;wreg free
  5050                           
  5051                           ;../app/app_src/application.c: 997:             break;
  5052  0005DE  0012               	return	
  5053  0005E0                     l16637:
  5054                           
  5055                           ; BSR set to: 0
  5056  0005E0  EE20 F001          	lfsr	2,1
  5057  0005E4  51A4               	movf	executeATCommand@cmd& (0+255),w,b
  5058  0005E6  26D9               	addwf	fsr2l,f,c
  5059  0005E8  51A5               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  5060  0005EA  22DA               	addwfc	fsr2h,f,c
  5061  0005EC  50DF               	movf	indf2,w,c
  5062  0005EE  6FA6               	movwf	??_executeATCommand& (0+255),b
  5063  0005F0  6BA7               	clrf	(??_executeATCommand+1)& (0+255),b
  5064                           
  5065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5066                           ; Switch size 1, requested type "simple"
  5067                           ; Number of cases is 1, Range of values is 0 to 0
  5068                           ; switch strategies available:
  5069                           ; Name         Instructions Cycles
  5070                           ; simple_byte            4     3 (average)
  5071                           ;	Chosen strategy is simple_byte
  5072  0005F2  51A7               	movf	(??_executeATCommand+1)& (0+255),w,b
  5073  0005F4  0A00               	xorlw	0	; case 0
  5074  0005F6  A4D8               	btfss	status,2,c
  5075  0005F8  D7E8               	goto	l16633
  5076                           
  5077                           ; BSR set to: 0
  5078                           ; Switch size 1, requested type "simple"
  5079                           ; Number of cases is 11, Range of values is 65 to 84
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; simple_byte           34    18 (average)
  5083                           ;	Chosen strategy is simple_byte
  5084  0005FA  51A6               	movf	??_executeATCommand& (0+255),w,b
  5085  0005FC  0A41               	xorlw	65	; case 65
  5086  0005FE  B4D8               	btfsc	status,2,c
  5087  000600  D610               	goto	l16533
  5088  000602  0A03               	xorlw	3	; case 66
  5089  000604  B4D8               	btfsc	status,2,c
  5090  000606  D5D0               	goto	l16521
  5091  000608  0A01               	xorlw	1	; case 67
  5092  00060A  B4D8               	btfsc	status,2,c
  5093  00060C  D647               	goto	l16545
  5094  00060E  0A0B               	xorlw	11	; case 72
  5095  000610  B4D8               	btfsc	status,2,c
  5096  000612  D68D               	goto	l16561
  5097  000614  0A01               	xorlw	1	; case 73
  5098  000616  B4D8               	btfsc	status,2,c
  5099  000618  D6C6               	goto	l16573
  5100  00061A  0A04               	xorlw	4	; case 77
  5101  00061C  B4D8               	btfsc	status,2,c
  5102  00061E  D6D6               	goto	l16577
  5103  000620  0A03               	xorlw	3	; case 78
  5104  000622  B4D8               	btfsc	status,2,c
  5105  000624  D6F5               	goto	l16585
  5106  000626  0A1E               	xorlw	30	; case 80
  5107  000628  B4D8               	btfsc	status,2,c
  5108  00062A  D719               	goto	l16593
  5109  00062C  0A02               	xorlw	2	; case 82
  5110  00062E  B4D8               	btfsc	status,2,c
  5111  000630  D72B               	goto	l16597
  5112  000632  0A01               	xorlw	1	; case 83
  5113  000634  B4D8               	btfsc	status,2,c
  5114  000636  D53E               	goto	l16497
  5115  000638  0A07               	xorlw	7	; case 84
  5116  00063A  B4D8               	btfsc	status,2,c
  5117  00063C  D783               	goto	l16617
  5118  00063E  D7C5               	goto	l16633
  5119  000640                     __end_of_executeATCommand:
  5120                           	opt callstack 0
  5121                           
  5122 ;; *************** function _set_hop_table_ttl *****************
  5123 ;; Defined at:
  5124 ;;		line 809 in file "../app/app_src/application.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5127 ;;		 -> atCommand(80), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 3F/0
  5136 ;;		On exit  : 3F/1
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:        2 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:   16
  5146 ;; This function calls:
  5147 ;;		_printf
  5148 ;; This function is called by:
  5149 ;;		_executeATCommand
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text8
  5154  008C40                     __ptext8:
  5155                           	opt callstack 0
  5156  008C40                     _set_hop_table_ttl:
  5157                           	opt callstack 12
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;../app/app_src/application.c: 822:     printf("OK\r\n");
  5161                           
  5162                           ;incstack = 0
  5163  008C40  0ED7               	movlw	low STR_13
  5164  008C42  6E55               	movwf	printf@fmt^0,c
  5165  008C44  0EFF               	movlw	high STR_13
  5166  008C46  6E56               	movwf	(printf@fmt+1)^0,c
  5167  008C48  EC3B  F044         	call	_printf	;wreg free
  5168                           
  5169                           ; BSR set to: 1
  5170  008C4C  0012               	return		;funcret
  5171  008C4E                     __end_of_set_hop_table_ttl:
  5172                           	opt callstack 0
  5173                           
  5174 ;; *************** function _print_hop_table *****************
  5175 ;; Defined at:
  5176 ;;		line 793 in file "../app/app_src/application.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5179 ;;		 -> atCommand(80), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 3F/0
  5188 ;;		On exit  : 3F/1
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:   16
  5198 ;; This function calls:
  5199 ;;		_printf
  5200 ;; This function is called by:
  5201 ;;		_executeATCommand
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text9
  5206  008C4E                     __ptext9:
  5207                           	opt callstack 0
  5208  008C4E                     _print_hop_table:
  5209                           	opt callstack 12
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;../app/app_src/application.c: 794:     printf("Hop table\r\n");
  5213                           
  5214                           ; BSR set to: 1
  5215                           ;incstack = 0
  5216  008C4E  0EB4               	movlw	low STR_60
  5217  008C50  6E55               	movwf	printf@fmt^0,c
  5218  008C52  0EFE               	movlw	high STR_60
  5219  008C54  6E56               	movwf	(printf@fmt+1)^0,c
  5220  008C56  EC3B  F044         	call	_printf	;wreg free
  5221                           
  5222                           ; BSR set to: 1
  5223  008C5A  0012               	return		;funcret
  5224  008C5C                     __end_of_print_hop_table:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function _cmdSetTX *****************
  5228 ;; Defined at:
  5229 ;;		line 616 in file "../app/app_src/application.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5232 ;;		 -> atCommand(80), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  CHstr           3   29[BANK0 ] unsigned char [3]
  5235 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  5236 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5237 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  5238 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5239 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5240 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5241 ;;  temp            1   28[BANK0 ] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 3F/0
  5248 ;;		On exit  : 3F/1
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;Total ram usage:       10 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:   16
  5258 ;; This function calls:
  5259 ;;		_DATAEE_WriteByte_Platform
  5260 ;;		_initRadio
  5261 ;;		_memcpy
  5262 ;;		_memset
  5263 ;;		_printf
  5264 ;;		_strstr
  5265 ;;		_strtoul
  5266 ;; This function is called by:
  5267 ;;		_executeATCommand
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text10
  5272  00581C                     __ptext10:
  5273                           	opt callstack 0
  5274  00581C                     _cmdSetTX:
  5275                           	opt callstack 12
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;../app/app_src/application.c: 617:  char *p1,*p2;;../app/app_src/application.c: 618:  c
      +                          har CHstr[3];;../app/app_src/application.c: 619:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 620:  p1 = strstr(atCommand,"=") + 1;
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;incstack = 0
  5282  00581C  0E34               	movlw	low _atCommand
  5283  00581E  6E0D               	movwf	strstr@h^0,c
  5284  005820  0E02               	movlw	high _atCommand
  5285  005822  6E0E               	movwf	(strstr@h+1)^0,c
  5286  005824  0EDF               	movlw	low (STR_18+3)
  5287  005826  6E0F               	movwf	strstr@n^0,c
  5288  005828  0EFF               	movlw	high (STR_18+3)
  5289  00582A  6E10               	movwf	(strstr@n+1)^0,c
  5290  00582C  ECCB  F02D         	call	_strstr	;wreg free
  5291  005830  0E01               	movlw	1
  5292  005832  240D               	addwf	?_strstr^0,w,c
  5293  005834  0100               	movlb	0	; () banked
  5294  005836  6F7A               	movwf	cmdSetTX@p1& (0+255),b
  5295  005838  0E00               	movlw	0
  5296  00583A  200E               	addwfc	(?_strstr+1)^0,w,c
  5297  00583C  6F7B               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;../app/app_src/application.c: 621:     if(!p1){
  5301  00583E  517A               	movf	cmdSetTX@p1& (0+255),w,b
  5302  005840  117B               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5303  005842  A4D8               	btfss	status,2,c
  5304  005844  D00A               	goto	l16137
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;../app/app_src/application.c: 622:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5308  005846  0ECC               	movlw	low STR_4
  5309  005848  6E55               	movwf	printf@fmt^0,c
  5310  00584A  0EFE               	movlw	high STR_4
  5311  00584C  6E56               	movwf	(printf@fmt+1)^0,c
  5312  00584E  0E00               	movlw	0
  5313  005850  6E58               	movwf	(?_printf+3)^0,c
  5314  005852  0E0B               	movlw	11
  5315  005854  6E57               	movwf	(?_printf+2)^0,c
  5316  005856  EC3B  F044         	call	_printf	;wreg free
  5317  00585A                     l16137:
  5318                           
  5319                           ;../app/app_src/application.c: 624:     memset(CHstr, 0 , sizeof(CHstr));
  5320  00585A  0E7D               	movlw	low cmdSetTX@CHstr
  5321  00585C  6E02               	movwf	memset@dest^0,c
  5322  00585E  6A03               	clrf	(memset@dest+1)^0,c
  5323  005860  0E00               	movlw	0
  5324  005862  6E05               	movwf	(memset@c+1)^0,c
  5325  005864  0E00               	movlw	0
  5326  005866  6E04               	movwf	memset@c^0,c
  5327  005868  0E00               	movlw	0
  5328  00586A  6E07               	movwf	(memset@n+1)^0,c
  5329  00586C  0E03               	movlw	3
  5330  00586E  6E06               	movwf	memset@n^0,c
  5331  005870  EC2F  F022         	call	_memset	;wreg free
  5332                           
  5333                           ;../app/app_src/application.c: 625:  memcpy(CHstr,p1,2);
  5334  005874  0E7D               	movlw	low cmdSetTX@CHstr
  5335  005876  6E08               	movwf	memcpy@d1^0,c
  5336  005878  6A09               	clrf	(memcpy@d1+1)^0,c
  5337  00587A  0060  F1E8  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5338  005880  0060  F1EC  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5339  005886  0E00               	movlw	0
  5340  005888  6E0D               	movwf	(memcpy@n+1)^0,c
  5341  00588A  0E02               	movlw	2
  5342  00588C  6E0C               	movwf	memcpy@n^0,c
  5343  00588E  ECE7  F039         	call	_memcpy	;wreg free
  5344                           
  5345                           ;../app/app_src/application.c: 626:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5346  005892  0E7D               	movlw	low cmdSetTX@CHstr
  5347  005894  6E34               	movwf	strtoul@s^0,c
  5348  005896  6A35               	clrf	(strtoul@s+1)^0,c
  5349  005898  0E78               	movlw	low cmdSetTX@p2
  5350  00589A  6E36               	movwf	strtoul@endptr^0,c
  5351  00589C  6A37               	clrf	(strtoul@endptr+1)^0,c
  5352  00589E  0E00               	movlw	0
  5353  0058A0  6E39               	movwf	(strtoul@base+1)^0,c
  5354  0058A2  0E0A               	movlw	10
  5355  0058A4  6E38               	movwf	strtoul@base^0,c
  5356  0058A6  EC22  F03F         	call	_strtoul	;wreg free
  5357  0058AA  5034               	movf	?_strtoul^0,w,c
  5358  0058AC  0100               	movlb	0	; () banked
  5359  0058AE  6F7C               	movwf	cmdSetTX@temp& (0+255),b
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;../app/app_src/application.c: 627:  if((temp > 5) || (temp < 2)){
  5363  0058B0  0E06               	movlw	6
  5364  0058B2  617C               	cpfslt	cmdSetTX@temp& (0+255),b
  5365  0058B4  D003               	goto	u16290
  5366                           
  5367                           ; BSR set to: 0
  5368  0058B6  0E02               	movlw	2
  5369  0058B8  617C               	cpfslt	cmdSetTX@temp& (0+255),b
  5370  0058BA  D00B               	goto	l338
  5371  0058BC                     u16290:
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;../app/app_src/application.c: 628:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5375  0058BC  0ECC               	movlw	low STR_4
  5376  0058BE  6E55               	movwf	printf@fmt^0,c
  5377  0058C0  0EFE               	movlw	high STR_4
  5378  0058C2  6E56               	movwf	(printf@fmt+1)^0,c
  5379  0058C4  0E00               	movlw	0
  5380  0058C6  6E58               	movwf	(?_printf+3)^0,c
  5381  0058C8  0E0B               	movlw	11
  5382  0058CA  6E57               	movwf	(?_printf+2)^0,c
  5383  0058CC  EC3B  F044         	call	_printf	;wreg free
  5384                           
  5385                           ;../app/app_src/application.c: 629:  }
  5386  0058D0  0012               	return	
  5387  0058D2                     l338:
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;../app/app_src/application.c: 631:   TXPower = temp;
  5391  0058D2  0060  F1F0  F0EA   	movff	cmdSetTX@temp,_TXPower
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;../app/app_src/application.c: 632:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5395  0058D8  0E00               	movlw	0
  5396  0058DA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5397  0058DC  0E1D               	movlw	29
  5398  0058DE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5399  0058E0  0060  F3A8  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5400  0058E6  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5401                           
  5402                           ;../app/app_src/application.c: 633:   initRadio();
  5403  0058EA  ECD4  F020         	call	_initRadio	;wreg free
  5404                           
  5405                           ; BSR set to: 1
  5406                           ;../app/app_src/application.c: 634:   printf("OK\r\n");
  5407  0058EE  0ED7               	movlw	low STR_13
  5408  0058F0  6E55               	movwf	printf@fmt^0,c
  5409  0058F2  0EFF               	movlw	high STR_13
  5410  0058F4  6E56               	movwf	(printf@fmt+1)^0,c
  5411  0058F6  EC3B  F044         	call	_printf	;wreg free
  5412                           
  5413                           ; BSR set to: 1
  5414  0058FA  0012               	return		;funcret
  5415  0058FC                     __end_of_cmdSetTX:
  5416                           	opt callstack 0
  5417                           
  5418 ;; *************** function _cmdSetTTL *****************
  5419 ;; Defined at:
  5420 ;;		line 514 in file "../app/app_src/application.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5423 ;;		 -> atCommand(80), 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		None
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        2 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    7
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_executeATCommand
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text11
  5450  008D66                     __ptext11:
  5451                           	opt callstack 0
  5452  008D66                     _cmdSetTTL:
  5453                           	opt callstack 21
  5454                           
  5455                           ;../app/app_src/application.c: 521:  return;
  5456                           
  5457                           ; BSR set to: 1
  5458                           ;incstack = 0
  5459  008D66  0012               	return		;funcret
  5460  008D68                     __end_of_cmdSetTTL:
  5461                           	opt callstack 0
  5462                           
  5463 ;; *************** function _cmdSetSink *****************
  5464 ;; Defined at:
  5465 ;;		line 403 in file "../app/app_src/application.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 3F/1
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:   16
  5486 ;; This function calls:
  5487 ;;		_printf
  5488 ;; This function is called by:
  5489 ;;		_executeATCommand
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text12
  5494  008C5C                     __ptext12:
  5495                           	opt callstack 0
  5496  008C5C                     _cmdSetSink:
  5497                           	opt callstack 12
  5498                           
  5499                           ;../app/app_src/application.c: 417:  printf("OK\r\n");
  5500                           
  5501                           ;incstack = 0
  5502  008C5C  0ED7               	movlw	low STR_13
  5503  008C5E  6E55               	movwf	printf@fmt^0,c
  5504  008C60  0EFF               	movlw	high STR_13
  5505  008C62  6E56               	movwf	(printf@fmt+1)^0,c
  5506  008C64  EC3B  F044         	call	_printf	;wreg free
  5507                           
  5508                           ; BSR set to: 1
  5509  008C68  0012               	return		;funcret
  5510  008C6A                     __end_of_cmdSetSink:
  5511                           	opt callstack 0
  5512                           
  5513 ;; *************** function _cmdSetSF *****************
  5514 ;; Defined at:
  5515 ;;		line 757 in file "../app/app_src/application.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5518 ;;		 -> atCommand(80), 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  5521 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  5522 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5523 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5524 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5525 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  5526 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5527 ;;  temp            1   31[BANK0 ] char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 3F/0
  5534 ;;		On exit  : 3F/1
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:       10 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:   16
  5544 ;; This function calls:
  5545 ;;		_DATAEE_WriteByte_Platform
  5546 ;;		_initRadio
  5547 ;;		_memcpy
  5548 ;;		_printf
  5549 ;;		_strstr
  5550 ;;		_strtol
  5551 ;; This function is called by:
  5552 ;;		_executeATCommand
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text13
  5557  00673E                     __ptext13:
  5558                           	opt callstack 0
  5559  00673E                     _cmdSetSF:
  5560                           	opt callstack 12
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;../app/app_src/application.c: 758:  char *p1,*p2;;../app/app_src/application.c: 759:  c
      +                          har CHstr[3];;../app/app_src/application.c: 760:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 761:  p1 = strstr(atCommand,"=") + 1;
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;incstack = 0
  5567  00673E  0060  F1D8  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5568  006744  0060  F1DC  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5569  00674A  0EDF               	movlw	low (STR_18+3)
  5570  00674C  6E0F               	movwf	strstr@n^0,c
  5571  00674E  0EFF               	movlw	high (STR_18+3)
  5572  006750  6E10               	movwf	(strstr@n+1)^0,c
  5573  006752  ECCB  F02D         	call	_strstr	;wreg free
  5574  006756  0E01               	movlw	1
  5575  006758  240D               	addwf	?_strstr^0,w,c
  5576  00675A  0100               	movlb	0	; () banked
  5577  00675C  6F78               	movwf	cmdSetSF@p1& (0+255),b
  5578  00675E  0E00               	movlw	0
  5579  006760  200E               	addwfc	(?_strstr+1)^0,w,c
  5580  006762  6F79               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;../app/app_src/application.c: 762:  memcpy(CHstr,p1,2);
  5584  006764  0E7A               	movlw	low cmdSetSF@CHstr
  5585  006766  6E08               	movwf	memcpy@d1^0,c
  5586  006768  6A09               	clrf	(memcpy@d1+1)^0,c
  5587  00676A  0060  F1E0  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5588  006770  0060  F1E4  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5589  006776  0E00               	movlw	0
  5590  006778  6E0D               	movwf	(memcpy@n+1)^0,c
  5591  00677A  0E02               	movlw	2
  5592  00677C  6E0C               	movwf	memcpy@n^0,c
  5593  00677E  ECE7  F039         	call	_memcpy	;wreg free
  5594                           
  5595                           ;../app/app_src/application.c: 763:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5596  006782  0E7A               	movlw	low cmdSetSF@CHstr
  5597  006784  6E34               	movwf	strtol@s^0,c
  5598  006786  0E7D               	movlw	low cmdSetSF@p2
  5599  006788  6E35               	movwf	strtol@endptr^0,c
  5600  00678A  0E00               	movlw	0
  5601  00678C  6E37               	movwf	(strtol@base+1)^0,c
  5602  00678E  0E10               	movlw	16
  5603  006790  6E36               	movwf	strtol@base^0,c
  5604  006792  EC71  F040         	call	_strtol	;wreg free
  5605  006796  5034               	movf	?_strtol^0,w,c
  5606  006798  0100               	movlb	0	; () banked
  5607  00679A  6F7F               	movwf	cmdSetSF@temp& (0+255),b
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;../app/app_src/application.c: 764:  if((temp > 12) || (temp < 7)){
  5611  00679C  517F               	movf	cmdSetSF@temp& (0+255),w,b
  5612  00679E  0A80               	xorlw	128
  5613  0067A0  0F73               	addlw	-141
  5614  0067A2  B0D8               	btfsc	status,0,c
  5615  0067A4  D005               	goto	u16360
  5616                           
  5617                           ; BSR set to: 0
  5618  0067A6  517F               	movf	cmdSetSF@temp& (0+255),w,b
  5619  0067A8  0A80               	xorlw	128
  5620  0067AA  0F79               	addlw	-135
  5621  0067AC  B0D8               	btfsc	status,0,c
  5622  0067AE  D009               	goto	l379
  5623  0067B0                     u16360:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;../app/app_src/application.c: 765:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5627  0067B0  0ECC               	movlw	low STR_4
  5628  0067B2  6E55               	movwf	printf@fmt^0,c
  5629  0067B4  0EFE               	movlw	high STR_4
  5630  0067B6  6E56               	movwf	(printf@fmt+1)^0,c
  5631  0067B8  0E0D               	movlw	13
  5632  0067BA  6E57               	movwf	(?_printf+2)^0,c
  5633  0067BC  EC3B  F044         	call	_printf	;wreg free
  5634                           
  5635                           ;../app/app_src/application.c: 766:  }
  5636  0067C0  0012               	return	
  5637  0067C2                     l379:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;../app/app_src/application.c: 768:   current_sf = temp;
  5641  0067C2  0060  F1FC  F0EC   	movff	cmdSetSF@temp,_current_sf
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;../app/app_src/application.c: 769:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5645  0067C8  0E00               	movlw	0
  5646  0067CA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5647  0067CC  0E21               	movlw	33
  5648  0067CE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5649  0067D0  0060  F1FC  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5650  0067D6  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5651                           
  5652                           ;../app/app_src/application.c: 770:   initRadio();
  5653  0067DA  ECD4  F020         	call	_initRadio	;wreg free
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;../app/app_src/application.c: 771:   printf("OK\r\n");
  5657  0067DE  0ED7               	movlw	low STR_13
  5658  0067E0  6E55               	movwf	printf@fmt^0,c
  5659  0067E2  0EFF               	movlw	high STR_13
  5660  0067E4  6E56               	movwf	(printf@fmt+1)^0,c
  5661  0067E6  EC3B  F044         	call	_printf	;wreg free
  5662                           
  5663                           ; BSR set to: 1
  5664  0067EA  0012               	return		;funcret
  5665  0067EC                     __end_of_cmdSetSF:
  5666                           	opt callstack 0
  5667                           
  5668 ;; *************** function _cmdSetRFCH *****************
  5669 ;; Defined at:
  5670 ;;		line 580 in file "../app/app_src/application.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5673 ;;		 -> atCommand(80), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  5676 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  5677 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5678 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5679 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5680 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  5681 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5682 ;;  temp            1   31[BANK0 ] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 3F/0
  5689 ;;		On exit  : 3F/1
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;Total ram usage:       10 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:   16
  5699 ;; This function calls:
  5700 ;;		_DATAEE_WriteByte_Platform
  5701 ;;		_initRadio
  5702 ;;		_memcpy
  5703 ;;		_printf
  5704 ;;		_strstr
  5705 ;;		_strtoul
  5706 ;; This function is called by:
  5707 ;;		_executeATCommand
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text14
  5712  0069EC                     __ptext14:
  5713                           	opt callstack 0
  5714  0069EC                     _cmdSetRFCH:
  5715                           	opt callstack 12
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;../app/app_src/application.c: 581:  char *p1,*p2;;../app/app_src/application.c: 582:  c
      +                          har CHstr[3];;../app/app_src/application.c: 583:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 584:  p1 = strstr(atCommand,"=") + 1;
  5719                           
  5720                           ; BSR set to: 1
  5721                           ;incstack = 0
  5722  0069EC  0E34               	movlw	low _atCommand
  5723  0069EE  6E0D               	movwf	strstr@h^0,c
  5724  0069F0  0E02               	movlw	high _atCommand
  5725  0069F2  6E0E               	movwf	(strstr@h+1)^0,c
  5726  0069F4  0EDF               	movlw	low (STR_18+3)
  5727  0069F6  6E0F               	movwf	strstr@n^0,c
  5728  0069F8  0EFF               	movlw	high (STR_18+3)
  5729  0069FA  6E10               	movwf	(strstr@n+1)^0,c
  5730  0069FC  ECCB  F02D         	call	_strstr	;wreg free
  5731  006A00  0E01               	movlw	1
  5732  006A02  240D               	addwf	?_strstr^0,w,c
  5733  006A04  0100               	movlb	0	; () banked
  5734  006A06  6F78               	movwf	cmdSetRFCH@p1& (0+255),b
  5735  006A08  0E00               	movlw	0
  5736  006A0A  200E               	addwfc	(?_strstr+1)^0,w,c
  5737  006A0C  6F79               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;../app/app_src/application.c: 585:  memcpy(CHstr,p1,2);
  5741  006A0E  0E7A               	movlw	low cmdSetRFCH@CHstr
  5742  006A10  6E08               	movwf	memcpy@d1^0,c
  5743  006A12  6A09               	clrf	(memcpy@d1+1)^0,c
  5744  006A14  0060  F1E0  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5745  006A1A  0060  F1E4  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5746  006A20  0E00               	movlw	0
  5747  006A22  6E0D               	movwf	(memcpy@n+1)^0,c
  5748  006A24  0E02               	movlw	2
  5749  006A26  6E0C               	movwf	memcpy@n^0,c
  5750  006A28  ECE7  F039         	call	_memcpy	;wreg free
  5751                           
  5752                           ;../app/app_src/application.c: 586:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5753  006A2C  0E7A               	movlw	low cmdSetRFCH@CHstr
  5754  006A2E  6E34               	movwf	strtoul@s^0,c
  5755  006A30  6A35               	clrf	(strtoul@s+1)^0,c
  5756  006A32  0E7D               	movlw	low cmdSetRFCH@p2
  5757  006A34  6E36               	movwf	strtoul@endptr^0,c
  5758  006A36  6A37               	clrf	(strtoul@endptr+1)^0,c
  5759  006A38  0E00               	movlw	0
  5760  006A3A  6E39               	movwf	(strtoul@base+1)^0,c
  5761  006A3C  0E10               	movlw	16
  5762  006A3E  6E38               	movwf	strtoul@base^0,c
  5763  006A40  EC22  F03F         	call	_strtoul	;wreg free
  5764  006A44  0434               	decf	?_strtoul^0,w,c
  5765  006A46  0100               	movlb	0	; () banked
  5766  006A48  6F7F               	movwf	cmdSetRFCH@temp& (0+255),b
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;../app/app_src/application.c: 587:  if(temp > sizeof(fhssList)){
  5770  006A4A  0EFC               	movlw	252
  5771  006A4C  657F               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5772  006A4E  D009               	goto	l329
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;../app/app_src/application.c: 588:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5776  006A50  0ECC               	movlw	low STR_4
  5777  006A52  6E55               	movwf	printf@fmt^0,c
  5778  006A54  0EFE               	movlw	high STR_4
  5779  006A56  6E56               	movwf	(printf@fmt+1)^0,c
  5780  006A58  0E0A               	movlw	10
  5781  006A5A  6E57               	movwf	(?_printf+2)^0,c
  5782  006A5C  EC3B  F044         	call	_printf	;wreg free
  5783                           
  5784                           ;../app/app_src/application.c: 589:  }
  5785  006A60  0012               	return	
  5786  006A62                     l329:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;../app/app_src/application.c: 591:   channel = temp;
  5790  006A62  0060  F1FC  F0EB   	movff	cmdSetRFCH@temp,_channel
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;../app/app_src/application.c: 592:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5794  006A68  0E00               	movlw	0
  5795  006A6A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5796  006A6C  0E1C               	movlw	28
  5797  006A6E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5798  006A70  0060  F3AC  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5799  006A76  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5800                           
  5801                           ;../app/app_src/application.c: 593:   initRadio();
  5802  006A7A  ECD4  F020         	call	_initRadio	;wreg free
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;../app/app_src/application.c: 594:         printf("OK\r\n");
  5806  006A7E  0ED7               	movlw	low STR_13
  5807  006A80  6E55               	movwf	printf@fmt^0,c
  5808  006A82  0EFF               	movlw	high STR_13
  5809  006A84  6E56               	movwf	(printf@fmt+1)^0,c
  5810  006A86  EC3B  F044         	call	_printf	;wreg free
  5811                           
  5812                           ; BSR set to: 1
  5813  006A8A  0012               	return		;funcret
  5814  006A8C                     __end_of_cmdSetRFCH:
  5815                           	opt callstack 0
  5816                           
  5817 ;; *************** function _cmdSetParity *****************
  5818 ;; Defined at:
  5819 ;;		line 692 in file "../app/app_src/application.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5822 ;;		 -> atCommand(80), 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 3F/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:   16
  5841 ;; This function calls:
  5842 ;;		_printf
  5843 ;;		_set_parity
  5844 ;;		_strstr
  5845 ;; This function is called by:
  5846 ;;		_executeATCommand
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text15
  5851  006EA0                     __ptext15:
  5852                           	opt callstack 0
  5853  006EA0                     _cmdSetParity:
  5854                           	opt callstack 12
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;../app/app_src/application.c: 693:     if(strstr(atCommand,"=ODD"))
  5858                           
  5859                           ; BSR set to: 1
  5860                           ;incstack = 0
  5861  006EA0  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5862  006EA6  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5863  006EAC  0EEB               	movlw	low STR_46
  5864  006EAE  6E0F               	movwf	strstr@n^0,c
  5865  006EB0  0EFF               	movlw	high STR_46
  5866  006EB2  6E10               	movwf	(strstr@n+1)^0,c
  5867  006EB4  ECCB  F02D         	call	_strstr	;wreg free
  5868  006EB8  500D               	movf	?_strstr^0,w,c
  5869  006EBA  100E               	iorwf	(?_strstr+1)^0,w,c
  5870  006EBC  B4D8               	btfsc	status,2,c
  5871  006EBE  D004               	goto	l16185
  5872                           
  5873                           ;../app/app_src/application.c: 694:     {;../app/app_src/application.c: 695:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  5874  006EC0  0E02               	movlw	2
  5875  006EC2  EC25  F03C         	call	_set_parity
  5876                           
  5877                           ;../app/app_src/application.c: 696:     }
  5878  006EC6  0012               	return	
  5879  006EC8                     l16185:
  5880  006EC8  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5881  006ECE  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5882  006ED4  0EC0               	movlw	low STR_48
  5883  006ED6  6E0F               	movwf	strstr@n^0,c
  5884  006ED8  0EFF               	movlw	high STR_48
  5885  006EDA  6E10               	movwf	(strstr@n+1)^0,c
  5886  006EDC  ECCB  F02D         	call	_strstr	;wreg free
  5887  006EE0  500D               	movf	?_strstr^0,w,c
  5888  006EE2  100E               	iorwf	(?_strstr+1)^0,w,c
  5889  006EE4  B4D8               	btfsc	status,2,c
  5890  006EE6  D004               	goto	l16189
  5891                           
  5892                           ;../app/app_src/application.c: 698:     {;../app/app_src/application.c: 699:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  5893  006EE8  0E00               	movlw	0
  5894  006EEA  EC25  F03C         	call	_set_parity
  5895                           
  5896                           ;../app/app_src/application.c: 700:     }
  5897  006EEE  0012               	return	
  5898  006EF0                     l16189:
  5899  006EF0  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5900  006EF6  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5901  006EFC  0EC6               	movlw	low STR_50
  5902  006EFE  6E0F               	movwf	strstr@n^0,c
  5903  006F00  0EFF               	movlw	high STR_50
  5904  006F02  6E10               	movwf	(strstr@n+1)^0,c
  5905  006F04  ECCB  F02D         	call	_strstr	;wreg free
  5906  006F08  500D               	movf	?_strstr^0,w,c
  5907  006F0A  100E               	iorwf	(?_strstr+1)^0,w,c
  5908  006F0C  B4D8               	btfsc	status,2,c
  5909  006F0E  D004               	goto	l16193
  5910                           
  5911                           ;../app/app_src/application.c: 702:     {;../app/app_src/application.c: 703:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  5912  006F10  0E03               	movlw	3
  5913  006F12  EC25  F03C         	call	_set_parity
  5914                           
  5915                           ;../app/app_src/application.c: 704:     }
  5916  006F16  0012               	return	
  5917  006F18                     l16193:
  5918                           
  5919                           ;../app/app_src/application.c: 706:     {;../app/app_src/application.c: 707:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  5920  006F18  0ECC               	movlw	low STR_4
  5921  006F1A  6E55               	movwf	printf@fmt^0,c
  5922  006F1C  0EFE               	movlw	high STR_4
  5923  006F1E  6E56               	movwf	(printf@fmt+1)^0,c
  5924  006F20  0E0D               	movlw	13
  5925  006F22  6E57               	movwf	(?_printf+2)^0,c
  5926  006F24  EC3B  F044         	call	_printf	;wreg free
  5927  006F28  0012               	return		;funcret
  5928  006F2A                     __end_of_cmdSetParity:
  5929                           	opt callstack 0
  5930                           
  5931 ;; *************** function _cmdSetNaddr *****************
  5932 ;; Defined at:
  5933 ;;		line 343 in file "../app/app_src/application.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5936 ;;		 -> atCommand(80), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  5939 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5940 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  5941 ;;  tempaddr        1   28[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 3F/0
  5948 ;;		On exit  : 3F/1
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;Total ram usage:        7 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:   16
  5958 ;; This function calls:
  5959 ;;		_DATAEE_WriteByte_Platform
  5960 ;;		_initRadio
  5961 ;;		_printf
  5962 ;;		_setSyncWord
  5963 ;;		_strstr
  5964 ;;		_strtoul
  5965 ;; This function is called by:
  5966 ;;		_executeATCommand
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text16
  5971  007352                     __ptext16:
  5972                           	opt callstack 0
  5973  007352                     _cmdSetNaddr:
  5974                           	opt callstack 12
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;../app/app_src/application.c: 344:  uint8_t tempaddr;;../app/app_src/application.c: 345
      +                          :  char *p1,*p2;;../app/app_src/application.c: 346:  p1 = strstr(atCommand,"=") + 1;
  5978                           
  5979                           ;incstack = 0
  5980  007352  0E34               	movlw	low _atCommand
  5981  007354  6E0D               	movwf	strstr@h^0,c
  5982  007356  0E02               	movlw	high _atCommand
  5983  007358  6E0E               	movwf	(strstr@h+1)^0,c
  5984  00735A  0EDF               	movlw	low (STR_18+3)
  5985  00735C  6E0F               	movwf	strstr@n^0,c
  5986  00735E  0EFF               	movlw	high (STR_18+3)
  5987  007360  6E10               	movwf	(strstr@n+1)^0,c
  5988  007362  ECCB  F02D         	call	_strstr	;wreg free
  5989  007366  0E01               	movlw	1
  5990  007368  240D               	addwf	?_strstr^0,w,c
  5991  00736A  0100               	movlb	0	; () banked
  5992  00736C  6F7A               	movwf	cmdSetNaddr@p1& (0+255),b
  5993  00736E  0E00               	movlw	0
  5994  007370  200E               	addwfc	(?_strstr+1)^0,w,c
  5995  007372  6F7B               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;../app/app_src/application.c: 348:  tempaddr = strtoul(p1,p2,16);
  5999  007374  0060  F1E8  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6000  00737A  0060  F1EC  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6001  007380  0060  F1E0  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6002  007386  0060  F1E4  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6003  00738C  0E00               	movlw	0
  6004  00738E  6E39               	movwf	(strtoul@base+1)^0,c
  6005  007390  0E10               	movlw	16
  6006  007392  6E38               	movwf	strtoul@base^0,c
  6007  007394  EC22  F03F         	call	_strtoul	;wreg free
  6008  007398  5034               	movf	?_strtoul^0,w,c
  6009  00739A  0100               	movlb	0	; () banked
  6010  00739C  6F7C               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;../app/app_src/application.c: 349:  currentNetID = tempaddr;
  6014  00739E  0060  F1F0  F0FA   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;../app/app_src/application.c: 350:  setSyncWord(currentNetID);
  6018  0073A4  51FA               	movf	_currentNetID& (0+255),w,b
  6019  0073A6  EC01  F046         	call	_setSyncWord
  6020                           
  6021                           ;../app/app_src/application.c: 352:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  6022  0073AA  0E00               	movlw	0
  6023  0073AC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6024  0073AE  0E19               	movlw	25
  6025  0073B0  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6026  0073B2  0060  F3E8  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6027  0073B8  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6028                           
  6029                           ;../app/app_src/application.c: 353:     initRadio();
  6030  0073BC  ECD4  F020         	call	_initRadio	;wreg free
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;../app/app_src/application.c: 354:  printf("OK\r\n");
  6034  0073C0  0ED7               	movlw	low STR_13
  6035  0073C2  6E55               	movwf	printf@fmt^0,c
  6036  0073C4  0EFF               	movlw	high STR_13
  6037  0073C6  6E56               	movwf	(printf@fmt+1)^0,c
  6038  0073C8  EC3B  F044         	call	_printf	;wreg free
  6039                           
  6040                           ; BSR set to: 1
  6041  0073CC  0012               	return		;funcret
  6042  0073CE                     __end_of_cmdSetNaddr:
  6043                           	opt callstack 0
  6044                           
  6045 ;; *************** function _setSyncWord *****************
  6046 ;; Defined at:
  6047 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  sw              1    wreg     unsigned char 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  sw              1   16[COMRAM] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 3F/0
  6058 ;;		On exit  : 3F/3D
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;Total ram usage:        1 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:   11
  6068 ;; This function calls:
  6069 ;;		_SX1276Write
  6070 ;; This function is called by:
  6071 ;;		_cmdSetNaddr
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text17
  6076  008C02                     __ptext17:
  6077                           	opt callstack 0
  6078  008C02                     _setSyncWord:
  6079                           	opt callstack 16
  6080                           
  6081                           ; BSR set to: 1
  6082                           ;incstack = 0
  6083                           ;setSyncWord@sw stored from wreg
  6084  008C02  6E11               	movwf	setSyncWord@sw^0,c
  6085                           
  6086                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6087  008C04  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6088  008C0A  0E39               	movlw	57
  6089  008C0C  ECF8  F045         	call	_SX1276Write
  6090                           
  6091                           ; BSR set to: 61
  6092  008C10  0012               	return		;funcret
  6093  008C12                     __end_of_setSyncWord:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _cmdSetCADRSSI *****************
  6097 ;; Defined at:
  6098 ;;		line 656 in file "../app/app_src/application.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  6101 ;;		 -> atCommand(80), 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  6104 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  6105 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6106 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6107 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6108 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  6109 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6110 ;;  temp            1   31[BANK0 ] char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 3F/0
  6117 ;;		On exit  : 3F/1
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;Total ram usage:       10 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:   16
  6127 ;; This function calls:
  6128 ;;		_DATAEE_WriteByte_Platform
  6129 ;;		_initRadio
  6130 ;;		_memcpy
  6131 ;;		_printf
  6132 ;;		_strstr
  6133 ;;		_strtol
  6134 ;; This function is called by:
  6135 ;;		_executeATCommand
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text18
  6140  0067EC                     __ptext18:
  6141                           	opt callstack 0
  6142  0067EC                     _cmdSetCADRSSI:
  6143                           	opt callstack 12
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;../app/app_src/application.c: 657:  char *p1,*p2;;../app/app_src/application.c: 658:  c
      +                          har CHstr[3];;../app/app_src/application.c: 659:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 660:  p1 = strstr(atCommand,"=") + 1;
  6147                           
  6148                           ; BSR set to: 61
  6149                           ;incstack = 0
  6150  0067EC  0060  F1D8  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6151  0067F2  0060  F1DC  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6152  0067F8  0EDF               	movlw	low (STR_18+3)
  6153  0067FA  6E0F               	movwf	strstr@n^0,c
  6154  0067FC  0EFF               	movlw	high (STR_18+3)
  6155  0067FE  6E10               	movwf	(strstr@n+1)^0,c
  6156  006800  ECCB  F02D         	call	_strstr	;wreg free
  6157  006804  0E01               	movlw	1
  6158  006806  240D               	addwf	?_strstr^0,w,c
  6159  006808  0100               	movlb	0	; () banked
  6160  00680A  6F78               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6161  00680C  0E00               	movlw	0
  6162  00680E  200E               	addwfc	(?_strstr+1)^0,w,c
  6163  006810  6F79               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;../app/app_src/application.c: 661:  memcpy(CHstr,p1,3);
  6167  006812  0E7A               	movlw	low cmdSetCADRSSI@CHstr
  6168  006814  6E08               	movwf	memcpy@d1^0,c
  6169  006816  6A09               	clrf	(memcpy@d1+1)^0,c
  6170  006818  0060  F1E0  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6171  00681E  0060  F1E4  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6172  006824  0E00               	movlw	0
  6173  006826  6E0D               	movwf	(memcpy@n+1)^0,c
  6174  006828  0E03               	movlw	3
  6175  00682A  6E0C               	movwf	memcpy@n^0,c
  6176  00682C  ECE7  F039         	call	_memcpy	;wreg free
  6177                           
  6178                           ;../app/app_src/application.c: 662:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6179  006830  0E7A               	movlw	low cmdSetCADRSSI@CHstr
  6180  006832  6E34               	movwf	strtol@s^0,c
  6181  006834  0E7D               	movlw	low cmdSetCADRSSI@p2
  6182  006836  6E35               	movwf	strtol@endptr^0,c
  6183  006838  0E00               	movlw	0
  6184  00683A  6E37               	movwf	(strtol@base+1)^0,c
  6185  00683C  0E0A               	movlw	10
  6186  00683E  6E36               	movwf	strtol@base^0,c
  6187  006840  EC71  F040         	call	_strtol	;wreg free
  6188  006844  5034               	movf	?_strtol^0,w,c
  6189  006846  0100               	movlb	0	; () banked
  6190  006848  6F7F               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;../app/app_src/application.c: 663:  if((temp > 0) || (temp < -120)){
  6194  00684A  517F               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6195  00684C  0A80               	xorlw	128
  6196  00684E  0F7F               	addlw	-129
  6197  006850  B0D8               	btfsc	status,0,c
  6198  006852  D005               	goto	u16310
  6199                           
  6200                           ; BSR set to: 0
  6201  006854  517F               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6202  006856  0A80               	xorlw	128
  6203  006858  0FF8               	addlw	248
  6204  00685A  B0D8               	btfsc	status,0,c
  6205  00685C  D009               	goto	l348
  6206  00685E                     u16310:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;../app/app_src/application.c: 664:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6210  00685E  0ECC               	movlw	low STR_4
  6211  006860  6E55               	movwf	printf@fmt^0,c
  6212  006862  0EFE               	movlw	high STR_4
  6213  006864  6E56               	movwf	(printf@fmt+1)^0,c
  6214  006866  0E0B               	movlw	11
  6215  006868  6E57               	movwf	(?_printf+2)^0,c
  6216  00686A  EC3B  F044         	call	_printf	;wreg free
  6217                           
  6218                           ;../app/app_src/application.c: 665:  }
  6219  00686E  0012               	return	
  6220  006870                     l348:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;../app/app_src/application.c: 667:   RSSITarget = temp;
  6224  006870  0060  F1FC  F0F9   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;../app/app_src/application.c: 668:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6228  006876  0E00               	movlw	0
  6229  006878  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6230  00687A  0E1E               	movlw	30
  6231  00687C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6232  00687E  0060  F3E4  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6233  006884  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6234                           
  6235                           ;../app/app_src/application.c: 669:   initRadio();
  6236  006888  ECD4  F020         	call	_initRadio	;wreg free
  6237                           
  6238                           ; BSR set to: 1
  6239                           ;../app/app_src/application.c: 670:   printf("OK\r\n");
  6240  00688C  0ED7               	movlw	low STR_13
  6241  00688E  6E55               	movwf	printf@fmt^0,c
  6242  006890  0EFF               	movlw	high STR_13
  6243  006892  6E56               	movwf	(printf@fmt+1)^0,c
  6244  006894  EC3B  F044         	call	_printf	;wreg free
  6245                           
  6246                           ; BSR set to: 1
  6247  006898  0012               	return		;funcret
  6248  00689A                     __end_of_cmdSetCADRSSI:
  6249                           	opt callstack 0
  6250                           
  6251 ;; *************** function _strtol *****************
  6252 ;; Defined at:
  6253 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6256 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6257 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6258 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6259 ;;  base            2   53[COMRAM] int 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  4   51[COMRAM] long 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;Total ram usage:        4 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:   10
  6278 ;; This function calls:
  6279 ;;		___strtoxl
  6280 ;; This function is called by:
  6281 ;;		_cmdSetCADRSSI
  6282 ;;		_cmdSetSF
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text19
  6287  0080E2                     __ptext19:
  6288                           	opt callstack 0
  6289  0080E2                     _strtol:
  6290                           	opt callstack 17
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;incstack = 0
  6294  0080E2  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6295  0080E8  6A11               	clrf	(___strtoxl@s+1)^0,c
  6296  0080EA  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6297  0080F0  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6298  0080F2  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6299  0080F8  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6300  0080FE  0E01               	movlw	1
  6301  008100  6E16               	movwf	___strtoxl@is_signed^0,c
  6302  008102  EC98  F005         	call	___strtoxl	;wreg free
  6303  008106  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6304  00810C  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6305  008112  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6306  008118  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6307  00811E  0012               	return		;funcret
  6308  008120                     __end_of_strtol:
  6309                           	opt callstack 0
  6310                           
  6311 ;; *************** function _cmdSetBaud *****************
  6312 ;; Defined at:
  6313 ;;		line 731 in file "../app/app_src/application.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6316 ;;		 -> atCommand(80), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6319 ;;		 -> atCommand(80), NULL(0), 
  6320 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:        5 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:   11
  6337 ;; This function calls:
  6338 ;;		_strtok
  6339 ;;		_strtoul
  6340 ;; This function is called by:
  6341 ;;		_executeATCommand
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text20
  6346  0074AE                     __ptext20:
  6347                           	opt callstack 0
  6348  0074AE                     _cmdSetBaud:
  6349                           	opt callstack 17
  6350                           
  6351                           ;../app/app_src/application.c: 731: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 732: {;../app/app_src/application.c: 733:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 734:     char *ptr;;../app/app_src/application.c: 735:     ptr =
      +                           strtok(atCommand,"=");
  6352                           
  6353                           ;incstack = 0
  6354  0074AE  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6355  0074B4  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6356  0074BA  0EDF               	movlw	low (STR_18+3)
  6357  0074BC  6E11               	movwf	strtok@sep^0,c
  6358  0074BE  0EFF               	movlw	high (STR_18+3)
  6359  0074C0  6E12               	movwf	(strtok@sep+1)^0,c
  6360  0074C2  EC5D  F02D         	call	_strtok	;wreg free
  6361  0074C6  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6362  0074CC  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6363                           
  6364                           ;../app/app_src/application.c: 736:     ptr = strtok(((void*)0),"\r");
  6365  0074D2  0E00               	movlw	0
  6366  0074D4  6E0F               	movwf	strtok@s^0,c
  6367  0074D6  0E00               	movlw	0
  6368  0074D8  6E10               	movwf	(strtok@s+1)^0,c
  6369  0074DA  0EFD               	movlw	low STR_55
  6370  0074DC  6E11               	movwf	strtok@sep^0,c
  6371  0074DE  0EFF               	movlw	high STR_55
  6372  0074E0  6E12               	movwf	(strtok@sep+1)^0,c
  6373  0074E2  EC5D  F02D         	call	_strtok	;wreg free
  6374  0074E6  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6375  0074EC  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6376                           
  6377                           ;../app/app_src/application.c: 737:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6378  0074F2  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6379  0074F8  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6380  0074FE  0E00               	movlw	0
  6381  007500  6E36               	movwf	strtoul@endptr^0,c
  6382  007502  0E00               	movlw	0
  6383  007504  6E37               	movwf	(strtoul@endptr+1)^0,c
  6384  007506  0E00               	movlw	0
  6385  007508  6E39               	movwf	(strtoul@base+1)^0,c
  6386  00750A  0E0A               	movlw	10
  6387  00750C  6E38               	movwf	strtoul@base^0,c
  6388  00750E  EC22  F03F         	call	_strtoul	;wreg free
  6389  007512  5034               	movf	?_strtoul^0,w,c
  6390  007514  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6391                           
  6392                           ;../app/app_src/application.c: 738:     tempbaud++;
  6393  007516  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6394  007518  0012               	return		;funcret
  6395  00751A                     __end_of_cmdSetBaud:
  6396                           	opt callstack 0
  6397                           
  6398 ;; *************** function _strtok *****************
  6399 ;; Defined at:
  6400 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  s               2   14[COMRAM] PTR unsigned char 
  6403 ;;		 -> atCommand(80), NULL(0), 
  6404 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6405 ;;		 -> STR_55(2), STR_54(2), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  2   14[COMRAM] PTR unsigned char 
  6410 ;; Registers used:
  6411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;Total ram usage:        4 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    9
  6424 ;; This function calls:
  6425 ;;		_strcspn
  6426 ;;		_strspn
  6427 ;; This function is called by:
  6428 ;;		_cmdSetBaud
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text21
  6433  005ABA                     __ptext21:
  6434                           	opt callstack 0
  6435  005ABA                     _strtok:
  6436                           	opt callstack 18
  6437                           
  6438                           ;incstack = 0
  6439  005ABA  500F               	movf	strtok@s^0,w,c
  6440  005ABC  1010               	iorwf	(strtok@s+1)^0,w,c
  6441  005ABE  A4D8               	btfss	status,2,c
  6442  005AC0  D00F               	goto	l11507
  6443  005AC2  0060  F55C  F00F   	movff	strtok@p,strtok@s
  6444  005AC8  0060  F560  F010   	movff	strtok@p+1,strtok@s+1
  6445  005ACE  500F               	movf	strtok@s^0,w,c
  6446  005AD0  1010               	iorwf	(strtok@s+1)^0,w,c
  6447  005AD2  A4D8               	btfss	status,2,c
  6448  005AD4  D005               	goto	l11507
  6449  005AD6  0E00               	movlw	0
  6450  005AD8  6E0F               	movwf	?_strtok^0,c
  6451  005ADA  0E00               	movlw	0
  6452  005ADC  6E10               	movwf	(?_strtok+1)^0,c
  6453  005ADE  0012               	return	
  6454  005AE0                     l11507:
  6455  005AE0  0060  F03C  F008   	movff	strtok@s,strspn@s
  6456  005AE6  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6457  005AEC  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6458  005AF2  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6459  005AF8  ECC5  F03B         	call	_strspn	;wreg free
  6460  005AFC  5008               	movf	?_strspn^0,w,c
  6461  005AFE  260F               	addwf	strtok@s^0,f,c
  6462  005B00  5009               	movf	(?_strspn+1)^0,w,c
  6463  005B02  2210               	addwfc	(strtok@s+1)^0,f,c
  6464  005B04  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6465  005B0A  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6466  005B10  50DF               	movf	indf2,w,c
  6467  005B12  A4D8               	btfss	status,2,c
  6468  005B14  D00C               	goto	l11515
  6469  005B16  0E00               	movlw	0
  6470  005B18  0101               	movlb	1	; () banked
  6471  005B1A  6F57               	movwf	strtok@p& (0+255),b
  6472  005B1C  0E00               	movlw	0
  6473  005B1E  6F58               	movwf	(strtok@p+1)& (0+255),b
  6474  005B20  0060  F55C  F00F   	movff	strtok@p,?_strtok
  6475  005B26  0060  F560  F010   	movff	strtok@p+1,?_strtok+1
  6476  005B2C  0012               	return	
  6477  005B2E                     l11515:
  6478  005B2E  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6479  005B34  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6480  005B3A  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6481  005B40  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6482  005B46  ECF5  F03B         	call	_strcspn	;wreg free
  6483  005B4A  5008               	movf	?_strcspn^0,w,c
  6484  005B4C  240F               	addwf	strtok@s^0,w,c
  6485  005B4E  0101               	movlb	1	; () banked
  6486  005B50  6F57               	movwf	strtok@p& (0+255),b
  6487  005B52  5009               	movf	(?_strcspn+1)^0,w,c
  6488  005B54  2010               	addwfc	(strtok@s+1)^0,w,c
  6489  005B56  6F58               	movwf	(strtok@p+1)& (0+255),b
  6490                           
  6491                           ; BSR set to: 1
  6492  005B58  0060  F55F  FFD9   	movff	strtok@p,fsr2l
  6493  005B5E  0060  F563  FFDA   	movff	strtok@p+1,fsr2h
  6494  005B64  50DF               	movf	indf2,w,c
  6495  005B66  B4D8               	btfsc	status,2,c
  6496  005B68  D00B               	goto	l11523
  6497                           
  6498                           ; BSR set to: 1
  6499  005B6A  0060  F55F  FFD9   	movff	strtok@p,fsr2l
  6500  005B70  0060  F563  FFDA   	movff	strtok@p+1,fsr2h
  6501  005B76  0E00               	movlw	0
  6502  005B78  6EDF               	movwf	indf2,c
  6503                           
  6504                           ; BSR set to: 1
  6505  005B7A  4B57               	infsnz	strtok@p& (0+255),f,b
  6506  005B7C  2B58               	incf	(strtok@p+1)& (0+255),f,b
  6507  005B7E  D004               	goto	l4017
  6508  005B80                     l11523:
  6509                           
  6510                           ; BSR set to: 1
  6511  005B80  0E00               	movlw	0
  6512  005B82  6F57               	movwf	strtok@p& (0+255),b
  6513  005B84  0E00               	movlw	0
  6514  005B86  6F58               	movwf	(strtok@p+1)& (0+255),b
  6515  005B88                     l4017:
  6516                           
  6517                           ; BSR set to: 1
  6518  005B88  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6519  005B8E  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6520  005B94  0012               	return		;funcret
  6521  005B96                     __end_of_strtok:
  6522                           	opt callstack 0
  6523                           
  6524 ;; *************** function _strspn *****************
  6525 ;; Defined at:
  6526 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6529 ;;		 -> atCommand(80), NULL(0), 
  6530 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6531 ;;		 -> STR_55(2), STR_54(2), 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  i               2   12[COMRAM] unsigned int 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    7[COMRAM] unsigned int 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:        7 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    8
  6550 ;; This function calls:
  6551 ;;		_strchr
  6552 ;; This function is called by:
  6553 ;;		_strtok
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text22
  6558  00778A                     __ptext22:
  6559                           	opt callstack 0
  6560  00778A                     _strspn:
  6561                           	opt callstack 18
  6562                           
  6563                           ;incstack = 0
  6564  00778A  0E00               	movlw	0
  6565  00778C  6E0E               	movwf	(strspn@i+1)^0,c
  6566  00778E  0E00               	movlw	0
  6567  007790  6E0D               	movwf	strspn@i^0,c
  6568  007792  D004               	goto	l11217
  6569  007794                     l11215:
  6570  007794  4A08               	infsnz	strspn@s^0,f,c
  6571  007796  2A09               	incf	(strspn@s+1)^0,f,c
  6572  007798  4A0D               	infsnz	strspn@i^0,f,c
  6573  00779A  2A0E               	incf	(strspn@i+1)^0,f,c
  6574  00779C                     l11217:
  6575  00779C  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6576  0077A2  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6577  0077A8  50DF               	movf	indf2,w,c
  6578  0077AA  B4D8               	btfsc	status,2,c
  6579  0077AC  D017               	goto	u9790
  6580  0077AE  0060  F028  F002   	movff	strspn@c,strchr@s
  6581  0077B4  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6582  0077BA  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6583  0077C0  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6584  0077C6  50DF               	movf	indf2,w,c
  6585  0077C8  6E0C               	movwf	??_strspn^0,c
  6586  0077CA  500C               	movf	??_strspn^0,w,c
  6587  0077CC  6E04               	movwf	strchr@c^0,c
  6588  0077CE  6A05               	clrf	(strchr@c+1)^0,c
  6589  0077D0  EC63  F038         	call	_strchr	;wreg free
  6590  0077D4  5002               	movf	?_strchr^0,w,c
  6591  0077D6  1003               	iorwf	(?_strchr+1)^0,w,c
  6592  0077D8  A4D8               	btfss	status,2,c
  6593  0077DA  D7DC               	goto	l11215
  6594  0077DC                     u9790:
  6595  0077DC  0060  F034  F008   	movff	strspn@i,?_strspn
  6596  0077E2  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6597  0077E8  0012               	return		;funcret
  6598  0077EA                     __end_of_strspn:
  6599                           	opt callstack 0
  6600                           
  6601 ;; *************** function _strcspn *****************
  6602 ;; Defined at:
  6603 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6606 ;;		 -> atCommand(80), NULL(0), 
  6607 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6608 ;;		 -> STR_55(2), STR_54(2), 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  i               2   12[COMRAM] unsigned int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2    7[COMRAM] unsigned int 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:        7 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    8
  6627 ;; This function calls:
  6628 ;;		_strchr
  6629 ;; This function is called by:
  6630 ;;		_strtok
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text23
  6635  0077EA                     __ptext23:
  6636                           	opt callstack 0
  6637  0077EA                     _strcspn:
  6638                           	opt callstack 18
  6639                           
  6640                           ;incstack = 0
  6641  0077EA  0E00               	movlw	0
  6642  0077EC  6E0E               	movwf	(strcspn@i+1)^0,c
  6643  0077EE  0E00               	movlw	0
  6644  0077F0  6E0D               	movwf	strcspn@i^0,c
  6645  0077F2  D004               	goto	l11225
  6646  0077F4                     l11223:
  6647  0077F4  4A08               	infsnz	strcspn@s^0,f,c
  6648  0077F6  2A09               	incf	(strcspn@s+1)^0,f,c
  6649  0077F8  4A0D               	infsnz	strcspn@i^0,f,c
  6650  0077FA  2A0E               	incf	(strcspn@i+1)^0,f,c
  6651  0077FC                     l11225:
  6652  0077FC  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6653  007802  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6654  007808  50DF               	movf	indf2,w,c
  6655  00780A  B4D8               	btfsc	status,2,c
  6656  00780C  D017               	goto	u9810
  6657  00780E  0060  F028  F002   	movff	strcspn@c,strchr@s
  6658  007814  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6659  00781A  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6660  007820  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6661  007826  50DF               	movf	indf2,w,c
  6662  007828  6E0C               	movwf	??_strcspn^0,c
  6663  00782A  500C               	movf	??_strcspn^0,w,c
  6664  00782C  6E04               	movwf	strchr@c^0,c
  6665  00782E  6A05               	clrf	(strchr@c+1)^0,c
  6666  007830  EC63  F038         	call	_strchr	;wreg free
  6667  007834  5002               	movf	?_strchr^0,w,c
  6668  007836  1003               	iorwf	(?_strchr+1)^0,w,c
  6669  007838  B4D8               	btfsc	status,2,c
  6670  00783A  D7DC               	goto	l11223
  6671  00783C                     u9810:
  6672  00783C  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6673  007842  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6674  007848  0012               	return		;funcret
  6675  00784A                     __end_of_strcspn:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function _cmdSetAddr *****************
  6679 ;; Defined at:
  6680 ;;		line 308 in file "../app/app_src/application.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  6683 ;;		 -> atCommand(80), 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  tempaddr        2   28[BANK0 ] unsigned short 
  6686 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  6687 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6688 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 3F/0
  6695 ;;		On exit  : 3F/1
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;Total ram usage:        8 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:   16
  6705 ;; This function calls:
  6706 ;;		_printf
  6707 ;;		_strstr
  6708 ;;		_strtoul
  6709 ;; This function is called by:
  6710 ;;		_executeATCommand
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text24
  6715  006CF2                     __ptext24:
  6716                           	opt callstack 0
  6717  006CF2                     _cmdSetAddr:
  6718                           	opt callstack 12
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;../app/app_src/application.c: 309:  uint16_t tempaddr;;../app/app_src/application.c: 31
      +                          0:  char *p1,*p2;;../app/app_src/application.c: 311:  p1 = strstr(atCommand,"=") + 1;
  6722                           
  6723                           ;incstack = 0
  6724  006CF2  0E34               	movlw	low _atCommand
  6725  006CF4  6E0D               	movwf	strstr@h^0,c
  6726  006CF6  0E02               	movlw	high _atCommand
  6727  006CF8  6E0E               	movwf	(strstr@h+1)^0,c
  6728  006CFA  0EDF               	movlw	low (STR_18+3)
  6729  006CFC  6E0F               	movwf	strstr@n^0,c
  6730  006CFE  0EFF               	movlw	high (STR_18+3)
  6731  006D00  6E10               	movwf	(strstr@n+1)^0,c
  6732  006D02  ECCB  F02D         	call	_strstr	;wreg free
  6733  006D06  0E01               	movlw	1
  6734  006D08  240D               	addwf	?_strstr^0,w,c
  6735  006D0A  0100               	movlb	0	; () banked
  6736  006D0C  6F7A               	movwf	cmdSetAddr@p1& (0+255),b
  6737  006D0E  0E00               	movlw	0
  6738  006D10  200E               	addwfc	(?_strstr+1)^0,w,c
  6739  006D12  6F7B               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;../app/app_src/application.c: 313:  tempaddr = strtoul(p1,p2,16);
  6743  006D14  0060  F1E8  F034   	movff	cmdSetAddr@p1,strtoul@s
  6744  006D1A  0060  F1EC  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6745  006D20  0060  F1E0  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6746  006D26  0060  F1E4  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6747  006D2C  0E00               	movlw	0
  6748  006D2E  6E39               	movwf	(strtoul@base+1)^0,c
  6749  006D30  0E10               	movlw	16
  6750  006D32  6E38               	movwf	strtoul@base^0,c
  6751  006D34  EC22  F03F         	call	_strtoul	;wreg free
  6752  006D38  0060  F0D0  F07C   	movff	?_strtoul,cmdSetAddr@tempaddr
  6753  006D3E  0060  F0D4  F07D   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6754                           
  6755                           ;../app/app_src/application.c: 315:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6756  006D44  0100               	movlb	0	; () banked
  6757  006D46  517C               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6758  006D48  117D               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6759  006D4A  B4D8               	btfsc	status,2,c
  6760  006D4C  D012               	goto	l15973
  6761                           
  6762                           ; BSR set to: 0
  6763  006D4E  297C               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6764  006D50  E103               	bnz	u16180
  6765  006D52  297D               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6766  006D54  B4D8               	btfsc	status,2,c
  6767  006D56  D00D               	goto	l15973
  6768  006D58                     u16180:
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;../app/app_src/application.c: 316:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6772  006D58  0060  F1F4  F0FC   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6773                           
  6774                           ;../app/app_src/application.c: 317:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6775  006D5E  0060  F1F0  F0FB   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;../app/app_src/application.c: 318:   printf("OK\r\n");
  6779  006D64  0ED7               	movlw	low STR_13
  6780  006D66  6E55               	movwf	printf@fmt^0,c
  6781  006D68  0EFF               	movlw	high STR_13
  6782  006D6A  6E56               	movwf	(printf@fmt+1)^0,c
  6783  006D6C  EC3B  F044         	call	_printf	;wreg free
  6784                           
  6785                           ;../app/app_src/application.c: 319:  }
  6786  006D70  0012               	return	
  6787  006D72                     l15973:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;../app/app_src/application.c: 321:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6791  006D72  0ECC               	movlw	low STR_4
  6792  006D74  6E55               	movwf	printf@fmt^0,c
  6793  006D76  0EFE               	movlw	high STR_4
  6794  006D78  6E56               	movwf	(printf@fmt+1)^0,c
  6795  006D7A  0E05               	movlw	5
  6796  006D7C  6E57               	movwf	(?_printf+2)^0,c
  6797  006D7E  EC3B  F044         	call	_printf	;wreg free
  6798                           
  6799                           ; BSR set to: 1
  6800  006D82  0012               	return		;funcret
  6801  006D84                     __end_of_cmdSetAddr:
  6802                           	opt callstack 0
  6803                           
  6804 ;; *************** function _cmdSetAES *****************
  6805 ;; Defined at:
  6806 ;;		line 449 in file "../app/app_src/application.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  6809 ;;		 -> atCommand(80), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  temp            3   60[BANK0 ] unsigned char [3]
  6812 ;;  p2              2   58[BANK0 ] PTR unsigned char 
  6813 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6814 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6815 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6816 ;;  byte            1   64[BANK0 ] unsigned char 
  6817 ;;  i               1   67[BANK0 ] unsigned char 
  6818 ;;  AESstr         32   26[BANK0 ] unsigned char [32]
  6819 ;;  p1              2   65[BANK0 ] PTR unsigned char 
  6820 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6821 ;;  key_type        1   63[BANK0 ] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 3F/0
  6828 ;;		On exit  : 3F/1
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:       46 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:   16
  6838 ;; This function calls:
  6839 ;;		_DATAEE_WriteByte_Platform
  6840 ;;		_memcpy
  6841 ;;		_printf
  6842 ;;		_strlen
  6843 ;;		_strstr
  6844 ;;		_strtoul
  6845 ;; This function is called by:
  6846 ;;		_executeATCommand
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text25
  6851  0032E2                     __ptext25:
  6852                           	opt callstack 0
  6853  0032E2                     _cmdSetAES:
  6854                           	opt callstack 12
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;../app/app_src/application.c: 453:  p1 = strstr(atCommand,":") + 1;
  6858                           
  6859                           ; BSR set to: 0
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;incstack = 0
  6863  0032E2  0E34               	movlw	low _atCommand
  6864  0032E4  6E0D               	movwf	strstr@h^0,c
  6865  0032E6  0E02               	movlw	high _atCommand
  6866  0032E8  6E0E               	movwf	(strstr@h+1)^0,c
  6867  0032EA  0E66               	movlw	low (STR_62+5)
  6868  0032EC  6E0F               	movwf	strstr@n^0,c
  6869  0032EE  0EFF               	movlw	high (STR_62+5)
  6870  0032F0  6E10               	movwf	(strstr@n+1)^0,c
  6871  0032F2  ECCB  F02D         	call	_strstr	;wreg free
  6872  0032F6  0E01               	movlw	1
  6873  0032F8  240D               	addwf	?_strstr^0,w,c
  6874  0032FA  0100               	movlb	0	; () banked
  6875  0032FC  6FA1               	movwf	cmdSetAES@p1& (0+255),b
  6876  0032FE  0E00               	movlw	0
  6877  003300  200E               	addwfc	(?_strstr+1)^0,w,c
  6878  003302  6FA2               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;../app/app_src/application.c: 454:     if(!p1){
  6882  003304  51A1               	movf	cmdSetAES@p1& (0+255),w,b
  6883  003306  11A2               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6884  003308  A4D8               	btfss	status,2,c
  6885  00330A  D017               	goto	l16035
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;../app/app_src/application.c: 455:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6889  00330C  0ECC               	movlw	low STR_4
  6890  00330E  6E55               	movwf	printf@fmt^0,c
  6891  003310  0EFE               	movlw	high STR_4
  6892  003312  6E56               	movwf	(printf@fmt+1)^0,c
  6893  003314  0E09               	movlw	9
  6894  003316  6E57               	movwf	(?_printf+2)^0,c
  6895  003318  EC3B  F044         	call	_printf	;wreg free
  6896  00331C  0012               	return	
  6897  00331E                     l16025:
  6898                           
  6899                           ; BSR set to: 0
  6900  00331E  0E4E               	movlw	78
  6901  003320  D001               	goto	L1
  6902  003322                     l16027:
  6903                           
  6904                           ; BSR set to: 0
  6905  003322  0E41               	movlw	65
  6906  003324                     L1:
  6907  003324  6F9F               	movwf	cmdSetAES@key_type& (0+255),b
  6908  003326  D02D               	goto	l16037
  6909  003328                     l16029:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;../app/app_src/application.c: 462:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  6913  003328  0ECC               	movlw	low STR_4
  6914  00332A  6E55               	movwf	printf@fmt^0,c
  6915  00332C  0EFE               	movlw	high STR_4
  6916  00332E  6E56               	movwf	(printf@fmt+1)^0,c
  6917  003330  0E0D               	movlw	13
  6918  003332  6E57               	movwf	(?_printf+2)^0,c
  6919  003334  EC3B  F044         	call	_printf	;wreg free
  6920  003338  0012               	return	
  6921  00333A                     l16035:
  6922                           
  6923                           ; BSR set to: 0
  6924  00333A  0060  F287  FFF6   	movff	cmdSetAES@p1,tblptrl
  6925  003340  0060  F28B  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  6926  003346  0E00               	movlw	low (__mediumconst shr (0+16))
  6927  003348  6EF8               	movwf	tblptru,c
  6928  00334A  0E0F               	movlw	(high __ramtop+-1)
  6929  00334C  64F7               	cpfsgt	tblptrh,c
  6930  00334E  D003               	bra	u16217
  6931  003350  0008               	tblrd		*
  6932  003352  50F5               	movf	tablat,w,c
  6933  003354  D007               	bra	u16210
  6934  003356                     u16217:
  6935  003356  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6936  00335C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6937  003362  50EF               	movf	indf0,w,c
  6938  003364                     u16210:
  6939  003364  0100               	movlb	0	; () banked
  6940  003366  6F78               	movwf	??_cmdSetAES& (0+255),b
  6941  003368  6B79               	clrf	(??_cmdSetAES+1)& (0+255),b
  6942                           
  6943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6944                           ; Switch size 1, requested type "simple"
  6945                           ; Number of cases is 1, Range of values is 0 to 0
  6946                           ; switch strategies available:
  6947                           ; Name         Instructions Cycles
  6948                           ; simple_byte            4     3 (average)
  6949                           ;	Chosen strategy is simple_byte
  6950  00336A  5179               	movf	(??_cmdSetAES+1)& (0+255),w,b
  6951  00336C  0A00               	xorlw	0	; case 0
  6952  00336E  A4D8               	btfss	status,2,c
  6953  003370  D7DB               	goto	l16029
  6954                           
  6955                           ; BSR set to: 0
  6956                           ; Switch size 1, requested type "simple"
  6957                           ; Number of cases is 2, Range of values is 65 to 78
  6958                           ; switch strategies available:
  6959                           ; Name         Instructions Cycles
  6960                           ; simple_byte            7     4 (average)
  6961                           ;	Chosen strategy is simple_byte
  6962  003372  5178               	movf	??_cmdSetAES& (0+255),w,b
  6963  003374  0A41               	xorlw	65	; case 65
  6964  003376  B4D8               	btfsc	status,2,c
  6965  003378  D7D4               	goto	l16027
  6966  00337A  0A0F               	xorlw	15	; case 78
  6967  00337C  B4D8               	btfsc	status,2,c
  6968  00337E  D7CF               	goto	l16025
  6969  003380  D7D3               	goto	l16029
  6970  003382                     l16037:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;../app/app_src/application.c: 465:     p1 = strstr(atCommand,"=") + 1;
  6974  003382  0E34               	movlw	low _atCommand
  6975  003384  6E0D               	movwf	strstr@h^0,c
  6976  003386  0E02               	movlw	high _atCommand
  6977  003388  6E0E               	movwf	(strstr@h+1)^0,c
  6978  00338A  0EDF               	movlw	low (STR_18+3)
  6979  00338C  6E0F               	movwf	strstr@n^0,c
  6980  00338E  0EFF               	movlw	high (STR_18+3)
  6981  003390  6E10               	movwf	(strstr@n+1)^0,c
  6982  003392  ECCB  F02D         	call	_strstr	;wreg free
  6983  003396  0E01               	movlw	1
  6984  003398  240D               	addwf	?_strstr^0,w,c
  6985  00339A  0100               	movlb	0	; () banked
  6986  00339C  6FA1               	movwf	cmdSetAES@p1& (0+255),b
  6987  00339E  0E00               	movlw	0
  6988  0033A0  200E               	addwfc	(?_strstr+1)^0,w,c
  6989  0033A2  6FA2               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;../app/app_src/application.c: 466:     if(!p1){
  6993  0033A4  51A1               	movf	cmdSetAES@p1& (0+255),w,b
  6994  0033A6  11A2               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6995  0033A8  A4D8               	btfss	status,2,c
  6996  0033AA  D009               	goto	l16045
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;../app/app_src/application.c: 467:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7000  0033AC  0ECC               	movlw	low STR_4
  7001  0033AE  6E55               	movwf	printf@fmt^0,c
  7002  0033B0  0EFE               	movlw	high STR_4
  7003  0033B2  6E56               	movwf	(printf@fmt+1)^0,c
  7004  0033B4  0E09               	movlw	9
  7005  0033B6  6E57               	movwf	(?_printf+2)^0,c
  7006  0033B8  EC3B  F044         	call	_printf	;wreg free
  7007  0033BC  0012               	return	
  7008  0033BE                     l16045:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;../app/app_src/application.c: 471:  if(strlen(p1) != 32){
  7012  0033BE  0060  F284  F002   	movff	cmdSetAES@p1,strlen@s
  7013  0033C4  0060  F288  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7014  0033CA  EC3B  F03E         	call	_strlen	;wreg free
  7015  0033CE  0E20               	movlw	32
  7016  0033D0  1802               	xorwf	?_strlen^0,w,c
  7017  0033D2  1003               	iorwf	(?_strlen+1)^0,w,c
  7018  0033D4  B4D8               	btfsc	status,2,c
  7019  0033D6  D009               	goto	l16051
  7020                           
  7021                           ;../app/app_src/application.c: 472:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7022  0033D8  0ECC               	movlw	low STR_4
  7023  0033DA  6E55               	movwf	printf@fmt^0,c
  7024  0033DC  0EFE               	movlw	high STR_4
  7025  0033DE  6E56               	movwf	(printf@fmt+1)^0,c
  7026  0033E0  0E08               	movlw	8
  7027  0033E2  6E57               	movwf	(?_printf+2)^0,c
  7028  0033E4  EC3B  F044         	call	_printf	;wreg free
  7029  0033E8  0012               	return	
  7030  0033EA                     l16051:
  7031                           
  7032                           ;../app/app_src/application.c: 475:  memcpy(AESstr,p1,32);
  7033  0033EA  0E7A               	movlw	low cmdSetAES@AESstr
  7034  0033EC  6E08               	movwf	memcpy@d1^0,c
  7035  0033EE  6A09               	clrf	(memcpy@d1+1)^0,c
  7036  0033F0  0060  F284  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7037  0033F6  0060  F288  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7038  0033FC  0E00               	movlw	0
  7039  0033FE  6E0D               	movwf	(memcpy@n+1)^0,c
  7040  003400  0E20               	movlw	32
  7041  003402  6E0C               	movwf	memcpy@n^0,c
  7042  003404  ECE7  F039         	call	_memcpy	;wreg free
  7043                           
  7044                           ;../app/app_src/application.c: 477:  for(uint8_t i = 0; i < 16; i++){
  7045  003408  0E00               	movlw	0
  7046  00340A  0100               	movlb	0	; () banked
  7047  00340C  6FA3               	movwf	cmdSetAES@i& (0+255),b
  7048  00340E                     l16059:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;../app/app_src/application.c: 478:   char temp[3];;../app/app_src/application.c: 479:  
      +                           char *p2;;../app/app_src/application.c: 480:   uint8_t byte;;../app/app_src/application
      +                          .c: 481:   memcpy(temp,0,sizeof(temp));
  7052  00340E  0E9C               	movlw	low cmdSetAES@temp
  7053  003410  6E08               	movwf	memcpy@d1^0,c
  7054  003412  6A09               	clrf	(memcpy@d1+1)^0,c
  7055  003414  0E00               	movlw	0
  7056  003416  6E0A               	movwf	memcpy@s1^0,c
  7057  003418  0E00               	movlw	0
  7058  00341A  6E0B               	movwf	(memcpy@s1+1)^0,c
  7059  00341C  0E00               	movlw	0
  7060  00341E  6E0D               	movwf	(memcpy@n+1)^0,c
  7061  003420  0E03               	movlw	3
  7062  003422  6E0C               	movwf	memcpy@n^0,c
  7063  003424  ECE7  F039         	call	_memcpy	;wreg free
  7064                           
  7065                           ;../app/app_src/application.c: 482:   memcpy(temp,(AESstr + i*2),2);
  7066  003428  0E9C               	movlw	low cmdSetAES@temp
  7067  00342A  6E08               	movwf	memcpy@d1^0,c
  7068  00342C  6A09               	clrf	(memcpy@d1+1)^0,c
  7069  00342E  0100               	movlb	0	; () banked
  7070  003430  51A3               	movf	cmdSetAES@i& (0+255),w,b
  7071  003432  0D02               	mullw	2
  7072  003434  50F3               	movf	243,w,c
  7073  003436  0F7A               	addlw	low cmdSetAES@AESstr
  7074  003438  6F78               	movwf	??_cmdSetAES& (0+255),b
  7075  00343A  0060  F1E0  F00A   	movff	??_cmdSetAES,memcpy@s1
  7076  003440  6A0B               	clrf	(memcpy@s1+1)^0,c
  7077  003442  0E00               	movlw	0
  7078  003444  6E0D               	movwf	(memcpy@n+1)^0,c
  7079  003446  0E02               	movlw	2
  7080  003448  6E0C               	movwf	memcpy@n^0,c
  7081  00344A  ECE7  F039         	call	_memcpy	;wreg free
  7082                           
  7083                           ;../app/app_src/application.c: 483:   byte = (uint8_t)strtoul(temp,&p2,16);
  7084  00344E  0E9C               	movlw	low cmdSetAES@temp
  7085  003450  6E34               	movwf	strtoul@s^0,c
  7086  003452  6A35               	clrf	(strtoul@s+1)^0,c
  7087  003454  0E9A               	movlw	low cmdSetAES@p2
  7088  003456  6E36               	movwf	strtoul@endptr^0,c
  7089  003458  6A37               	clrf	(strtoul@endptr+1)^0,c
  7090  00345A  0E00               	movlw	0
  7091  00345C  6E39               	movwf	(strtoul@base+1)^0,c
  7092  00345E  0E10               	movlw	16
  7093  003460  6E38               	movwf	strtoul@base^0,c
  7094  003462  EC22  F03F         	call	_strtoul	;wreg free
  7095  003466  5034               	movf	?_strtoul^0,w,c
  7096  003468  0100               	movlb	0	; () banked
  7097  00346A  6FA0               	movwf	cmdSetAES@byte& (0+255),b
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;../app/app_src/application.c: 484:         if('A' == key_type){
  7101  00346C  0E41               	movlw	65
  7102  00346E  199F               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7103  003470  A4D8               	btfss	status,2,c
  7104  003472  D015               	goto	l16071
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;../app/app_src/application.c: 485:             aes_key[i] = byte;
  7108  003474  0E24               	movlw	low _aes_key
  7109  003476  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7110  003478  6ED9               	movwf	fsr2l,c
  7111  00347A  6ADA               	clrf	fsr2h,c
  7112  00347C  0E02               	movlw	high _aes_key
  7113  00347E  22DA               	addwfc	fsr2h,f,c
  7114  003480  0060  F283  FFDF   	movff	cmdSetAES@byte,indf2
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;../app/app_src/application.c: 486:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7118  003486  0E09               	movlw	9
  7119  003488  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7120  00348A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7121  00348C  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7122  00348E  0E00               	movlw	0
  7123  003490  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7124  003492  0060  F280  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7125  003498  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7126                           
  7127                           ;../app/app_src/application.c: 487:         }
  7128  00349C  D014               	goto	l16075
  7129  00349E                     l16071:
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;../app/app_src/application.c: 489:             net_key[i] = byte;
  7133  00349E  0E14               	movlw	low _net_key
  7134  0034A0  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7135  0034A2  6ED9               	movwf	fsr2l,c
  7136  0034A4  6ADA               	clrf	fsr2h,c
  7137  0034A6  0E02               	movlw	high _net_key
  7138  0034A8  22DA               	addwfc	fsr2h,f,c
  7139  0034AA  0060  F283  FFDF   	movff	cmdSetAES@byte,indf2
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;../app/app_src/application.c: 490:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7143  0034B0  0E23               	movlw	35
  7144  0034B2  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7145  0034B4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7146  0034B6  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7147  0034B8  0E00               	movlw	0
  7148  0034BA  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7149  0034BC  0060  F280  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7150  0034C2  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7151  0034C6                     l16075:
  7152                           
  7153                           ;../app/app_src/application.c: 492:  }
  7154  0034C6  0100               	movlb	0	; () banked
  7155  0034C8  2BA3               	incf	cmdSetAES@i& (0+255),f,b
  7156                           
  7157                           ; BSR set to: 0
  7158  0034CA  0E0F               	movlw	15
  7159  0034CC  65A3               	cpfsgt	cmdSetAES@i& (0+255),b
  7160  0034CE  D79F               	goto	l16059
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;../app/app_src/application.c: 493:  printf("OK\r\n");
  7164  0034D0  0ED7               	movlw	low STR_13
  7165  0034D2  6E55               	movwf	printf@fmt^0,c
  7166  0034D4  0EFF               	movlw	high STR_13
  7167  0034D6  6E56               	movwf	(printf@fmt+1)^0,c
  7168  0034D8  EC3B  F044         	call	_printf	;wreg free
  7169                           
  7170                           ; BSR set to: 1
  7171  0034DC  0012               	return		;funcret
  7172  0034DE                     __end_of_cmdSetAES:
  7173                           	opt callstack 0
  7174                           
  7175 ;; *************** function _cmdSendSink *****************
  7176 ;; Defined at:
  7177 ;;		line 428 in file "../app/app_src/application.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7180 ;;		 -> atCommand(80), 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		None
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        2 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    7
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_executeATCommand
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text26
  7207  008D68                     __ptext26:
  7208                           	opt callstack 0
  7209  008D68                     _cmdSendSink:
  7210                           	opt callstack 21
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;incstack = 0
  7214  008D68  0012               	return		;funcret
  7215  008D6A                     __end_of_cmdSendSink:
  7216                           	opt callstack 0
  7217                           
  7218 ;; *************** function _cmdSend *****************
  7219 ;; Defined at:
  7220 ;;		line 219 in file "../app/app_src/application.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  7223 ;;		 -> atCommand(80), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  buf_id          1   37[BANK0 ] unsigned char 
  7226 ;;  destaddr        5   26[BANK0 ] unsigned char [5]
  7227 ;;  p1              2   35[BANK0 ] PTR unsigned char 
  7228 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  7229 ;;  p2              2   33[BANK0 ] PTR unsigned char 
  7230 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7231 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7232 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7233 ;;  tempaddr        2   31[BANK0 ] unsigned short 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 3F/1
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;Total ram usage:       16 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:   16
  7250 ;; This function calls:
  7251 ;;		_NWK_DataReq
  7252 ;;		_get_free_tx_buffer
  7253 ;;		_memcpy
  7254 ;;		_memset
  7255 ;;		_printf
  7256 ;;		_strlen
  7257 ;;		_strstr
  7258 ;;		_strtoul
  7259 ;; This function is called by:
  7260 ;;		_executeATCommand
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text27
  7265  002832                     __ptext27:
  7266                           	opt callstack 0
  7267  002832                     _cmdSend:
  7268                           	opt callstack 12
  7269                           
  7270                           ;../app/app_src/application.c: 220:  uint16_t tempaddr;;../app/app_src/application.c: 22
      +                          1:  char *p1,*p2;;../app/app_src/application.c: 222:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 223:         destaddr[4] = 0;
  7271                           
  7272                           ;incstack = 0
  7273  002832  0E00               	movlw	0
  7274  002834  0100               	movlb	0	; () banked
  7275  002836  6F7E               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;../app/app_src/application.c: 224:  p1 = strstr(cmd,":") + 1;
  7279  002838  0060  F1D8  F00D   	movff	cmdSend@cmd,strstr@h
  7280  00283E  0060  F1DC  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7281  002844  0E66               	movlw	low (STR_62+5)
  7282  002846  6E0F               	movwf	strstr@n^0,c
  7283  002848  0EFF               	movlw	high (STR_62+5)
  7284  00284A  6E10               	movwf	(strstr@n+1)^0,c
  7285  00284C  ECCB  F02D         	call	_strstr	;wreg free
  7286  002850  0E01               	movlw	1
  7287  002852  240D               	addwf	?_strstr^0,w,c
  7288  002854  0100               	movlb	0	; () banked
  7289  002856  6F83               	movwf	cmdSend@p1& (0+255),b
  7290  002858  0E00               	movlw	0
  7291  00285A  200E               	addwfc	(?_strstr+1)^0,w,c
  7292  00285C  6F84               	movwf	(cmdSend@p1+1)& (0+255),b
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;../app/app_src/application.c: 225:  memcpy(destaddr,p1,4);
  7296  00285E  0E7A               	movlw	low cmdSend@destaddr
  7297  002860  6E08               	movwf	memcpy@d1^0,c
  7298  002862  6A09               	clrf	(memcpy@d1+1)^0,c
  7299  002864  0060  F20C  F00A   	movff	cmdSend@p1,memcpy@s1
  7300  00286A  0060  F210  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7301  002870  0E00               	movlw	0
  7302  002872  6E0D               	movwf	(memcpy@n+1)^0,c
  7303  002874  0E04               	movlw	4
  7304  002876  6E0C               	movwf	memcpy@n^0,c
  7305  002878  ECE7  F039         	call	_memcpy	;wreg free
  7306                           
  7307                           ;../app/app_src/application.c: 227:  tempaddr = strtoul(destaddr,&p2,16);
  7308  00287C  0E7A               	movlw	low cmdSend@destaddr
  7309  00287E  6E34               	movwf	strtoul@s^0,c
  7310  002880  6A35               	clrf	(strtoul@s+1)^0,c
  7311  002882  0E81               	movlw	low cmdSend@p2
  7312  002884  6E36               	movwf	strtoul@endptr^0,c
  7313  002886  6A37               	clrf	(strtoul@endptr+1)^0,c
  7314  002888  0E00               	movlw	0
  7315  00288A  6E39               	movwf	(strtoul@base+1)^0,c
  7316  00288C  0E10               	movlw	16
  7317  00288E  6E38               	movwf	strtoul@base^0,c
  7318  002890  EC22  F03F         	call	_strtoul	;wreg free
  7319  002894  0060  F0D0  F07F   	movff	?_strtoul,cmdSend@tempaddr
  7320  00289A  0060  F0D4  F080   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7321                           
  7322                           ;../app/app_src/application.c: 229:  p1 = strstr(cmd,"=") + 1;
  7323  0028A0  0060  F1D8  F00D   	movff	cmdSend@cmd,strstr@h
  7324  0028A6  0060  F1DC  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7325  0028AC  0EDF               	movlw	low (STR_18+3)
  7326  0028AE  6E0F               	movwf	strstr@n^0,c
  7327  0028B0  0EFF               	movlw	high (STR_18+3)
  7328  0028B2  6E10               	movwf	(strstr@n+1)^0,c
  7329  0028B4  ECCB  F02D         	call	_strstr	;wreg free
  7330  0028B8  0E01               	movlw	1
  7331  0028BA  240D               	addwf	?_strstr^0,w,c
  7332  0028BC  0100               	movlb	0	; () banked
  7333  0028BE  6F83               	movwf	cmdSend@p1& (0+255),b
  7334  0028C0  0E00               	movlw	0
  7335  0028C2  200E               	addwfc	(?_strstr+1)^0,w,c
  7336  0028C4  6F84               	movwf	(cmdSend@p1+1)& (0+255),b
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;../app/app_src/application.c: 230:  if(strlen(p1) > 64){
  7340  0028C6  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7341  0028CC  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7342  0028D2  EC3B  F03E         	call	_strlen	;wreg free
  7343  0028D6  5003               	movf	(?_strlen+1)^0,w,c
  7344  0028D8  E104               	bnz	u16120
  7345  0028DA  0E41               	movlw	65
  7346  0028DC  5C02               	subwf	?_strlen^0,w,c
  7347  0028DE  A0D8               	btfss	status,0,c
  7348  0028E0  D009               	goto	l15881
  7349  0028E2                     u16120:
  7350                           
  7351                           ;../app/app_src/application.c: 231:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7352  0028E2  0ECC               	movlw	low STR_4
  7353  0028E4  6E55               	movwf	printf@fmt^0,c
  7354  0028E6  0EFE               	movlw	high STR_4
  7355  0028E8  6E56               	movwf	(printf@fmt+1)^0,c
  7356  0028EA  0E07               	movlw	7
  7357  0028EC  6E57               	movwf	(?_printf+2)^0,c
  7358  0028EE  EC3B  F044         	call	_printf	;wreg free
  7359                           
  7360                           ;../app/app_src/application.c: 232:  }
  7361  0028F2  0012               	return	
  7362  0028F4                     l15881:
  7363                           
  7364                           ;../app/app_src/application.c: 234:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 235:         if(!get_free_tx_buffer(&buf_id)){
  7365  0028F4  0E85               	movlw	low cmdSend@buf_id
  7366  0028F6  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7367  0028F8  EC63  F03B         	call	_get_free_tx_buffer	;wreg free
  7368  0028FC  0900               	iorlw	0
  7369  0028FE  A4D8               	btfss	status,2,c
  7370  002900  D009               	goto	l15887
  7371                           
  7372                           ;../app/app_src/application.c: 236:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7373  002902  0ECC               	movlw	low STR_4
  7374  002904  6E55               	movwf	printf@fmt^0,c
  7375  002906  0EFE               	movlw	high STR_4
  7376  002908  6E56               	movwf	(printf@fmt+1)^0,c
  7377  00290A  0E11               	movlw	17
  7378  00290C  6E57               	movwf	(?_printf+2)^0,c
  7379  00290E  EC3B  F044         	call	_printf	;wreg free
  7380  002912  0012               	return	
  7381  002914                     l15887:
  7382                           
  7383                           ;../app/app_src/application.c: 239:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7384  002914  0100               	movlb	0	; () banked
  7385  002916  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7386  002918  0D83               	mullw	131
  7387  00291A  0E80               	movlw	low (_tx_buffer+22)
  7388  00291C  24F3               	addwf	243,w,c
  7389  00291E  6E02               	movwf	memset@dest^0,c
  7390  002920  0E08               	movlw	high (_tx_buffer+22)
  7391  002922  20F4               	addwfc	prodh,w,c
  7392  002924  6E03               	movwf	(memset@dest+1)^0,c
  7393  002926  0E00               	movlw	0
  7394  002928  6E05               	movwf	(memset@c+1)^0,c
  7395  00292A  0E00               	movlw	0
  7396  00292C  6E04               	movwf	memset@c^0,c
  7397  00292E  0E00               	movlw	0
  7398  002930  6E07               	movwf	(memset@n+1)^0,c
  7399  002932  0E6D               	movlw	109
  7400  002934  6E06               	movwf	memset@n^0,c
  7401  002936  EC2F  F022         	call	_memset	;wreg free
  7402                           
  7403                           ;../app/app_src/application.c: 240:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7404  00293A  0100               	movlb	0	; () banked
  7405  00293C  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7406  00293E  0D83               	mullw	131
  7407  002940  0E80               	movlw	low (_tx_buffer+22)
  7408  002942  24F3               	addwf	243,w,c
  7409  002944  6E08               	movwf	memcpy@d1^0,c
  7410  002946  0E08               	movlw	high (_tx_buffer+22)
  7411  002948  20F4               	addwfc	prodh,w,c
  7412  00294A  6E09               	movwf	(memcpy@d1+1)^0,c
  7413  00294C  0060  F20C  F00A   	movff	cmdSend@p1,memcpy@s1
  7414  002952  0060  F210  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7415  002958  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7416  00295E  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7417  002964  EC3B  F03E         	call	_strlen	;wreg free
  7418  002968  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7419  00296E  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7420  002974  ECE7  F039         	call	_memcpy	;wreg free
  7421                           
  7422                           ;../app/app_src/application.c: 241:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7423  002978  0100               	movlb	0	; () banked
  7424  00297A  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7425  00297C  0D83               	mullw	131
  7426  00297E  0E72               	movlw	low (_tx_buffer+8)
  7427  002980  24F3               	addwf	243,w,c
  7428  002982  6ED9               	movwf	fsr2l,c
  7429  002984  0E08               	movlw	high (_tx_buffer+8)
  7430  002986  20F4               	addwfc	prodh,w,c
  7431  002988  6EDA               	movwf	fsr2h,c
  7432  00298A  0060  F1FF  FFDE   	movff	cmdSend@tempaddr,postinc2
  7433  002990  0060  F203  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;../app/app_src/application.c: 242:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7437  002996  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7438  002998  0D83               	mullw	131
  7439  00299A  0E74               	movlw	low (_tx_buffer+10)
  7440  00299C  24F3               	addwf	243,w,c
  7441  00299E  6ED9               	movwf	fsr2l,c
  7442  0029A0  0E08               	movlw	high (_tx_buffer+10)
  7443  0029A2  20F4               	addwfc	prodh,w,c
  7444  0029A4  6EDA               	movwf	fsr2h,c
  7445  0029A6  0E01               	movlw	1
  7446  0029A8  6EDF               	movwf	indf2,c
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;../app/app_src/application.c: 243:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7450  0029AA  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7451  0029AC  0D83               	mullw	131
  7452  0029AE  0E75               	movlw	low (_tx_buffer+11)
  7453  0029B0  24F3               	addwf	243,w,c
  7454  0029B2  6ED9               	movwf	fsr2l,c
  7455  0029B4  0E08               	movlw	high (_tx_buffer+11)
  7456  0029B6  20F4               	addwfc	prodh,w,c
  7457  0029B8  6EDA               	movwf	fsr2h,c
  7458  0029BA  0E01               	movlw	1
  7459  0029BC  6EDF               	movwf	indf2,c
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;../app/app_src/application.c: 244:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST;
  7463  0029BE  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7464  0029C0  0D83               	mullw	131
  7465  0029C2  0E76               	movlw	low (_tx_buffer+12)
  7466  0029C4  24F3               	addwf	243,w,c
  7467  0029C6  6ED9               	movwf	fsr2l,c
  7468  0029C8  0E08               	movlw	high (_tx_buffer+12)
  7469  0029CA  20F4               	addwfc	prodh,w,c
  7470  0029CC  6EDA               	movwf	fsr2h,c
  7471  0029CE  0E01               	movlw	1
  7472  0029D0  6EDF               	movwf	indf2,c
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;../app/app_src/application.c: 245:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7476  0029D2  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7477  0029D4  0D83               	mullw	131
  7478  0029D6  0E6A               	movlw	low _tx_buffer
  7479  0029D8  6F78               	movwf	??_cmdSend& (0+255),b
  7480  0029DA  0E08               	movlw	high _tx_buffer
  7481  0029DC  6F79               	movwf	(??_cmdSend+1)& (0+255),b
  7482  0029DE  0E16               	movlw	22
  7483  0029E0  2778               	addwf	??_cmdSend& (0+255),f,b
  7484  0029E2  0E00               	movlw	0
  7485  0029E4  2379               	addwfc	(??_cmdSend+1)& (0+255),f,b
  7486  0029E6  50F3               	movf	243,w,c
  7487  0029E8  2778               	addwf	??_cmdSend& (0+255),f,b
  7488  0029EA  50F4               	movf	244,w,c
  7489  0029EC  2379               	addwfc	(??_cmdSend+1)& (0+255),f,b
  7490  0029EE  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7491  0029F0  0D83               	mullw	131
  7492  0029F2  0E79               	movlw	low (_tx_buffer+15)
  7493  0029F4  24F3               	addwf	243,w,c
  7494  0029F6  6ED9               	movwf	fsr2l,c
  7495  0029F8  0E08               	movlw	high (_tx_buffer+15)
  7496  0029FA  20F4               	addwfc	prodh,w,c
  7497  0029FC  6EDA               	movwf	fsr2h,c
  7498  0029FE  0060  F1E3  FFDE   	movff	??_cmdSend,postinc2
  7499  002A04  0060  F1E7  FFDD   	movff	??_cmdSend+1,postdec2
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;../app/app_src/application.c: 246:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7503  002A0A  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7504  002A0C  0D83               	mullw	131
  7505  002A0E  0E7B               	movlw	low (_tx_buffer+17)
  7506  002A10  24F3               	addwf	243,w,c
  7507  002A12  6ED9               	movwf	fsr2l,c
  7508  002A14  0E08               	movlw	high (_tx_buffer+17)
  7509  002A16  20F4               	addwfc	prodh,w,c
  7510  002A18  6EDA               	movwf	fsr2h,c
  7511  002A1A  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7512  002A20  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7513  002A26  EC3B  F03E         	call	_strlen	;wreg free
  7514  002A2A  5002               	movf	?_strlen^0,w,c
  7515  002A2C  6EDF               	movwf	indf2,c
  7516                           
  7517                           ;../app/app_src/application.c: 247:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7518  002A2E  0100               	movlb	0	; () banked
  7519  002A30  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7520  002A32  0D83               	mullw	131
  7521  002A34  0E7C               	movlw	low (_tx_buffer+18)
  7522  002A36  24F3               	addwf	243,w,c
  7523  002A38  6ED9               	movwf	fsr2l,c
  7524  002A3A  0E08               	movlw	high (_tx_buffer+18)
  7525  002A3C  20F4               	addwfc	prodh,w,c
  7526  002A3E  6EDA               	movwf	fsr2h,c
  7527  002A40  0E98               	movlw	low _appDataConf
  7528  002A42  6EDE               	movwf	postinc2,c
  7529  002A44  0E88               	movlw	high _appDataConf
  7530  002A46  6EDD               	movwf	postdec2,c
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;../app/app_src/application.c: 248:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7534  002A48  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7535  002A4A  0D83               	mullw	131
  7536  002A4C  0E6C               	movlw	low (_tx_buffer+2)
  7537  002A4E  24F3               	addwf	243,w,c
  7538  002A50  6ED9               	movwf	fsr2l,c
  7539  002A52  0E08               	movlw	high (_tx_buffer+2)
  7540  002A54  20F4               	addwfc	prodh,w,c
  7541  002A56  6EDA               	movwf	fsr2h,c
  7542  002A58  0060  F3CB  FFDF   	movff	_msgIDCounter,indf2
  7543                           
  7544                           ; BSR set to: 0
  7545  002A5E  2BF2               	incf	_msgIDCounter& (0+255),f,b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;../app/app_src/application.c: 249:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7549  002A60  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7550  002A62  0D83               	mullw	131
  7551  002A64  0E6D               	movlw	low (_tx_buffer+3)
  7552  002A66  24F3               	addwf	243,w,c
  7553  002A68  6E02               	movwf	NWK_DataReq@req^0,c
  7554  002A6A  0E08               	movlw	high (_tx_buffer+3)
  7555  002A6C  20F4               	addwfc	prodh,w,c
  7556  002A6E  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7557  002A70  EC69  F039         	call	_NWK_DataReq	;wreg free
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;../app/app_src/application.c: 250:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7561  002A74  0ED0               	movlw	low (STR_4+4)
  7562  002A76  6E55               	movwf	printf@fmt^0,c
  7563  002A78  0EFE               	movlw	high (STR_4+4)
  7564  002A7A  6E56               	movwf	(printf@fmt+1)^0,c
  7565  002A7C  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7566  002A7E  0D83               	mullw	131
  7567  002A80  0E6C               	movlw	low (_tx_buffer+2)
  7568  002A82  24F3               	addwf	243,w,c
  7569  002A84  6ED9               	movwf	fsr2l,c
  7570  002A86  0E08               	movlw	high (_tx_buffer+2)
  7571  002A88  20F4               	addwfc	prodh,w,c
  7572  002A8A  6EDA               	movwf	fsr2h,c
  7573  002A8C  50DF               	movf	indf2,w,c
  7574  002A8E  6F78               	movwf	??_cmdSend& (0+255),b
  7575  002A90  5178               	movf	??_cmdSend& (0+255),w,b
  7576  002A92  6E57               	movwf	(?_printf+2)^0,c
  7577  002A94  6A58               	clrf	(?_printf+3)^0,c
  7578  002A96  EC3B  F044         	call	_printf	;wreg free
  7579                           
  7580                           ; BSR set to: 1
  7581  002A9A  0012               	return		;funcret
  7582  002A9C                     __end_of_cmdSend:
  7583                           	opt callstack 0
  7584                           
  7585 ;; *************** function _strtoul *****************
  7586 ;; Defined at:
  7587 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7590 ;;		 -> STR_55(2), STR_54(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7591 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7592 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7593 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7594 ;;		 -> cmdSend@p2(2), 
  7595 ;;  base            2   55[COMRAM] int 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   51[COMRAM] unsigned long 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7607 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;Total ram usage:        6 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:   10
  7614 ;; This function calls:
  7615 ;;		___strtoxl
  7616 ;; This function is called by:
  7617 ;;		_cmdSend
  7618 ;;		_cmdSetAddr
  7619 ;;		_cmdSetNaddr
  7620 ;;		_cmdSetAES
  7621 ;;		_cmdSetRFCH
  7622 ;;		_cmdSetTX
  7623 ;;		_cmdSetBaud
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text28
  7628  007E44                     __ptext28:
  7629                           	opt callstack 0
  7630  007E44                     _strtoul:
  7631                           	opt callstack 17
  7632                           
  7633                           ; BSR set to: 1
  7634                           ;incstack = 0
  7635  007E44  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7636  007E4A  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7637  007E50  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7638  007E56  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7639  007E5C  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7640  007E62  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7641  007E68  0E00               	movlw	0
  7642  007E6A  6E16               	movwf	___strtoxl@is_signed^0,c
  7643  007E6C  EC98  F005         	call	___strtoxl	;wreg free
  7644  007E70  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7645  007E76  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7646  007E7C  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7647  007E82  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7648  007E88  0012               	return		;funcret
  7649  007E8A                     __end_of_strtoul:
  7650                           	opt callstack 0
  7651                           
  7652 ;; *************** function ___strtoxl *****************
  7653 ;; Defined at:
  7654 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7657 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7658 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7659 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7660 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7661 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7662 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7663 ;;  base            2   19[COMRAM] int 
  7664 ;;  is_signed       1   21[COMRAM] unsigned char 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  a               4   44[COMRAM] unsigned long 
  7667 ;;  limit           4   38[COMRAM] unsigned long 
  7668 ;;  prev_a          4   26[COMRAM] unsigned long 
  7669 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7670 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7671 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7672 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7673 ;;  c               1   50[COMRAM] unsigned char 
  7674 ;;  skip            1   43[COMRAM] unsigned char 
  7675 ;;  sign            1   42[COMRAM] unsigned char 
  7676 ;;  conv_done       1   37[COMRAM] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  4   15[COMRAM] unsigned long 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:       36 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    9
  7693 ;; This function calls:
  7694 ;;		___lmul
  7695 ;;		_isalpha
  7696 ;;		_isdigit
  7697 ;;		_isspace
  7698 ;;		_toupper
  7699 ;; This function is called by:
  7700 ;;		_strtol
  7701 ;;		_strtoul
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text29
  7706  000B30                     __ptext29:
  7707                           	opt callstack 0
  7708  000B30                     ___strtoxl:
  7709                           	opt callstack 17
  7710                           
  7711                           ;incstack = 0
  7712  000B30  0E00               	movlw	0
  7713  000B32  6E2D               	movwf	___strtoxl@a^0,c
  7714  000B34  0E00               	movlw	0
  7715  000B36  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7716  000B38  0E00               	movlw	0
  7717  000B3A  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7718  000B3C  0E00               	movlw	0
  7719  000B3E  6E30               	movwf	(___strtoxl@a+3)^0,c
  7720  000B40  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7721  000B46  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7722  000B4C  5031               	movf	___strtoxl@cp^0,w,c
  7723  000B4E  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7724  000B50  B4D8               	btfsc	status,2,c
  7725  000B52  D1DF               	goto	l15469
  7726  000B54  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7727  000B5A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7728  000B60  0E00               	movlw	low (__mediumconst shr (0+16))
  7729  000B62  6EF8               	movwf	tblptru,c
  7730  000B64  0E0F               	movlw	(high __ramtop+-1)
  7731  000B66  64F7               	cpfsgt	tblptrh,c
  7732  000B68  D003               	bra	u15077
  7733  000B6A  0008               	tblrd		*
  7734  000B6C  50F5               	movf	tablat,w,c
  7735  000B6E  D007               	bra	u15070
  7736  000B70                     u15077:
  7737  000B70  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7738  000B76  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7739  000B7C  50EF               	movf	indf0,w,c
  7740  000B7E                     u15070:
  7741  000B7E  0900               	iorlw	0
  7742  000B80  B4D8               	btfsc	status,2,c
  7743  000B82  D1C7               	goto	l15469
  7744  000B84  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7745  000B8A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7746  000B90  0E00               	movlw	low (__mediumconst shr (0+16))
  7747  000B92  6EF8               	movwf	tblptru,c
  7748  000B94  0E0F               	movlw	(high __ramtop+-1)
  7749  000B96  64F7               	cpfsgt	tblptrh,c
  7750  000B98  D003               	bra	u15097
  7751  000B9A  0008               	tblrd		*
  7752  000B9C  50F5               	movf	tablat,w,c
  7753  000B9E  D007               	bra	u15090
  7754  000BA0                     u15097:
  7755  000BA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7756  000BA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7757  000BAC  50EF               	movf	indf0,w,c
  7758  000BAE                     u15090:
  7759  000BAE  D017               	goto	u15100
  7760  000BB0                     l15367:
  7761  000BB0  4A31               	infsnz	___strtoxl@cp^0,f,c
  7762  000BB2  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7763  000BB4  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7764  000BBA  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7765  000BC0  0E00               	movlw	low (__mediumconst shr (0+16))
  7766  000BC2  6EF8               	movwf	tblptru,c
  7767  000BC4  0E0F               	movlw	(high __ramtop+-1)
  7768  000BC6  64F7               	cpfsgt	tblptrh,c
  7769  000BC8  D003               	bra	u15107
  7770  000BCA  0008               	tblrd		*
  7771  000BCC  50F5               	movf	tablat,w,c
  7772  000BCE  D007               	bra	u15100
  7773  000BD0                     u15107:
  7774  000BD0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7775  000BD6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7776  000BDC  50EF               	movf	indf0,w,c
  7777  000BDE                     u15100:
  7778  000BDE  6E33               	movwf	___strtoxl@c^0,c
  7779  000BE0  0E01               	movlw	1
  7780  000BE2  6E25               	movwf	___strtoxl$7891^0,c
  7781  000BE4  0E20               	movlw	32
  7782  000BE6  1833               	xorwf	___strtoxl@c^0,w,c
  7783  000BE8  B4D8               	btfsc	status,2,c
  7784  000BEA  D013               	goto	l15377
  7785  000BEC  0EF7               	movlw	247
  7786  000BEE  6E17               	movwf	??___strtoxl^0,c
  7787  000BF0  0EFF               	movlw	255
  7788  000BF2  6E18               	movwf	(??___strtoxl+1)^0,c
  7789  000BF4  5033               	movf	___strtoxl@c^0,w,c
  7790  000BF6  6E19               	movwf	(??___strtoxl+2)^0,c
  7791  000BF8  6A1A               	clrf	(??___strtoxl+3)^0,c
  7792  000BFA  5017               	movf	??___strtoxl^0,w,c
  7793  000BFC  2619               	addwf	(??___strtoxl+2)^0,f,c
  7794  000BFE  5018               	movf	(??___strtoxl+1)^0,w,c
  7795  000C00  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7796  000C02  501A               	movf	(??___strtoxl+3)^0,w,c
  7797  000C04  E104               	bnz	u15120
  7798  000C06  0E05               	movlw	5
  7799  000C08  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7800  000C0A  A0D8               	btfss	status,0,c
  7801  000C0C  D002               	goto	l15377
  7802  000C0E                     u15120:
  7803  000C0E  0E00               	movlw	0
  7804  000C10  6E25               	movwf	___strtoxl$7891^0,c
  7805  000C12                     l15377:
  7806  000C12  0060  F094  F01F   	movff	___strtoxl$7891,___strtoxl$7890
  7807  000C18  6A20               	clrf	(___strtoxl$7890+1)^0,c
  7808  000C1A  501F               	movf	___strtoxl$7890^0,w,c
  7809  000C1C  1020               	iorwf	(___strtoxl$7890+1)^0,w,c
  7810  000C1E  A4D8               	btfss	status,2,c
  7811  000C20  D7C7               	goto	l15367
  7812  000C22  0E00               	movlw	0
  7813  000C24  6E2B               	movwf	___strtoxl@sign^0,c
  7814  000C26  0E00               	movlw	0
  7815  000C28  6E26               	movwf	___strtoxl@conv_done^0,c
  7816  000C2A  0E00               	movlw	0
  7817  000C2C  6E2C               	movwf	___strtoxl@skip^0,c
  7818  000C2E  0E2D               	movlw	45
  7819  000C30  1833               	xorwf	___strtoxl@c^0,w,c
  7820  000C32  A4D8               	btfss	status,2,c
  7821  000C34  D01B               	goto	l15391
  7822  000C36  0E01               	movlw	1
  7823  000C38  6E2B               	movwf	___strtoxl@sign^0,c
  7824  000C3A                     l15389:
  7825  000C3A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7826  000C3C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7827  000C3E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7828  000C44  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7829  000C4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7830  000C4C  6EF8               	movwf	tblptru,c
  7831  000C4E  0E0F               	movlw	(high __ramtop+-1)
  7832  000C50  64F7               	cpfsgt	tblptrh,c
  7833  000C52  D003               	bra	u15157
  7834  000C54  0008               	tblrd		*
  7835  000C56  50F5               	movf	tablat,w,c
  7836  000C58  D007               	bra	u15150
  7837  000C5A                     u15157:
  7838  000C5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7839  000C60  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7840  000C66  50EF               	movf	indf0,w,c
  7841  000C68                     u15150:
  7842  000C68  6E33               	movwf	___strtoxl@c^0,c
  7843  000C6A  D004               	goto	l15395
  7844  000C6C                     l15391:
  7845  000C6C  0E2B               	movlw	43
  7846  000C6E  1833               	xorwf	___strtoxl@c^0,w,c
  7847  000C70  B4D8               	btfsc	status,2,c
  7848  000C72  D7E3               	goto	l15389
  7849  000C74                     l15395:
  7850  000C74  0E30               	movlw	48
  7851  000C76  1833               	xorwf	___strtoxl@c^0,w,c
  7852  000C78  A4D8               	btfss	status,2,c
  7853  000C7A  D050               	goto	l15417
  7854  000C7C  4A31               	infsnz	___strtoxl@cp^0,f,c
  7855  000C7E  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7856  000C80  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7857  000C86  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7858  000C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  7859  000C8E  6EF8               	movwf	tblptru,c
  7860  000C90  0E0F               	movlw	(high __ramtop+-1)
  7861  000C92  64F7               	cpfsgt	tblptrh,c
  7862  000C94  D003               	bra	u15187
  7863  000C96  0008               	tblrd		*
  7864  000C98  50F5               	movf	tablat,w,c
  7865  000C9A  D007               	bra	u15180
  7866  000C9C                     u15187:
  7867  000C9C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7868  000CA2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7869  000CA8  50EF               	movf	indf0,w,c
  7870  000CAA                     u15180:
  7871  000CAA  6E33               	movwf	___strtoxl@c^0,c
  7872  000CAC  5014               	movf	___strtoxl@base^0,w,c
  7873  000CAE  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7874  000CB0  B4D8               	btfsc	status,2,c
  7875  000CB2  D005               	goto	u15200
  7876  000CB4  0E10               	movlw	16
  7877  000CB6  1814               	xorwf	___strtoxl@base^0,w,c
  7878  000CB8  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7879  000CBA  A4D8               	btfss	status,2,c
  7880  000CBC  D025               	goto	l15411
  7881  000CBE                     u15200:
  7882  000CBE  0E78               	movlw	120
  7883  000CC0  1833               	xorwf	___strtoxl@c^0,w,c
  7884  000CC2  B4D8               	btfsc	status,2,c
  7885  000CC4  D004               	goto	u15220
  7886  000CC6  0E58               	movlw	88
  7887  000CC8  1833               	xorwf	___strtoxl@c^0,w,c
  7888  000CCA  A4D8               	btfss	status,2,c
  7889  000CCC  D01D               	goto	l15411
  7890  000CCE                     u15220:
  7891  000CCE  0E00               	movlw	0
  7892  000CD0  6E15               	movwf	(___strtoxl@base+1)^0,c
  7893  000CD2  0E10               	movlw	16
  7894  000CD4  6E14               	movwf	___strtoxl@base^0,c
  7895  000CD6  4A31               	infsnz	___strtoxl@cp^0,f,c
  7896  000CD8  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7897  000CDA  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7898  000CE0  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7899  000CE6  0E00               	movlw	low (__mediumconst shr (0+16))
  7900  000CE8  6EF8               	movwf	tblptru,c
  7901  000CEA  0E0F               	movlw	(high __ramtop+-1)
  7902  000CEC  64F7               	cpfsgt	tblptrh,c
  7903  000CEE  D003               	bra	u15237
  7904  000CF0  0008               	tblrd		*
  7905  000CF2  50F5               	movf	tablat,w,c
  7906  000CF4  D007               	bra	u15230
  7907  000CF6                     u15237:
  7908  000CF6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7909  000CFC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7910  000D02  50EF               	movf	indf0,w,c
  7911  000D04                     u15230:
  7912  000D04  6E33               	movwf	___strtoxl@c^0,c
  7913  000D06  D00A               	goto	l15417
  7914  000D08                     l15411:
  7915  000D08  0E01               	movlw	1
  7916  000D0A  6E26               	movwf	___strtoxl@conv_done^0,c
  7917  000D0C  5014               	movf	___strtoxl@base^0,w,c
  7918  000D0E  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7919  000D10  A4D8               	btfss	status,2,c
  7920  000D12  D004               	goto	l15417
  7921  000D14  0E00               	movlw	0
  7922  000D16  6E15               	movwf	(___strtoxl@base+1)^0,c
  7923  000D18  0E08               	movlw	8
  7924  000D1A  6E14               	movwf	___strtoxl@base^0,c
  7925  000D1C                     l15417:
  7926  000D1C  5014               	movf	___strtoxl@base^0,w,c
  7927  000D1E  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7928  000D20  A4D8               	btfss	status,2,c
  7929  000D22  D004               	goto	l4077
  7930  000D24  0E00               	movlw	0
  7931  000D26  6E15               	movwf	(___strtoxl@base+1)^0,c
  7932  000D28  0E0A               	movlw	10
  7933  000D2A  6E14               	movwf	___strtoxl@base^0,c
  7934  000D2C                     l4077:
  7935  000D2C  5016               	movf	___strtoxl@is_signed^0,w,c
  7936  000D2E  B4D8               	btfsc	status,2,c
  7937  000D30  D014               	goto	l4078
  7938  000D32  502B               	movf	___strtoxl@sign^0,w,c
  7939  000D34  A4D8               	btfss	status,2,c
  7940  000D36  D008               	goto	l15425
  7941  000D38  0EFF               	movlw	255
  7942  000D3A  6E27               	movwf	___strtoxl@limit^0,c
  7943  000D3C  0EFF               	movlw	255
  7944  000D3E  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7945  000D40  0EFF               	movlw	255
  7946  000D42  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7947  000D44  0E7F               	movlw	127
  7948  000D46  D007               	goto	L2
  7949  000D48                     l15425:
  7950  000D48  0E00               	movlw	0
  7951  000D4A  6E27               	movwf	___strtoxl@limit^0,c
  7952  000D4C  0E00               	movlw	0
  7953  000D4E  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7954  000D50  0E00               	movlw	0
  7955  000D52  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7956  000D54  0E80               	movlw	128
  7957  000D56                     L2:
  7958  000D56  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  7959  000D58  D004               	goto	l4084
  7960  000D5A                     l4078:
  7961  000D5A  6827               	setf	___strtoxl@limit^0,c
  7962  000D5C  6828               	setf	(___strtoxl@limit+1)^0,c
  7963  000D5E  6829               	setf	(___strtoxl@limit+2)^0,c
  7964  000D60  682A               	setf	(___strtoxl@limit+3)^0,c
  7965  000D62                     l4084:
  7966  000D62  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  7967  000D68  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  7968  000D6E  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  7969  000D74  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  7970  000D7A  0E9F               	movlw	159
  7971  000D7C  6E17               	movwf	??___strtoxl^0,c
  7972  000D7E  0EFF               	movlw	255
  7973  000D80  6E18               	movwf	(??___strtoxl+1)^0,c
  7974  000D82  5033               	movf	___strtoxl@c^0,w,c
  7975  000D84  6E19               	movwf	(??___strtoxl+2)^0,c
  7976  000D86  6A1A               	clrf	(??___strtoxl+3)^0,c
  7977  000D88  0E20               	movlw	32
  7978  000D8A  1219               	iorwf	(??___strtoxl+2)^0,f,c
  7979  000D8C  0E00               	movlw	0
  7980  000D8E  121A               	iorwf	(??___strtoxl+3)^0,f,c
  7981  000D90  5017               	movf	??___strtoxl^0,w,c
  7982  000D92  2619               	addwf	(??___strtoxl+2)^0,f,c
  7983  000D94  5018               	movf	(??___strtoxl+1)^0,w,c
  7984  000D96  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7985  000D98  501A               	movf	(??___strtoxl+3)^0,w,c
  7986  000D9A  E106               	bnz	u15280
  7987  000D9C  0E1A               	movlw	26
  7988  000D9E  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7989  000DA0  B0D8               	btfsc	status,0,c
  7990  000DA2  D002               	goto	u15280
  7991  000DA4  0E01               	movlw	1
  7992  000DA6  D001               	goto	u15290
  7993  000DA8                     u15280:
  7994  000DA8  0E00               	movlw	0
  7995  000DAA                     u15290:
  7996  000DAA  6E21               	movwf	___strtoxl$7892^0,c
  7997  000DAC  6A22               	clrf	(___strtoxl$7892+1)^0,c
  7998  000DAE  5021               	movf	___strtoxl$7892^0,w,c
  7999  000DB0  1022               	iorwf	(___strtoxl$7892+1)^0,w,c
  8000  000DB2  B4D8               	btfsc	status,2,c
  8001  000DB4  D00A               	goto	l15435
  8002  000DB6  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8003  000DBC  6A09               	clrf	(toupper@c+1)^0,c
  8004  000DBE  ECE9  F03D         	call	_toupper	;wreg free
  8005  000DC2  5008               	movf	?_toupper^0,w,c
  8006  000DC4  0FC9               	addlw	201
  8007  000DC6  6E33               	movwf	___strtoxl@c^0,c
  8008  000DC8  D01C               	goto	l15443
  8009  000DCA                     l15435:
  8010  000DCA  0ED0               	movlw	208
  8011  000DCC  6E17               	movwf	??___strtoxl^0,c
  8012  000DCE  0EFF               	movlw	255
  8013  000DD0  6E18               	movwf	(??___strtoxl+1)^0,c
  8014  000DD2  5033               	movf	___strtoxl@c^0,w,c
  8015  000DD4  6E19               	movwf	(??___strtoxl+2)^0,c
  8016  000DD6  6A1A               	clrf	(??___strtoxl+3)^0,c
  8017  000DD8  5017               	movf	??___strtoxl^0,w,c
  8018  000DDA  2619               	addwf	(??___strtoxl+2)^0,f,c
  8019  000DDC  5018               	movf	(??___strtoxl+1)^0,w,c
  8020  000DDE  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8021  000DE0  501A               	movf	(??___strtoxl+3)^0,w,c
  8022  000DE2  E106               	bnz	u15310
  8023  000DE4  0E0A               	movlw	10
  8024  000DE6  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8025  000DE8  B0D8               	btfsc	status,0,c
  8026  000DEA  D002               	goto	u15310
  8027  000DEC  0E01               	movlw	1
  8028  000DEE  D001               	goto	u15320
  8029  000DF0                     u15310:
  8030  000DF0  0E00               	movlw	0
  8031  000DF2                     u15320:
  8032  000DF2  6E23               	movwf	___strtoxl$7893^0,c
  8033  000DF4  6A24               	clrf	(___strtoxl$7893+1)^0,c
  8034  000DF6  5023               	movf	___strtoxl$7893^0,w,c
  8035  000DF8  1024               	iorwf	(___strtoxl$7893+1)^0,w,c
  8036  000DFA  B4D8               	btfsc	status,2,c
  8037  000DFC  D07C               	goto	l15463
  8038  000DFE  0E30               	movlw	48
  8039  000E00  5E33               	subwf	___strtoxl@c^0,f,c
  8040  000E02                     l15443:
  8041  000E02  5033               	movf	___strtoxl@c^0,w,c
  8042  000E04  6E17               	movwf	??___strtoxl^0,c
  8043  000E06  6A18               	clrf	(??___strtoxl+1)^0,c
  8044  000E08  5014               	movf	___strtoxl@base^0,w,c
  8045  000E0A  5C17               	subwf	??___strtoxl^0,w,c
  8046  000E0C  5018               	movf	(??___strtoxl+1)^0,w,c
  8047  000E0E  0A80               	xorlw	128
  8048  000E10  6E19               	movwf	(??___strtoxl+2)^0,c
  8049  000E12  5015               	movf	(___strtoxl@base+1)^0,w,c
  8050  000E14  0A80               	xorlw	128
  8051  000E16  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8052  000E18  B0D8               	btfsc	status,0,c
  8053  000E1A  D06D               	goto	l15463
  8054  000E1C  502C               	movf	___strtoxl@skip^0,w,c
  8055  000E1E  A4D8               	btfss	status,2,c
  8056  000E20  D04F               	goto	l15459
  8057  000E22  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8058  000E28  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8059  000E2E  0E00               	movlw	0
  8060  000E30  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8061  000E32  0EFF               	movlw	-1
  8062  000E34  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8063  000E36  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8064  000E38  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8065  000E3E  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8066  000E44  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8067  000E4A  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8068  000E50  EC84  F03C         	call	___lmul	;wreg free
  8069  000E54  5033               	movf	___strtoxl@c^0,w,c
  8070  000E56  2402               	addwf	?___lmul^0,w,c
  8071  000E58  6E2D               	movwf	___strtoxl@a^0,c
  8072  000E5A  0E00               	movlw	0
  8073  000E5C  2003               	addwfc	(?___lmul+1)^0,w,c
  8074  000E5E  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8075  000E60  0E00               	movlw	0
  8076  000E62  2004               	addwfc	(?___lmul+2)^0,w,c
  8077  000E64  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8078  000E66  0E00               	movlw	0
  8079  000E68  2005               	addwfc	(?___lmul+3)^0,w,c
  8080  000E6A  6E30               	movwf	(___strtoxl@a+3)^0,c
  8081  000E6C  501B               	movf	___strtoxl@prev_a^0,w,c
  8082  000E6E  5C2D               	subwf	___strtoxl@a^0,w,c
  8083  000E70  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8084  000E72  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8085  000E74  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8086  000E76  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8087  000E78  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8088  000E7A  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8089  000E7C  A0D8               	btfss	status,0,c
  8090  000E7E  D00D               	goto	u15380
  8091  000E80  5016               	movf	___strtoxl@is_signed^0,w,c
  8092  000E82  B4D8               	btfsc	status,2,c
  8093  000E84  D01D               	goto	l15459
  8094  000E86  502D               	movf	___strtoxl@a^0,w,c
  8095  000E88  5C27               	subwf	___strtoxl@limit^0,w,c
  8096  000E8A  502E               	movf	(___strtoxl@a+1)^0,w,c
  8097  000E8C  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8098  000E8E  502F               	movf	(___strtoxl@a+2)^0,w,c
  8099  000E90  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8100  000E92  5030               	movf	(___strtoxl@a+3)^0,w,c
  8101  000E94  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8102  000E96  B0D8               	btfsc	status,0,c
  8103  000E98  D013               	goto	l15459
  8104  000E9A                     u15380:
  8105  000E9A  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8106  000EA0  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8107  000EA6  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8108  000EAC  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8109  000EB2  0E00               	movlw	0
  8110  000EB4  0101               	movlb	1	; () banked
  8111  000EB6  6F56               	movwf	(_errno+1)& (0+255),b
  8112  000EB8  0E22               	movlw	34
  8113  000EBA  6F55               	movwf	_errno& (0+255),b
  8114  000EBC  0E01               	movlw	1
  8115  000EBE  6E2C               	movwf	___strtoxl@skip^0,c
  8116  000EC0                     l15459:
  8117  000EC0  4A31               	infsnz	___strtoxl@cp^0,f,c
  8118  000EC2  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8119  000EC4  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8120  000ECA  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8121  000ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8122  000ED2  6EF8               	movwf	tblptru,c
  8123  000ED4  0E0F               	movlw	(high __ramtop+-1)
  8124  000ED6  64F7               	cpfsgt	tblptrh,c
  8125  000ED8  D003               	bra	u15397
  8126  000EDA  0008               	tblrd		*
  8127  000EDC  50F5               	movf	tablat,w,c
  8128  000EDE  D007               	bra	u15390
  8129  000EE0                     u15397:
  8130  000EE0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8131  000EE6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8132  000EEC  50EF               	movf	indf0,w,c
  8133  000EEE                     u15390:
  8134  000EEE  6E33               	movwf	___strtoxl@c^0,c
  8135  000EF0  0E01               	movlw	1
  8136  000EF2  6E26               	movwf	___strtoxl@conv_done^0,c
  8137  000EF4  D736               	goto	l4084
  8138  000EF6                     l15463:
  8139  000EF6  502C               	movf	___strtoxl@skip^0,w,c
  8140  000EF8  A4D8               	btfss	status,2,c
  8141  000EFA  D00B               	goto	l15469
  8142  000EFC  502B               	movf	___strtoxl@sign^0,w,c
  8143  000EFE  B4D8               	btfsc	status,2,c
  8144  000F00  D008               	goto	l15469
  8145  000F02  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8146  000F04  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8147  000F06  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8148  000F08  6C2D               	negf	___strtoxl@a^0,c
  8149  000F0A  0E00               	movlw	0
  8150  000F0C  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8151  000F0E  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8152  000F10  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8153  000F12                     l15469:
  8154  000F12  5012               	movf	___strtoxl@endptr^0,w,c
  8155  000F14  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8156  000F16  B4D8               	btfsc	status,2,c
  8157  000F18  D015               	goto	l15477
  8158  000F1A  5026               	movf	___strtoxl@conv_done^0,w,c
  8159  000F1C  A4D8               	btfss	status,2,c
  8160  000F1E  D006               	goto	l15475
  8161  000F20  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8162  000F26  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8163  000F2C                     l15475:
  8164  000F2C  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8165  000F32  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8166  000F38  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8167  000F3E  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8168  000F44                     l15477:
  8169  000F44  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8170  000F4A  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8171  000F50  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8172  000F56  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8173  000F5C  0012               	return		;funcret
  8174  000F5E                     __end_of___strtoxl:
  8175                           	opt callstack 0
  8176                           
  8177 ;; *************** function ___lmul *****************
  8178 ;; Defined at:
  8179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  multiplier      4    1[COMRAM] unsigned long 
  8182 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  product         4    9[COMRAM] unsigned long 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  4    1[COMRAM] unsigned long 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8194 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;Total ram usage:       12 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    7
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		___strtoxl
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text30
  8209  007908                     __ptext30:
  8210                           	opt callstack 0
  8211  007908                     ___lmul:
  8212                           	opt callstack 18
  8213                           
  8214                           ;incstack = 0
  8215  007908  0E00               	movlw	0
  8216  00790A  6E0A               	movwf	___lmul@product^0,c
  8217  00790C  0E00               	movlw	0
  8218  00790E  6E0B               	movwf	(___lmul@product+1)^0,c
  8219  007910  0E00               	movlw	0
  8220  007912  6E0C               	movwf	(___lmul@product+2)^0,c
  8221  007914  0E00               	movlw	0
  8222  007916  6E0D               	movwf	(___lmul@product+3)^0,c
  8223  007918                     l10159:
  8224  007918  A002               	btfss	___lmul@multiplier^0,0,c
  8225  00791A  D008               	goto	l10163
  8226  00791C  5006               	movf	___lmul@multiplicand^0,w,c
  8227  00791E  260A               	addwf	___lmul@product^0,f,c
  8228  007920  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8229  007922  220B               	addwfc	(___lmul@product+1)^0,f,c
  8230  007924  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8231  007926  220C               	addwfc	(___lmul@product+2)^0,f,c
  8232  007928  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8233  00792A  220D               	addwfc	(___lmul@product+3)^0,f,c
  8234  00792C                     l10163:
  8235  00792C  90D8               	bcf	status,0,c
  8236  00792E  3606               	rlcf	___lmul@multiplicand^0,f,c
  8237  007930  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8238  007932  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8239  007934  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8240  007936  90D8               	bcf	status,0,c
  8241  007938  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8242  00793A  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8243  00793C  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8244  00793E  3202               	rrcf	___lmul@multiplier^0,f,c
  8245  007940  5002               	movf	___lmul@multiplier^0,w,c
  8246  007942  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8247  007944  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8248  007946  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8249  007948  A4D8               	btfss	status,2,c
  8250  00794A  D7E6               	goto	l10159
  8251  00794C  0060  F028  F002   	movff	___lmul@product,?___lmul
  8252  007952  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8253  007958  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8254  00795E  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8255  007964  0012               	return		;funcret
  8256  007966                     __end_of___lmul:
  8257                           	opt callstack 0
  8258                           
  8259 ;; *************** function _cmdRstCAD *****************
  8260 ;; Defined at:
  8261 ;;		line 541 in file "../app/app_src/application.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 3F/1
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;Total ram usage:        0 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:   16
  8282 ;; This function calls:
  8283 ;;		_printf
  8284 ;; This function is called by:
  8285 ;;		_executeATCommand
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text31
  8290  008BCA                     __ptext31:
  8291                           	opt callstack 0
  8292  008BCA                     _cmdRstCAD:
  8293                           	opt callstack 12
  8294                           
  8295                           ;../app/app_src/application.c: 542:  cadCounter = 0;
  8296                           
  8297                           ;incstack = 0
  8298  008BCA  0E00               	movlw	0
  8299  008BCC  0100               	movlb	0	; () banked
  8300  008BCE  6FED               	movwf	_cadCounter& (0+255),b
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;../app/app_src/application.c: 543:  printf("OK\r\n");
  8304  008BD0  0ED7               	movlw	low STR_13
  8305  008BD2  6E55               	movwf	printf@fmt^0,c
  8306  008BD4  0EFF               	movlw	high STR_13
  8307  008BD6  6E56               	movwf	(printf@fmt+1)^0,c
  8308  008BD8  EC3B  F044         	call	_printf	;wreg free
  8309                           
  8310                           ; BSR set to: 1
  8311  008BDC  0012               	return		;funcret
  8312  008BDE                     __end_of_cmdRstCAD:
  8313                           	opt callstack 0
  8314                           
  8315 ;; *************** function _cmdReset *****************
  8316 ;; Defined at:
  8317 ;;		line 681 in file "../app/app_src/application.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		None
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    7
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_executeATCommand
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text32
  8346  008D62                     __ptext32:
  8347                           	opt callstack 0
  8348  008D62                     _cmdReset:
  8349                           	opt callstack 21
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;incstack = 0
  8353  008D62  00FF               	reset		;# 
  8354  008D64                     l355:
  8355  008D64  D7FF               	goto	l355
  8356  008D66                     __end_of_cmdReset:
  8357                           	opt callstack 0
  8358                           
  8359 ;; *************** function _cmdRecv *****************
  8360 ;; Defined at:
  8361 ;;		line 364 in file "../app/app_src/application.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		None
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;Total ram usage:        0 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    7
  8382 ;; This function calls:
  8383 ;;		Nothing
  8384 ;; This function is called by:
  8385 ;;		_executeATCommand
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text33
  8390  008D6A                     __ptext33:
  8391                           	opt callstack 0
  8392  008D6A                     _cmdRecv:
  8393                           	opt callstack 21
  8394                           
  8395                           ;../app/app_src/application.c: 378:  return;
  8396                           
  8397                           ;incstack = 0
  8398  008D6A  0012               	return		;funcret
  8399  008D6C                     __end_of_cmdRecv:
  8400                           	opt callstack 0
  8401                           
  8402 ;; *************** function _cmdNaddr *****************
  8403 ;; Defined at:
  8404 ;;		line 332 in file "../app/app_src/application.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 3F/1
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:   16
  8425 ;; This function calls:
  8426 ;;		_printf
  8427 ;; This function is called by:
  8428 ;;		_executeATCommand
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text34
  8433  008B5C                     __ptext34:
  8434                           	opt callstack 0
  8435  008B5C                     _cmdNaddr:
  8436                           	opt callstack 12
  8437                           
  8438                           ;../app/app_src/application.c: 333:  printf("NADDR=%02X\r\n",currentNetID);
  8439                           
  8440                           ;incstack = 0
  8441  008B5C  0E73               	movlw	low STR_15
  8442  008B5E  6E55               	movwf	printf@fmt^0,c
  8443  008B60  0EFE               	movlw	high STR_15
  8444  008B62  6E56               	movwf	(printf@fmt+1)^0,c
  8445  008B64  0060  F3E8  F057   	movff	_currentNetID,?_printf+2
  8446  008B6A  6A58               	clrf	(?_printf+3)^0,c
  8447  008B6C  EC3B  F044         	call	_printf	;wreg free
  8448                           
  8449                           ; BSR set to: 1
  8450  008B70  0012               	return		;funcret
  8451  008B72                     __end_of_cmdNaddr:
  8452                           	opt callstack 0
  8453                           
  8454 ;; *************** function _cmdMac *****************
  8455 ;; Defined at:
  8456 ;;		line 387 in file "../app/app_src/application.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;		None
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  i               1   23[BANK0 ] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 3F/1
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        2 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:   16
  8477 ;; This function calls:
  8478 ;;		_printf
  8479 ;; This function is called by:
  8480 ;;		_executeATCommand
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text35
  8485  007D62                     __ptext35:
  8486                           	opt callstack 0
  8487  007D62                     _cmdMac:
  8488                           	opt callstack 12
  8489                           
  8490                           ;../app/app_src/application.c: 388:  printf("MAC=");
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;incstack = 0
  8494  007D62  0EDC               	movlw	low STR_18
  8495  007D64  6E55               	movwf	printf@fmt^0,c
  8496  007D66  0EFF               	movlw	high STR_18
  8497  007D68  6E56               	movwf	(printf@fmt+1)^0,c
  8498  007D6A  EC3B  F044         	call	_printf	;wreg free
  8499                           
  8500                           ; BSR set to: 1
  8501                           ;../app/app_src/application.c: 389:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8502  007D6E  0E00               	movlw	0
  8503  007D70  0100               	movlb	0	; () banked
  8504  007D72  6F77               	movwf	cmdMac@i& (0+255),b
  8505  007D74                     l16003:
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;../app/app_src/application.c: 390:   printf("%02X", EUIDbyte[i]);
  8509  007D74  0EF5               	movlw	low STR_19
  8510  007D76  6E55               	movwf	printf@fmt^0,c
  8511  007D78  0EFF               	movlw	high STR_19
  8512  007D7A  6E56               	movwf	(printf@fmt+1)^0,c
  8513  007D7C  0EBC               	movlw	low _EUIDbyte
  8514  007D7E  2577               	addwf	cmdMac@i& (0+255),w,b
  8515  007D80  6ED9               	movwf	fsr2l,c
  8516  007D82  6ADA               	clrf	fsr2h,c
  8517  007D84  0E01               	movlw	high _EUIDbyte
  8518  007D86  22DA               	addwfc	fsr2h,f,c
  8519  007D88  50DF               	movf	indf2,w,c
  8520  007D8A  6F76               	movwf	??_cmdMac& (0+255),b
  8521  007D8C  5176               	movf	??_cmdMac& (0+255),w,b
  8522  007D8E  6E57               	movwf	(?_printf+2)^0,c
  8523  007D90  6A58               	clrf	(?_printf+3)^0,c
  8524  007D92  EC3B  F044         	call	_printf	;wreg free
  8525                           
  8526                           ; BSR set to: 1
  8527                           ;../app/app_src/application.c: 391:  }
  8528  007D96  0100               	movlb	0	; () banked
  8529  007D98  2B77               	incf	cmdMac@i& (0+255),f,b
  8530                           
  8531                           ; BSR set to: 0
  8532  007D9A  0E0B               	movlw	11
  8533  007D9C  6577               	cpfsgt	cmdMac@i& (0+255),b
  8534  007D9E  D7EA               	goto	l16003
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;../app/app_src/application.c: 392:  printf("\r\n");
  8538  007DA0  0ED4               	movlw	low (STR_135+2)
  8539  007DA2  6E55               	movwf	printf@fmt^0,c
  8540  007DA4  0EFF               	movlw	high (STR_135+2)
  8541  007DA6  6E56               	movwf	(printf@fmt+1)^0,c
  8542  007DA8  EC3B  F044         	call	_printf	;wreg free
  8543                           
  8544                           ; BSR set to: 1
  8545  007DAC  0012               	return		;funcret
  8546  007DAE                     __end_of_cmdMac:
  8547                           	opt callstack 0
  8548                           
  8549 ;; *************** function _cmdI *****************
  8550 ;; Defined at:
  8551 ;;		line 207 in file "../app/app_src/application.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 3F/1
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:   17
  8572 ;; This function calls:
  8573 ;;		_sendInfo
  8574 ;; This function is called by:
  8575 ;;		_executeATCommand
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text36
  8580  008D4A                     __ptext36:
  8581                           	opt callstack 0
  8582  008D4A                     _cmdI:
  8583                           	opt callstack 11
  8584                           
  8585                           ;../app/app_src/application.c: 209:     sendInfo();
  8586                           
  8587                           ; BSR set to: 1
  8588                           ;incstack = 0
  8589  008D4A  ECB3  F03C         	call	_sendInfo	;wreg free
  8590                           
  8591                           ; BSR set to: 1
  8592  008D4E  0012               	return		;funcret
  8593  008D50                     __end_of_cmdI:
  8594                           	opt callstack 0
  8595                           
  8596 ;; *************** function _sendInfo *****************
  8597 ;; Defined at:
  8598 ;;		line 1146 in file "../app/app_src/application.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 3F/1
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:   16
  8619 ;; This function calls:
  8620 ;;		_printf
  8621 ;; This function is called by:
  8622 ;;		_cmdI
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text37
  8627  007966                     __ptext37:
  8628                           	opt callstack 0
  8629  007966                     _sendInfo:
  8630                           	opt callstack 11
  8631                           
  8632                           ;../app/app_src/application.c: 1148:     printf("LoRa Mesh\r\n");
  8633                           
  8634                           ; BSR set to: 1
  8635                           ;incstack = 0
  8636  007966  0EC0               	movlw	low STR_131
  8637  007968  6E55               	movwf	printf@fmt^0,c
  8638  00796A  0EFE               	movlw	high STR_131
  8639  00796C  6E56               	movwf	(printf@fmt+1)^0,c
  8640  00796E  EC3B  F044         	call	_printf	;wreg free
  8641  007972  0EF3               	movlw	low STR_132
  8642  007974  6E55               	movwf	printf@fmt^0,c
  8643  007976  0EFD               	movlw	high STR_132
  8644  007978  6E56               	movwf	(printf@fmt+1)^0,c
  8645  00797A  0E00               	movlw	0
  8646  00797C  6E58               	movwf	(?_printf+3)^0,c
  8647  00797E  0E01               	movlw	1
  8648  007980  6E57               	movwf	(?_printf+2)^0,c
  8649  007982  0E00               	movlw	0
  8650  007984  6E5A               	movwf	(?_printf+5)^0,c
  8651  007986  0E00               	movlw	0
  8652  007988  6E59               	movwf	(?_printf+4)^0,c
  8653  00798A  EC3B  F044         	call	_printf	;wreg free
  8654  00798E  0ED7               	movlw	low STR_133
  8655  007990  6E55               	movwf	printf@fmt^0,c
  8656  007992  0EFD               	movlw	high STR_133
  8657  007994  6E56               	movwf	(printf@fmt+1)^0,c
  8658  007996  0E00               	movlw	0
  8659  007998  6E58               	movwf	(?_printf+3)^0,c
  8660  00799A  0E02               	movlw	2
  8661  00799C  6E57               	movwf	(?_printf+2)^0,c
  8662  00799E  0E00               	movlw	0
  8663  0079A0  6E5A               	movwf	(?_printf+5)^0,c
  8664  0079A2  0E01               	movlw	1
  8665  0079A4  6E59               	movwf	(?_printf+4)^0,c
  8666  0079A6  EC3B  F044         	call	_printf	;wreg free
  8667                           
  8668                           ;../app/app_src/application.c: 1152:     printf("Region ");
  8669  0079AA  0E41               	movlw	low STR_134
  8670  0079AC  6E55               	movwf	printf@fmt^0,c
  8671  0079AE  0EFF               	movlw	high STR_134
  8672  0079B0  6E56               	movwf	(printf@fmt+1)^0,c
  8673  0079B2  EC3B  F044         	call	_printf	;wreg free
  8674                           
  8675                           ;../app/app_src/application.c: 1154:     printf("NA\r\n");
  8676  0079B6  0ED2               	movlw	low STR_135
  8677  0079B8  6E55               	movwf	printf@fmt^0,c
  8678  0079BA  0EFF               	movlw	high STR_135
  8679  0079BC  6E56               	movwf	(printf@fmt+1)^0,c
  8680  0079BE  EC3B  F044         	call	_printf	;wreg free
  8681                           
  8682                           ; BSR set to: 1
  8683  0079C2  0012               	return		;funcret
  8684  0079C4                     __end_of_sendInfo:
  8685                           	opt callstack 0
  8686                           
  8687 ;; *************** function _cmdGetTX *****************
  8688 ;; Defined at:
  8689 ;;		line 605 in file "../app/app_src/application.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 3F/1
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;Total ram usage:        0 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:   16
  8710 ;; This function calls:
  8711 ;;		_printf
  8712 ;; This function is called by:
  8713 ;;		_executeATCommand
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text38
  8718  008B72                     __ptext38:
  8719                           	opt callstack 0
  8720  008B72                     _cmdGetTX:
  8721                           	opt callstack 12
  8722                           
  8723                           ;../app/app_src/application.c: 606:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  8724                           
  8725                           ; BSR set to: 1
  8726                           ;incstack = 0
  8727  008B72  0E65               	movlw	low STR_37
  8728  008B74  6E55               	movwf	printf@fmt^0,c
  8729  008B76  0EFE               	movlw	high STR_37
  8730  008B78  6E56               	movwf	(printf@fmt+1)^0,c
  8731  008B7A  0060  F3A8  F057   	movff	_TXPower,?_printf+2
  8732  008B80  6A58               	clrf	(?_printf+3)^0,c
  8733  008B82  EC3B  F044         	call	_printf	;wreg free
  8734                           
  8735                           ; BSR set to: 1
  8736  008B86  0012               	return		;funcret
  8737  008B88                     __end_of_cmdGetTX:
  8738                           	opt callstack 0
  8739                           
  8740 ;; *************** function _cmdGetTTL *****************
  8741 ;; Defined at:
  8742 ;;		line 503 in file "../app/app_src/application.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		None
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;Total ram usage:        0 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    7
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_executeATCommand
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text39
  8771  008D6C                     __ptext39:
  8772                           	opt callstack 0
  8773  008D6C                     _cmdGetTTL:
  8774                           	opt callstack 21
  8775                           
  8776                           ;../app/app_src/application.c: 505:  return;
  8777                           
  8778                           ; BSR set to: 1
  8779                           ;incstack = 0
  8780  008D6C  0012               	return		;funcret
  8781  008D6E                     __end_of_cmdGetTTL:
  8782                           	opt callstack 0
  8783                           
  8784 ;; *************** function _cmdGetSF *****************
  8785 ;; Defined at:
  8786 ;;		line 747 in file "../app/app_src/application.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;		None
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 3F/1
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;Total ram usage:        0 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:   16
  8807 ;; This function calls:
  8808 ;;		_printf
  8809 ;; This function is called by:
  8810 ;;		_executeATCommand
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text40
  8815  008B88                     __ptext40:
  8816                           	opt callstack 0
  8817  008B88                     _cmdGetSF:
  8818                           	opt callstack 12
  8819                           
  8820                           ;../app/app_src/application.c: 748:     printf("SF=%u\r\n", current_sf);
  8821                           
  8822                           ;incstack = 0
  8823  008B88  0E39               	movlw	low STR_56
  8824  008B8A  6E55               	movwf	printf@fmt^0,c
  8825  008B8C  0EFF               	movlw	high STR_56
  8826  008B8E  6E56               	movwf	(printf@fmt+1)^0,c
  8827  008B90  0060  F3B0  F057   	movff	_current_sf,?_printf+2
  8828  008B96  6A58               	clrf	(?_printf+3)^0,c
  8829  008B98  EC3B  F044         	call	_printf	;wreg free
  8830                           
  8831                           ; BSR set to: 1
  8832  008B9C  0012               	return		;funcret
  8833  008B9E                     __end_of_cmdGetSF:
  8834                           	opt callstack 0
  8835                           
  8836 ;; *************** function _cmdGetRxCnt *****************
  8837 ;; Defined at:
  8838 ;;		line 782 in file "../app/app_src/application.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  atCommand       2    1[COMRAM] PTR unsigned char 
  8841 ;;		 -> atCommand(80), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		None
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    7
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_executeATCommand
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text41
  8868  008D6E                     __ptext41:
  8869                           	opt callstack 0
  8870  008D6E                     _cmdGetRxCnt:
  8871                           	opt callstack 21
  8872                           
  8873                           ; BSR set to: 1
  8874                           ;incstack = 0
  8875  008D6E  0012               	return		;funcret
  8876  008D70                     __end_of_cmdGetRxCnt:
  8877                           	opt callstack 0
  8878                           
  8879 ;; *************** function _cmdGetRFCH *****************
  8880 ;; Defined at:
  8881 ;;		line 569 in file "../app/app_src/application.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 3F/1
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:   16
  8902 ;; This function calls:
  8903 ;;		_printf
  8904 ;; This function is called by:
  8905 ;;		_executeATCommand
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text42
  8910  008A5C                     __ptext42:
  8911                           	opt callstack 0
  8912  008A5C                     _cmdGetRFCH:
  8913                           	opt callstack 12
  8914                           
  8915                           ;../app/app_src/application.c: 570:  printf("CHANNEL=%u\r\n",(channel + 1));
  8916                           
  8917                           ;incstack = 0
  8918  008A5C  0E9A               	movlw	low STR_33
  8919  008A5E  6E55               	movwf	printf@fmt^0,c
  8920  008A60  0EFE               	movlw	high STR_33
  8921  008A62  6E56               	movwf	(printf@fmt+1)^0,c
  8922  008A64  0E01               	movlw	1
  8923  008A66  0100               	movlb	0	; () banked
  8924  008A68  25EB               	addwf	_channel& (0+255),w,b
  8925  008A6A  6E57               	movwf	(?_printf+2)^0,c
  8926  008A6C  6A58               	clrf	(?_printf+3)^0,c
  8927  008A6E  0E00               	movlw	0
  8928  008A70  2258               	addwfc	(?_printf+3)^0,f,c
  8929  008A72  EC3B  F044         	call	_printf	;wreg free
  8930                           
  8931                           ; BSR set to: 1
  8932  008A76  0012               	return		;funcret
  8933  008A78                     __end_of_cmdGetRFCH:
  8934                           	opt callstack 0
  8935                           
  8936 ;; *************** function _cmdGetMode *****************
  8937 ;; Defined at:
  8938 ;;		line 553 in file "../app/app_src/application.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 3F/1
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; Hardware stack levels required when called:   16
  8959 ;; This function calls:
  8960 ;;		_printf
  8961 ;; This function is called by:
  8962 ;;		_executeATCommand
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text43
  8967  008C6A                     __ptext43:
  8968                           	opt callstack 0
  8969  008C6A                     _cmdGetMode:
  8970                           	opt callstack 12
  8971                           
  8972                           ;../app/app_src/application.c: 555:   printf("MODE = REPEATER\r\n");
  8973                           
  8974                           ; BSR set to: 1
  8975                           ;incstack = 0
  8976  008C6A  0E34               	movlw	low STR_31
  8977  008C6C  6E55               	movwf	printf@fmt^0,c
  8978  008C6E  0EFE               	movlw	high STR_31
  8979  008C70  6E56               	movwf	(printf@fmt+1)^0,c
  8980  008C72  EC3B  F044         	call	_printf	;wreg free
  8981                           
  8982                           ; BSR set to: 1
  8983                           
  8984                           ;../app/app_src/application.c: 556:  }
  8985  008C76  0012               	return		;funcret
  8986  008C78                     __end_of_cmdGetMode:
  8987                           	opt callstack 0
  8988                           
  8989 ;; *************** function _cmdGetCADRSSI *****************
  8990 ;; Defined at:
  8991 ;;		line 645 in file "../app/app_src/application.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 3F/1
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:   16
  9012 ;; This function calls:
  9013 ;;		_printf
  9014 ;; This function is called by:
  9015 ;;		_executeATCommand
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text44
  9020  008A78                     __ptext44:
  9021                           	opt callstack 0
  9022  008A78                     _cmdGetCADRSSI:
  9023                           	opt callstack 12
  9024                           
  9025                           ;../app/app_src/application.c: 646:  printf("CAD RSS=%i\r\n",RSSITarget);
  9026                           
  9027                           ; BSR set to: 1
  9028                           ;incstack = 0
  9029  008A78  0E80               	movlw	low STR_42
  9030  008A7A  6E55               	movwf	printf@fmt^0,c
  9031  008A7C  0EFE               	movlw	high STR_42
  9032  008A7E  6E56               	movwf	(printf@fmt+1)^0,c
  9033  008A80  0100               	movlb	0	; () banked
  9034  008A82  51F9               	movf	_RSSITarget& (0+255),w,b
  9035  008A84  6E57               	movwf	(?_printf+2)^0,c
  9036  008A86  6A58               	clrf	(?_printf+3)^0,c
  9037  008A88  BE57               	btfsc	(?_printf+2)^0,7,c
  9038  008A8A  0658               	decf	(?_printf+3)^0,f,c
  9039  008A8C  EC3B  F044         	call	_printf	;wreg free
  9040                           
  9041                           ; BSR set to: 1
  9042  008A90  0012               	return		;funcret
  9043  008A92                     __end_of_cmdGetCADRSSI:
  9044                           	opt callstack 0
  9045                           
  9046 ;; *************** function _cmdGetCAD *****************
  9047 ;; Defined at:
  9048 ;;		line 530 in file "../app/app_src/application.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 3F/1
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;Total ram usage:        0 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:   16
  9069 ;; This function calls:
  9070 ;;		_printf
  9071 ;; This function is called by:
  9072 ;;		_executeATCommand
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text45
  9077  008B9E                     __ptext45:
  9078                           	opt callstack 0
  9079  008B9E                     _cmdGetCAD:
  9080                           	opt callstack 12
  9081                           
  9082                           ;../app/app_src/application.c: 531:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9083                           
  9084                           ; BSR set to: 1
  9085                           ;incstack = 0
  9086  008B9E  0E0D               	movlw	low STR_29
  9087  008BA0  6E55               	movwf	printf@fmt^0,c
  9088  008BA2  0EFE               	movlw	high STR_29
  9089  008BA4  6E56               	movwf	(printf@fmt+1)^0,c
  9090  008BA6  0060  F3B4  F057   	movff	_cadCounter,?_printf+2
  9091  008BAC  6A58               	clrf	(?_printf+3)^0,c
  9092  008BAE  EC3B  F044         	call	_printf	;wreg free
  9093                           
  9094                           ; BSR set to: 1
  9095  008BB2  0012               	return		;funcret
  9096  008BB4                     __end_of_cmdGetCAD:
  9097                           	opt callstack 0
  9098                           
  9099 ;; *************** function _cmdBootLoad *****************
  9100 ;; Defined at:
  9101 ;;		line 718 in file "../app/app_src/application.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;		None
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;		None
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;Total ram usage:        2 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:   16
  9122 ;; This function calls:
  9123 ;;		_DATAEE_WriteByte_Platform
  9124 ;;		_printf
  9125 ;; This function is called by:
  9126 ;;		_executeATCommand
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text46
  9131  008308                     __ptext46:
  9132                           	opt callstack 0
  9133  008308                     _cmdBootLoad:
  9134                           	opt callstack 12
  9135                           
  9136                           ;../app/app_src/application.c: 719:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9137                           
  9138                           ; BSR set to: 1
  9139                           ;incstack = 0
  9140  008308  0E00               	movlw	0
  9141  00830A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9142  00830C  0E00               	movlw	0
  9143  00830E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9144  008310  0E00               	movlw	0
  9145  008312  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9146  008314  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  9147                           
  9148                           ;../app/app_src/application.c: 720:     printf("OK\r\n");
  9149  008318  0ED7               	movlw	low STR_13
  9150  00831A  6E55               	movwf	printf@fmt^0,c
  9151  00831C  0EFF               	movlw	high STR_13
  9152  00831E  6E56               	movwf	(printf@fmt+1)^0,c
  9153  008320  EC3B  F044         	call	_printf	;wreg free
  9154                           
  9155                           ; BSR set to: 1
  9156                           ;../app/app_src/application.c: 721:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9157  008324  0E52               	movlw	82
  9158  008326  0100               	movlb	0	; () banked
  9159  008328  6F77               	movwf	(??_cmdBootLoad+1)& (0+255),b
  9160  00832A  0E2B               	movlw	43
  9161  00832C  6F76               	movwf	??_cmdBootLoad& (0+255),b
  9162  00832E  0E00               	movlw	0
  9163  008330                     u17397:
  9164  008330  2EE8               	decfsz	wreg,f,c
  9165  008332  D7FE               	bra	u17397
  9166  008334  2F76               	decfsz	??_cmdBootLoad& (0+255),f,b
  9167  008336  D7FC               	bra	u17397
  9168  008338  2F77               	decfsz	(??_cmdBootLoad+1)& (0+255),f,b
  9169  00833A  D7FA               	bra	u17397
  9170  00833C  F000               	nop	
  9171  00833E  00FF               	reset		;# 
  9172  008340  0012               	return		;funcret
  9173  008342                     __end_of_cmdBootLoad:
  9174                           	opt callstack 0
  9175                           
  9176 ;; *************** function _cmdBcast *****************
  9177 ;; Defined at:
  9178 ;;		line 261 in file "../app/app_src/application.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  9181 ;;		 -> atCommand(80), 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  buf_id          1   28[BANK0 ] unsigned char 
  9184 ;;  p2              3    0        PTR unsigned char 
  9185 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  9186 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 3F/1
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9199 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9200 ;;Total ram usage:        7 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:   16
  9203 ;; This function calls:
  9204 ;;		_NWK_DataReq
  9205 ;;		_get_free_tx_buffer
  9206 ;;		_memcpy
  9207 ;;		_memset
  9208 ;;		_printf
  9209 ;;		_strlen
  9210 ;;		_strstr
  9211 ;; This function is called by:
  9212 ;;		_executeATCommand
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text47
  9217  002EE2                     __ptext47:
  9218                           	opt callstack 0
  9219  002EE2                     _cmdBcast:
  9220                           	opt callstack 12
  9221                           
  9222                           ;../app/app_src/application.c: 262:  char *p1,*p2;;../app/app_src/application.c: 264:  p
      +                          1 = strstr(cmd,"=") + 1;
  9223                           
  9224                           ;incstack = 0
  9225  002EE2  0060  F1D8  F00D   	movff	cmdBcast@cmd,strstr@h
  9226  002EE8  0060  F1DC  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9227  002EEE  0EDF               	movlw	low (STR_18+3)
  9228  002EF0  6E0F               	movwf	strstr@n^0,c
  9229  002EF2  0EFF               	movlw	high (STR_18+3)
  9230  002EF4  6E10               	movwf	(strstr@n+1)^0,c
  9231  002EF6  ECCB  F02D         	call	_strstr	;wreg free
  9232  002EFA  0E01               	movlw	1
  9233  002EFC  240D               	addwf	?_strstr^0,w,c
  9234  002EFE  0100               	movlb	0	; () banked
  9235  002F00  6F7A               	movwf	cmdBcast@p1& (0+255),b
  9236  002F02  0E00               	movlw	0
  9237  002F04  200E               	addwfc	(?_strstr+1)^0,w,c
  9238  002F06  6F7B               	movwf	(cmdBcast@p1+1)& (0+255),b
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;../app/app_src/application.c: 266:  if((!p1) || (strlen(p1) > 64)){
  9242  002F08  517A               	movf	cmdBcast@p1& (0+255),w,b
  9243  002F0A  117B               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9244  002F0C  B4D8               	btfsc	status,2,c
  9245  002F0E  D00E               	goto	u16150
  9246                           
  9247                           ; BSR set to: 0
  9248  002F10  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9249  002F16  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9250  002F1C  EC3B  F03E         	call	_strlen	;wreg free
  9251  002F20  5003               	movf	(?_strlen+1)^0,w,c
  9252  002F22  E104               	bnz	u16150
  9253  002F24  0E41               	movlw	65
  9254  002F26  5C02               	subwf	?_strlen^0,w,c
  9255  002F28  A0D8               	btfss	status,0,c
  9256  002F2A  D009               	goto	l15923
  9257  002F2C                     u16150:
  9258                           
  9259                           ;../app/app_src/application.c: 267:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9260  002F2C  0ECC               	movlw	low STR_4
  9261  002F2E  6E55               	movwf	printf@fmt^0,c
  9262  002F30  0EFE               	movlw	high STR_4
  9263  002F32  6E56               	movwf	(printf@fmt+1)^0,c
  9264  002F34  0E07               	movlw	7
  9265  002F36  6E57               	movwf	(?_printf+2)^0,c
  9266  002F38  EC3B  F044         	call	_printf	;wreg free
  9267                           
  9268                           ;../app/app_src/application.c: 268:  }
  9269  002F3C  0012               	return	
  9270  002F3E                     l15923:
  9271                           
  9272                           ;../app/app_src/application.c: 270:   uint8_t buf_id;;../app/app_src/application.c: 271:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9273  002F3E  0E7C               	movlw	low cmdBcast@buf_id
  9274  002F40  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9275  002F42  EC63  F03B         	call	_get_free_tx_buffer	;wreg free
  9276  002F46  0900               	iorlw	0
  9277  002F48  A4D8               	btfss	status,2,c
  9278  002F4A  D009               	goto	l15929
  9279                           
  9280                           ;../app/app_src/application.c: 272:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9281  002F4C  0ECC               	movlw	low STR_4
  9282  002F4E  6E55               	movwf	printf@fmt^0,c
  9283  002F50  0EFE               	movlw	high STR_4
  9284  002F52  6E56               	movwf	(printf@fmt+1)^0,c
  9285  002F54  0E11               	movlw	17
  9286  002F56  6E57               	movwf	(?_printf+2)^0,c
  9287  002F58  EC3B  F044         	call	_printf	;wreg free
  9288  002F5C  0012               	return	
  9289  002F5E                     l15929:
  9290                           
  9291                           ;../app/app_src/application.c: 275:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9292  002F5E  0100               	movlb	0	; () banked
  9293  002F60  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9294  002F62  0D83               	mullw	131
  9295  002F64  0E80               	movlw	low (_tx_buffer+22)
  9296  002F66  24F3               	addwf	243,w,c
  9297  002F68  6E02               	movwf	memset@dest^0,c
  9298  002F6A  0E08               	movlw	high (_tx_buffer+22)
  9299  002F6C  20F4               	addwfc	prodh,w,c
  9300  002F6E  6E03               	movwf	(memset@dest+1)^0,c
  9301  002F70  0E00               	movlw	0
  9302  002F72  6E05               	movwf	(memset@c+1)^0,c
  9303  002F74  0E00               	movlw	0
  9304  002F76  6E04               	movwf	memset@c^0,c
  9305  002F78  0E00               	movlw	0
  9306  002F7A  6E07               	movwf	(memset@n+1)^0,c
  9307  002F7C  0E6D               	movlw	109
  9308  002F7E  6E06               	movwf	memset@n^0,c
  9309  002F80  EC2F  F022         	call	_memset	;wreg free
  9310                           
  9311                           ;../app/app_src/application.c: 276:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9312  002F84  0100               	movlb	0	; () banked
  9313  002F86  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9314  002F88  0D83               	mullw	131
  9315  002F8A  0E80               	movlw	low (_tx_buffer+22)
  9316  002F8C  24F3               	addwf	243,w,c
  9317  002F8E  6E08               	movwf	memcpy@d1^0,c
  9318  002F90  0E08               	movlw	high (_tx_buffer+22)
  9319  002F92  20F4               	addwfc	prodh,w,c
  9320  002F94  6E09               	movwf	(memcpy@d1+1)^0,c
  9321  002F96  0060  F1E8  F00A   	movff	cmdBcast@p1,memcpy@s1
  9322  002F9C  0060  F1EC  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9323  002FA2  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9324  002FA8  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9325  002FAE  EC3B  F03E         	call	_strlen	;wreg free
  9326  002FB2  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9327  002FB8  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9328  002FBE  ECE7  F039         	call	_memcpy	;wreg free
  9329                           
  9330                           ;../app/app_src/application.c: 277:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9331  002FC2  0100               	movlb	0	; () banked
  9332  002FC4  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9333  002FC6  0D83               	mullw	131
  9334  002FC8  0E72               	movlw	low (_tx_buffer+8)
  9335  002FCA  24F3               	addwf	243,w,c
  9336  002FCC  6ED9               	movwf	fsr2l,c
  9337  002FCE  0E08               	movlw	high (_tx_buffer+8)
  9338  002FD0  20F4               	addwfc	prodh,w,c
  9339  002FD2  6EDA               	movwf	fsr2h,c
  9340  002FD4  0EFF               	movlw	255
  9341  002FD6  6EDE               	movwf	postinc2,c
  9342  002FD8  0EFF               	movlw	255
  9343  002FDA  6EDD               	movwf	postdec2,c
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;../app/app_src/application.c: 278:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9347  002FDC  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9348  002FDE  0D83               	mullw	131
  9349  002FE0  0E74               	movlw	low (_tx_buffer+10)
  9350  002FE2  24F3               	addwf	243,w,c
  9351  002FE4  6ED9               	movwf	fsr2l,c
  9352  002FE6  0E08               	movlw	high (_tx_buffer+10)
  9353  002FE8  20F4               	addwfc	prodh,w,c
  9354  002FEA  6EDA               	movwf	fsr2h,c
  9355  002FEC  0E01               	movlw	1
  9356  002FEE  6EDF               	movwf	indf2,c
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;../app/app_src/application.c: 279:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9360  002FF0  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9361  002FF2  0D83               	mullw	131
  9362  002FF4  0E75               	movlw	low (_tx_buffer+11)
  9363  002FF6  24F3               	addwf	243,w,c
  9364  002FF8  6ED9               	movwf	fsr2l,c
  9365  002FFA  0E08               	movlw	high (_tx_buffer+11)
  9366  002FFC  20F4               	addwfc	prodh,w,c
  9367  002FFE  6EDA               	movwf	fsr2h,c
  9368  003000  0E01               	movlw	1
  9369  003002  6EDF               	movwf	indf2,c
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;../app/app_src/application.c: 280:         tx_buffer[buf_id].nwkDataReq.options = 0;
  9373  003004  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9374  003006  0D83               	mullw	131
  9375  003008  0E76               	movlw	low (_tx_buffer+12)
  9376  00300A  24F3               	addwf	243,w,c
  9377  00300C  6ED9               	movwf	fsr2l,c
  9378  00300E  0E08               	movlw	high (_tx_buffer+12)
  9379  003010  20F4               	addwfc	prodh,w,c
  9380  003012  6EDA               	movwf	fsr2h,c
  9381  003014  0E00               	movlw	0
  9382  003016  6EDF               	movwf	indf2,c
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;../app/app_src/application.c: 281:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9386  003018  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9387  00301A  0D83               	mullw	131
  9388  00301C  0E6A               	movlw	low _tx_buffer
  9389  00301E  6F78               	movwf	??_cmdBcast& (0+255),b
  9390  003020  0E08               	movlw	high _tx_buffer
  9391  003022  6F79               	movwf	(??_cmdBcast+1)& (0+255),b
  9392  003024  0E16               	movlw	22
  9393  003026  2778               	addwf	??_cmdBcast& (0+255),f,b
  9394  003028  0E00               	movlw	0
  9395  00302A  2379               	addwfc	(??_cmdBcast+1)& (0+255),f,b
  9396  00302C  50F3               	movf	243,w,c
  9397  00302E  2778               	addwf	??_cmdBcast& (0+255),f,b
  9398  003030  50F4               	movf	244,w,c
  9399  003032  2379               	addwfc	(??_cmdBcast+1)& (0+255),f,b
  9400  003034  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9401  003036  0D83               	mullw	131
  9402  003038  0E79               	movlw	low (_tx_buffer+15)
  9403  00303A  24F3               	addwf	243,w,c
  9404  00303C  6ED9               	movwf	fsr2l,c
  9405  00303E  0E08               	movlw	high (_tx_buffer+15)
  9406  003040  20F4               	addwfc	prodh,w,c
  9407  003042  6EDA               	movwf	fsr2h,c
  9408  003044  0060  F1E3  FFDE   	movff	??_cmdBcast,postinc2
  9409  00304A  0060  F1E7  FFDD   	movff	??_cmdBcast+1,postdec2
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;../app/app_src/application.c: 282:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9413  003050  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9414  003052  0D83               	mullw	131
  9415  003054  0E7B               	movlw	low (_tx_buffer+17)
  9416  003056  24F3               	addwf	243,w,c
  9417  003058  6ED9               	movwf	fsr2l,c
  9418  00305A  0E08               	movlw	high (_tx_buffer+17)
  9419  00305C  20F4               	addwfc	prodh,w,c
  9420  00305E  6EDA               	movwf	fsr2h,c
  9421  003060  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9422  003066  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9423  00306C  EC3B  F03E         	call	_strlen	;wreg free
  9424  003070  5002               	movf	?_strlen^0,w,c
  9425  003072  6EDF               	movwf	indf2,c
  9426                           
  9427                           ;../app/app_src/application.c: 283:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9428  003074  0100               	movlb	0	; () banked
  9429  003076  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9430  003078  0D83               	mullw	131
  9431  00307A  0E7C               	movlw	low (_tx_buffer+18)
  9432  00307C  24F3               	addwf	243,w,c
  9433  00307E  6ED9               	movwf	fsr2l,c
  9434  003080  0E08               	movlw	high (_tx_buffer+18)
  9435  003082  20F4               	addwfc	prodh,w,c
  9436  003084  6EDA               	movwf	fsr2h,c
  9437  003086  0E98               	movlw	low _appDataConf
  9438  003088  6EDE               	movwf	postinc2,c
  9439  00308A  0E88               	movlw	high _appDataConf
  9440  00308C  6EDD               	movwf	postdec2,c
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;../app/app_src/application.c: 284:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9444  00308E  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9445  003090  0D83               	mullw	131
  9446  003092  0E6C               	movlw	low (_tx_buffer+2)
  9447  003094  24F3               	addwf	243,w,c
  9448  003096  6ED9               	movwf	fsr2l,c
  9449  003098  0E08               	movlw	high (_tx_buffer+2)
  9450  00309A  20F4               	addwfc	prodh,w,c
  9451  00309C  6EDA               	movwf	fsr2h,c
  9452  00309E  0060  F3CB  FFDF   	movff	_msgIDCounter,indf2
  9453                           
  9454                           ; BSR set to: 0
  9455  0030A4  2BF2               	incf	_msgIDCounter& (0+255),f,b
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;../app/app_src/application.c: 285:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9459  0030A6  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9460  0030A8  0D83               	mullw	131
  9461  0030AA  0E6D               	movlw	low (_tx_buffer+3)
  9462  0030AC  24F3               	addwf	243,w,c
  9463  0030AE  6E02               	movwf	NWK_DataReq@req^0,c
  9464  0030B0  0E08               	movlw	high (_tx_buffer+3)
  9465  0030B2  20F4               	addwfc	prodh,w,c
  9466  0030B4  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9467  0030B6  EC69  F039         	call	_NWK_DataReq	;wreg free
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;../app/app_src/application.c: 286:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9471  0030BA  0ED0               	movlw	low (STR_4+4)
  9472  0030BC  6E55               	movwf	printf@fmt^0,c
  9473  0030BE  0EFE               	movlw	high (STR_4+4)
  9474  0030C0  6E56               	movwf	(printf@fmt+1)^0,c
  9475  0030C2  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9476  0030C4  0D83               	mullw	131
  9477  0030C6  0E6C               	movlw	low (_tx_buffer+2)
  9478  0030C8  24F3               	addwf	243,w,c
  9479  0030CA  6ED9               	movwf	fsr2l,c
  9480  0030CC  0E08               	movlw	high (_tx_buffer+2)
  9481  0030CE  20F4               	addwfc	prodh,w,c
  9482  0030D0  6EDA               	movwf	fsr2h,c
  9483  0030D2  50DF               	movf	indf2,w,c
  9484  0030D4  6F78               	movwf	??_cmdBcast& (0+255),b
  9485  0030D6  5178               	movf	??_cmdBcast& (0+255),w,b
  9486  0030D8  6E57               	movwf	(?_printf+2)^0,c
  9487  0030DA  6A58               	clrf	(?_printf+3)^0,c
  9488  0030DC  EC3B  F044         	call	_printf	;wreg free
  9489                           
  9490                           ; BSR set to: 1
  9491  0030E0  0012               	return		;funcret
  9492  0030E2                     __end_of_cmdBcast:
  9493                           	opt callstack 0
  9494                           
  9495 ;; *************** function _strstr *****************
  9496 ;; Defined at:
  9497 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9500 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9501 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9502 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9503 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9504 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9505 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9506 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9507 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9508 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9509 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9510 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9511 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9512 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9513 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  nl              2   16[COMRAM] unsigned int 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  2   12[COMRAM] PTR unsigned char 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:        6 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    8
  9532 ;; This function calls:
  9533 ;;		_strchr
  9534 ;;		_strlen
  9535 ;;		_strncmp
  9536 ;; This function is called by:
  9537 ;;		_cmdSend
  9538 ;;		_cmdBcast
  9539 ;;		_cmdSetAddr
  9540 ;;		_cmdSetNaddr
  9541 ;;		_cmdSetAES
  9542 ;;		_cmdSetRFCH
  9543 ;;		_cmdSetTX
  9544 ;;		_cmdSetCADRSSI
  9545 ;;		_cmdSetParity
  9546 ;;		_cmdSetSF
  9547 ;;		_executeATCommand
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text48
  9552  005B96                     __ptext48:
  9553                           	opt callstack 0
  9554  005B96                     _strstr:
  9555                           	opt callstack 20
  9556                           
  9557                           ; BSR set to: 1
  9558                           ;incstack = 0
  9559  005B96  500F               	movf	strstr@n^0,w,c
  9560  005B98  1010               	iorwf	(strstr@n+1)^0,w,c
  9561  005B9A  B4D8               	btfsc	status,2,c
  9562  005B9C  D063               	goto	u15480
  9563  005B9E  0060  F03C  F002   	movff	strstr@n,strlen@s
  9564  005BA4  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9565  005BAA  EC3B  F03E         	call	_strlen	;wreg free
  9566  005BAE  0060  F008  F011   	movff	?_strlen,strstr@nl
  9567  005BB4  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9568  005BBA  D038               	goto	l15495
  9569  005BBC                     l15487:
  9570  005BBC  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9571  005BC2  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9572  005BC8  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9573  005BCE  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9574  005BD4  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9575  005BDA  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9576  005BE0  EC07  F027         	call	_strncmp	;wreg free
  9577  005BE4  5002               	movf	?_strncmp^0,w,c
  9578  005BE6  1003               	iorwf	(?_strncmp+1)^0,w,c
  9579  005BE8  A4D8               	btfss	status,2,c
  9580  005BEA  D007               	goto	l15493
  9581  005BEC  0060  F034  F00D   	movff	strstr@h,?_strstr
  9582  005BF2  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9583  005BF8  0012               	return	
  9584  005BFA                     l15493:
  9585  005BFA  0E01               	movlw	1
  9586  005BFC  240D               	addwf	strstr@h^0,w,c
  9587  005BFE  6E02               	movwf	strchr@s^0,c
  9588  005C00  0E00               	movlw	0
  9589  005C02  200E               	addwfc	(strstr@h+1)^0,w,c
  9590  005C04  6E03               	movwf	(strchr@s+1)^0,c
  9591  005C06  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9592  005C0C  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9593  005C12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9594  005C12  6AF8               	clrf	tblptru,c
  9595  005C14                     	endif
  9596  005C14                     	if	0	;tblptru may be non-zero
  9597  005C14                     	endif
  9598  005C14  0008               	tblrd		*
  9599  005C16  50F5               	movf	tablat,w,c
  9600  005C18  6E04               	movwf	strchr@c^0,c
  9601  005C1A  6A05               	clrf	(strchr@c+1)^0,c
  9602  005C1C  EC63  F038         	call	_strchr	;wreg free
  9603  005C20  0060  F008  F00D   	movff	?_strchr,strstr@h
  9604  005C26  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
  9605  005C2C                     l15495:
  9606  005C2C  500D               	movf	strstr@h^0,w,c
  9607  005C2E  100E               	iorwf	(strstr@h+1)^0,w,c
  9608  005C30  B4D8               	btfsc	status,2,c
  9609  005C32  D018               	goto	u15480
  9610  005C34  0060  F037  FFF6   	movff	strstr@h,tblptrl
  9611  005C3A  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
  9612  005C40  0E00               	movlw	low (__mediumconst shr (0+16))
  9613  005C42  6EF8               	movwf	tblptru,c
  9614  005C44  0E0F               	movlw	(high __ramtop+-1)
  9615  005C46  64F7               	cpfsgt	tblptrh,c
  9616  005C48  D003               	bra	u15477
  9617  005C4A  0008               	tblrd		*
  9618  005C4C  50F5               	movf	tablat,w,c
  9619  005C4E  D007               	bra	u15470
  9620  005C50                     u15477:
  9621  005C50  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9622  005C56  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9623  005C5C  50EF               	movf	indf0,w,c
  9624  005C5E                     u15470:
  9625  005C5E  0900               	iorlw	0
  9626  005C60  A4D8               	btfss	status,2,c
  9627  005C62  D7AC               	goto	l15487
  9628  005C64                     u15480:
  9629  005C64  0E00               	movlw	0
  9630  005C66  6E0D               	movwf	?_strstr^0,c
  9631  005C68  0E00               	movlw	0
  9632  005C6A  6E0E               	movwf	(?_strstr+1)^0,c
  9633  005C6C  0012               	return		;funcret
  9634  005C6E                     __end_of_strstr:
  9635                           	opt callstack 0
  9636                           
  9637 ;; *************** function _strncmp *****************
  9638 ;; Defined at:
  9639 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  9642 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9643 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  9644 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9645 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9646 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9647 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9648 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9649 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9650 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9651 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9652 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9653 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9654 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9655 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9656 ;;  n               2    5[COMRAM] unsigned int 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  r               2   10[COMRAM] PTR const unsigned char 
  9659 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9660 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9661 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9662 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9663 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9664 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9665 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9666 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9667 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9668 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9669 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9670 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9671 ;;  l               2    8[COMRAM] PTR const unsigned char 
  9672 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  2    1[COMRAM] int 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:       11 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    7
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_strstr
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text49
  9697  004E0E                     __ptext49:
  9698                           	opt callstack 0
  9699  004E0E                     _strncmp:
  9700                           	opt callstack 20
  9701                           
  9702                           ;incstack = 0
  9703  004E0E  0060  F008  F009   	movff	strncmp@_l,strncmp@l
  9704  004E14  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
  9705  004E1A  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
  9706  004E20  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
  9707  004E26  0606               	decf	strncmp@n^0,f,c
  9708  004E28  A0D8               	btfss	status,0,c
  9709  004E2A  0607               	decf	(strncmp@n+1)^0,f,c
  9710  004E2C  2806               	incf	strncmp@n^0,w,c
  9711  004E2E  E10F               	bnz	l11201
  9712  004E30  2807               	incf	(strncmp@n+1)^0,w,c
  9713  004E32  A4D8               	btfss	status,2,c
  9714  004E34  D00C               	goto	l11201
  9715  004E36  0E00               	movlw	0
  9716  004E38  6E03               	movwf	(?_strncmp+1)^0,c
  9717  004E3A  0E00               	movlw	0
  9718  004E3C  6E02               	movwf	?_strncmp^0,c
  9719  004E3E  0012               	return	
  9720  004E40                     l11199:
  9721  004E40  4A09               	infsnz	strncmp@l^0,f,c
  9722  004E42  2A0A               	incf	(strncmp@l+1)^0,f,c
  9723  004E44  4A0B               	infsnz	strncmp@r^0,f,c
  9724  004E46  2A0C               	incf	(strncmp@r+1)^0,f,c
  9725  004E48  0606               	decf	strncmp@n^0,f,c
  9726  004E4A  A0D8               	btfss	status,0,c
  9727  004E4C  0607               	decf	(strncmp@n+1)^0,f,c
  9728  004E4E                     l11201:
  9729  004E4E  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9730  004E54  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9731  004E5A  0E00               	movlw	low (__mediumconst shr (0+16))
  9732  004E5C  6EF8               	movwf	tblptru,c
  9733  004E5E  0E0F               	movlw	(high __ramtop+-1)
  9734  004E60  64F7               	cpfsgt	tblptrh,c
  9735  004E62  D003               	bra	u9727
  9736  004E64  0008               	tblrd		*
  9737  004E66  50F5               	movf	tablat,w,c
  9738  004E68  D007               	bra	u9720
  9739  004E6A                     u9727:
  9740  004E6A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9741  004E70  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9742  004E76  50EF               	movf	indf0,w,c
  9743  004E78                     u9720:
  9744  004E78  0900               	iorlw	0
  9745  004E7A  B4D8               	btfsc	status,2,c
  9746  004E7C  D033               	goto	u9760
  9747  004E7E  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9748  004E84  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9749  004E8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9750  004E8A  6AF8               	clrf	tblptru,c
  9751  004E8C                     	endif
  9752  004E8C                     	if	0	;tblptru may be non-zero
  9753  004E8C                     	endif
  9754  004E8C  0008               	tblrd		*
  9755  004E8E  50F5               	movf	tablat,w,c
  9756  004E90  0900               	iorlw	0
  9757  004E92  B4D8               	btfsc	status,2,c
  9758  004E94  D027               	goto	u9760
  9759  004E96  5006               	movf	strncmp@n^0,w,c
  9760  004E98  1007               	iorwf	(strncmp@n+1)^0,w,c
  9761  004E9A  B4D8               	btfsc	status,2,c
  9762  004E9C  D023               	goto	u9760
  9763  004E9E  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9764  004EA4  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9765  004EAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9766  004EAA  6AF8               	clrf	tblptru,c
  9767  004EAC                     	endif
  9768  004EAC                     	if	0	;tblptru may be non-zero
  9769  004EAC                     	endif
  9770  004EAC  0008               	tblrd		*
  9771  004EAE  006F FFD4  F008    	movff	tablat,??_strncmp
  9772  004EB4  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9773  004EBA  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9774  004EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  9775  004EC2  6EF8               	movwf	tblptru,c
  9776  004EC4  0E0F               	movlw	(high __ramtop+-1)
  9777  004EC6  64F7               	cpfsgt	tblptrh,c
  9778  004EC8  D003               	bra	u9767
  9779  004ECA  0008               	tblrd		*
  9780  004ECC  50F5               	movf	tablat,w,c
  9781  004ECE  D007               	bra	u9765
  9782  004ED0                     u9767:
  9783  004ED0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9784  004ED6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9785  004EDC  50EF               	movf	indf0,w,c
  9786  004EDE                     u9765:
  9787  004EDE  1808               	xorwf	??_strncmp^0,w,c
  9788  004EE0  B4D8               	btfsc	status,2,c
  9789  004EE2  D7AE               	goto	l11199
  9790  004EE4                     u9760:
  9791  004EE4  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9792  004EEA  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9793  004EF0  0E00               	movlw	low (__mediumconst shr (0+16))
  9794  004EF2  6EF8               	movwf	tblptru,c
  9795  004EF4  0E0F               	movlw	(high __ramtop+-1)
  9796  004EF6  64F7               	cpfsgt	tblptrh,c
  9797  004EF8  D003               	bra	u9777
  9798  004EFA  0008               	tblrd		*
  9799  004EFC  50F5               	movf	tablat,w,c
  9800  004EFE  D007               	bra	u9770
  9801  004F00                     u9777:
  9802  004F00  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9803  004F06  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9804  004F0C  50EF               	movf	indf0,w,c
  9805  004F0E                     u9770:
  9806  004F0E  6E08               	movwf	??_strncmp^0,c
  9807  004F10  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9808  004F16  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9809  004F1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9810  004F1C  6AF8               	clrf	tblptru,c
  9811  004F1E                     	endif
  9812  004F1E                     	if	0	;tblptru may be non-zero
  9813  004F1E                     	endif
  9814  004F1E  0008               	tblrd		*
  9815  004F20  50F5               	movf	tablat,w,c
  9816  004F22  5C08               	subwf	??_strncmp^0,w,c
  9817  004F24  6E02               	movwf	?_strncmp^0,c
  9818  004F26  6A03               	clrf	(?_strncmp+1)^0,c
  9819  004F28  A0D8               	btfss	status,0,c
  9820  004F2A  0603               	decf	(?_strncmp+1)^0,f,c
  9821  004F2C  0012               	return		;funcret
  9822  004F2E                     __end_of_strncmp:
  9823                           	opt callstack 0
  9824                           
  9825 ;; *************** function _strchr *****************
  9826 ;; Defined at:
  9827 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  s               2    1[COMRAM] PTR const unsigned char 
  9830 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9831 ;;  c               2    3[COMRAM] int 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  2    1[COMRAM] PTR unsigned char 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;Total ram usage:        6 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    7
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_strstr
  9854 ;;		_strcspn
  9855 ;;		_strspn
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text50
  9860  0070C6                     __ptext50:
  9861                           	opt callstack 0
  9862  0070C6                     _strchr:
  9863                           	opt callstack 20
  9864                           
  9865                           ;incstack = 0
  9866  0070C6  0060  F00B  FFF6   	movff	strchr@s,tblptrl
  9867  0070CC  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
  9868  0070D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9869  0070D4  6EF8               	movwf	tblptru,c
  9870  0070D6  0E0F               	movlw	(high __ramtop+-1)
  9871  0070D8  64F7               	cpfsgt	tblptrh,c
  9872  0070DA  D003               	bra	u9037
  9873  0070DC  0008               	tblrd		*
  9874  0070DE  50F5               	movf	tablat,w,c
  9875  0070E0  D007               	bra	u9030
  9876  0070E2                     u9037:
  9877  0070E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9878  0070E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9879  0070EE  50EF               	movf	indf0,w,c
  9880  0070F0                     u9030:
  9881  0070F0  1804               	xorwf	strchr@c^0,w,c
  9882  0070F2  A4D8               	btfss	status,2,c
  9883  0070F4  D007               	goto	l10655
  9884  0070F6  0060  F008  F002   	movff	strchr@s,?_strchr
  9885  0070FC  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
  9886  007102  0012               	return	
  9887  007104                     l10655:
  9888  007104  5002               	movf	strchr@s^0,w,c
  9889  007106  6E06               	movwf	??_strchr^0,c
  9890  007108  5003               	movf	(strchr@s+1)^0,w,c
  9891  00710A  6E07               	movwf	(??_strchr+1)^0,c
  9892  00710C  4A02               	infsnz	strchr@s^0,f,c
  9893  00710E  2A03               	incf	(strchr@s+1)^0,f,c
  9894  007110  0060  F01B  FFF6   	movff	??_strchr,tblptrl
  9895  007116  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
  9896  00711C  0E00               	movlw	low (__mediumconst shr (0+16))
  9897  00711E  6EF8               	movwf	tblptru,c
  9898  007120  0E0F               	movlw	(high __ramtop+-1)
  9899  007122  64F7               	cpfsgt	tblptrh,c
  9900  007124  D003               	bra	u9057
  9901  007126  0008               	tblrd		*
  9902  007128  50F5               	movf	tablat,w,c
  9903  00712A  D007               	bra	u9050
  9904  00712C                     u9057:
  9905  00712C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9906  007132  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9907  007138  50EF               	movf	indf0,w,c
  9908  00713A                     u9050:
  9909  00713A  0900               	iorlw	0
  9910  00713C  A4D8               	btfss	status,2,c
  9911  00713E  D7C3               	goto	_strchr
  9912  007140  0E00               	movlw	0
  9913  007142  6E02               	movwf	?_strchr^0,c
  9914  007144  0E00               	movlw	0
  9915  007146  6E03               	movwf	(?_strchr+1)^0,c
  9916  007148  0012               	return		;funcret
  9917  00714A                     __end_of_strchr:
  9918                           	opt callstack 0
  9919                           
  9920 ;; *************** function _get_free_tx_buffer *****************
  9921 ;; Defined at:
  9922 ;;		line 58 in file "../app/app_src/application.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
  9925 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      _Bool 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9937 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9941 ;;Total ram usage:        2 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:    7
  9944 ;; This function calls:
  9945 ;;		Nothing
  9946 ;; This function is called by:
  9947 ;;		_cmdSend
  9948 ;;		_cmdBcast
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text51
  9953  0076C6                     __ptext51:
  9954                           	opt callstack 0
  9955  0076C6                     _get_free_tx_buffer:
  9956                           	opt callstack 20
  9957                           
  9958                           ;../app/app_src/application.c: 59:     *buf_id = 0;
  9959                           
  9960                           ;incstack = 0
  9961  0076C6  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9962  0076C8  6ED9               	movwf	fsr2l,c
  9963  0076CA  6ADA               	clrf	fsr2h,c
  9964  0076CC  0E00               	movlw	0
  9965  0076CE  6EDF               	movwf	indf2,c
  9966                           
  9967                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
  9968  0076D0  D023               	goto	l206
  9969  0076D2                     l11355:
  9970                           
  9971                           ;../app/app_src/application.c: 61:         if(tx_buffer[*buf_id].free){
  9972  0076D2  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9973  0076D4  6ED9               	movwf	fsr2l,c
  9974  0076D6  6ADA               	clrf	fsr2h,c
  9975  0076D8  50DF               	movf	indf2,w,c
  9976  0076DA  6E03               	movwf	??_get_free_tx_buffer^0,c
  9977  0076DC  5003               	movf	??_get_free_tx_buffer^0,w,c
  9978  0076DE  0D83               	mullw	131
  9979  0076E0  0E6A               	movlw	low _tx_buffer
  9980  0076E2  24F3               	addwf	243,w,c
  9981  0076E4  6ED9               	movwf	fsr2l,c
  9982  0076E6  0E08               	movlw	high _tx_buffer
  9983  0076E8  20F4               	addwfc	prodh,w,c
  9984  0076EA  6EDA               	movwf	fsr2h,c
  9985  0076EC  A4DF               	btfss	indf2,2,c
  9986  0076EE  D010               	goto	l11363
  9987                           
  9988                           ;../app/app_src/application.c: 62:             tx_buffer[*buf_id].free = 0;
  9989  0076F0  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9990  0076F2  6ED9               	movwf	fsr2l,c
  9991  0076F4  6ADA               	clrf	fsr2h,c
  9992  0076F6  50DF               	movf	indf2,w,c
  9993  0076F8  6E03               	movwf	??_get_free_tx_buffer^0,c
  9994  0076FA  5003               	movf	??_get_free_tx_buffer^0,w,c
  9995  0076FC  0D83               	mullw	131
  9996  0076FE  0E6A               	movlw	low _tx_buffer
  9997  007700  24F3               	addwf	243,w,c
  9998  007702  6ED9               	movwf	fsr2l,c
  9999  007704  0E08               	movlw	high _tx_buffer
 10000  007706  20F4               	addwfc	prodh,w,c
 10001  007708  6EDA               	movwf	fsr2h,c
 10002  00770A  94DF               	bcf	indf2,2,c
 10003                           
 10004                           ;../app/app_src/application.c: 63:             return 1;
 10005  00770C  0E01               	movlw	1
 10006  00770E  0012               	return	
 10007  007710                     l11363:
 10008                           
 10009                           ;../app/app_src/application.c: 65:         (*buf_id)++;
 10010  007710  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10011  007712  6ED9               	movwf	fsr2l,c
 10012  007714  6ADA               	clrf	fsr2h,c
 10013  007716  2ADF               	incf	indf2,f,c
 10014  007718                     l206:
 10015                           
 10016                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
 10017  007718  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10018  00771A  6ED9               	movwf	fsr2l,c
 10019  00771C  6ADA               	clrf	fsr2h,c
 10020  00771E  0E03               	movlw	3
 10021  007720  64DF               	cpfsgt	indf2,c
 10022  007722  D7D7               	goto	l11355
 10023                           
 10024                           ;../app/app_src/application.c: 67:     return 0;
 10025  007724  0E00               	movlw	0
 10026  007726  0012               	return		;funcret
 10027  007728                     __end_of_get_free_tx_buffer:
 10028                           	opt callstack 0
 10029                           
 10030 ;; *************** function _NWK_DataReq *****************
 10031 ;; Defined at:
 10032 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 10035 ;;		 -> tx_buffer(524), 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10042 ;; Tracked objects:
 10043 ;;		On entry : 3F/0
 10044 ;;		On exit  : 3F/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;Total ram usage:        2 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    7
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_cmdSend
 10058 ;;		_cmdBcast
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text52
 10063  0072D2                     __ptext52:
 10064                           	opt callstack 0
 10065  0072D2                     _NWK_DataReq:
 10066                           	opt callstack 20
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10070                           
 10071                           ;incstack = 0
 10072  0072D2  EE20 F004          	lfsr	2,4
 10073  0072D6  5002               	movf	NWK_DataReq@req^0,w,c
 10074  0072D8  26D9               	addwf	fsr2l,f,c
 10075  0072DA  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10076  0072DC  22DA               	addwfc	fsr2h,f,c
 10077  0072DE  0E00               	movlw	0
 10078  0072E0  6EDF               	movwf	indf2,c
 10079                           
 10080                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10081  0072E2  EE20 F011          	lfsr	2,17
 10082  0072E6  5002               	movf	NWK_DataReq@req^0,w,c
 10083  0072E8  26D9               	addwf	fsr2l,f,c
 10084  0072EA  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10085  0072EC  22DA               	addwfc	fsr2h,f,c
 10086  0072EE  0E00               	movlw	0
 10087  0072F0  6EDF               	movwf	indf2,c
 10088                           
 10089                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10090  0072F2  EE20 F002          	lfsr	2,2
 10091  0072F6  5002               	movf	NWK_DataReq@req^0,w,c
 10092  0072F8  26D9               	addwf	fsr2l,f,c
 10093  0072FA  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10094  0072FC  22DA               	addwfc	fsr2h,f,c
 10095  0072FE  0E00               	movlw	0
 10096  007300  6EDE               	movwf	postinc2,c
 10097  007302  0E00               	movlw	0
 10098  007304  6EDD               	movwf	postdec2,c
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10102  007306  0101               	movlb	1	; () banked
 10103  007308  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10104  00730A  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10105                           
 10106                           ; BSR set to: 1
 10107                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10108  00730C  0100               	movlb	0	; () banked
 10109  00730E  51E2               	movf	_nwkDataReqQueue& (0+255),w,b
 10110  007310  11E3               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10111  007312  A4D8               	btfss	status,2,c
 10112  007314  D011               	goto	l11433
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10116  007316  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10117  00731C  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10118  007322  0E00               	movlw	0
 10119  007324  6EDE               	movwf	postinc2,c
 10120  007326  0E00               	movlw	0
 10121  007328  6EDD               	movwf	postdec2,c
 10122  00732A                     l11431:
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10126  00732A  0060  F008  F0E2   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10127  007330  0060  F00C  F0E3   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10128                           
 10129                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10130  007336  0012               	return	
 10131  007338                     l11433:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10135  007338  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10136  00733E  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10137  007344  0060  F38B  FFDE   	movff	_nwkDataReqQueue,postinc2
 10138  00734A  0060  F38F  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10139  007350  D7EC               	goto	l11431
 10140  007352                     __end_of_NWK_DataReq:
 10141                           	opt callstack 0
 10142                           
 10143 ;; *************** function _cmdAddr *****************
 10144 ;; Defined at:
 10145 ;;		line 297 in file "../app/app_src/application.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;		None
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;		None
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      void 
 10152 ;; Registers used:
 10153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 3F/1
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;Total ram usage:        0 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:   16
 10166 ;; This function calls:
 10167 ;;		_printf
 10168 ;; This function is called by:
 10169 ;;		_executeATCommand
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text53
 10174  0089E4                     __ptext53:
 10175                           	opt callstack 0
 10176  0089E4                     _cmdAddr:
 10177                           	opt callstack 12
 10178                           
 10179                           ;../app/app_src/application.c: 298:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;incstack = 0
 10183  0089E4  0E46               	movlw	low STR_11
 10184  0089E6  6E55               	movwf	printf@fmt^0,c
 10185  0089E8  0EFE               	movlw	high STR_11
 10186  0089EA  6E56               	movwf	(printf@fmt+1)^0,c
 10187  0089EC  0060  F3F0  F057   	movff	_currentAddr0,?_printf+2
 10188  0089F2  6A58               	clrf	(?_printf+3)^0,c
 10189  0089F4  0060  F3EC  F059   	movff	_currentAddr1,?_printf+4
 10190  0089FA  6A5A               	clrf	(?_printf+5)^0,c
 10191  0089FC  EC3B  F044         	call	_printf	;wreg free
 10192                           
 10193                           ; BSR set to: 1
 10194  008A00  0012               	return		;funcret
 10195  008A02                     __end_of_cmdAddr:
 10196                           	opt callstack 0
 10197                           
 10198 ;; *************** function _UART1_is_rx_ready *****************
 10199 ;; Defined at:
 10200 ;;		line 169 in file "mcc_generated_files/uart1.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      _Bool 
 10207 ;; Registers used:
 10208 ;;		wreg, status,2
 10209 ;; Tracked objects:
 10210 ;;		On entry : 3F/0
 10211 ;;		On exit  : 3F/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    7
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		_processATCommand
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text54
 10229  008C78                     __ptext54:
 10230                           	opt callstack 0
 10231  008C78                     _UART1_is_rx_ready:
 10232                           	opt callstack 22
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;incstack = 0
 10239  008C78  51E6               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10240  008C7A  B4D8               	btfsc	status,2,c
 10241  008C7C  D002               	goto	u11710
 10242  008C7E  0E01               	movlw	1
 10243  008C80  0012               	return	
 10244  008C82                     u11710:
 10245  008C82  0E00               	movlw	0
 10246                           
 10247                           ; BSR set to: 0
 10248  008C84  0012               	return		;funcret
 10249  008C86                     __end_of_UART1_is_rx_ready:
 10250                           	opt callstack 0
 10251                           
 10252 ;; *************** function _UART1_Read *****************
 10253 ;; Defined at:
 10254 ;;		line 188 in file "mcc_generated_files/uart1.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;		None
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  readValue       1    1[COMRAM] unsigned char 
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      unsigned char 
 10261 ;; Registers used:
 10262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10263 ;; Tracked objects:
 10264 ;;		On entry : 3F/0
 10265 ;;		On exit  : 3F/39
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;Total ram usage:        1 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:    7
 10275 ;; This function calls:
 10276 ;;		Nothing
 10277 ;; This function is called by:
 10278 ;;		_processATCommand
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           	psect	text55
 10283  007E8A                     __ptext55:
 10284                           	opt callstack 0
 10285  007E8A                     _UART1_Read:
 10286                           	opt callstack 22
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;incstack = 0
 10296  007E8A  51E6               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10297  007E8C  B4D8               	btfsc	status,2,c
 10298  007E8E  D7FD               	goto	_UART1_Read
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10302  007E90  0E28               	movlw	low _uart1RxStatusBuffer
 10303  007E92  25E7               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10304  007E94  6ED9               	movwf	fsr2l,c
 10305  007E96  6ADA               	clrf	fsr2h,c
 10306  007E98  0E01               	movlw	high _uart1RxStatusBuffer
 10307  007E9A  22DA               	addwfc	fsr2h,f,c
 10308  007E9C  50DF               	movf	indf2,w,c
 10309  007E9E  0101               	movlb	1	; () banked
 10310  007EA0  6F62               	movwf	_uart1RxLastError& (0+255),b	;volatile
 10311                           
 10312                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 10313  007EA2  0E38               	movlw	low _uart1RxBuffer
 10314  007EA4  0100               	movlb	0	; () banked
 10315  007EA6  25E7               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10316  007EA8  6ED9               	movwf	fsr2l,c
 10317  007EAA  6ADA               	clrf	fsr2h,c
 10318  007EAC  0E01               	movlw	high _uart1RxBuffer
 10319  007EAE  22DA               	addwfc	fsr2h,f,c
 10320  007EB0  50DF               	movf	indf2,w,c
 10321  007EB2  6E02               	movwf	UART1_Read@readValue^0,c
 10322                           
 10323                           ; BSR set to: 0
 10324  007EB4  2BE7               	incf	_uart1RxTail& (0+255),f,b	;volatile
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10328  007EB6  0E0F               	movlw	15
 10329  007EB8  65E7               	cpfsgt	_uart1RxTail& (0+255),b
 10330  007EBA  D002               	goto	l12639
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 10334  007EBC  0E00               	movlw	0
 10335  007EBE  6FE7               	movwf	_uart1RxTail& (0+255),b	;volatile
 10336  007EC0                     l12639:
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 10340  007EC0  0139               	movlb	57	; () banked
 10341  007EC2  9793               	bcf	147,3,b	;volatile
 10342                           
 10343                           ; BSR set to: 57
 10344                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 10345  007EC4  0100               	movlb	0	; () banked
 10346  007EC6  07E6               	decf	_uart1RxCount& (0+255),f,b	;volatile
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 10350  007EC8  0139               	movlb	57	; () banked
 10351  007ECA  8793               	bsf	147,3,b	;volatile
 10352                           
 10353                           ; BSR set to: 57
 10354                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 10355  007ECC  5002               	movf	UART1_Read@readValue^0,w,c
 10356                           
 10357                           ; BSR set to: 57
 10358  007ECE  0012               	return		;funcret
 10359  007ED0                     __end_of_UART1_Read:
 10360                           	opt callstack 0
 10361                           
 10362 ;; *************** function _bootLoadApplication *****************
 10363 ;; Defined at:
 10364 ;;		line 1277 in file "../app/app_src/application.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;		None
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;  buf_id          1   49[COMRAM] unsigned char 
 10369 ;;  temp            2   50[COMRAM] unsigned short 
 10370 ;;  i               1   52[COMRAM] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 3F/2
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        6 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:   14
 10387 ;; This function calls:
 10388 ;;		_DATAEE_ReadByte_Platform
 10389 ;;		_DATAEE_WriteByte_Platform
 10390 ;;		_NWK_OpenEndpoint
 10391 ;;		_NWK_SetAddr
 10392 ;;		_NWK_SetPanId
 10393 ;;		_PHY_SetChannel
 10394 ;;		_PHY_SetRxState
 10395 ;;		_crc16_app
 10396 ;;		_loadMACAddr
 10397 ;;		_set_parity
 10398 ;;		_set_uart_baud
 10399 ;; This function is called by:
 10400 ;;		_main
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text56
 10405  0025C0                     __ptext56:
 10406                           	opt callstack 0
 10407  0025C0                     _bootLoadApplication:
 10408                           	opt callstack 16
 10409                           
 10410                           ; BSR set to: 2
 10411                           ;../app/app_src/application.c: 1279:     uint16_t temp;;../app/app_src/application.c: 12
      +                          80:     uint8_t i;;../app/app_src/application.c: 1285:     loadMACAddr();
 10412                           
 10413                           ; BSR set to: 57
 10414                           ;incstack = 0
 10415  0025C0  EC2B  F041         	call	_loadMACAddr	;wreg free
 10416                           
 10417                           ;../app/app_src/application.c: 1287:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 10418  0025C4  0EBC               	movlw	low _EUIDbyte
 10419  0025C6  6E13               	movwf	crc16_app@dptr^0,c
 10420  0025C8  0E01               	movlw	high _EUIDbyte
 10421  0025CA  6E14               	movwf	(crc16_app@dptr+1)^0,c
 10422  0025CC  0E00               	movlw	0
 10423  0025CE  6E16               	movwf	(crc16_app@len+1)^0,c
 10424  0025D0  0E0C               	movlw	12
 10425  0025D2  6E15               	movwf	crc16_app@len^0,c
 10426  0025D4  0E00               	movlw	0
 10427  0025D6  6E18               	movwf	(crc16_app@seed+1)^0,c
 10428  0025D8  0E00               	movlw	0
 10429  0025DA  6E17               	movwf	crc16_app@seed^0,c
 10430  0025DC  ECA5  F038         	call	_crc16_app	;wreg free
 10431  0025E0  0060  F04C  F033   	movff	?_crc16_app,bootLoadApplication@temp
 10432  0025E6  0060  F050  F034   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 10433                           
 10434                           ; BSR set to: 57
 10435                           ;../app/app_src/application.c: 1288:     currentAddr0 = (temp >> 8) & 0xFF;
 10436  0025EC  0060  F0D0  F0FC   	movff	bootLoadApplication@temp+1,_currentAddr0
 10437                           
 10438                           ; BSR set to: 57
 10439                           ;../app/app_src/application.c: 1289:     currentAddr1 = (temp) & 0xFF;
 10440  0025F2  0060  F0CC  F0FB   	movff	bootLoadApplication@temp,_currentAddr1
 10441                           
 10442                           ; BSR set to: 57
 10443                           ;../app/app_src/application.c: 1292:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 10444  0025F8  0E00               	movlw	0
 10445  0025FA  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10446  0025FC  0E19               	movlw	25
 10447  0025FE  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10448  002600  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10449  002604  0100               	movlb	0	; () banked
 10450  002606  6FFA               	movwf	_currentNetID& (0+255),b
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;../app/app_src/application.c: 1295:     for(i = 0; i < 16; i++){
 10454  002608  0E00               	movlw	0
 10455  00260A  6E35               	movwf	bootLoadApplication@i^0,c
 10456  00260C                     l16815:
 10457                           
 10458                           ;../app/app_src/application.c: 1296:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10459  00260C  0E24               	movlw	low _aes_key
 10460  00260E  2435               	addwf	bootLoadApplication@i^0,w,c
 10461  002610  6ED9               	movwf	fsr2l,c
 10462  002612  6ADA               	clrf	fsr2h,c
 10463  002614  0E02               	movlw	high _aes_key
 10464  002616  22DA               	addwfc	fsr2h,f,c
 10465  002618  0E09               	movlw	9
 10466  00261A  2435               	addwf	bootLoadApplication@i^0,w,c
 10467  00261C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10468  00261E  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10469  002620  0E00               	movlw	0
 10470  002622  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10471  002624  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10472  002628  6EDF               	movwf	indf2,c
 10473                           
 10474                           ;../app/app_src/application.c: 1297:     }
 10475  00262A  2A35               	incf	bootLoadApplication@i^0,f,c
 10476  00262C  0E0F               	movlw	15
 10477  00262E  6435               	cpfsgt	bootLoadApplication@i^0,c
 10478  002630  D7ED               	goto	l16815
 10479                           
 10480                           ;../app/app_src/application.c: 1298:     for(i = 0; i < 16; i++){
 10481  002632  0E00               	movlw	0
 10482  002634  6E35               	movwf	bootLoadApplication@i^0,c
 10483  002636                     l16827:
 10484                           
 10485                           ;../app/app_src/application.c: 1299:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10486  002636  0E14               	movlw	low _net_key
 10487  002638  2435               	addwf	bootLoadApplication@i^0,w,c
 10488  00263A  6ED9               	movwf	fsr2l,c
 10489  00263C  6ADA               	clrf	fsr2h,c
 10490  00263E  0E02               	movlw	high _net_key
 10491  002640  22DA               	addwfc	fsr2h,f,c
 10492  002642  0E23               	movlw	35
 10493  002644  2435               	addwf	bootLoadApplication@i^0,w,c
 10494  002646  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10495  002648  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10496  00264A  0E00               	movlw	0
 10497  00264C  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10498  00264E  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10499  002652  6EDF               	movwf	indf2,c
 10500                           
 10501                           ;../app/app_src/application.c: 1300:     }
 10502  002654  2A35               	incf	bootLoadApplication@i^0,f,c
 10503  002656  0E0F               	movlw	15
 10504  002658  6435               	cpfsgt	bootLoadApplication@i^0,c
 10505  00265A  D7ED               	goto	l16827
 10506                           
 10507                           ;../app/app_src/application.c: 1307:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 10508  00265C  0E00               	movlw	0
 10509  00265E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10510  002660  0E1A               	movlw	26
 10511  002662  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10512  002664  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10513  002668  0101               	movlb	1	; () banked
 10514  00266A  6F6F               	movwf	_sinkAddr0& (0+255),b
 10515                           
 10516                           ;../app/app_src/application.c: 1308:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 10517  00266C  0E00               	movlw	0
 10518  00266E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10519  002670  0E1B               	movlw	27
 10520  002672  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10521  002674  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10522  002678  0101               	movlb	1	; () banked
 10523  00267A  6F6E               	movwf	_sinkAddr1& (0+255),b
 10524                           
 10525                           ;../app/app_src/application.c: 1311:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 10526  00267C  0E00               	movlw	0
 10527  00267E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10528  002680  0E1C               	movlw	28
 10529  002682  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10530  002684  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10531  002688  0100               	movlb	0	; () banked
 10532  00268A  6FEB               	movwf	_channel& (0+255),b
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;../app/app_src/application.c: 1312:     if(channel > sizeof(fhssList)){
 10536  00268C  0EFC               	movlw	252
 10537  00268E  65EB               	cpfsgt	_channel& (0+255),b
 10538  002690  D00B               	goto	l16841
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;../app/app_src/application.c: 1313:         channel = 0;
 10542  002692  0E00               	movlw	0
 10543  002694  6FEB               	movwf	_channel& (0+255),b
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;../app/app_src/application.c: 1314:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 10547  002696  0E00               	movlw	0
 10548  002698  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10549  00269A  0E1C               	movlw	28
 10550  00269C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10551  00269E  0060  F3AC  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 10552  0026A4  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10553  0026A8                     l16841:
 10554                           
 10555                           ;../app/app_src/application.c: 1318:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 10556  0026A8  0E00               	movlw	0
 10557  0026AA  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10558  0026AC  0E1D               	movlw	29
 10559  0026AE  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10560  0026B0  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10561  0026B4  0100               	movlb	0	; () banked
 10562  0026B6  6FEA               	movwf	_TXPower& (0+255),b
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;../app/app_src/application.c: 1319:     if((TXPower < 2) || (TXPower > 5)){
 10566  0026B8  0E01               	movlw	1
 10567  0026BA  65EA               	cpfsgt	_TXPower& (0+255),b
 10568  0026BC  D003               	goto	u17280
 10569                           
 10570                           ; BSR set to: 0
 10571  0026BE  0E05               	movlw	5
 10572  0026C0  65EA               	cpfsgt	_TXPower& (0+255),b
 10573  0026C2  D00B               	goto	l16851
 10574  0026C4                     u17280:
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;../app/app_src/application.c: 1320:         TXPower = 5;
 10578  0026C4  0E05               	movlw	5
 10579  0026C6  6FEA               	movwf	_TXPower& (0+255),b
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;../app/app_src/application.c: 1321:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 10583  0026C8  0E00               	movlw	0
 10584  0026CA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10585  0026CC  0E1D               	movlw	29
 10586  0026CE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10587  0026D0  0060  F3A8  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 10588  0026D6  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10589  0026DA                     l16851:
 10590                           
 10591                           ;../app/app_src/application.c: 1325:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10592  0026DA  0E00               	movlw	0
 10593  0026DC  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10594  0026DE  0E21               	movlw	33
 10595  0026E0  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10596  0026E2  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10597  0026E6  0100               	movlb	0	; () banked
 10598  0026E8  6FEC               	movwf	_current_sf& (0+255),b
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;../app/app_src/application.c: 1326:     if((current_sf < 7) || (current_sf > 12)){
 10602  0026EA  0E06               	movlw	6
 10603  0026EC  65EC               	cpfsgt	_current_sf& (0+255),b
 10604  0026EE  D003               	goto	u17300
 10605                           
 10606                           ; BSR set to: 0
 10607  0026F0  0E0C               	movlw	12
 10608  0026F2  65EC               	cpfsgt	_current_sf& (0+255),b
 10609  0026F4  D00B               	goto	l16861
 10610  0026F6                     u17300:
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;../app/app_src/application.c: 1327:         current_sf = 7;
 10614  0026F6  0E07               	movlw	7
 10615  0026F8  6FEC               	movwf	_current_sf& (0+255),b
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;../app/app_src/application.c: 1328:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 10619  0026FA  0E00               	movlw	0
 10620  0026FC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10621  0026FE  0E21               	movlw	33
 10622  002700  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10623  002702  0060  F3B0  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 10624  002708  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10625  00270C                     l16861:
 10626                           
 10627                           ;../app/app_src/application.c: 1332:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10628  00270C  0E00               	movlw	0
 10629  00270E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10630  002710  0E1E               	movlw	30
 10631  002712  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10632  002714  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10633  002718  0100               	movlb	0	; () banked
 10634  00271A  6FF9               	movwf	_RSSITarget& (0+255),b
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;../app/app_src/application.c: 1333:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 10638  00271C  51F9               	movf	_RSSITarget& (0+255),w,b
 10639  00271E  0A80               	xorlw	128
 10640  002720  0F9E               	addlw	158
 10641  002722  B0D8               	btfsc	status,0,c
 10642  002724  D005               	goto	u17320
 10643                           
 10644                           ; BSR set to: 0
 10645  002726  51F9               	movf	_RSSITarget& (0+255),w,b
 10646  002728  0A80               	xorlw	128
 10647  00272A  0FF8               	addlw	248
 10648  00272C  B0D8               	btfsc	status,0,c
 10649  00272E  D00B               	goto	l16871
 10650  002730                     u17320:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;../app/app_src/application.c: 1334:         RSSITarget = -80;
 10654  002730  0EB0               	movlw	176
 10655  002732  6FF9               	movwf	_RSSITarget& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;../app/app_src/application.c: 1335:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 10659  002734  0E00               	movlw	0
 10660  002736  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10661  002738  0E1E               	movlw	30
 10662  00273A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10663  00273C  0060  F3E4  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 10664  002742  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10665  002746                     l16871:
 10666                           
 10667                           ;../app/app_src/application.c: 1339:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 10668  002746  0E00               	movlw	0
 10669  002748  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10670  00274A  0E1F               	movlw	31
 10671  00274C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10672  00274E  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10673  002752  6E35               	movwf	bootLoadApplication@i^0,c
 10674                           
 10675                           ;../app/app_src/application.c: 1340:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 10676  002754  0E04               	movlw	4
 10677  002756  6035               	cpfslt	bootLoadApplication@i^0,c
 10678  002758  D003               	goto	u17340
 10679  00275A  0435               	decf	bootLoadApplication@i^0,w,c
 10680  00275C  A4D8               	btfss	status,2,c
 10681  00275E  D00A               	goto	l16881
 10682  002760                     u17340:
 10683                           
 10684                           ;../app/app_src/application.c: 1341:         i = UART_9BIT_EVEN_PARITY;
 10685  002760  0E03               	movlw	3
 10686  002762  6E35               	movwf	bootLoadApplication@i^0,c
 10687                           
 10688                           ;../app/app_src/application.c: 1342:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 10689  002764  0E00               	movlw	0
 10690  002766  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10691  002768  0E1F               	movlw	31
 10692  00276A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10693  00276C  0E03               	movlw	3
 10694  00276E  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10695  002770  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10696  002774                     l16881:
 10697                           
 10698                           ;../app/app_src/application.c: 1345:     set_parity(i);
 10699  002774  5035               	movf	bootLoadApplication@i^0,w,c
 10700  002776  EC25  F03C         	call	_set_parity
 10701                           
 10702                           ;../app/app_src/application.c: 1348:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10703  00277A  0E00               	movlw	0
 10704  00277C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10705  00277E  0E20               	movlw	32
 10706  002780  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10707  002782  ECAB  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10708  002786  6E35               	movwf	bootLoadApplication@i^0,c
 10709                           
 10710                           ;../app/app_src/application.c: 1349:     if(i > UART_BAUD_19200){
 10711  002788  0E01               	movlw	1
 10712  00278A  6435               	cpfsgt	bootLoadApplication@i^0,c
 10713  00278C  D00A               	goto	l16891
 10714                           
 10715                           ;../app/app_src/application.c: 1350:         i = UART_BAUD_19200;
 10716  00278E  0E01               	movlw	1
 10717  002790  6E35               	movwf	bootLoadApplication@i^0,c
 10718                           
 10719                           ;../app/app_src/application.c: 1351:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 10720  002792  0E00               	movlw	0
 10721  002794  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10722  002796  0E20               	movlw	32
 10723  002798  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10724  00279A  0E01               	movlw	1
 10725  00279C  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10726  00279E  EC68  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10727  0027A2                     l16891:
 10728                           
 10729                           ;../app/app_src/application.c: 1353:     set_uart_baud(i);
 10730  0027A2  5035               	movf	bootLoadApplication@i^0,w,c
 10731  0027A4  EC44  F030         	call	_set_uart_baud
 10732                           
 10733                           ;../app/app_src/application.c: 1392:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 10734  0027A8  0E00               	movlw	0
 10735  0027AA  6E32               	movwf	bootLoadApplication@buf_id^0,c
 10736  0027AC                     l16897:
 10737                           
 10738                           ;../app/app_src/application.c: 1393:         tx_buffer[buf_id].free = 1;
 10739  0027AC  5032               	movf	bootLoadApplication@buf_id^0,w,c
 10740  0027AE  0D83               	mullw	131
 10741  0027B0  0E6A               	movlw	low _tx_buffer
 10742  0027B2  24F3               	addwf	243,w,c
 10743  0027B4  6ED9               	movwf	fsr2l,c
 10744  0027B6  0E08               	movlw	high _tx_buffer
 10745  0027B8  20F4               	addwfc	prodh,w,c
 10746  0027BA  6EDA               	movwf	fsr2h,c
 10747  0027BC  84DF               	bsf	indf2,2,c
 10748                           
 10749                           ;../app/app_src/application.c: 1394:     }
 10750  0027BE  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 10751  0027C0  0E03               	movlw	3
 10752  0027C2  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 10753  0027C4  D7F3               	goto	l16897
 10754                           
 10755                           ;../app/app_src/application.c: 1395:     temp = (currentAddr0 << 8) | currentAddr1;
 10756  0027C6  0100               	movlb	0	; () banked
 10757  0027C8  51FB               	movf	_currentAddr1& (0+255),w,b
 10758  0027CA  0060  F3F0  F030   	movff	_currentAddr0,??_bootLoadApplication
 10759  0027D0  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 10760  0027D2  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 10761  0027D8  6A30               	clrf	??_bootLoadApplication^0,c
 10762  0027DA  1030               	iorwf	??_bootLoadApplication^0,w,c
 10763  0027DC  6E33               	movwf	bootLoadApplication@temp^0,c
 10764  0027DE  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 10765  0027E0  6E34               	movwf	(bootLoadApplication@temp+1)^0,c
 10766                           
 10767                           ;../app/app_src/application.c: 1396:     if(temp < 0x8000){
 10768  0027E2  0E80               	movlw	128
 10769  0027E4  5C34               	subwf	(bootLoadApplication@temp+1)^0,w,c
 10770  0027E6  B0D8               	btfsc	status,0,c
 10771  0027E8  D008               	goto	l16911
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;../app/app_src/application.c: 1397:         temp += 0x8000;
 10775  0027EA  0E80               	movlw	128
 10776  0027EC  2634               	addwf	(bootLoadApplication@temp+1)^0,f,c
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;../app/app_src/application.c: 1398:         currentAddr0 = (temp >> 8) & 0xFF;
 10780  0027EE  0060  F0D0  F0FC   	movff	bootLoadApplication@temp+1,_currentAddr0
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;../app/app_src/application.c: 1399:         currentAddr1 = temp & 0xFF;
 10784  0027F4  0060  F0CC  F0FB   	movff	bootLoadApplication@temp,_currentAddr1
 10785  0027FA                     l16911:
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;../app/app_src/application.c: 1401:     NWK_SetAddr(temp);
 10789  0027FA  0060  F0CC  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 10790  002800  0060  F0D0  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 10791  002806  EC10  F045         	call	_NWK_SetAddr	;wreg free
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;../app/app_src/application.c: 1402:     NWK_SetPanId(0x1234);
 10795  00280A  0E12               	movlw	18
 10796  00280C  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 10797  00280E  0E34               	movlw	52
 10798  002810  6E04               	movwf	NWK_SetPanId@panId^0,c
 10799  002812  EC01  F045         	call	_NWK_SetPanId	;wreg free
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;../app/app_src/application.c: 1403:     PHY_SetChannel(0x00);
 10803  002816  0E00               	movlw	0
 10804  002818  EC90  F040         	call	_PHY_SetChannel
 10805                           
 10806                           ; BSR set to: 61
 10807                           ;../app/app_src/application.c: 1404:     PHY_SetRxState(1);
 10808  00281C  0E01               	movlw	1
 10809  00281E  EC9E  F046         	call	_PHY_SetRxState
 10810                           
 10811                           ; BSR set to: 61
 10812                           ;../app/app_src/application.c: 1405:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 10813  002822  0ECE               	movlw	low _appDataInd
 10814  002824  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 10815  002826  0E71               	movlw	high _appDataInd
 10816  002828  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 10817  00282A  0E01               	movlw	1
 10818  00282C  ECB1  F044         	call	_NWK_OpenEndpoint
 10819  002830  0012               	return		;funcret
 10820  002832                     __end_of_bootLoadApplication:
 10821                           	opt callstack 0
 10822                           
 10823 ;; *************** function _set_uart_baud *****************
 10824 ;; Defined at:
 10825 ;;		line 148 in file "../app/app_src/application.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  i               1    wreg     unsigned char 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;  i               1    3[COMRAM] unsigned char 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      unsigned char 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 3F/3D
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;Total ram usage:        3 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    7
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_bootLoadApplication
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text57
 10854  006088                     __ptext57:
 10855                           	opt callstack 0
 10856  006088                     _set_uart_baud:
 10857                           	opt callstack 22
 10858                           
 10859                           ;incstack = 0
 10860                           ;set_uart_baud@i stored from wreg
 10861  006088  6E04               	movwf	set_uart_baud@i^0,c
 10862                           
 10863                           ;../app/app_src/application.c: 148: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 149: {;../app/app_src/application.c: 150:     U1CON1 &= ~(1<<7);
 10864  00608A  013D               	movlb	61	; () banked
 10865  00608C  9FF3               	bcf	243,7,b	;volatile
 10866                           
 10867                           ;../app/app_src/application.c: 151:     switch(i)
 10868  00608E  D047               	goto	l12707
 10869  006090                     l12655:
 10870                           
 10871                           ; BSR set to: 61
 10872                           ;../app/app_src/application.c: 155:             U1CON0 &=~ (1<<7);
 10873  006090  9FF2               	bcf	242,7,b	;volatile
 10874                           
 10875                           ; BSR set to: 61
 10876                           ;../app/app_src/application.c: 156:             U1BRGL = 0xA0;
 10877  006092  0EA0               	movlw	160
 10878  006094  6FF5               	movwf	245,b	;volatile
 10879                           
 10880                           ; BSR set to: 61
 10881                           ;../app/app_src/application.c: 157:             U1BRGH = 0x01;
 10882  006096  0E01               	movlw	1
 10883  006098  6FF6               	movwf	246,b	;volatile
 10884                           
 10885                           ; BSR set to: 61
 10886                           ;../app/app_src/application.c: 158:             current_baud_rate = 9600;
 10887  00609A  0E80               	movlw	128
 10888  00609C  0101               	movlb	1	; () banked
 10889  00609E  6F52               	movwf	_current_baud_rate& (0+255),b
 10890  0060A0  0E25               	movlw	37
 10891  0060A2  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10892  0060A4  0E00               	movlw	0
 10893  0060A6  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10894                           
 10895                           ; BSR set to: 1
 10896                           ;../app/app_src/application.c: 159:             uart_baud_rate = UART_BAUD_9600;
 10897  0060A8  0E00               	movlw	0
 10898  0060AA  D037               	goto	L6
 10899  0060AC                     l12665:
 10900                           
 10901                           ; BSR set to: 61
 10902                           ;../app/app_src/application.c: 163:             U1CON0 &=~ (1<<7);
 10903  0060AC  9FF2               	bcf	242,7,b	;volatile
 10904                           
 10905                           ; BSR set to: 61
 10906                           ;../app/app_src/application.c: 164:             U1BRGL = 0xCF;
 10907  0060AE  0ECF               	movlw	207
 10908  0060B0  6FF5               	movwf	245,b	;volatile
 10909                           
 10910                           ; BSR set to: 61
 10911                           ;../app/app_src/application.c: 165:             U1BRGH = 0x00;
 10912  0060B2  0E00               	movlw	0
 10913  0060B4  6FF6               	movwf	246,b	;volatile
 10914                           
 10915                           ; BSR set to: 61
 10916                           ;../app/app_src/application.c: 166:             current_baud_rate = 19200;
 10917  0060B6  0E00               	movlw	0
 10918  0060B8  0101               	movlb	1	; () banked
 10919  0060BA  6F52               	movwf	_current_baud_rate& (0+255),b
 10920  0060BC  0E4B               	movlw	75
 10921  0060BE  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10922  0060C0  0E00               	movlw	0
 10923  0060C2  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10924                           
 10925                           ; BSR set to: 1
 10926                           ;../app/app_src/application.c: 167:             uart_baud_rate = UART_BAUD_19200;
 10927  0060C4  0E01               	movlw	1
 10928  0060C6  D029               	goto	L6
 10929  0060C8                     l12675:
 10930                           
 10931                           ; BSR set to: 61
 10932                           ;../app/app_src/application.c: 171:             U1CON0 &=~ (1<<7);
 10933  0060C8  9FF2               	bcf	242,7,b	;volatile
 10934                           
 10935                           ; BSR set to: 61
 10936                           ;../app/app_src/application.c: 172:             U1BRGL = 0x67;
 10937  0060CA  0E67               	movlw	103
 10938  0060CC  6FF5               	movwf	245,b	;volatile
 10939                           
 10940                           ; BSR set to: 61
 10941                           ;../app/app_src/application.c: 173:             U1BRGH = 0x00;
 10942  0060CE  0E00               	movlw	0
 10943  0060D0  6FF6               	movwf	246,b	;volatile
 10944                           
 10945                           ; BSR set to: 61
 10946                           ;../app/app_src/application.c: 174:             current_baud_rate = 38400;
 10947  0060D2  0E00               	movlw	0
 10948  0060D4  0101               	movlb	1	; () banked
 10949  0060D6  6F52               	movwf	_current_baud_rate& (0+255),b
 10950  0060D8  0E96               	movlw	150
 10951  0060DA  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10952  0060DC  0E00               	movlw	0
 10953  0060DE  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10954                           
 10955                           ; BSR set to: 1
 10956                           ;../app/app_src/application.c: 175:             uart_baud_rate = UART_BAUD_38400;
 10957  0060E0  0E02               	movlw	2
 10958  0060E2  D01B               	goto	L6
 10959  0060E4                     l12685:
 10960                           
 10961                           ; BSR set to: 61
 10962                           ;../app/app_src/application.c: 179:             U1CON0 |= (1<<7);
 10963  0060E4  8FF2               	bsf	242,7,b	;volatile
 10964                           
 10965                           ; BSR set to: 61
 10966                           ;../app/app_src/application.c: 180:             U1BRGL = 0x14;
 10967  0060E6  0E14               	movlw	20
 10968  0060E8  6FF5               	movwf	245,b	;volatile
 10969                           
 10970                           ; BSR set to: 61
 10971                           ;../app/app_src/application.c: 181:             U1BRGH = 0x01;
 10972  0060EA  0E01               	movlw	1
 10973  0060EC  6FF6               	movwf	246,b	;volatile
 10974                           
 10975                           ; BSR set to: 61
 10976                           ;../app/app_src/application.c: 182:             current_baud_rate = 57600;
 10977  0060EE  0E00               	movlw	0
 10978  0060F0  0101               	movlb	1	; () banked
 10979  0060F2  6F52               	movwf	_current_baud_rate& (0+255),b
 10980  0060F4  0EE1               	movlw	225
 10981  0060F6  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10982  0060F8  0E00               	movlw	0
 10983  0060FA  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10984                           
 10985                           ; BSR set to: 1
 10986                           ;../app/app_src/application.c: 183:             uart_baud_rate = UART_BAUD_57600;
 10987  0060FC  0E03               	movlw	3
 10988  0060FE  D00D               	goto	L6
 10989  006100                     l12695:
 10990                           
 10991                           ; BSR set to: 61
 10992                           ;../app/app_src/application.c: 187:             U1CON0 |= (1<<7);
 10993  006100  8FF2               	bsf	242,7,b	;volatile
 10994                           
 10995                           ; BSR set to: 61
 10996                           ;../app/app_src/application.c: 188:             U1BRGL = 0x89;
 10997  006102  0E89               	movlw	137
 10998  006104  6FF5               	movwf	245,b	;volatile
 10999                           
 11000                           ; BSR set to: 61
 11001                           ;../app/app_src/application.c: 189:             U1BRGH = 0x00;
 11002  006106  0E00               	movlw	0
 11003  006108  6FF6               	movwf	246,b	;volatile
 11004                           
 11005                           ; BSR set to: 61
 11006                           ;../app/app_src/application.c: 190:             current_baud_rate = 115200;
 11007  00610A  0E00               	movlw	0
 11008  00610C  0101               	movlb	1	; () banked
 11009  00610E  6F52               	movwf	_current_baud_rate& (0+255),b
 11010  006110  0EC2               	movlw	194
 11011  006112  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 11012  006114  0E01               	movlw	1
 11013  006116  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 11014                           
 11015                           ; BSR set to: 1
 11016                           ;../app/app_src/application.c: 191:             uart_baud_rate = UART_BAUD_115200;
 11017  006118  0E04               	movlw	4
 11018  00611A                     L6:
 11019  00611A  6F73               	movwf	_uart_baud_rate& (0+255),b
 11020                           
 11021                           ;../app/app_src/application.c: 192:             break;
 11022  00611C  D018               	goto	l12709
 11023  00611E                     l12707:
 11024                           
 11025                           ; BSR set to: 61
 11026  00611E  5004               	movf	set_uart_baud@i^0,w,c
 11027  006120  6E02               	movwf	??_set_uart_baud^0,c
 11028  006122  6A03               	clrf	(??_set_uart_baud+1)^0,c
 11029                           
 11030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11031                           ; Switch size 1, requested type "simple"
 11032                           ; Number of cases is 1, Range of values is 0 to 0
 11033                           ; switch strategies available:
 11034                           ; Name         Instructions Cycles
 11035                           ; simple_byte            4     3 (average)
 11036                           ;	Chosen strategy is simple_byte
 11037  006124  5003               	movf	(??_set_uart_baud+1)^0,w,c
 11038  006126  0A00               	xorlw	0	; case 0
 11039  006128  A4D8               	btfss	status,2,c
 11040  00612A  0012               	return	
 11041                           
 11042                           ; BSR set to: 61
 11043                           ; Switch size 1, requested type "simple"
 11044                           ; Number of cases is 5, Range of values is 0 to 4
 11045                           ; switch strategies available:
 11046                           ; Name         Instructions Cycles
 11047                           ; simple_byte           16     9 (average)
 11048                           ;	Chosen strategy is simple_byte
 11049  00612C  5002               	movf	??_set_uart_baud^0,w,c
 11050  00612E  0A00               	xorlw	0	; case 0
 11051  006130  B4D8               	btfsc	status,2,c
 11052  006132  D7AE               	goto	l12655
 11053  006134  0A01               	xorlw	1	; case 1
 11054  006136  B4D8               	btfsc	status,2,c
 11055  006138  D7B9               	goto	l12665
 11056  00613A  0A03               	xorlw	3	; case 2
 11057  00613C  B4D8               	btfsc	status,2,c
 11058  00613E  D7C4               	goto	l12675
 11059  006140  0A01               	xorlw	1	; case 3
 11060  006142  B4D8               	btfsc	status,2,c
 11061  006144  D7CF               	goto	l12685
 11062  006146  0A07               	xorlw	7	; case 4
 11063  006148  A4D8               	btfss	status,2,c
 11064  00614A  0012               	return	
 11065  00614C  D7D9               	goto	l12695
 11066  00614E                     l12709:
 11067                           
 11068                           ; BSR set to: 1
 11069                           ;../app/app_src/application.c: 196:     U1CON1 |= (1<<7);
 11070  00614E  013D               	movlb	61	; () banked
 11071  006150  8FF3               	bsf	243,7,b	;volatile
 11072                           
 11073                           ; BSR set to: 61
 11074  006152  0012               	return		;funcret
 11075  006154                     __end_of_set_uart_baud:
 11076                           	opt callstack 0
 11077                           
 11078 ;; *************** function _set_parity *****************
 11079 ;; Defined at:
 11080 ;;		line 104 in file "../app/app_src/application.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  parity          1    wreg     unsigned char 
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;  parity          1    3[COMRAM] unsigned char 
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  1    wreg      unsigned char 
 11087 ;; Registers used:
 11088 ;;		wreg, status,2, status,0
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;Total ram usage:        3 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:    7
 11101 ;; This function calls:
 11102 ;;		Nothing
 11103 ;; This function is called by:
 11104 ;;		_cmdSetParity
 11105 ;;		_bootLoadApplication
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text58
 11110  00784A                     __ptext58:
 11111                           	opt callstack 0
 11112  00784A                     _set_parity:
 11113                           	opt callstack 20
 11114                           
 11115                           ; BSR set to: 61
 11116                           ;incstack = 0
 11117                           ;set_parity@parity stored from wreg
 11118  00784A  6E04               	movwf	set_parity@parity^0,c
 11119                           
 11120                           ;../app/app_src/application.c: 104: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 105: {;../app/app_src/application.c: 106:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 11121  00784C  0E04               	movlw	4
 11122  00784E  6004               	cpfslt	set_parity@parity^0,c
 11123  007850  0012               	return	
 11124  007852  0404               	decf	set_parity@parity^0,w,c
 11125  007854  B4D8               	btfsc	status,2,c
 11126  007856  0012               	return	
 11127                           
 11128                           ;../app/app_src/application.c: 109:     U1CON1 &= 0b01111111;
 11129  007858  013D               	movlb	61	; () banked
 11130  00785A  9FF3               	bcf	243,7,b	;volatile
 11131                           
 11132                           ; BSR set to: 61
 11133                           ;../app/app_src/application.c: 110:     U1CON0 &= 0b11110000;
 11134  00785C  0EF0               	movlw	240
 11135  00785E  17F2               	andwf	242,f,b	;volatile
 11136                           
 11137                           ; BSR set to: 61
 11138                           ;../app/app_src/application.c: 111:     U1CON0 |= (parity & 0b00001111);
 11139  007860  5004               	movf	set_parity@parity^0,w,c
 11140  007862  0B0F               	andlw	15
 11141  007864  13F2               	iorwf	242,f,b	;volatile
 11142                           
 11143                           ; BSR set to: 61
 11144                           ;../app/app_src/application.c: 112:     U1CON2 &=~ (0b00110000);
 11145  007866  0ECF               	movlw	207
 11146  007868  17F4               	andwf	244,f,b	;volatile
 11147                           
 11148                           ; BSR set to: 61
 11149                           ;../app/app_src/application.c: 113:     U1CON1 |= 0b10000000;
 11150  00786A  8FF3               	bsf	243,7,b	;volatile
 11151                           
 11152                           ;../app/app_src/application.c: 114:     switch(parity){
 11153  00786C  D00C               	goto	l11391
 11154  00786E                     l11383:
 11155                           
 11156                           ; BSR set to: 61
 11157                           ;../app/app_src/application.c: 116:             uart_parity = UART_8BIT_NO_PARITY;
 11158  00786E  0E00               	movlw	0
 11159  007870  0101               	movlb	1	; () banked
 11160  007872  6F72               	movwf	_uart_parity& (0+255),b
 11161                           
 11162                           ;../app/app_src/application.c: 120:             break;
 11163  007874  0012               	return	
 11164  007876                     l11385:
 11165                           
 11166                           ; BSR set to: 61
 11167                           ;../app/app_src/application.c: 122:             uart_parity = UART_9BIT_ODD_PARITY;
 11168  007876  0E02               	movlw	2
 11169  007878  0101               	movlb	1	; () banked
 11170  00787A  6F72               	movwf	_uart_parity& (0+255),b
 11171                           
 11172                           ;../app/app_src/application.c: 126:             break;
 11173  00787C  0012               	return	
 11174  00787E                     l11387:
 11175                           
 11176                           ; BSR set to: 61
 11177                           ;../app/app_src/application.c: 128:             uart_parity = UART_9BIT_EVEN_PARITY;
 11178  00787E  0E03               	movlw	3
 11179  007880  0101               	movlb	1	; () banked
 11180  007882  6F72               	movwf	_uart_parity& (0+255),b
 11181                           
 11182                           ;../app/app_src/application.c: 132:             break;
 11183  007884  0012               	return	
 11184  007886                     l11391:
 11185                           
 11186                           ; BSR set to: 61
 11187  007886  5004               	movf	set_parity@parity^0,w,c
 11188  007888  6E02               	movwf	??_set_parity^0,c
 11189  00788A  6A03               	clrf	(??_set_parity+1)^0,c
 11190                           
 11191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11192                           ; Switch size 1, requested type "simple"
 11193                           ; Number of cases is 1, Range of values is 0 to 0
 11194                           ; switch strategies available:
 11195                           ; Name         Instructions Cycles
 11196                           ; simple_byte            4     3 (average)
 11197                           ;	Chosen strategy is simple_byte
 11198  00788C  5003               	movf	(??_set_parity+1)^0,w,c
 11199  00788E  0A00               	xorlw	0	; case 0
 11200  007890  A4D8               	btfss	status,2,c
 11201  007892  D7ED               	goto	l11383
 11202                           
 11203                           ; BSR set to: 61
 11204                           ; Switch size 1, requested type "simple"
 11205                           ; Number of cases is 3, Range of values is 0 to 3
 11206                           ; switch strategies available:
 11207                           ; Name         Instructions Cycles
 11208                           ; simple_byte           10     6 (average)
 11209                           ;	Chosen strategy is simple_byte
 11210  007894  5002               	movf	??_set_parity^0,w,c
 11211  007896  0A00               	xorlw	0	; case 0
 11212  007898  B4D8               	btfsc	status,2,c
 11213  00789A  D7E9               	goto	l11383
 11214  00789C  0A02               	xorlw	2	; case 2
 11215  00789E  B4D8               	btfsc	status,2,c
 11216  0078A0  D7EA               	goto	l11385
 11217  0078A2  0A01               	xorlw	1	; case 3
 11218  0078A4  B4D8               	btfsc	status,2,c
 11219  0078A6  D7EB               	goto	l11387
 11220  0078A8  D7E2               	goto	l11383
 11221  0078AA                     __end_of_set_parity:
 11222                           	opt callstack 0
 11223                           
 11224 ;; *************** function _loadMACAddr *****************
 11225 ;; Defined at:
 11226 ;;		line 1258 in file "../app/app_src/application.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;		None
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  i               1    5[COMRAM] unsigned char 
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  1    wreg      void 
 11233 ;; Registers used:
 11234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11235 ;; Tracked objects:
 11236 ;;		On entry : 3F/2
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;Total ram usage:        1 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; Hardware stack levels required when called:    8
 11247 ;; This function calls:
 11248 ;;		_DIA_ReadByte
 11249 ;; This function is called by:
 11250 ;;		_bootLoadApplication
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text59
 11255  008256                     __ptext59:
 11256                           	opt callstack 0
 11257  008256                     _loadMACAddr:
 11258                           	opt callstack 21
 11259                           
 11260                           ; BSR set to: 2
 11261                           ;../app/app_src/application.c: 1261:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 11262                           
 11263                           ;incstack = 0
 11264  008256  0E00               	movlw	0
 11265  008258  6E06               	movwf	loadMACAddr@i^0,c
 11266  00825A                     l12889:
 11267                           
 11268                           ;../app/app_src/application.c: 1262:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 11269  00825A  5006               	movf	loadMACAddr@i^0,w,c
 11270  00825C  08C7               	sublw	low (_EUIDbyte+11)
 11271  00825E  6ED9               	movwf	fsr2l,c
 11272  008260  0E00               	movlw	0
 11273  008262  A0D8               	btfss	status,0,c
 11274  008264  2AE8               	incf	wreg,f,c
 11275  008266  0801               	sublw	high (_EUIDbyte+11)
 11276  008268  6EDA               	movwf	fsr2h,c
 11277  00826A  0E00               	movlw	0
 11278  00826C  2406               	addwf	loadMACAddr@i^0,w,c
 11279  00826E  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 11280  008270  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 11281  008272  0E00               	movlw	0
 11282  008274  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 11283  008276  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 11284  008278  0E3F               	movlw	63
 11285  00827A  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 11286  00827C  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 11287  00827E  0E00               	movlw	0
 11288  008280  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 11289  008282  EC2A  F044         	call	_DIA_ReadByte	;wreg free
 11290  008286  6EDF               	movwf	indf2,c
 11291                           
 11292                           ;../app/app_src/application.c: 1263:     }
 11293  008288  2A06               	incf	loadMACAddr@i^0,f,c
 11294  00828A  0E0B               	movlw	11
 11295  00828C  6406               	cpfsgt	loadMACAddr@i^0,c
 11296  00828E  D7E5               	goto	l12889
 11297  008290  0012               	return	
 11298  008292                     __end_of_loadMACAddr:
 11299                           	opt callstack 0
 11300                           
 11301 ;; *************** function _DIA_ReadByte *****************
 11302 ;; Defined at:
 11303 ;;		line 212 in file "mcc_generated_files/memory.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  flashAddr       4    1[COMRAM] unsigned long 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      unsigned char 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/2
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;Total ram usage:        4 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    7
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_loadMACAddr
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text60
 11332  008854                     __ptext60:
 11333                           	opt callstack 0
 11334  008854                     _DIA_ReadByte:
 11335                           	opt callstack 21
 11336                           
 11337                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 11338                           
 11339                           ;incstack = 0
 11340  008854  0139               	movlb	57	; () banked
 11341  008856  51E5               	movf	229,w,b	;volsfr
 11342  008858  0B3F               	andlw	-193
 11343  00885A  0940               	iorlw	64
 11344  00885C  6FE5               	movwf	229,b	;volsfr
 11345                           
 11346                           ; BSR set to: 57
 11347                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 11348  00885E  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 11349                           
 11350                           ; BSR set to: 57
 11351                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 11352  008864  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 11353                           
 11354                           ; BSR set to: 57
 11355                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11356  00886A  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 11357  008870  0008               	tblrd		*	;# 
 11358                           
 11359                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 11360  008872  50F5               	movf	245,w,c	;volatile
 11361  008874  0012               	return		;funcret
 11362  008876                     __end_of_DIA_ReadByte:
 11363                           	opt callstack 0
 11364                           
 11365 ;; *************** function _crc16_app *****************
 11366 ;; Defined at:
 11367 ;;		line 4 in file "../app/app_src/crc.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  dptr            2   18[COMRAM] PTR void 
 11370 ;;		 -> EUIDbyte(12), 
 11371 ;;  len             2   20[COMRAM] unsigned short 
 11372 ;;  seed            2   22[COMRAM] unsigned short 
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;  i               2   28[COMRAM] unsigned short 
 11375 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 11376 ;;		 -> EUIDbyte(12), 
 11377 ;;  result          2   24[COMRAM] unsigned short 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  2   18[COMRAM] unsigned short 
 11380 ;; Registers used:
 11381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/2
 11384 ;;		On exit  : 3F/39
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11387 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;Total ram usage:       12 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    9
 11394 ;; This function calls:
 11395 ;;		_CRC_8BitDataWrite
 11396 ;;		_CRC_CalculatedResultGet
 11397 ;; This function is called by:
 11398 ;;		_bootLoadApplication
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text61
 11403  00714A                     __ptext61:
 11404                           	opt callstack 0
 11405  00714A                     _crc16_app:
 11406                           	opt callstack 20
 11407                           
 11408                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 11409                           
 11410                           ;incstack = 0
 11411  00714A  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 11412  007150  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 11413                           
 11414                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 11415  007156  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 11416                           
 11417                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 11418  00715C  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 11419                           
 11420                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 11421  007162  0139               	movlb	57	; () banked
 11422  007164  8F68               	bsf	104,7,b	;volatile
 11423                           
 11424                           ; BSR set to: 57
 11425                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 11426  007166  8D68               	bsf	104,6,b	;volatile
 11427                           
 11428                           ; BSR set to: 57
 11429                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 11430  007168  0E00               	movlw	0
 11431  00716A  6E1E               	movwf	(crc16_app@i+1)^0,c
 11432  00716C  0E00               	movlw	0
 11433  00716E  6E1D               	movwf	crc16_app@i^0,c
 11434  007170  D00F               	goto	l12913
 11435  007172                     l606:
 11436                           
 11437                           ; BSR set to: 57
 11438  007172  B168               	btfsc	104,0,b	;volatile
 11439  007174  D7FE               	goto	l606
 11440                           
 11441                           ; BSR set to: 57
 11442                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 11443  007176  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 11444  00717C  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 11445  007182  50DF               	movf	indf2,w,c
 11446  007184  EC09  F046         	call	_CRC_8BitDataWrite
 11447                           
 11448                           ; BSR set to: 57
 11449                           ;../app/app_src/crc.c: 18:         ptr++;
 11450  007188  4A1B               	infsnz	crc16_app@ptr^0,f,c
 11451  00718A  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 11452                           
 11453                           ; BSR set to: 57
 11454                           ;../app/app_src/crc.c: 19:     }
 11455  00718C  4A1D               	infsnz	crc16_app@i^0,f,c
 11456  00718E  2A1E               	incf	(crc16_app@i+1)^0,f,c
 11457  007190                     l12913:
 11458                           
 11459                           ; BSR set to: 57
 11460  007190  5015               	movf	crc16_app@len^0,w,c
 11461  007192  5C1D               	subwf	crc16_app@i^0,w,c
 11462  007194  5016               	movf	(crc16_app@len+1)^0,w,c
 11463  007196  581E               	subwfb	(crc16_app@i+1)^0,w,c
 11464  007198  A0D8               	btfss	status,0,c
 11465  00719A  D7EB               	goto	l606
 11466  00719C                     u12100:
 11467                           
 11468                           ; BSR set to: 57
 11469  00719C  BB68               	btfsc	104,5,b	;volatile
 11470  00719E  D7FE               	goto	u12100
 11471                           
 11472                           ; BSR set to: 57
 11473                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 11474  0071A0  0E00               	movlw	0
 11475  0071A2  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 11476  0071A4  0E00               	movlw	0
 11477  0071A6  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 11478  0071A8  0E00               	movlw	0
 11479  0071AA  EC0D  F02F         	call	_CRC_CalculatedResultGet
 11480  0071AE  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 11481  0071B4  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 11482                           
 11483                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 11484  0071BA  0139               	movlb	57	; () banked
 11485  0071BC  9D68               	bcf	104,6,b	;volatile
 11486                           
 11487                           ; BSR set to: 57
 11488                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 11489  0071BE  9F68               	bcf	104,7,b	;volatile
 11490                           
 11491                           ; BSR set to: 57
 11492                           ;../app/app_src/crc.c: 25:     return(result);
 11493  0071C0  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 11494  0071C6  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 11495                           
 11496                           ; BSR set to: 57
 11497  0071CC  0012               	return		;funcret
 11498  0071CE                     __end_of_crc16_app:
 11499                           	opt callstack 0
 11500                           
 11501 ;; *************** function _CRC_CalculatedResultGet *****************
 11502 ;; Defined at:
 11503 ;;		line 159 in file "mcc_generated_files/crc.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;  reverse         1    wreg     _Bool 
 11506 ;;  xorValue        2    8[COMRAM] unsigned short 
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;  reverse         1   15[COMRAM] _Bool 
 11509 ;;  result          2   16[COMRAM] unsigned short 
 11510 ;;  mask            2   13[COMRAM] unsigned short 
 11511 ;; Return value:  Size  Location     Type
 11512 ;;                  2    8[COMRAM] unsigned short 
 11513 ;; Registers used:
 11514 ;;		wreg, status,2, status,0, cstack
 11515 ;; Tracked objects:
 11516 ;;		On entry : 3F/39
 11517 ;;		On exit  : 0/0
 11518 ;;		Unchanged: 0/0
 11519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11522 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11523 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11524 ;;Total ram usage:       10 bytes
 11525 ;; Hardware stack levels used:    1
 11526 ;; Hardware stack levels required when called:    8
 11527 ;; This function calls:
 11528 ;;		_CRC_ReverseValue
 11529 ;; This function is called by:
 11530 ;;		_crc16_app
 11531 ;; This function uses a non-reentrant model
 11532 ;;
 11533                           
 11534                           	psect	text62
 11535  005E1A                     __ptext62:
 11536                           	opt callstack 0
 11537  005E1A                     _CRC_CalculatedResultGet:
 11538                           	opt callstack 20
 11539                           
 11540                           ; BSR set to: 57
 11541                           ;incstack = 0
 11542                           ;CRC_CalculatedResultGet@reverse stored from wreg
 11543  005E1A  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 11544                           
 11545                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11546  005E1C  0139               	movlb	57	; () banked
 11547  005E1E  9D68               	bcf	104,6,b	;volatile
 11548                           
 11549                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11550  005E20  9DA0               	bcf	160,6,b	;volatile
 11551                           
 11552                           ; BSR set to: 57
 11553                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11554  005E22  5169               	movf	105,w,b	;volatile
 11555  005E24  0B0F               	andlw	15
 11556  005E26  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11557  005E28  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11558  005E2A  5169               	movf	105,w,b	;volatile
 11559  005E2C  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11560  005E2E  0B0F               	andlw	-241
 11561  005E30  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11562  005E32  6F69               	movwf	105,b	;volatile
 11563                           
 11564                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11565  005E34  0E08               	movlw	8
 11566  005E36  0101               	movlb	1	; () banked
 11567  005E38  65DB               	cpfsgt	(_crcObj+1)& (0+255),b
 11568  005E3A  D005               	goto	l12267
 11569                           
 11570                           ; BSR set to: 1
 11571                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11572  005E3C  0E00               	movlw	0
 11573  005E3E  0139               	movlb	57	; () banked
 11574  005E40  6F61               	movwf	97,b	;volatile
 11575                           
 11576                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 11577  005E42  0E00               	movlw	0
 11578  005E44  D002               	goto	L7
 11579  005E46                     l12267:
 11580                           
 11581                           ; BSR set to: 1
 11582                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11583  005E46  0E00               	movlw	0
 11584  005E48  0139               	movlb	57	; () banked
 11585  005E4A                     L7:
 11586  005E4A  6F60               	movwf	96,b	;volatile
 11587                           
 11588                           ; BSR set to: 57
 11589                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11590  005E4C  8D68               	bsf	104,6,b	;volatile
 11591  005E4E                     l1600:
 11592                           
 11593                           ; BSR set to: 57
 11594  005E4E  ADA0               	btfss	160,6,b	;volatile
 11595  005E50  D7FE               	goto	l1600
 11596                           
 11597                           ; BSR set to: 57
 11598                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11599  005E52  9DA0               	bcf	160,6,b	;volatile
 11600                           
 11601                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11602  005E54  9D68               	bcf	104,6,b	;volatile
 11603                           
 11604                           ; BSR set to: 57
 11605                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11606  005E56  0060  F768  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 11607  005E5C  0EFF               	movlw	255
 11608  005E5E  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 11609  005E60  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11610  005E62  5169               	movf	105,w,b	;volatile
 11611  005E64  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11612  005E66  0B0F               	andlw	-241
 11613  005E68  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11614  005E6A  6F69               	movwf	105,b	;volatile
 11615                           
 11616                           ; BSR set to: 57
 11617                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11618  005E6C  5163               	movf	99,w,b	;volatile
 11619  005E6E  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11620  005E70  5162               	movf	98,w,b	;volatile
 11621  005E72  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 11622  005E74  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 11623                           
 11624                           ; BSR set to: 57
 11625                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11626  005E7A  0E10               	movlw	16
 11627  005E7C  0101               	movlb	1	; () banked
 11628  005E7E  61DB               	cpfslt	(_crcObj+1)& (0+255),b
 11629  005E80  D018               	goto	l12279
 11630                           
 11631                           ; BSR set to: 1
 11632                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11633  005E82  0060  F76C  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 11634  005E88  0E01               	movlw	1
 11635  005E8A  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 11636  005E8C  0E00               	movlw	0
 11637  005E8E  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 11638  005E90  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 11639  005E92  D003               	goto	u11324
 11640  005E94                     u11325:
 11641  005E94  90D8               	bcf	status,0,c
 11642  005E96  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 11643  005E98  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 11644  005E9A                     u11324:
 11645  005E9A  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 11646  005E9C  D7FB               	goto	u11325
 11647  005E9E  0EFF               	movlw	255
 11648  005EA0  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 11649  005EA2  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 11650  005EA4  0EFF               	movlw	255
 11651  005EA6  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 11652  005EA8  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 11653                           
 11654                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11655  005EAA  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 11656  005EAC  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 11657  005EAE  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 11658  005EB0  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11659  005EB2                     l12279:
 11660                           
 11661                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11662  005EB2  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 11663  005EB4  B4D8               	btfsc	status,2,c
 11664  005EB6  D00E               	goto	l12283
 11665                           
 11666                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11667  005EB8  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 11668  005EBE  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 11669  005EC4  EC3E  F03D         	call	_CRC_ReverseValue	;wreg free
 11670  005EC8  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 11671  005ECE  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 11672  005ED4                     l12283:
 11673                           
 11674                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11675  005ED4  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 11676  005ED6  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 11677  005ED8  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 11678  005EDA  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11679                           
 11680                           ;mcc_generated_files/crc.c: 198:     return result;
 11681  005EDC  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 11682  005EE2  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 11683  005EE8  0012               	return		;funcret
 11684  005EEA                     __end_of_CRC_CalculatedResultGet:
 11685                           	opt callstack 0
 11686                           
 11687 ;; *************** function _CRC_ReverseValue *****************
 11688 ;; Defined at:
 11689 ;;		line 138 in file "mcc_generated_files/crc.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  crc             2    1[COMRAM] unsigned short 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  mask            2    6[COMRAM] unsigned short 
 11694 ;;  reverse         2    4[COMRAM] unsigned short 
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  2    1[COMRAM] unsigned short 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/1
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;Total ram usage:        7 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:    7
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_CRC_CalculatedResultGet
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text63
 11719  007A7C                     __ptext63:
 11720                           	opt callstack 0
 11721  007A7C                     _CRC_ReverseValue:
 11722                           	opt callstack 20
 11723                           
 11724                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11725                           
 11726                           ;incstack = 0
 11727  007A7C  0E00               	movlw	0
 11728  007A7E  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 11729  007A80  0E01               	movlw	1
 11730  007A82  6E07               	movwf	CRC_ReverseValue@mask^0,c
 11731                           
 11732                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11733  007A84  0060  F76C  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 11734  007A8A  0EFF               	movlw	255
 11735  007A8C  2604               	addwf	??_CRC_ReverseValue^0,f,c
 11736  007A8E  2804               	incf	??_CRC_ReverseValue^0,w,c
 11737  007A90  D003               	goto	u10350
 11738  007A92                     u10355:
 11739  007A92  90D8               	bcf	status,0,c
 11740  007A94  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 11741  007A96  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 11742  007A98                     u10350:
 11743  007A98  2EE8               	decfsz	wreg,f,c
 11744  007A9A  D7FB               	goto	u10355
 11745                           
 11746                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11747  007A9C  0E00               	movlw	0
 11748  007A9E  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 11749  007AA0  0E00               	movlw	0
 11750  007AA2  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 11751                           
 11752                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11753  007AA4  D00C               	goto	l1591
 11754  007AA6                     l1592:
 11755                           
 11756                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11757  007AA6  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 11758  007AA8  D004               	goto	l11551
 11759                           
 11760                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11761  007AAA  5007               	movf	CRC_ReverseValue@mask^0,w,c
 11762  007AAC  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 11763  007AAE  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 11764  007AB0  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 11765  007AB2                     l11551:
 11766                           
 11767                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11768  007AB2  90D8               	bcf	status,0,c
 11769  007AB4  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 11770  007AB6  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 11771                           
 11772                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11773  007AB8  90D8               	bcf	status,0,c
 11774  007ABA  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 11775  007ABC  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 11776  007ABE                     l1591:
 11777                           
 11778                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11779  007ABE  5002               	movf	CRC_ReverseValue@crc^0,w,c
 11780  007AC0  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 11781  007AC2  A4D8               	btfss	status,2,c
 11782  007AC4  D7F0               	goto	l1592
 11783                           
 11784                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11785  007AC6  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 11786  007ACC  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 11787  007AD2  0012               	return		;funcret
 11788  007AD4                     __end_of_CRC_ReverseValue:
 11789                           	opt callstack 0
 11790                           
 11791 ;; *************** function _CRC_8BitDataWrite *****************
 11792 ;; Defined at:
 11793 ;;		line 125 in file "mcc_generated_files/crc.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  data            1    wreg     unsigned char 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  data            1    1[COMRAM] unsigned char 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  1    wreg      _Bool 
 11800 ;; Registers used:
 11801 ;;		wreg
 11802 ;; Tracked objects:
 11803 ;;		On entry : 3F/39
 11804 ;;		On exit  : 3F/39
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;Total ram usage:        1 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:    7
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_crc16_app
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text64
 11822  008C12                     __ptext64:
 11823                           	opt callstack 0
 11824  008C12                     _CRC_8BitDataWrite:
 11825                           	opt callstack 21
 11826                           
 11827                           ;incstack = 0
 11828                           ;CRC_8BitDataWrite@data stored from wreg
 11829  008C12  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 11830                           
 11831                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11832  008C14  0139               	movlb	57	; () banked
 11833  008C16  B168               	btfsc	104,0,b	;volatile
 11834  008C18  0012               	return	
 11835                           
 11836                           ; BSR set to: 57
 11837                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11838  008C1A  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 11839                           
 11840                           ; BSR set to: 57
 11841  008C20  0012               	return		;funcret
 11842  008C22                     __end_of_CRC_8BitDataWrite:
 11843                           	opt callstack 0
 11844                           
 11845 ;; *************** function _PHY_SetRxState *****************
 11846 ;; Defined at:
 11847 ;;		line 814 in file "../phy/sx1216/phy_src/phy.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  rx              1    wreg     _Bool 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  rx              1    0[COMRAM] _Bool 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  1    wreg      void 
 11854 ;; Registers used:
 11855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11856 ;; Tracked objects:
 11857 ;;		On entry : 3F/3D
 11858 ;;		On exit  : 3F/3D
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;Total ram usage:        0 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:   13
 11868 ;; This function calls:
 11869 ;;		_receive
 11870 ;; This function is called by:
 11871 ;;		_bootLoadApplication
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text65
 11876  008D3C                     __ptext65:
 11877                           	opt callstack 0
 11878  008D3C                     _PHY_SetRxState:
 11879                           	opt callstack 16
 11880                           
 11881                           ; BSR set to: 61
 11882                           ;../phy/sx1216/phy_src/phy.c: 815:     receive(0);
 11883                           
 11884                           ; BSR set to: 57
 11885                           ;incstack = 0
 11886  008D3C  0E00               	movlw	0
 11887  008D3E  ECED  F040         	call	_receive
 11888                           
 11889                           ; BSR set to: 61
 11890  008D42  0012               	return		;funcret
 11891  008D44                     __end_of_PHY_SetRxState:
 11892                           	opt callstack 0
 11893                           
 11894 ;; *************** function _PHY_SetChannel *****************
 11895 ;; Defined at:
 11896 ;;		line 818 in file "../phy/sx1216/phy_src/phy.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;  channel         1    wreg     unsigned char 
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;  channel         1   46[COMRAM] unsigned char 
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  1    wreg      void 
 11903 ;; Registers used:
 11904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 3F/0
 11907 ;;		On exit  : 3F/3D
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;Total ram usage:        1 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:   12
 11917 ;; This function calls:
 11918 ;;		_setFrequency
 11919 ;; This function is called by:
 11920 ;;		_bootLoadApplication
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text66
 11925  008120                     __ptext66:
 11926                           	opt callstack 0
 11927  008120                     _PHY_SetChannel:
 11928                           	opt callstack 17
 11929                           
 11930                           ; BSR set to: 61
 11931                           ;incstack = 0
 11932                           ;PHY_SetChannel@channel stored from wreg
 11933  008120  6E2F               	movwf	PHY_SetChannel@channel^0,c
 11934                           
 11935                           ;../phy/sx1216/phy_src/phy.c: 819:     setFrequency(fhssList[channel]);
 11936  008122  502F               	movf	PHY_SetChannel@channel^0,w,c
 11937  008124  0D04               	mullw	4
 11938  008126  0EC9               	movlw	low _fhssList
 11939  008128  24F3               	addwf	243,w,c
 11940  00812A  6EF6               	movwf	tblptrl,c
 11941  00812C  0EFC               	movlw	high _fhssList
 11942  00812E  20F4               	addwfc	244,w,c
 11943  008130  6EF7               	movwf	tblptrh,c
 11944  008132                     	if	1	;There are 3 active tblptr bytes
 11945  008132  6AF8               	clrf	tblptru,c
 11946  008134  0E00               	movlw	low (__mediumconst shr (0+16))
 11947  008136  22F8               	addwfc	tblptru,f,c
 11948  008138                     	endif
 11949  008138  0009               	tblrd		*+
 11950  00813A  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 11951  008140  0009               	tblrd		*+
 11952  008142  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 11953  008148  0009               	tblrd		*+
 11954  00814A  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 11955  008150  000A               	tblrd		*-
 11956  008152  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 11957  008158  EC4E  F025         	call	_setFrequency	;wreg free
 11958                           
 11959                           ; BSR set to: 61
 11960  00815C  0012               	return		;funcret
 11961  00815E                     __end_of_PHY_SetChannel:
 11962                           	opt callstack 0
 11963                           
 11964 ;; *************** function _NWK_SetPanId *****************
 11965 ;; Defined at:
 11966 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  panId           2    3[COMRAM] unsigned short 
 11969 ;; Auto vars:     Size  Location     Type
 11970 ;;		None
 11971 ;; Return value:  Size  Location     Type
 11972 ;;                  1    wreg      void 
 11973 ;; Registers used:
 11974 ;;		cstack
 11975 ;; Tracked objects:
 11976 ;;		On entry : 3F/0
 11977 ;;		On exit  : 3F/0
 11978 ;;		Unchanged: 3F/0
 11979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;Total ram usage:        2 bytes
 11985 ;; Hardware stack levels used:    1
 11986 ;; Hardware stack levels required when called:    8
 11987 ;; This function calls:
 11988 ;;		_PHY_SetPanId
 11989 ;; This function is called by:
 11990 ;;		_bootLoadApplication
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text67
 11995  008A02                     __ptext67:
 11996                           	opt callstack 0
 11997  008A02                     _NWK_SetPanId:
 11998                           	opt callstack 21
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 12002                           
 12003                           ; BSR set to: 61
 12004                           ;incstack = 0
 12005  008A02  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 12006  008A08  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 12010  008A0E  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 12011  008A14  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 12012  008A1A  ECB8  F046         	call	_PHY_SetPanId	;wreg free
 12013                           
 12014                           ; BSR set to: 0
 12015  008A1E  0012               	return		;funcret
 12016  008A20                     __end_of_NWK_SetPanId:
 12017                           	opt callstack 0
 12018                           
 12019 ;; *************** function _PHY_SetPanId *****************
 12020 ;; Defined at:
 12021 ;;		line 822 in file "../phy/sx1216/phy_src/phy.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  panId           2    1[COMRAM] unsigned short 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		None
 12030 ;; Tracked objects:
 12031 ;;		On entry : 3F/0
 12032 ;;		On exit  : 3F/0
 12033 ;;		Unchanged: 3F/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        2 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:    7
 12042 ;; This function calls:
 12043 ;;		Nothing
 12044 ;; This function is called by:
 12045 ;;		_NWK_SetPanId
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           	psect	text68
 12050  008D70                     __ptext68:
 12051                           	opt callstack 0
 12052  008D70                     _PHY_SetPanId:
 12053                           	opt callstack 21
 12054                           
 12055                           ; BSR set to: 0
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;incstack = 0
 12059  008D70  0012               	return		;funcret
 12060  008D72                     __end_of_PHY_SetPanId:
 12061                           	opt callstack 0
 12062                           
 12063 ;; *************** function _NWK_SetAddr *****************
 12064 ;; Defined at:
 12065 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;  addr            2    3[COMRAM] unsigned short 
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		cstack
 12074 ;; Tracked objects:
 12075 ;;		On entry : 3F/0
 12076 ;;		On exit  : 3F/0
 12077 ;;		Unchanged: 3F/0
 12078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;Total ram usage:        2 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    8
 12086 ;; This function calls:
 12087 ;;		_PHY_SetShortAddr
 12088 ;; This function is called by:
 12089 ;;		_bootLoadApplication
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           	psect	text69
 12094  008A20                     __ptext69:
 12095                           	opt callstack 0
 12096  008A20                     _NWK_SetAddr:
 12097                           	opt callstack 21
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;incstack = 0
 12104  008A20  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 12105  008A26  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 12109  008A2C  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 12110  008A32  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 12111  008A38  ECB9  F046         	call	_PHY_SetShortAddr	;wreg free
 12112                           
 12113                           ; BSR set to: 0
 12114  008A3C  0012               	return		;funcret
 12115  008A3E                     __end_of_NWK_SetAddr:
 12116                           	opt callstack 0
 12117                           
 12118 ;; *************** function _PHY_SetShortAddr *****************
 12119 ;; Defined at:
 12120 ;;		line 826 in file "../phy/sx1216/phy_src/phy.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  addr            2    1[COMRAM] unsigned short 
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;		None
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		None
 12129 ;; Tracked objects:
 12130 ;;		On entry : 3F/0
 12131 ;;		On exit  : 3F/0
 12132 ;;		Unchanged: 3F/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;Total ram usage:        2 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    7
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_NWK_SetAddr
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text70
 12149  008D72                     __ptext70:
 12150                           	opt callstack 0
 12151  008D72                     _PHY_SetShortAddr:
 12152                           	opt callstack 21
 12153                           
 12154                           ; BSR set to: 0
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;incstack = 0
 12158  008D72  0012               	return		;funcret
 12159  008D74                     __end_of_PHY_SetShortAddr:
 12160                           	opt callstack 0
 12161                           
 12162 ;; *************** function _DATAEE_WriteByte_Platform *****************
 12163 ;; Defined at:
 12164 ;;		line 40 in file "../app/app_src/EEPROM.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;  addr            2    5[COMRAM] unsigned short 
 12167 ;;  data            1    7[COMRAM] unsigned char 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;		None
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, status,2, status,0, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12179 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;Total ram usage:        3 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:    8
 12186 ;; This function calls:
 12187 ;;		_DATAEE_WriteByte
 12188 ;; This function is called by:
 12189 ;;		_cmdSetNaddr
 12190 ;;		_cmdSetAES
 12191 ;;		_cmdSetRFCH
 12192 ;;		_cmdSetTX
 12193 ;;		_cmdSetCADRSSI
 12194 ;;		_cmdBootLoad
 12195 ;;		_cmdSetSF
 12196 ;;		_bootLoadApplication
 12197 ;; This function uses a non-reentrant model
 12198 ;;
 12199                           
 12200                           	psect	text71
 12201  007ED0                     __ptext71:
 12202                           	opt callstack 0
 12203  007ED0                     _DATAEE_WriteByte_Platform:
 12204                           	opt callstack 19
 12205                           
 12206                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;incstack = 0
 12210  007ED0  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 12211  007ED6  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12212  007EDC  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12213  007EE2  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12214                           
 12215                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 12216  007EE6  0E00               	movlw	0
 12217  007EE8  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12218  007EEA  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12219  007EEC  0E01               	movlw	1
 12220  007EEE  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12221  007EF0  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12222  007EF2  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12223  007EF8  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12224                           
 12225                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 12226  007EFC  0E00               	movlw	0
 12227  007EFE  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12228  007F00  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12229  007F02  0E02               	movlw	2
 12230  007F04  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12231  007F06  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12232  007F08  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12233  007F0E  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12234  007F12  0012               	return		;funcret
 12235  007F14                     __end_of_DATAEE_WriteByte_Platform:
 12236                           	opt callstack 0
 12237                           
 12238 ;; *************** function _DATAEE_ReadByte_Platform *****************
 12239 ;; Defined at:
 12240 ;;		line 6 in file "../app/app_src/EEPROM.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  addr            2    5[COMRAM] unsigned short 
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;  copy1           1    9[COMRAM] unsigned char 
 12245 ;;  copy2           1    8[COMRAM] unsigned char 
 12246 ;;  copy3           1    7[COMRAM] unsigned char 
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  1    wreg      unsigned char 
 12249 ;; Registers used:
 12250 ;;		wreg, status,2, status,0, cstack
 12251 ;; Tracked objects:
 12252 ;;		On entry : 0/39
 12253 ;;		On exit  : 0/0
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;Total ram usage:        5 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:    8
 12263 ;; This function calls:
 12264 ;;		_DATAEE_ReadByte
 12265 ;;		_DATAEE_WriteByte
 12266 ;; This function is called by:
 12267 ;;		_bootLoadApplication
 12268 ;; This function uses a non-reentrant model
 12269 ;;
 12270                           
 12271                           	psect	text72
 12272  005556                     __ptext72:
 12273                           	opt callstack 0
 12274  005556                     _DATAEE_ReadByte_Platform:
 12275                           	opt callstack 21
 12276                           
 12277                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 12278                           
 12279                           ;incstack = 0
 12280  005556  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 12281  00555C  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 12282  005562  EC1F  F045         	call	_DATAEE_ReadByte	;wreg free
 12283  005566  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 12284                           
 12285                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 12286  005568  0E00               	movlw	0
 12287  00556A  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12288  00556C  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12289  00556E  0E01               	movlw	1
 12290  005570  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12291  005572  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12292  005574  EC1F  F045         	call	_DATAEE_ReadByte	;wreg free
 12293  005578  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 12294                           
 12295                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 12296  00557A  0E00               	movlw	0
 12297  00557C  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12298  00557E  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12299  005580  0E02               	movlw	2
 12300  005582  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12301  005584  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12302  005586  EC1F  F045         	call	_DATAEE_ReadByte	;wreg free
 12303  00558A  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 12304                           
 12305                           ; BSR set to: 57
 12306                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 12307  00558C  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12308  00558E  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12309  005590  A4D8               	btfss	status,2,c
 12310  005592  D006               	goto	l12937
 12311                           
 12312                           ; BSR set to: 57
 12313  005594  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12314  005596  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12315  005598  A4D8               	btfss	status,2,c
 12316  00559A  D002               	goto	l12937
 12317  00559C                     u12130:
 12318                           
 12319                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 12320  00559C  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12321  00559E  0012               	return	
 12322  0055A0                     l12937:
 12323                           
 12324                           ; BSR set to: 57
 12325  0055A0  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12326  0055A2  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12327  0055A4  A4D8               	btfss	status,2,c
 12328  0055A6  D010               	goto	l12949
 12329                           
 12330                           ; BSR set to: 57
 12331  0055A8  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12332  0055AA  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12333  0055AC  B4D8               	btfsc	status,2,c
 12334  0055AE  D00C               	goto	l12949
 12335                           
 12336                           ; BSR set to: 57
 12337                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 12338  0055B0  0E00               	movlw	0
 12339  0055B2  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12340  0055B4  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12341  0055B6  0E02               	movlw	2
 12342  0055B8  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12343  0055BA  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12344  0055BC  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12345  0055C2  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12346  0055C6  D7EA               	goto	u12130
 12347  0055C8                     l12949:
 12348                           
 12349                           ; BSR set to: 57
 12350  0055C8  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12351  0055CA  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12352  0055CC  B4D8               	btfsc	status,2,c
 12353  0055CE  D011               	goto	l12961
 12354                           
 12355                           ; BSR set to: 57
 12356  0055D0  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12357  0055D2  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12358  0055D4  A4D8               	btfss	status,2,c
 12359  0055D6  D00D               	goto	l12961
 12360                           
 12361                           ; BSR set to: 57
 12362                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 12363  0055D8  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 12364  0055DE  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12365  0055E4  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 12366  0055EA  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12367                           
 12368                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 12369  0055EE  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12370  0055F0  0012               	return	
 12371  0055F2                     l12961:
 12372                           
 12373                           ; BSR set to: 57
 12374  0055F2  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12375  0055F4  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12376  0055F6  A4D8               	btfss	status,2,c
 12377  0055F8  D010               	goto	l12973
 12378                           
 12379                           ; BSR set to: 57
 12380  0055FA  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12381  0055FC  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12382  0055FE  B4D8               	btfsc	status,2,c
 12383  005600  D00C               	goto	l12973
 12384                           
 12385                           ; BSR set to: 57
 12386                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 12387  005602  0E00               	movlw	0
 12388  005604  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12389  005606  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12390  005608  0E01               	movlw	1
 12391  00560A  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12392  00560C  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12393  00560E  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12394  005614  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12395  005618  D7C1               	goto	u12130
 12396  00561A                     l12973:
 12397                           
 12398                           ; BSR set to: 57
 12399                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 12400  00561A  0E00               	movlw	0
 12401  00561C  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12402  00561E  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12403  005620  0E01               	movlw	1
 12404  005622  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12405  005624  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12406  005626  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12407  00562C  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12408                           
 12409                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 12410  005630  0E00               	movlw	0
 12411  005632  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12412  005634  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12413  005636  0E02               	movlw	2
 12414  005638  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12415  00563A  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12416  00563C  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12417  005642  EC11  F040         	call	_DATAEE_WriteByte	;wreg free
 12418  005646  D7AA               	goto	u12130
 12419  005648                     __end_of_DATAEE_ReadByte_Platform:
 12420                           	opt callstack 0
 12421                           
 12422 ;; *************** function _DATAEE_WriteByte *****************
 12423 ;; Defined at:
 12424 ;;		line 172 in file "mcc_generated_files/memory.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;  bAdd            2    1[COMRAM] unsigned short 
 12427 ;;  bData           1    3[COMRAM] unsigned char 
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  1    wreg      void 
 12432 ;; Registers used:
 12433 ;;		wreg, status,2, status,0
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12439 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;Total ram usage:        4 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:    7
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_DATAEE_ReadByte_Platform
 12450 ;;		_DATAEE_WriteByte_Platform
 12451 ;; This function uses a non-reentrant model
 12452 ;;
 12453                           
 12454                           	psect	text73
 12455  008022                     __ptext73:
 12456                           	opt callstack 0
 12457  008022                     _DATAEE_WriteByte:
 12458                           	opt callstack 19
 12459                           
 12460                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12461                           
 12462                           ;incstack = 0
 12463  008022  0E00               	movlw	0
 12464  008024  BED2               	btfsc	210,7,c	;volatile
 12465  008026  0E01               	movlw	1
 12466  008028  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 12467                           
 12468                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12469  00802A  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 12470  00802C  0B03               	andlw	3
 12471  00802E  0139               	movlb	57	; () banked
 12472  008030  6FE1               	movwf	225,b	;volatile
 12473                           
 12474                           ; BSR set to: 57
 12475                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12476  008032  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 12477                           
 12478                           ; BSR set to: 57
 12479                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12480  008038  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 12481                           
 12482                           ; BSR set to: 57
 12483                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12484  00803E  0E3F               	movlw	-193
 12485  008040  17E5               	andwf	229,f,b	;volsfr
 12486                           
 12487                           ; BSR set to: 57
 12488                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12489  008042  85E5               	bsf	229,2,b	;volsfr
 12490                           
 12491                           ; BSR set to: 57
 12492                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12493  008044  9ED2               	bcf	210,7,c	;volatile
 12494                           
 12495                           ; BSR set to: 57
 12496                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12497  008046  0E55               	movlw	85
 12498  008048  6FE6               	movwf	230,b	;volsfr
 12499                           
 12500                           ; BSR set to: 57
 12501                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12502  00804A  0EAA               	movlw	170
 12503  00804C  6FE6               	movwf	230,b	;volsfr
 12504                           
 12505                           ; BSR set to: 57
 12506                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12507  00804E  83E5               	bsf	229,1,b	;volsfr
 12508  008050                     l1180:
 12509                           
 12510                           ; BSR set to: 57
 12511                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12512  008050  B3E5               	btfsc	229,1,b	;volsfr
 12513  008052  D7FE               	goto	l1180
 12514                           
 12515                           ; BSR set to: 57
 12516                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12517  008054  95E5               	bcf	229,2,b	;volsfr
 12518                           
 12519                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12520  008056  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 12521  008058  D002               	bra	u9095
 12522  00805A  9ED2               	bcf	210,7,c	;volatile
 12523  00805C  D001               	bra	u9096
 12524  00805E                     u9095:
 12525  00805E  8ED2               	bsf	210,7,c	;volatile
 12526  008060                     u9096:
 12527  008060  0012               	return		;funcret
 12528  008062                     __end_of_DATAEE_WriteByte:
 12529                           	opt callstack 0
 12530                           
 12531 ;; *************** function _DATAEE_ReadByte *****************
 12532 ;; Defined at:
 12533 ;;		line 194 in file "mcc_generated_files/memory.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;  bAdd            2    1[COMRAM] unsigned short 
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;		None
 12538 ;; Return value:  Size  Location     Type
 12539 ;;                  1    wreg      unsigned char 
 12540 ;; Registers used:
 12541 ;;		wreg, status,2, status,0
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/39
 12544 ;;		On exit  : 3F/39
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;Total ram usage:        2 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    7
 12554 ;; This function calls:
 12555 ;;		Nothing
 12556 ;; This function is called by:
 12557 ;;		_DATAEE_ReadByte_Platform
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561                           	psect	text74
 12562  008A3E                     __ptext74:
 12563                           	opt callstack 0
 12564  008A3E                     _DATAEE_ReadByte:
 12565                           	opt callstack 21
 12566                           
 12567                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 12568                           
 12569                           ;incstack = 0
 12570  008A3E  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 12571  008A40  0B03               	andlw	3
 12572  008A42  0139               	movlb	57	; () banked
 12573  008A44  6FE1               	movwf	225,b	;volatile
 12574                           
 12575                           ; BSR set to: 57
 12576                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12577  008A46  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 12578                           
 12579                           ; BSR set to: 57
 12580                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 12581  008A4C  0E3F               	movlw	-193
 12582  008A4E  17E5               	andwf	229,f,b	;volsfr
 12583                           
 12584                           ; BSR set to: 57
 12585                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 12586  008A50  81E5               	bsf	229,0,b	;volsfr
 12587                           
 12588                           ; BSR set to: 57
 12589                           ;mcc_generated_files/memory.c: 200:     __nop();
 12590  008A52  F000               	nop	
 12591                           
 12592                           ;mcc_generated_files/memory.c: 201:     __nop();
 12593  008A54  F000               	nop	
 12594                           
 12595                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 12596  008A56  0139               	movlb	57	; () banked
 12597  008A58  51E3               	movf	227,w,b	;volatile
 12598                           
 12599                           ; BSR set to: 57
 12600  008A5A  0012               	return		;funcret
 12601  008A5C                     __end_of_DATAEE_ReadByte:
 12602                           	opt callstack 0
 12603                           
 12604 ;; *************** function _SYS_TaskHandler *****************
 12605 ;; Defined at:
 12606 ;;		line 67 in file "../sys/sys_src/sys.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;		None
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;		None
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  1    wreg      void 
 12613 ;; Registers used:
 12614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12615 ;; Tracked objects:
 12616 ;;		On entry : 0/2
 12617 ;;		On exit  : 3F/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;Total ram usage:        0 bytes
 12625 ;; Hardware stack levels used:    1
 12626 ;; Hardware stack levels required when called:   21
 12627 ;; This function calls:
 12628 ;;		_NWK_TaskHandler
 12629 ;;		_PHY_TaskHandler
 12630 ;;		_SYS_TimerTaskHandler
 12631 ;; This function is called by:
 12632 ;;		_main
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text75
 12637  008C86                     __ptext75:
 12638                           	opt callstack 0
 12639  008C86                     _SYS_TaskHandler:
 12640                           	opt callstack 9
 12641                           
 12642                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 12643                           
 12644                           ; BSR set to: 57
 12645                           ;incstack = 0
 12646  008C86  ECA8  F046         	call	_PHY_TaskHandler	;wreg free
 12647                           
 12648                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 12649  008C8A  EC4A  F046         	call	_NWK_TaskHandler	;wreg free
 12650                           
 12651                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 12652  008C8E  EC97  F027         	call	_SYS_TimerTaskHandler	;wreg free
 12653                           
 12654                           ; BSR set to: 0
 12655  008C92  0012               	return		;funcret
 12656  008C94                     __end_of_SYS_TaskHandler:
 12657                           	opt callstack 0
 12658                           
 12659 ;; *************** function _SYS_TimerTaskHandler *****************
 12660 ;; Defined at:
 12661 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;		None
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 12666 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12667 ;;  elapsed         4   29[COMRAM] unsigned long 
 12668 ;;  cnt             1   28[COMRAM] unsigned char 
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  1    wreg      void 
 12671 ;; Registers used:
 12672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 3F/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12679 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12681 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12682 ;;Total ram usage:       11 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:   10
 12685 ;; This function calls:
 12686 ;;		_nwkRxDuplicateRejectionTimerHandler
 12687 ;;		_nwkTxAckWaitTimerHandler
 12688 ;;		_nwkTxDelayTimerHandler
 12689 ;;		_placeTimer
 12690 ;; This function is called by:
 12691 ;;		_SYS_TaskHandler
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text76
 12696  004F2E                     __ptext76:
 12697                           	opt callstack 0
 12698  004F2E                     _SYS_TimerTaskHandler:
 12699                           	opt callstack 19
 12700                           
 12701                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;incstack = 0
 12705  004F2E  0100               	movlb	0	; () banked
 12706  004F30  51E4               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 12707  004F32  11E5               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 12708  004F34  B4D8               	btfsc	status,2,c
 12709  004F36  0012               	return	
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 12713                           
 12714                           ;../sys/sys_src/sysTimer.c: 119:     }
 12715  004F38  0139               	movlb	57	; () banked
 12716  004F3A  9F93               	bcf	147,7,b	;volatile
 12717                           
 12718                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 12719  004F3C  0060  F390  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 12720                           
 12721                           ; BSR set to: 57
 12722                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 12723  004F42  0E00               	movlw	0
 12724  004F44  0100               	movlb	0	; () banked
 12725  004F46  6FE5               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 12726  004F48  0E00               	movlw	0
 12727  004F4A  6FE4               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 12731  004F4C  0139               	movlb	57	; () banked
 12732  004F4E  8F93               	bsf	147,7,b	;volatile
 12733                           
 12734                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 12735  004F50  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 12736  004F52  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 12737  004F54  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 12738  004F56  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 12739  004F58  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 12740                           
 12741                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12742  004F5A  D04E               	goto	u17069
 12743  004F5C                     l16701:
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 12747  004F5C  0060  F380  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 12748  004F62  0060  F384  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 12752  004F68  EE20 F002          	lfsr	2,2
 12753  004F6C  51E0               	movf	_timers& (0+255),w,b
 12754  004F6E  26D9               	addwf	fsr2l,f,c
 12755  004F70  51E1               	movf	(_timers+1)& (0+255),w,b
 12756  004F72  22DA               	addwfc	fsr2h,f,c
 12757  004F74  50DE               	movf	postinc2,w,c
 12758  004F76  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 12759  004F78  50DE               	movf	postinc2,w,c
 12760  004F7A  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 12761  004F7C  50DE               	movf	postinc2,w,c
 12762  004F7E  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 12763  004F80  50DD               	movf	postdec2,w,c
 12764  004F82  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 12765                           
 12766                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 12767  004F84  0060  F383  FFD9   	movff	_timers,fsr2l
 12768  004F8A  0060  F387  FFDA   	movff	_timers+1,fsr2h
 12769  004F90  006F FF78  F0E0    	movff	postinc2,_timers
 12770  004F96  006F FF74  F0E1    	movff	postdec2,_timers+1
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 12774  004F9C  EE20 F00A          	lfsr	2,10
 12775  004FA0  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12776  004FA2  26D9               	addwf	fsr2l,f,c
 12777  004FA4  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12778  004FA6  22DA               	addwfc	fsr2h,f,c
 12779  004FA8  04DE               	decf	postinc2,w,c
 12780  004FAA  A4D8               	btfss	status,2,c
 12781  004FAC  D008               	goto	l16709
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 12785  004FAE  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 12786  004FB4  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 12787  004FBA  EC58  F01C         	call	_placeTimer	;wreg free
 12788  004FBE                     l16709:
 12789                           
 12790                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 12791  004FBE  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 12792  004FC4  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 12793  004FCA  EE20 F00B          	lfsr	2,11
 12794  004FCE  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12795  004FD0  26D9               	addwf	fsr2l,f,c
 12796  004FD2  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12797  004FD4  22DA               	addwfc	fsr2h,f,c
 12798  004FD6  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 12799  004FDC  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 12800  004FE2  D801               	call	u17068
 12801  004FE4  D009               	goto	u17069
 12802  004FE6                     u17068:
 12803  004FE6  0005               	push	
 12804  004FE8  6EFA               	movwf	pclath,c
 12805  004FEA  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 12806  004FEC  6EFD               	movwf	tosl,c
 12807  004FEE  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 12808  004FF0  6EFE               	movwf	tosh,c
 12809  004FF2  6AFF               	clrf	tosu,c
 12810  004FF4  50FA               	movf	pclath,w,c
 12811  004FF6  0012               	return		;indir
 12812  004FF8                     u17069:
 12813                           
 12814                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12815  004FF8  0100               	movlb	0	; () banked
 12816  004FFA  51E0               	movf	_timers& (0+255),w,b
 12817  004FFC  11E1               	iorwf	(_timers+1)& (0+255),w,b
 12818  004FFE  B4D8               	btfsc	status,2,c
 12819  005000  D010               	goto	u17080
 12820                           
 12821                           ; BSR set to: 0
 12822  005002  EE20 F002          	lfsr	2,2
 12823  005006  51E0               	movf	_timers& (0+255),w,b
 12824  005008  26D9               	addwf	fsr2l,f,c
 12825  00500A  51E1               	movf	(_timers+1)& (0+255),w,b
 12826  00500C  22DA               	addwfc	fsr2h,f,c
 12827  00500E  50DE               	movf	postinc2,w,c
 12828  005010  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 12829  005012  50DE               	movf	postinc2,w,c
 12830  005014  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12831  005016  50DE               	movf	postinc2,w,c
 12832  005018  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12833  00501A  50DE               	movf	postinc2,w,c
 12834  00501C  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12835  00501E  B0D8               	btfsc	status,0,c
 12836  005020  D79D               	goto	l16701
 12837  005022                     u17080:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 12841  005022  51E0               	movf	_timers& (0+255),w,b
 12842  005024  11E1               	iorwf	(_timers+1)& (0+255),w,b
 12843  005026  B4D8               	btfsc	status,2,c
 12844  005028  0012               	return	
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 12848  00502A  EE20 F002          	lfsr	2,2
 12849  00502E  51E0               	movf	_timers& (0+255),w,b
 12850  005030  26D9               	addwf	fsr2l,f,c
 12851  005032  51E1               	movf	(_timers+1)& (0+255),w,b
 12852  005034  22DA               	addwfc	fsr2h,f,c
 12853  005036  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 12854  005038  5EDE               	subwf	postinc2,f,c
 12855  00503A  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12856  00503C  5ADE               	subwfb	postinc2,f,c
 12857  00503E  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12858  005040  5ADE               	subwfb	postinc2,f,c
 12859  005042  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12860  005044  5ADE               	subwfb	postinc2,f,c
 12861                           
 12862                           ; BSR set to: 0
 12863  005046  0012               	return		;funcret
 12864  005048                     __end_of_SYS_TimerTaskHandler:
 12865                           	opt callstack 0
 12866                           
 12867 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 12868 ;; Defined at:
 12869 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12872 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 12875 ;;		 -> nwkFrameFrames(685), NULL(0), 
 12876 ;;  restart         1   21[COMRAM] _Bool 
 12877 ;; Return value:  Size  Location     Type
 12878 ;;                  1    wreg      void 
 12879 ;; Registers used:
 12880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12881 ;; Tracked objects:
 12882 ;;		On entry : 0/0
 12883 ;;		On exit  : 0/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12890 ;;Total ram usage:        7 bytes
 12891 ;; Hardware stack levels used:    1
 12892 ;; Hardware stack levels required when called:    9
 12893 ;; This function calls:
 12894 ;;		_SYS_TimerStart
 12895 ;;		_nwkFrameNext
 12896 ;;		_nwkTxConfirm
 12897 ;; This function is called by:
 12898 ;;		_nwkTxInit
 12899 ;;		_SYS_TimerTaskHandler
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           	psect	text77
 12904  006D84                     __ptext77:
 12905                           	opt callstack 0
 12906  006D84                     _nwkTxAckWaitTimerHandler:
 12907                           	opt callstack 19
 12908                           
 12909                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;incstack = 0
 12913  006D84  0E00               	movlw	0
 12914  006D86  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 12915  006D88  0E00               	movlw	0
 12916  006D8A  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 12917                           
 12918                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 12919  006D8C  0E00               	movlw	0
 12920  006D8E  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12921                           
 12922                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12923  006D90  D023               	goto	l2313
 12924  006D92                     l16401:
 12925                           
 12926                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 12927  006D92  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 12928  006D98  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 12929  006D9E  0E16               	movlw	22
 12930  006DA0  18DE               	xorwf	postinc2,w,c
 12931  006DA2  A4D8               	btfss	status,2,c
 12932  006DA4  D019               	goto	l2313
 12933                           
 12934                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 12935  006DA6  0E01               	movlw	1
 12936  006DA8  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12937                           
 12938                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 12939  006DAA  EE20 F084          	lfsr	2,132
 12940  006DAE  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12941  006DB0  26D9               	addwf	fsr2l,f,c
 12942  006DB2  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12943  006DB4  22DA               	addwfc	fsr2h,f,c
 12944  006DB6  06DE               	decf	postinc2,f,c
 12945  006DB8  0E00               	movlw	0
 12946  006DBA  5ADD               	subwfb	postdec2,f,c
 12947  006DBC  50DE               	movf	postinc2,w,c
 12948  006DBE  10DE               	iorwf	postinc2,w,c
 12949  006DC0  A4D8               	btfss	status,2,c
 12950  006DC2  D00A               	goto	l2313
 12951                           
 12952                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 12953  006DC4  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 12954  006DCA  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 12955  006DD0  0E10               	movlw	16
 12956  006DD2  6E04               	movwf	nwkTxConfirm@status^0,c
 12957  006DD4  ECF4  F043         	call	_nwkTxConfirm	;wreg free
 12958  006DD8                     l2313:
 12959                           
 12960                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12961  006DD8  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 12962  006DDE  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 12963  006DE4  EC95  F037         	call	_nwkFrameNext	;wreg free
 12964  006DE8  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 12965  006DEE  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 12966  006DF4  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12967  006DF6  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12968  006DF8  A4D8               	btfss	status,2,c
 12969  006DFA  D7CB               	goto	l16401
 12970                           
 12971                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 12972  006DFC  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 12973  006DFE  B4D8               	btfsc	status,2,c
 12974  006E00  0012               	return	
 12975                           
 12976                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 12977  006E02  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 12978  006E08  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 12979  006E0E  ECB9  F043         	call	_SYS_TimerStart	;wreg free
 12980  006E12  0012               	return		;funcret
 12981  006E14                     __end_of_nwkTxAckWaitTimerHandler:
 12982                           	opt callstack 0
 12983                           
 12984 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 12985 ;; Defined at:
 12986 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12989 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  i               1   20[COMRAM] unsigned char 
 12992 ;;  restart         1   19[COMRAM] _Bool 
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13005 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13006 ;;Total ram usage:        4 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:    9
 13009 ;; This function calls:
 13010 ;;		_SYS_TimerStart
 13011 ;; This function is called by:
 13012 ;;		_nwkRxInit
 13013 ;;		_SYS_TimerTaskHandler
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text78
 13018  007B7E                     __ptext78:
 13019                           	opt callstack 0
 13020  007B7E                     _nwkRxDuplicateRejectionTimerHandler:
 13021                           	opt callstack 19
 13022                           
 13023                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 13024                           
 13025                           ;incstack = 0
 13026  007B7E  0E00               	movlw	0
 13027  007B80  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13028                           
 13029                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 13030  007B82  0E00               	movlw	0
 13031  007B84  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13032  007B86                     l16383:
 13033                           
 13034                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 13035  007B86  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13036  007B88  0D05               	mullw	5
 13037  007B8A  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13038  007B8C  24F3               	addwf	243,w,c
 13039  007B8E  6ED9               	movwf	fsr2l,c
 13040  007B90  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13041  007B92  20F4               	addwfc	prodh,w,c
 13042  007B94  6EDA               	movwf	fsr2h,c
 13043  007B96  50DF               	movf	indf2,w,c
 13044  007B98  B4D8               	btfsc	status,2,c
 13045  007B9A  D00B               	goto	l16389
 13046                           
 13047                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 13048  007B9C  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13049  007B9E  0D05               	mullw	5
 13050  007BA0  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13051  007BA2  24F3               	addwf	243,w,c
 13052  007BA4  6ED9               	movwf	fsr2l,c
 13053  007BA6  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13054  007BA8  20F4               	addwfc	prodh,w,c
 13055  007BAA  6EDA               	movwf	fsr2h,c
 13056  007BAC  06DF               	decf	indf2,f,c
 13057                           
 13058                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 13059  007BAE  0E01               	movlw	1
 13060  007BB0  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13061  007BB2                     l16389:
 13062                           
 13063                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 13064  007BB2  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 13065  007BB4  0E09               	movlw	9
 13066  007BB6  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13067  007BB8  D7E6               	goto	l16383
 13068                           
 13069                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 13070  007BBA  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 13071  007BBC  B4D8               	btfsc	status,2,c
 13072  007BBE  0012               	return	
 13073                           
 13074                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 13075  007BC0  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 13076  007BC6  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 13077  007BCC  ECB9  F043         	call	_SYS_TimerStart	;wreg free
 13078  007BD0  0012               	return		;funcret
 13079  007BD2                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 13080                           	opt callstack 0
 13081                           
 13082 ;; *************** function _nwkTxDelayTimerHandler *****************
 13083 ;; Defined at:
 13084 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 13085 ;; Parameters:    Size  Location     Type
 13086 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13087 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13088 ;; Auto vars:     Size  Location     Type
 13089 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 13090 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13091 ;;  restart         1   21[COMRAM] _Bool 
 13092 ;; Return value:  Size  Location     Type
 13093 ;;                  1    wreg      void 
 13094 ;; Registers used:
 13095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13096 ;; Tracked objects:
 13097 ;;		On entry : 0/0
 13098 ;;		On exit  : 0/0
 13099 ;;		Unchanged: 0/0
 13100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13102 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;Total ram usage:        7 bytes
 13106 ;; Hardware stack levels used:    1
 13107 ;; Hardware stack levels required when called:    9
 13108 ;; This function calls:
 13109 ;;		_SYS_TimerStart
 13110 ;;		_nwkFrameNext
 13111 ;; This function is called by:
 13112 ;;		_nwkTxInit
 13113 ;;		_SYS_TimerTaskHandler
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text79
 13118  006E14                     __ptext79:
 13119                           	opt callstack 0
 13120  006E14                     _nwkTxDelayTimerHandler:
 13121                           	opt callstack 19
 13122                           
 13123                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 13124                           
 13125                           ;incstack = 0
 13126  006E14  0E00               	movlw	0
 13127  006E16  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 13128  006E18  0E00               	movlw	0
 13129  006E1A  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 13130                           
 13131                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 13132  006E1C  0E00               	movlw	0
 13133  006E1E  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13134                           
 13135                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13136  006E20  D021               	goto	l16425
 13137  006E22                     l16417:
 13138                           
 13139                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 13140  006E22  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13141  006E28  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13142  006E2E  0E11               	movlw	17
 13143  006E30  18DE               	xorwf	postinc2,w,c
 13144  006E32  A4D8               	btfss	status,2,c
 13145  006E34  D017               	goto	l16425
 13146                           
 13147                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 13148  006E36  0E01               	movlw	1
 13149  006E38  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13150                           
 13151                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 13152  006E3A  EE20 F084          	lfsr	2,132
 13153  006E3E  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13154  006E40  26D9               	addwf	fsr2l,f,c
 13155  006E42  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13156  006E44  22DA               	addwfc	fsr2h,f,c
 13157  006E46  06DE               	decf	postinc2,f,c
 13158  006E48  0E00               	movlw	0
 13159  006E4A  5ADD               	subwfb	postdec2,f,c
 13160  006E4C  50DE               	movf	postinc2,w,c
 13161  006E4E  10DE               	iorwf	postinc2,w,c
 13162  006E50  A4D8               	btfss	status,2,c
 13163  006E52  D008               	goto	l16425
 13164                           
 13165                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 13166  006E54  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13167  006E5A  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13168  006E60  0E13               	movlw	19
 13169  006E62  6EDF               	movwf	indf2,c
 13170  006E64                     l16425:
 13171                           
 13172                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13173  006E64  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 13174  006E6A  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 13175  006E70  EC95  F037         	call	_nwkFrameNext	;wreg free
 13176  006E74  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 13177  006E7A  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 13178  006E80  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13179  006E82  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13180  006E84  A4D8               	btfss	status,2,c
 13181  006E86  D7CD               	goto	l16417
 13182                           
 13183                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 13184  006E88  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 13185  006E8A  B4D8               	btfsc	status,2,c
 13186  006E8C  0012               	return	
 13187                           
 13188                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 13189  006E8E  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 13190  006E94  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 13191  006E9A  ECB9  F043         	call	_SYS_TimerStart	;wreg free
 13192  006E9E  0012               	return		;funcret
 13193  006EA0                     __end_of_nwkTxDelayTimerHandler:
 13194                           	opt callstack 0
 13195                           
 13196 ;; *************** function _nwkTxConfirm *****************
 13197 ;; Defined at:
 13198 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 13201 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13202 ;;  status          1    3[COMRAM] unsigned char 
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;		None
 13205 ;; Return value:  Size  Location     Type
 13206 ;;                  1    wreg      void 
 13207 ;; Registers used:
 13208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 0/0
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13218 ;;Total ram usage:        3 bytes
 13219 ;; Hardware stack levels used:    1
 13220 ;; Hardware stack levels required when called:    7
 13221 ;; This function calls:
 13222 ;;		Nothing
 13223 ;; This function is called by:
 13224 ;;		_nwkTxAckWaitTimerHandler
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           	psect	text80
 13229  0087E8                     __ptext80:
 13230                           	opt callstack 0
 13231  0087E8                     _nwkTxConfirm:
 13232                           	opt callstack 20
 13233                           
 13234                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 13235                           
 13236                           ;incstack = 0
 13237  0087E8  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 13238  0087EE  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 13239  0087F4  0E17               	movlw	23
 13240  0087F6  6EDF               	movwf	indf2,c
 13241                           
 13242                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 13243  0087F8  EE20 F083          	lfsr	2,131
 13244  0087FC  5002               	movf	nwkTxConfirm@frame^0,w,c
 13245  0087FE  26D9               	addwf	fsr2l,f,c
 13246  008800  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 13247  008802  22DA               	addwfc	fsr2h,f,c
 13248  008804  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 13249  00880A  0012               	return		;funcret
 13250  00880C                     __end_of_nwkTxConfirm:
 13251                           	opt callstack 0
 13252                           
 13253 ;; *************** function _PHY_TaskHandler *****************
 13254 ;; Defined at:
 13255 ;;		line 859 in file "../phy/sx1216/phy_src/phy.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;		None
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  1    wreg      void 
 13262 ;; Registers used:
 13263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13264 ;; Tracked objects:
 13265 ;;		On entry : 0/2
 13266 ;;		On exit  : 2/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;Total ram usage:        0 bytes
 13274 ;; Hardware stack levels used:    1
 13275 ;; Hardware stack levels required when called:   15
 13276 ;; This function calls:
 13277 ;;		_radio_engine
 13278 ;; This function is called by:
 13279 ;;		_SYS_TaskHandler
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           	psect	text81
 13284  008D50                     __ptext81:
 13285                           	opt callstack 0
 13286  008D50                     _PHY_TaskHandler:
 13287                           	opt callstack 14
 13288                           
 13289                           ;../phy/sx1216/phy_src/phy.c: 860:     radio_engine();
 13290                           
 13291                           ;incstack = 0
 13292  008D50  ECE3  F025         	call	_radio_engine	;wreg free
 13293  008D54  0012               	return		;funcret
 13294  008D56                     __end_of_PHY_TaskHandler:
 13295                           	opt callstack 0
 13296                           
 13297 ;; *************** function _radio_engine *****************
 13298 ;; Defined at:
 13299 ;;		line 742 in file "../phy/sx1216/phy_src/phy.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/2
 13310 ;;		On exit  : 2/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;Total ram usage:        2 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:   14
 13320 ;; This function calls:
 13321 ;;		_DIO0_Receive_ISR
 13322 ;;		_PHY_DataConf
 13323 ;;		_SX1276Read
 13324 ;;		_cad
 13325 ;;		_get_timer0base
 13326 ;;		_initRadio
 13327 ;;		_receive
 13328 ;;		_set_timer0base
 13329 ;; This function is called by:
 13330 ;;		_PHY_TaskHandler
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text82
 13335  004BC6                     __ptext82:
 13336                           	opt callstack 0
 13337  004BC6                     _radio_engine:
 13338                           	opt callstack 14
 13339                           
 13340                           ;../phy/sx1216/phy_src/phy.c: 743:     switch(radio_state_var){
 13341                           
 13342                           ;incstack = 0
 13343  004BC6  D073               	goto	l16487
 13344  004BC8                     l16433:
 13345                           
 13346                           ; BSR set to: 1
 13347                           ;../phy/sx1216/phy_src/phy.c: 745:             initRadio();
 13348  004BC8  ECD4  F020         	call	_initRadio	;wreg free
 13349                           
 13350                           ; BSR set to: 1
 13351                           ;../phy/sx1216/phy_src/phy.c: 746:             radio_state_var = START_RX;
 13352  004BCC  0E01               	movlw	1
 13353  004BCE  6F64               	movwf	_radio_state_var& (0+255),b
 13354                           
 13355                           ; BSR set to: 1
 13356                           ;../phy/sx1216/phy_src/phy.c: 747:             need_radio_reset = 0;
 13357  004BD0  0E00               	movlw	0
 13358  004BD2  6F6A               	movwf	_need_radio_reset& (0+255),b
 13359                           
 13360                           ;../phy/sx1216/phy_src/phy.c: 748:             break;
 13361  004BD4  0012               	return	
 13362  004BD6                     l16439:
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;../phy/sx1216/phy_src/phy.c: 750:             if(need_radio_reset){
 13366  004BD6  516A               	movf	_need_radio_reset& (0+255),w,b
 13367  004BD8  B4D8               	btfsc	status,2,c
 13368  004BDA  D003               	goto	l16443
 13369  004BDC                     u16600:
 13370                           
 13371                           ; BSR set to: 1
 13372                           ;../phy/sx1216/phy_src/phy.c: 751:                 radio_state_var = INIT_RADIO;
 13373  004BDC  0E00               	movlw	0
 13374  004BDE  6F64               	movwf	_radio_state_var& (0+255),b
 13375                           
 13376                           ;../phy/sx1216/phy_src/phy.c: 752:                 break;
 13377  004BE0  0012               	return	
 13378  004BE2                     l16443:
 13379                           
 13380                           ; BSR set to: 1
 13381                           ;../phy/sx1216/phy_src/phy.c: 754:             receive(0);
 13382  004BE2  0E00               	movlw	0
 13383  004BE4  ECED  F040         	call	_receive
 13384                           
 13385                           ; BSR set to: 61
 13386                           ;../phy/sx1216/phy_src/phy.c: 755:             radio_state_var = WAIT_FOR_RX;
 13387  004BE8  0E02               	movlw	2
 13388  004BEA  0101               	movlb	1	; () banked
 13389  004BEC  6F64               	movwf	_radio_state_var& (0+255),b
 13390                           
 13391                           ;../phy/sx1216/phy_src/phy.c: 756:             break;
 13392  004BEE  0012               	return	
 13393  004BF0                     l2641:
 13394                           
 13395                           ; BSR set to: 1
 13396                           ;../phy/sx1216/phy_src/phy.c: 758:             if(PORTBbits.RB4){
 13397  004BF0  A8CB               	btfss	203,4,c	;volatile
 13398  004BF2  0012               	return	
 13399                           
 13400                           ; BSR set to: 1
 13401                           ;../phy/sx1216/phy_src/phy.c: 759:                 radio_state_var = RX_MESSAGE;
 13402  004BF4  0E03               	movlw	3
 13403  004BF6  6F64               	movwf	_radio_state_var& (0+255),b
 13404  004BF8  0012               	return	
 13405  004BFA                     l16449:
 13406                           
 13407                           ; BSR set to: 1
 13408                           ;../phy/sx1216/phy_src/phy.c: 763:             DIO0_Receive_ISR();
 13409  004BFA  EC2E  F036         	call	_DIO0_Receive_ISR	;wreg free
 13410  004BFE                     l16451:
 13411                           
 13412                           ;../phy/sx1216/phy_src/phy.c: 764:             radio_state_var = START_RX;
 13413  004BFE  0E01               	movlw	1
 13414  004C00  0101               	movlb	1	; () banked
 13415  004C02  6F64               	movwf	_radio_state_var& (0+255),b
 13416                           
 13417                           ;../phy/sx1216/phy_src/phy.c: 765:             break;
 13418  004C04  0012               	return	
 13419  004C06                     l16453:
 13420                           
 13421                           ; BSR set to: 1
 13422                           ;../phy/sx1216/phy_src/phy.c: 767:             if(!get_timer0base(&_cadBackoffTimer)){
 13423  004C06  0EF7               	movlw	low __cadBackoffTimer
 13424  004C08  6E02               	movwf	get_timer0base@timer^0,c
 13425  004C0A  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13426  004C0C  EC50  F043         	call	_get_timer0base	;wreg free
 13427  004C10  5002               	movf	?_get_timer0base^0,w,c
 13428  004C12  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13429  004C14  A4D8               	btfss	status,2,c
 13430  004C16  D7F3               	goto	l16451
 13431                           
 13432                           ; BSR set to: 57
 13433                           ;../phy/sx1216/phy_src/phy.c: 768:                 if(cad()){
 13434  004C18  EC73  F031         	call	_cad	;wreg free
 13435  004C1C  0900               	iorlw	0
 13436  004C1E  B4D8               	btfsc	status,2,c
 13437  004C20  D012               	goto	l16465
 13438                           
 13439                           ;../phy/sx1216/phy_src/phy.c: 770:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 13440  004C22  0EF7               	movlw	low __cadBackoffTimer
 13441  004C24  6E02               	movwf	set_timer0base@timer^0,c
 13442  004C26  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13443  004C28  0E07               	movlw	7
 13444  004C2A  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13445  004C2C  0ED0               	movlw	208
 13446  004C2E  6E04               	movwf	set_timer0base@tval^0,c
 13447  004C30  ECA1  F044         	call	_set_timer0base	;wreg free
 13448                           
 13449                           ; BSR set to: 57
 13450                           ;../phy/sx1216/phy_src/phy.c: 772:                     radio_state_var = START_RX;
 13451  004C34  0E01               	movlw	1
 13452  004C36  0101               	movlb	1	; () banked
 13453  004C38  6F64               	movwf	_radio_state_var& (0+255),b
 13454                           
 13455                           ; BSR set to: 1
 13456                           ;../phy/sx1216/phy_src/phy.c: 773:                     if(cadCounter < 10)
 13457  004C3A  0E0A               	movlw	10
 13458  004C3C  0100               	movlb	0	; () banked
 13459  004C3E  61ED               	cpfslt	_cadCounter& (0+255),b
 13460  004C40  0012               	return	
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;../phy/sx1216/phy_src/phy.c: 774:                     {;../phy/sx1216/phy_src/phy.c: 77
      +                          5:                         cadCounter++;
 13464  004C42  2BED               	incf	_cadCounter& (0+255),f,b
 13465  004C44  0012               	return	
 13466  004C46                     l16465:
 13467                           
 13468                           ;../phy/sx1216/phy_src/phy.c: 780:                 radio_state_var = START_TX;
 13469  004C46  0E06               	movlw	6
 13470  004C48  0101               	movlb	1	; () banked
 13471  004C4A  6F64               	movwf	_radio_state_var& (0+255),b
 13472  004C4C  0012               	return	
 13473  004C4E                     l16469:
 13474                           
 13475                           ; BSR set to: 1
 13476                           ;../phy/sx1216/phy_src/phy.c: 789:             set_timer0base(&txTimeOut, 1000);
 13477  004C4E  0EF3               	movlw	low _txTimeOut
 13478  004C50  6E02               	movwf	set_timer0base@timer^0,c
 13479  004C52  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13480  004C54  0E03               	movlw	3
 13481  004C56  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13482  004C58  0EE8               	movlw	232
 13483  004C5A  6E04               	movwf	set_timer0base@tval^0,c
 13484  004C5C  ECA1  F044         	call	_set_timer0base	;wreg free
 13485                           
 13486                           ; BSR set to: 57
 13487                           ;../phy/sx1216/phy_src/phy.c: 790:             radio_state_var = WAIT_FOR_TX;
 13488  004C60  0E07               	movlw	7
 13489  004C62  0101               	movlb	1	; () banked
 13490  004C64  6F64               	movwf	_radio_state_var& (0+255),b
 13491                           
 13492                           ;../phy/sx1216/phy_src/phy.c: 791:             break;
 13493  004C66  0012               	return	
 13494  004C68                     l16473:
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;../phy/sx1216/phy_src/phy.c: 793:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 13498  004C68  0EF3               	movlw	low _txTimeOut
 13499  004C6A  6E02               	movwf	get_timer0base@timer^0,c
 13500  004C6C  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13501  004C6E  EC50  F043         	call	_get_timer0base	;wreg free
 13502  004C72  5002               	movf	?_get_timer0base^0,w,c
 13503  004C74  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13504  004C76  B4D8               	btfsc	status,2,c
 13505  004C78  D006               	goto	u16660
 13506                           
 13507                           ; BSR set to: 57
 13508  004C7A  0E12               	movlw	18
 13509  004C7C  ECDA  F045         	call	_SX1276Read
 13510  004C80  6E4B               	movwf	??_radio_engine^0,c
 13511  004C82  A64B               	btfss	??_radio_engine^0,3,c
 13512  004C84  0012               	return	
 13513  004C86                     u16660:
 13514                           
 13515                           ;../phy/sx1216/phy_src/phy.c: 794:                 radio_state_var = START_RX;
 13516  004C86  0E01               	movlw	1
 13517  004C88  0101               	movlb	1	; () banked
 13518  004C8A  6F64               	movwf	_radio_state_var& (0+255),b
 13519                           
 13520                           ; BSR set to: 1
 13521                           ;../phy/sx1216/phy_src/phy.c: 795:                 if(get_timer0base(&txTimeOut)){
 13522  004C8C  0EF3               	movlw	low _txTimeOut
 13523  004C8E  6E02               	movwf	get_timer0base@timer^0,c
 13524  004C90  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13525  004C92  EC50  F043         	call	_get_timer0base	;wreg free
 13526  004C96  5002               	movf	?_get_timer0base^0,w,c
 13527  004C98  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13528  004C9A  B4D8               	btfsc	status,2,c
 13529  004C9C  D004               	goto	l16483
 13530                           
 13531                           ; BSR set to: 57
 13532                           ;../phy/sx1216/phy_src/phy.c: 796:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 13533  004C9E  0E00               	movlw	0
 13534  004CA0  ECA1  F041         	call	_PHY_DataConf
 13535                           
 13536                           ;../phy/sx1216/phy_src/phy.c: 797:                 }
 13537  004CA4  0012               	return	
 13538  004CA6                     l16483:
 13539                           
 13540                           ; BSR set to: 57
 13541                           ;../phy/sx1216/phy_src/phy.c: 799:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 13542  004CA6  0E02               	movlw	2
 13543  004CA8  ECA1  F041         	call	_PHY_DataConf
 13544  004CAC  0012               	return	
 13545  004CAE                     l16487:
 13546  004CAE  0101               	movlb	1	; () banked
 13547  004CB0  5164               	movf	_radio_state_var& (0+255),w,b
 13548  004CB2  6E4B               	movwf	??_radio_engine^0,c
 13549  004CB4  6A4C               	clrf	(??_radio_engine+1)^0,c
 13550                           
 13551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13552                           ; Switch size 1, requested type "simple"
 13553                           ; Number of cases is 1, Range of values is 0 to 0
 13554                           ; switch strategies available:
 13555                           ; Name         Instructions Cycles
 13556                           ; simple_byte            4     3 (average)
 13557                           ;	Chosen strategy is simple_byte
 13558  004CB6  504C               	movf	(??_radio_engine+1)^0,w,c
 13559  004CB8  0A00               	xorlw	0	; case 0
 13560  004CBA  A4D8               	btfss	status,2,c
 13561  004CBC  D78F               	goto	u16600
 13562                           
 13563                           ; BSR set to: 1
 13564                           ; Switch size 1, requested type "simple"
 13565                           ; Number of cases is 7, Range of values is 0 to 7
 13566                           ; switch strategies available:
 13567                           ; Name         Instructions Cycles
 13568                           ; simple_byte           22    12 (average)
 13569                           ;	Chosen strategy is simple_byte
 13570  004CBE  504B               	movf	??_radio_engine^0,w,c
 13571  004CC0  0A00               	xorlw	0	; case 0
 13572  004CC2  B4D8               	btfsc	status,2,c
 13573  004CC4  D781               	goto	l16433
 13574  004CC6  0A01               	xorlw	1	; case 1
 13575  004CC8  B4D8               	btfsc	status,2,c
 13576  004CCA  D785               	goto	l16439
 13577  004CCC  0A03               	xorlw	3	; case 2
 13578  004CCE  B4D8               	btfsc	status,2,c
 13579  004CD0  D78F               	goto	l2641
 13580  004CD2  0A01               	xorlw	1	; case 3
 13581  004CD4  B4D8               	btfsc	status,2,c
 13582  004CD6  D791               	goto	l16449
 13583  004CD8  0A07               	xorlw	7	; case 4
 13584  004CDA  B4D8               	btfsc	status,2,c
 13585  004CDC  D794               	goto	l16453
 13586  004CDE  0A02               	xorlw	2	; case 6
 13587  004CE0  B4D8               	btfsc	status,2,c
 13588  004CE2  D7B5               	goto	l16469
 13589  004CE4  0A01               	xorlw	1	; case 7
 13590  004CE6  B4D8               	btfsc	status,2,c
 13591  004CE8  D7BF               	goto	l16473
 13592  004CEA  D778               	goto	u16600
 13593  004CEC                     __end_of_radio_engine:
 13594                           	opt callstack 0
 13595                           
 13596 ;; *************** function _cad *****************
 13597 ;; Defined at:
 13598 ;;		line 509 in file "../phy/sx1216/phy_src/phy.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;		None
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;  RSSI            2   17[COMRAM] short 
 13603 ;;  temp            1   19[COMRAM] unsigned char 
 13604 ;; Return value:  Size  Location     Type
 13605 ;;                  1    wreg      unsigned char 
 13606 ;; Registers used:
 13607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13608 ;; Tracked objects:
 13609 ;;		On entry : 3F/39
 13610 ;;		On exit  : 2/0
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13614 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;Total ram usage:        4 bytes
 13618 ;; Hardware stack levels used:    1
 13619 ;; Hardware stack levels required when called:   13
 13620 ;; This function calls:
 13621 ;;		_SX1276Read
 13622 ;;		_SX1276Write
 13623 ;;		_get_timer0base
 13624 ;;		_set_timer0base
 13625 ;;		_start_radio_cad
 13626 ;; This function is called by:
 13627 ;;		_radio_engine
 13628 ;; This function uses a non-reentrant model
 13629 ;;
 13630                           
 13631                           	psect	text83
 13632  0062E6                     __ptext83:
 13633                           	opt callstack 0
 13634  0062E6                     _cad:
 13635                           	opt callstack 14
 13636                           
 13637                           ; BSR set to: 57
 13638                           ;../phy/sx1216/phy_src/phy.c: 511:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 513:  
      +                             temp = SX1276Read(0x18);
 13639                           
 13640                           ;incstack = 0
 13641  0062E6  0E18               	movlw	24
 13642  0062E8  ECDA  F045         	call	_SX1276Read
 13643  0062EC  6E14               	movwf	cad@temp^0,c
 13644                           
 13645                           ; BSR set to: 61
 13646                           ;../phy/sx1216/phy_src/phy.c: 514:     if((temp & 0x01) | (temp & 0x02))
 13647  0062EE  0060  F050  F011   	movff	cad@temp,??_cad
 13648  0062F4  0E02               	movlw	2
 13649  0062F6  1611               	andwf	??_cad^0,f,c
 13650  0062F8  5014               	movf	cad@temp^0,w,c
 13651  0062FA  0B01               	andlw	1
 13652  0062FC  1011               	iorwf	??_cad^0,w,c
 13653  0062FE  0900               	iorlw	0
 13654  006300  B4D8               	btfsc	status,2,c
 13655  006302  D002               	goto	l15799
 13656  006304                     u16020:
 13657                           
 13658                           ;../phy/sx1216/phy_src/phy.c: 515:     {;../phy/sx1216/phy_src/phy.c: 516:         retur
      +                          n 1;
 13659  006304  0E01               	movlw	1
 13660  006306  0012               	return	
 13661  006308                     l15799:
 13662                           
 13663                           ; BSR set to: 61
 13664                           ;../phy/sx1216/phy_src/phy.c: 518:     start_radio_cad();
 13665  006308  EC11  F046         	call	_start_radio_cad	;wreg free
 13666                           
 13667                           ; BSR set to: 61
 13668                           ;../phy/sx1216/phy_src/phy.c: 519:     cadDone = 0;
 13669  00630C  0E00               	movlw	0
 13670  00630E  0100               	movlb	0	; () banked
 13671  006310  6FEE               	movwf	_cadDone& (0+255),b
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;../phy/sx1216/phy_src/phy.c: 520:     set_timer0base(&cadTimeOut, 2000);
 13675  006312  0EF5               	movlw	low _cadTimeOut
 13676  006314  6E02               	movwf	set_timer0base@timer^0,c
 13677  006316  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13678  006318  0E07               	movlw	7
 13679  00631A  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13680  00631C  0ED0               	movlw	208
 13681  00631E  6E04               	movwf	set_timer0base@tval^0,c
 13682  006320  ECA1  F044         	call	_set_timer0base	;wreg free
 13683                           
 13684                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13685  006324  D029               	goto	l15833
 13686  006326                     l15805:
 13687                           
 13688                           ; BSR set to: 57
 13689                           ;../phy/sx1216/phy_src/phy.c: 523:     {;../phy/sx1216/phy_src/phy.c: 524:         temp 
      +                          = SX1276Read(0x12);
 13690  006326  0E12               	movlw	18
 13691  006328  ECDA  F045         	call	_SX1276Read
 13692  00632C  6E14               	movwf	cad@temp^0,c
 13693                           
 13694                           ;../phy/sx1216/phy_src/phy.c: 525:         SX1276Write(0x12,temp);
 13695  00632E  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 13696  006334  0E12               	movlw	18
 13697  006336  ECF8  F045         	call	_SX1276Write
 13698                           
 13699                           ; BSR set to: 61
 13700                           ;../phy/sx1216/phy_src/phy.c: 526:         if(temp & 0x04)
 13701  00633A  A414               	btfss	cad@temp^0,2,c
 13702  00633C  D01D               	goto	l15833
 13703                           
 13704                           ; BSR set to: 61
 13705                           ;../phy/sx1216/phy_src/phy.c: 527:         {;../phy/sx1216/phy_src/phy.c: 528:          
      +                             cadDone = 1;
 13706  00633E  0E01               	movlw	1
 13707  006340  0100               	movlb	0	; () banked
 13708  006342  6FEE               	movwf	_cadDone& (0+255),b
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;../phy/sx1216/phy_src/phy.c: 529:             if(temp & 0x01)
 13712  006344  B014               	btfsc	cad@temp^0,0,c
 13713  006346  D7DE               	goto	u16020
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;../phy/sx1216/phy_src/phy.c: 534:             {;../phy/sx1216/phy_src/phy.c: 535:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 536:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 13717  006348  0E1B               	movlw	27
 13718  00634A  ECDA  F045         	call	_SX1276Read
 13719  00634E  6E11               	movwf	??_cad^0,c
 13720  006350  0E63               	movlw	99
 13721  006352  2411               	addwf	??_cad^0,w,c
 13722  006354  6E12               	movwf	cad@RSSI^0,c
 13723  006356  6A13               	clrf	(cad@RSSI+1)^0,c
 13724  006358  0EFF               	movlw	255
 13725  00635A  2213               	addwfc	(cad@RSSI+1)^0,f,c
 13726                           
 13727                           ; BSR set to: 61
 13728                           ;../phy/sx1216/phy_src/phy.c: 538:                 if(RSSI < RSSITarget)
 13729  00635C  5013               	movf	(cad@RSSI+1)^0,w,c
 13730  00635E  0A80               	xorlw	128
 13731  006360  6E11               	movwf	??_cad^0,c
 13732  006362  0100               	movlb	0	; () banked
 13733  006364  51F9               	movf	_RSSITarget& (0+255),w,b
 13734  006366  5C12               	subwf	cad@RSSI^0,w,c
 13735  006368  0E80               	movlw	128
 13736  00636A  BFF9               	btfsc	_RSSITarget& (0+255),7,b
 13737  00636C  0E7F               	movlw	127
 13738  00636E  5811               	subwfb	??_cad^0,w,c
 13739  006370  B0D8               	btfsc	status,0,c
 13740  006372  D7C8               	goto	u16020
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;../phy/sx1216/phy_src/phy.c: 539:                 {;../phy/sx1216/phy_src/phy.c: 540:  
      +                                             return 0;
 13744  006374  0E00               	movlw	0
 13745  006376  0012               	return	
 13746  006378                     l15833:
 13747                           
 13748                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13749  006378  0100               	movlb	0	; () banked
 13750  00637A  51EE               	movf	_cadDone& (0+255),w,b
 13751  00637C  A4D8               	btfss	status,2,c
 13752  00637E  D009               	goto	u16070
 13753                           
 13754                           ; BSR set to: 0
 13755  006380  0EF5               	movlw	low _cadTimeOut
 13756  006382  6E02               	movwf	get_timer0base@timer^0,c
 13757  006384  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13758  006386  EC50  F043         	call	_get_timer0base	;wreg free
 13759  00638A  5002               	movf	?_get_timer0base^0,w,c
 13760  00638C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13761  00638E  A4D8               	btfss	status,2,c
 13762  006390  D7CA               	goto	l15805
 13763  006392                     u16070:
 13764                           
 13765                           ;../phy/sx1216/phy_src/phy.c: 549:     if(!get_timer0base(&cadTimeOut))
 13766  006392  0EF5               	movlw	low _cadTimeOut
 13767  006394  6E02               	movwf	get_timer0base@timer^0,c
 13768  006396  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13769  006398  EC50  F043         	call	_get_timer0base	;wreg free
 13770  00639C  5002               	movf	?_get_timer0base^0,w,c
 13771  00639E  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13772  0063A0  A4D8               	btfss	status,2,c
 13773  0063A2  0012               	return	
 13774  0063A4  D7AF               	goto	u16020
 13775  0063A6                     __end_of_cad:
 13776                           	opt callstack 0
 13777                           
 13778 ;; *************** function _start_radio_cad *****************
 13779 ;; Defined at:
 13780 ;;		line 562 in file "../phy/sx1216/phy_src/phy.c"
 13781 ;; Parameters:    Size  Location     Type
 13782 ;;		None
 13783 ;; Auto vars:     Size  Location     Type
 13784 ;;		None
 13785 ;; Return value:  Size  Location     Type
 13786 ;;                  1    wreg      void 
 13787 ;; Registers used:
 13788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13789 ;; Tracked objects:
 13790 ;;		On entry : 3F/3D
 13791 ;;		On exit  : 3F/3D
 13792 ;;		Unchanged: 0/0
 13793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;Total ram usage:        0 bytes
 13799 ;; Hardware stack levels used:    1
 13800 ;; Hardware stack levels required when called:   12
 13801 ;; This function calls:
 13802 ;;		_SX1276Write
 13803 ;;		_idle
 13804 ;; This function is called by:
 13805 ;;		_cad
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text84
 13810  008C22                     __ptext84:
 13811                           	opt callstack 0
 13812  008C22                     _start_radio_cad:
 13813                           	opt callstack 14
 13814                           
 13815                           ; BSR set to: 61
 13816                           ;../phy/sx1216/phy_src/phy.c: 564:     idle();
 13817                           
 13818                           ;incstack = 0
 13819  008C22  EC82  F046         	call	_idle	;wreg free
 13820                           
 13821                           ;../phy/sx1216/phy_src/phy.c: 565:     SX1276Write(0x01,0x80 | 0x07);
 13822  008C26  0E87               	movlw	135
 13823  008C28  6E0F               	movwf	SX1276Write@data^0,c
 13824  008C2A  0E01               	movlw	1
 13825  008C2C  ECF8  F045         	call	_SX1276Write
 13826                           
 13827                           ; BSR set to: 61
 13828  008C30  0012               	return		;funcret
 13829  008C32                     __end_of_start_radio_cad:
 13830                           	opt callstack 0
 13831                           
 13832 ;; *************** function _set_timer0base *****************
 13833 ;; Defined at:
 13834 ;;		line 35 in file "../hal/hal_src/Timers.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13837 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13838 ;;		 -> ATTimeoutTimer(2), 
 13839 ;;  tval            2    3[COMRAM] unsigned short 
 13840 ;; Auto vars:     Size  Location     Type
 13841 ;;		None
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      void 
 13844 ;; Registers used:
 13845 ;;		fsr2l, fsr2h
 13846 ;; Tracked objects:
 13847 ;;		On entry : 0/0
 13848 ;;		On exit  : 3F/39
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13855 ;;Total ram usage:        4 bytes
 13856 ;; Hardware stack levels used:    1
 13857 ;; Hardware stack levels required when called:    7
 13858 ;; This function calls:
 13859 ;;		Nothing
 13860 ;; This function is called by:
 13861 ;;		_processATCommand
 13862 ;;		_cad
 13863 ;;		_radio_engine
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           	psect	text85
 13868  008942                     __ptext85:
 13869                           	opt callstack 0
 13870  008942                     _set_timer0base:
 13871                           	opt callstack 22
 13872                           
 13873                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 13874                           
 13875                           ; BSR set to: 61
 13876                           ;incstack = 0
 13877  008942  0139               	movlb	57	; () banked
 13878  008944  9F93               	bcf	147,7,b	;volatile
 13879                           
 13880                           ; BSR set to: 57
 13881                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 13882  008946  0060  F00B  FFD9   	movff	set_timer0base@timer,fsr2l
 13883  00894C  0060  F00F  FFDA   	movff	set_timer0base@timer+1,fsr2h
 13884  008952  0060  F013  FFDE   	movff	set_timer0base@tval,postinc2
 13885  008958  0060  F017  FFDD   	movff	set_timer0base@tval+1,postdec2
 13886                           
 13887                           ; BSR set to: 57
 13888                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 13889  00895E  8F93               	bsf	147,7,b	;volatile
 13890                           
 13891                           ; BSR set to: 57
 13892  008960  0012               	return		;funcret
 13893  008962                     __end_of_set_timer0base:
 13894                           	opt callstack 0
 13895                           
 13896 ;; *************** function _get_timer0base *****************
 13897 ;; Defined at:
 13898 ;;		line 27 in file "../hal/hal_src/Timers.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13901 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13902 ;;		 -> ATTimeoutTimer(2), 
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;  tval            2    3[COMRAM] unsigned short 
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  2    1[COMRAM] unsigned short 
 13907 ;; Registers used:
 13908 ;;		fsr2l, fsr2h
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 3F/39
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;Total ram usage:        4 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    7
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_processATCommand
 13925 ;;		_cad
 13926 ;;		_radio_engine
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text86
 13931  0086A0                     __ptext86:
 13932                           	opt callstack 0
 13933  0086A0                     _get_timer0base:
 13934                           	opt callstack 22
 13935                           
 13936                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 13937                           
 13938                           ; BSR set to: 57
 13939                           ;incstack = 0
 13940  0086A0  0139               	movlb	57	; () banked
 13941  0086A2  9F93               	bcf	147,7,b	;volatile
 13942                           
 13943                           ; BSR set to: 57
 13944                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 13945  0086A4  0060  F00B  FFD9   	movff	get_timer0base@timer,fsr2l
 13946  0086AA  0060  F00F  FFDA   	movff	get_timer0base@timer+1,fsr2h
 13947  0086B0  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 13948  0086B6  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 13949                           
 13950                           ; BSR set to: 57
 13951                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 13952  0086BC  8F93               	bsf	147,7,b	;volatile
 13953                           
 13954                           ; BSR set to: 57
 13955                           ;../hal/hal_src/Timers.c: 32:     return tval;
 13956  0086BE  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 13957  0086C4  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 13958                           
 13959                           ; BSR set to: 57
 13960  0086CA  0012               	return		;funcret
 13961  0086CC                     __end_of_get_timer0base:
 13962                           	opt callstack 0
 13963                           
 13964 ;; *************** function _PHY_DataConf *****************
 13965 ;; Defined at:
 13966 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 13967 ;; Parameters:    Size  Location     Type
 13968 ;;  status          1    wreg     unsigned char 
 13969 ;; Auto vars:     Size  Location     Type
 13970 ;;  status          1    4[COMRAM] unsigned char 
 13971 ;; Return value:  Size  Location     Type
 13972 ;;                  1    wreg      void 
 13973 ;; Registers used:
 13974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13975 ;; Tracked objects:
 13976 ;;		On entry : 3F/39
 13977 ;;		On exit  : 3F/1
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;Total ram usage:        1 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    8
 13987 ;; This function calls:
 13988 ;;		_nwkTxConvertPhyStatus
 13989 ;; This function is called by:
 13990 ;;		_radio_engine
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text87
 13995  008342                     __ptext87:
 13996                           	opt callstack 0
 13997  008342                     _PHY_DataConf:
 13998                           	opt callstack 19
 13999                           
 14000                           ; BSR set to: 57
 14001                           ;incstack = 0
 14002                           ;PHY_DataConf@status stored from wreg
 14003  008342  6E05               	movwf	PHY_DataConf@status^0,c
 14004                           
 14005                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 14006  008344  0101               	movlb	1	; () banked
 14007  008346  EE20 F083          	lfsr	2,131
 14008  00834A  515B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 14009  00834C  26D9               	addwf	fsr2l,f,c
 14010  00834E  515C               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 14011  008350  22DA               	addwfc	fsr2h,f,c
 14012  008352  5005               	movf	PHY_DataConf@status^0,w,c
 14013  008354  ECF8  F041         	call	_nwkTxConvertPhyStatus
 14014  008358  6EDF               	movwf	indf2,c
 14015                           
 14016                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 14017  00835A  0060  F56F  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 14018  008360  0060  F573  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 14019  008366  0E15               	movlw	21
 14020  008368  6EDF               	movwf	indf2,c
 14021                           
 14022                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 14023  00836A  0E00               	movlw	0
 14024  00836C  0101               	movlb	1	; () banked
 14025  00836E  6F5B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 14026  008370  0E00               	movlw	0
 14027  008372  6F5C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 14028                           
 14029                           ; BSR set to: 1
 14030                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 14031  008374  0726               	decf	(_nwkIb+38)& (0+255),f,b
 14032  008376  A0D8               	btfss	status,0,c
 14033  008378  0727               	decf	(_nwkIb+39)& (0+255),f,b
 14034                           
 14035                           ; BSR set to: 1
 14036  00837A  0012               	return		;funcret
 14037  00837C                     __end_of_PHY_DataConf:
 14038                           	opt callstack 0
 14039                           
 14040 ;; *************** function _nwkTxConvertPhyStatus *****************
 14041 ;; Defined at:
 14042 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;  status          1    wreg     unsigned char 
 14045 ;; Auto vars:     Size  Location     Type
 14046 ;;  status          1    3[COMRAM] unsigned char 
 14047 ;; Return value:  Size  Location     Type
 14048 ;;                  1    wreg      unsigned char 
 14049 ;; Registers used:
 14050 ;;		wreg, status,2, status,0
 14051 ;; Tracked objects:
 14052 ;;		On entry : 3F/1
 14053 ;;		On exit  : 0/0
 14054 ;;		Unchanged: 0/0
 14055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;Total ram usage:        3 bytes
 14061 ;; Hardware stack levels used:    1
 14062 ;; Hardware stack levels required when called:    7
 14063 ;; This function calls:
 14064 ;;		Nothing
 14065 ;; This function is called by:
 14066 ;;		_PHY_DataConf
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text88
 14071  0083F0                     __ptext88:
 14072                           	opt callstack 0
 14073  0083F0                     _nwkTxConvertPhyStatus:
 14074                           	opt callstack 19
 14075                           
 14076                           ; BSR set to: 1
 14077                           ;incstack = 0
 14078                           ;nwkTxConvertPhyStatus@status stored from wreg
 14079  0083F0  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 14080                           
 14081                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 14082  0083F2  D008               	goto	l11025
 14083  0083F4                     l11007:
 14084                           
 14085                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 14086  0083F4  0E00               	movlw	0
 14087  0083F6  0012               	return	
 14088  0083F8                     l11011:
 14089                           
 14090                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 14091  0083F8  0E20               	movlw	32
 14092  0083FA  0012               	return	
 14093  0083FC                     l11015:
 14094                           
 14095                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 14096  0083FC  0E21               	movlw	33
 14097  0083FE  0012               	return	
 14098  008400                     l11019:
 14099                           
 14100                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 14101  008400  0E01               	movlw	1
 14102  008402  0012               	return	
 14103  008404                     l11025:
 14104  008404  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 14105  008406  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 14106  008408  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 14107                           
 14108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14109                           ; Switch size 1, requested type "simple"
 14110                           ; Number of cases is 1, Range of values is 0 to 0
 14111                           ; switch strategies available:
 14112                           ; Name         Instructions Cycles
 14113                           ; simple_byte            4     3 (average)
 14114                           ;	Chosen strategy is simple_byte
 14115  00840A  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 14116  00840C  0A00               	xorlw	0	; case 0
 14117  00840E  A4D8               	btfss	status,2,c
 14118  008410  D7F7               	goto	l11019
 14119                           
 14120                           ; Switch size 1, requested type "simple"
 14121                           ; Number of cases is 3, Range of values is 0 to 2
 14122                           ; switch strategies available:
 14123                           ; Name         Instructions Cycles
 14124                           ; simple_byte           10     6 (average)
 14125                           ;	Chosen strategy is simple_byte
 14126  008412  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 14127  008414  0A00               	xorlw	0	; case 0
 14128  008416  B4D8               	btfsc	status,2,c
 14129  008418  D7ED               	goto	l11007
 14130  00841A  0A01               	xorlw	1	; case 1
 14131  00841C  B4D8               	btfsc	status,2,c
 14132  00841E  D7EC               	goto	l11011
 14133  008420  0A03               	xorlw	3	; case 2
 14134  008422  B4D8               	btfsc	status,2,c
 14135  008424  D7EB               	goto	l11015
 14136  008426  D7EC               	goto	l11019
 14137  008428                     __end_of_nwkTxConvertPhyStatus:
 14138                           	opt callstack 0
 14139                           
 14140 ;; *************** function _DIO0_Receive_ISR *****************
 14141 ;; Defined at:
 14142 ;;		line 642 in file "../phy/sx1216/phy_src/phy.c"
 14143 ;; Parameters:    Size  Location     Type
 14144 ;;		None
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;  ind             5   69[COMRAM] struct PHY_DataInd_t
 14147 ;;  packetLength    1   67[COMRAM] unsigned char 
 14148 ;;  irqFlags        1   68[COMRAM] unsigned char 
 14149 ;; Return value:  Size  Location     Type
 14150 ;;                  1    wreg      void 
 14151 ;; Registers used:
 14152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14153 ;; Tracked objects:
 14154 ;;		On entry : 0/1
 14155 ;;		On exit  : 3F/3D
 14156 ;;		Unchanged: 0/0
 14157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14159 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14162 ;;Total ram usage:        7 bytes
 14163 ;; Hardware stack levels used:    1
 14164 ;; Hardware stack levels required when called:   13
 14165 ;; This function calls:
 14166 ;;		_PHY_DataInd
 14167 ;;		_SX1276Read
 14168 ;;		_SX1276ReadBuffer
 14169 ;;		_SX1276Write
 14170 ;;		_get_lqi
 14171 ;;		_get_rssi
 14172 ;;		_receive
 14173 ;; This function is called by:
 14174 ;;		_radio_engine
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text89
 14179  006C5C                     __ptext89:
 14180                           	opt callstack 0
 14181  006C5C                     _DIO0_Receive_ISR:
 14182                           	opt callstack 14
 14183                           
 14184                           ;../phy/sx1216/phy_src/phy.c: 644:     uint8_t irqFlags = SX1276Read(0x12);
 14185                           
 14186                           ;incstack = 0
 14187  006C5C  0E12               	movlw	18
 14188  006C5E  ECDA  F045         	call	_SX1276Read
 14189  006C62  6E45               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 14190                           
 14191                           ;../phy/sx1216/phy_src/phy.c: 647:     SX1276Write(0x12, irqFlags);
 14192  006C64  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14193  006C6A  0E12               	movlw	18
 14194  006C6C  ECF8  F045         	call	_SX1276Write
 14195                           
 14196                           ;../phy/sx1216/phy_src/phy.c: 648:     SX1276Write(0x12, irqFlags);
 14197  006C70  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14198  006C76  0E12               	movlw	18
 14199  006C78  ECF8  F045         	call	_SX1276Write
 14200                           
 14201                           ; BSR set to: 61
 14202                           ;../phy/sx1216/phy_src/phy.c: 650:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 14203  006C7C  AA45               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 14204                           
 14205                           ; BSR set to: 61
 14206  006C7E  AC45               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 14207  006C80  D034               	goto	l15863
 14208                           
 14209                           ; BSR set to: 61
 14210  006C82  BE45               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 14211  006C84  D032               	goto	l15863
 14212                           
 14213                           ; BSR set to: 61
 14214                           ;../phy/sx1216/phy_src/phy.c: 651:     {;../phy/sx1216/phy_src/phy.c: 652:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 653:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 656:         packetLength = SX1276Read(0x13);
 14215  006C86  0E13               	movlw	19
 14216  006C88  ECDA  F045         	call	_SX1276Read
 14217  006C8C  6E44               	movwf	DIO0_Receive_ISR@packetLength^0,c
 14218                           
 14219                           ;../phy/sx1216/phy_src/phy.c: 659:         SX1276Write(0x0D, SX1276Read(0x10));
 14220  006C8E  0E10               	movlw	16
 14221  006C90  ECDA  F045         	call	_SX1276Read
 14222  006C94  6E0F               	movwf	SX1276Write@data^0,c
 14223  006C96  0E0D               	movlw	13
 14224  006C98  ECF8  F045         	call	_SX1276Write
 14225                           
 14226                           ;../phy/sx1216/phy_src/phy.c: 660:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 14227  006C9C  0E40               	movlw	low _phyRxBuffer
 14228  006C9E  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 14229  006CA0  0E03               	movlw	high _phyRxBuffer
 14230  006CA2  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 14231  006CA4  0060  F110  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 14232  006CAA  0E00               	movlw	0
 14233  006CAC  ECCD  F043         	call	_SX1276ReadBuffer
 14234                           
 14235                           ;../phy/sx1216/phy_src/phy.c: 662:         SNR = SX1276Read(0x19);
 14236  006CB0  0E19               	movlw	25
 14237  006CB2  ECDA  F045         	call	_SX1276Read
 14238  006CB6  0101               	movlb	1	; () banked
 14239  006CB8  6F67               	movwf	_SNR& (0+255),b
 14240                           
 14241                           ;../phy/sx1216/phy_src/phy.c: 663:         packetRSSI = SX1276Read(0x1A);
 14242  006CBA  0E1A               	movlw	26
 14243  006CBC  ECDA  F045         	call	_SX1276Read
 14244  006CC0  0101               	movlb	1	; () banked
 14245  006CC2  6F68               	movwf	_packetRSSI& (0+255),b
 14246                           
 14247                           ; BSR set to: 1
 14248                           ;../phy/sx1216/phy_src/phy.c: 664:         ind.data = phyRxBuffer;
 14249  006CC4  0E40               	movlw	low _phyRxBuffer
 14250  006CC6  6E46               	movwf	DIO0_Receive_ISR@ind^0,c
 14251  006CC8  0E03               	movlw	high _phyRxBuffer
 14252  006CCA  6E47               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 14253                           
 14254                           ; BSR set to: 1
 14255                           ;../phy/sx1216/phy_src/phy.c: 665:         ind.size = packetLength;
 14256  006CCC  0060  F110  F048   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 14257                           
 14258                           ; BSR set to: 1
 14259                           ;../phy/sx1216/phy_src/phy.c: 666:         ind.rssi = get_rssi(packetRSSI);
 14260  006CD2  5168               	movf	_packetRSSI& (0+255),w,b
 14261  006CD4  EC66  F043         	call	_get_rssi
 14262  006CD8  6E4A               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 14263                           
 14264                           ;../phy/sx1216/phy_src/phy.c: 667:         ind.lqi = get_lqi(ind.rssi);
 14265  006CDA  504A               	movf	(DIO0_Receive_ISR@ind+4)^0,w,c
 14266  006CDC  EC46  F035         	call	_get_lqi
 14267  006CE0  6E49               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 14268                           
 14269                           ;../phy/sx1216/phy_src/phy.c: 668:         PHY_DataInd(&ind);
 14270  006CE2  0E46               	movlw	low DIO0_Receive_ISR@ind
 14271  006CE4  6E13               	movwf	PHY_DataInd@ind^0,c
 14272  006CE6  ECB8  F024         	call	_PHY_DataInd	;wreg free
 14273  006CEA                     l15863:
 14274                           
 14275                           ;../phy/sx1216/phy_src/phy.c: 671:     receive(0);
 14276  006CEA  0E00               	movlw	0
 14277  006CEC  ECED  F040         	call	_receive
 14278                           
 14279                           ; BSR set to: 61
 14280  006CF0  0012               	return		;funcret
 14281  006CF2                     __end_of_DIO0_Receive_ISR:
 14282                           	opt callstack 0
 14283                           
 14284 ;; *************** function _get_rssi *****************
 14285 ;; Defined at:
 14286 ;;		line 615 in file "../phy/sx1216/phy_src/phy.c"
 14287 ;; Parameters:    Size  Location     Type
 14288 ;;  rssi_reg        1    wreg     unsigned char 
 14289 ;; Auto vars:     Size  Location     Type
 14290 ;;  rssi_reg        1    1[COMRAM] unsigned char 
 14291 ;;  temp_rssi       2    2[COMRAM] short 
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      char 
 14294 ;; Registers used:
 14295 ;;		wreg, status,2, status,0
 14296 ;; Tracked objects:
 14297 ;;		On entry : 3F/1
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14302 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;Total ram usage:        3 bytes
 14306 ;; Hardware stack levels used:    1
 14307 ;; Hardware stack levels required when called:    7
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_DIO0_Receive_ISR
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           	psect	text90
 14316  0086CC                     __ptext90:
 14317                           	opt callstack 0
 14318  0086CC                     _get_rssi:
 14319                           	opt callstack 19
 14320                           
 14321                           ; BSR set to: 61
 14322                           ;incstack = 0
 14323                           ;get_rssi@rssi_reg stored from wreg
 14324  0086CC  6E02               	movwf	get_rssi@rssi_reg^0,c
 14325                           
 14326                           ;../phy/sx1216/phy_src/phy.c: 616:     int16_t temp_rssi = -157 + rssi_reg;
 14327  0086CE  0E63               	movlw	99
 14328  0086D0  2402               	addwf	get_rssi@rssi_reg^0,w,c
 14329  0086D2  6E03               	movwf	get_rssi@temp_rssi^0,c
 14330  0086D4  6A04               	clrf	(get_rssi@temp_rssi+1)^0,c
 14331  0086D6  0EFF               	movlw	255
 14332  0086D8  2204               	addwfc	(get_rssi@temp_rssi+1)^0,f,c
 14333                           
 14334                           ;../phy/sx1216/phy_src/phy.c: 617:     if(temp_rssi < -127){
 14335  0086DA  AE04               	btfss	(get_rssi@temp_rssi+1)^0,7,c
 14336  0086DC  D00A               	goto	l2615
 14337  0086DE  0E81               	movlw	129
 14338  0086E0  5C03               	subwf	get_rssi@temp_rssi^0,w,c
 14339  0086E2  0EFF               	movlw	255
 14340  0086E4  5804               	subwfb	(get_rssi@temp_rssi+1)^0,w,c
 14341  0086E6  B0D8               	btfsc	status,0,c
 14342  0086E8  D004               	goto	l2615
 14343                           
 14344                           ;../phy/sx1216/phy_src/phy.c: 618:         temp_rssi = -127;
 14345  0086EA  0EFF               	movlw	255
 14346  0086EC  6E04               	movwf	(get_rssi@temp_rssi+1)^0,c
 14347  0086EE  0E81               	movlw	129
 14348  0086F0  6E03               	movwf	get_rssi@temp_rssi^0,c
 14349  0086F2                     l2615:
 14350                           
 14351                           ;../phy/sx1216/phy_src/phy.c: 620:     return (temp_rssi);
 14352  0086F2  5003               	movf	get_rssi@temp_rssi^0,w,c
 14353  0086F4  0012               	return		;funcret
 14354  0086F6                     __end_of_get_rssi:
 14355                           	opt callstack 0
 14356                           
 14357 ;; *************** function _get_lqi *****************
 14358 ;; Defined at:
 14359 ;;		line 629 in file "../phy/sx1216/phy_src/phy.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;  rssi            1    wreg     char 
 14362 ;; Auto vars:     Size  Location     Type
 14363 ;;  rssi            1   66[COMRAM] char 
 14364 ;; Return value:  Size  Location     Type
 14365 ;;                  1    wreg      unsigned char 
 14366 ;; Registers used:
 14367 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14368 ;; Tracked objects:
 14369 ;;		On entry : 0/1
 14370 ;;		On exit  : 0/0
 14371 ;;		Unchanged: 0/0
 14372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14377 ;;Total ram usage:        1 bytes
 14378 ;; Hardware stack levels used:    1
 14379 ;; Hardware stack levels required when called:    8
 14380 ;; This function calls:
 14381 ;;		___fladd
 14382 ;;		___flmul
 14383 ;;		___fltol
 14384 ;;		___xxtofl
 14385 ;; This function is called by:
 14386 ;;		_DIO0_Receive_ISR
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           	psect	text91
 14391  006A8C                     __ptext91:
 14392                           	opt callstack 0
 14393  006A8C                     _get_lqi:
 14394                           	opt callstack 18
 14395                           
 14396                           ;incstack = 0
 14397                           ;get_lqi@rssi stored from wreg
 14398  006A8C  6E43               	movwf	get_lqi@rssi^0,c
 14399                           
 14400                           ;../phy/sx1216/phy_src/phy.c: 630:     if(rssi > -10){
 14401  006A8E  5043               	movf	get_lqi@rssi^0,w,c
 14402  006A90  0A80               	xorlw	128
 14403  006A92  0F89               	addlw	137
 14404  006A94  A0D8               	btfss	status,0,c
 14405  006A96  D002               	goto	l11189
 14406                           
 14407                           ;../phy/sx1216/phy_src/phy.c: 631:         return 255;
 14408  006A98  0EFF               	movlw	255
 14409  006A9A  0012               	return	
 14410  006A9C                     l11189:
 14411                           
 14412                           ;../phy/sx1216/phy_src/phy.c: 633:     return ((2.18*(int16_t)rssi) + 10795);
 14413  006A9C  0E00               	movlw	0
 14414  006A9E  6E2D               	movwf	___fladd@a^0,c
 14415  006AA0  0EAC               	movlw	172
 14416  006AA2  6E2E               	movwf	(___fladd@a+1)^0,c
 14417  006AA4  0E28               	movlw	40
 14418  006AA6  6E2F               	movwf	(___fladd@a+2)^0,c
 14419  006AA8  0E46               	movlw	70
 14420  006AAA  6E30               	movwf	(___fladd@a+3)^0,c
 14421  006AAC  0E1F               	movlw	31
 14422  006AAE  6E14               	movwf	___flmul@a^0,c
 14423  006AB0  0E85               	movlw	133
 14424  006AB2  6E15               	movwf	(___flmul@a+1)^0,c
 14425  006AB4  0E0B               	movlw	11
 14426  006AB6  6E16               	movwf	(___flmul@a+2)^0,c
 14427  006AB8  0E40               	movlw	64
 14428  006ABA  6E17               	movwf	(___flmul@a+3)^0,c
 14429  006ABC  5043               	movf	get_lqi@rssi^0,w,c
 14430  006ABE  6E02               	movwf	___xxtofl@val^0,c
 14431  006AC0  0E00               	movlw	0
 14432  006AC2  BE02               	btfsc	___xxtofl@val^0,7,c
 14433  006AC4  0EFF               	movlw	-1
 14434  006AC6  6E03               	movwf	(___xxtofl@val+1)^0,c
 14435  006AC8  6E04               	movwf	(___xxtofl@val+2)^0,c
 14436  006ACA  6E05               	movwf	(___xxtofl@val+3)^0,c
 14437  006ACC  0E01               	movlw	1
 14438  006ACE  EC22  F020         	call	___xxtofl
 14439  006AD2  0060  F008  F010   	movff	?___xxtofl,___flmul@b
 14440  006AD8  0060  F00C  F011   	movff	?___xxtofl+1,___flmul@b+1
 14441  006ADE  0060  F010  F012   	movff	?___xxtofl+2,___flmul@b+2
 14442  006AE4  0060  F014  F013   	movff	?___xxtofl+3,___flmul@b+3
 14443  006AEA  EC92  F009         	call	___flmul	;wreg free
 14444  006AEE  0060  F040  F029   	movff	?___flmul,___fladd@b
 14445  006AF4  0060  F044  F02A   	movff	?___flmul+1,___fladd@b+1
 14446  006AFA  0060  F048  F02B   	movff	?___flmul+2,___fladd@b+2
 14447  006B00  0060  F04C  F02C   	movff	?___flmul+3,___fladd@b+3
 14448  006B06  EC0B  F00D         	call	___fladd	;wreg free
 14449  006B0A  0060  F0A4  F039   	movff	?___fladd,___fltol@f1
 14450  006B10  0060  F0A8  F03A   	movff	?___fladd+1,___fltol@f1+1
 14451  006B16  0060  F0AC  F03B   	movff	?___fladd+2,___fltol@f1+2
 14452  006B1C  0060  F0B0  F03C   	movff	?___fladd+3,___fltol@f1+3
 14453  006B22  ECAA  F030         	call	___fltol	;wreg free
 14454  006B26  5039               	movf	?___fltol^0,w,c
 14455  006B28  0012               	return		;funcret
 14456  006B2A                     __end_of_get_lqi:
 14457                           	opt callstack 0
 14458                           
 14459 ;; *************** function ___fltol *****************
 14460 ;; Defined at:
 14461 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;  f1              4   56[COMRAM] unsigned char 
 14464 ;; Auto vars:     Size  Location     Type
 14465 ;;  exp1            1   65[COMRAM] unsigned char 
 14466 ;;  sign1           1   64[COMRAM] unsigned char 
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  4   56[COMRAM] long 
 14469 ;; Registers used:
 14470 ;;		wreg, status,2, status,0
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/1
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14479 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14480 ;;Total ram usage:       10 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:    7
 14483 ;; This function calls:
 14484 ;;		Nothing
 14485 ;; This function is called by:
 14486 ;;		_get_lqi
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text92
 14491  006154                     __ptext92:
 14492                           	opt callstack 0
 14493  006154                     ___fltol:
 14494                           	opt callstack 18
 14495                           
 14496                           ;incstack = 0
 14497  006154  343B               	rlcf	(___fltol@f1+2)^0,w,c
 14498  006156  343C               	rlcf	(___fltol@f1+3)^0,w,c
 14499  006158  6E42               	movwf	___fltol@exp1^0,c
 14500  00615A  5042               	movf	___fltol@exp1^0,w,c
 14501  00615C  A4D8               	btfss	status,2,c
 14502  00615E  D009               	goto	l10549
 14503  006160                     u8830:
 14504  006160  0E00               	movlw	0
 14505  006162  6E39               	movwf	?___fltol^0,c
 14506  006164  0E00               	movlw	0
 14507  006166  6E3A               	movwf	(?___fltol+1)^0,c
 14508  006168  0E00               	movlw	0
 14509  00616A  6E3B               	movwf	(?___fltol+2)^0,c
 14510  00616C  0E00               	movlw	0
 14511  00616E  6E3C               	movwf	(?___fltol+3)^0,c
 14512  006170  0012               	return	
 14513  006172                     l10549:
 14514  006172  0060  F0E4  F03D   	movff	___fltol@f1,??___fltol
 14515  006178  0060  F0E8  F03E   	movff	___fltol@f1+1,??___fltol+1
 14516  00617E  0060  F0EC  F03F   	movff	___fltol@f1+2,??___fltol+2
 14517  006184  0060  F0F0  F040   	movff	___fltol@f1+3,??___fltol+3
 14518  00618A  0E20               	movlw	32
 14519  00618C  D005               	goto	u8840
 14520  00618E                     u8845:
 14521  00618E  90D8               	bcf	status,0,c
 14522  006190  3240               	rrcf	(??___fltol+3)^0,f,c
 14523  006192  323F               	rrcf	(??___fltol+2)^0,f,c
 14524  006194  323E               	rrcf	(??___fltol+1)^0,f,c
 14525  006196  323D               	rrcf	??___fltol^0,f,c
 14526  006198                     u8840:
 14527  006198  2EE8               	decfsz	wreg,f,c
 14528  00619A  D7F9               	goto	u8845
 14529  00619C  503D               	movf	??___fltol^0,w,c
 14530  00619E  6E41               	movwf	___fltol@sign1^0,c
 14531  0061A0  8E3B               	bsf	(___fltol@f1+2)^0,7,c
 14532  0061A2  0EFF               	movlw	255
 14533  0061A4  1639               	andwf	___fltol@f1^0,f,c
 14534  0061A6  0EFF               	movlw	255
 14535  0061A8  163A               	andwf	(___fltol@f1+1)^0,f,c
 14536  0061AA  0EFF               	movlw	255
 14537  0061AC  163B               	andwf	(___fltol@f1+2)^0,f,c
 14538  0061AE  0E00               	movlw	0
 14539  0061B0  163C               	andwf	(___fltol@f1+3)^0,f,c
 14540  0061B2  0E96               	movlw	150
 14541  0061B4  5E42               	subwf	___fltol@exp1^0,f,c
 14542  0061B6  AE42               	btfss	___fltol@exp1^0,7,c
 14543  0061B8  D00D               	goto	l10569
 14544  0061BA  5042               	movf	___fltol@exp1^0,w,c
 14545  0061BC  0A80               	xorlw	128
 14546  0061BE  0F97               	addlw	151
 14547  0061C0  A0D8               	btfss	status,0,c
 14548  0061C2  D7CE               	goto	u8830
 14549  0061C4                     l10565:
 14550  0061C4  90D8               	bcf	status,0,c
 14551  0061C6  323C               	rrcf	(___fltol@f1+3)^0,f,c
 14552  0061C8  323B               	rrcf	(___fltol@f1+2)^0,f,c
 14553  0061CA  323A               	rrcf	(___fltol@f1+1)^0,f,c
 14554  0061CC  3239               	rrcf	___fltol@f1^0,f,c
 14555  0061CE  3E42               	incfsz	___fltol@exp1^0,f,c
 14556  0061D0  D7F9               	goto	l10565
 14557  0061D2  D00D               	goto	u8880
 14558  0061D4                     l10569:
 14559  0061D4  0E1F               	movlw	31
 14560  0061D6  6442               	cpfsgt	___fltol@exp1^0,c
 14561  0061D8  D007               	goto	l10577
 14562  0061DA  D7C2               	goto	u8830
 14563  0061DC                     l10575:
 14564  0061DC  90D8               	bcf	status,0,c
 14565  0061DE  3639               	rlcf	___fltol@f1^0,f,c
 14566  0061E0  363A               	rlcf	(___fltol@f1+1)^0,f,c
 14567  0061E2  363B               	rlcf	(___fltol@f1+2)^0,f,c
 14568  0061E4  363C               	rlcf	(___fltol@f1+3)^0,f,c
 14569  0061E6  0642               	decf	___fltol@exp1^0,f,c
 14570  0061E8                     l10577:
 14571  0061E8  5042               	movf	___fltol@exp1^0,w,c
 14572  0061EA  A4D8               	btfss	status,2,c
 14573  0061EC  D7F7               	goto	l10575
 14574  0061EE                     u8880:
 14575  0061EE  5041               	movf	___fltol@sign1^0,w,c
 14576  0061F0  B4D8               	btfsc	status,2,c
 14577  0061F2  D008               	goto	l10583
 14578  0061F4  1E3C               	comf	(___fltol@f1+3)^0,f,c
 14579  0061F6  1E3B               	comf	(___fltol@f1+2)^0,f,c
 14580  0061F8  1E3A               	comf	(___fltol@f1+1)^0,f,c
 14581  0061FA  6C39               	negf	___fltol@f1^0,c
 14582  0061FC  0E00               	movlw	0
 14583  0061FE  223A               	addwfc	(___fltol@f1+1)^0,f,c
 14584  006200  223B               	addwfc	(___fltol@f1+2)^0,f,c
 14585  006202  223C               	addwfc	(___fltol@f1+3)^0,f,c
 14586  006204                     l10583:
 14587  006204  0060  F0E4  F039   	movff	___fltol@f1,?___fltol
 14588  00620A  0060  F0E8  F03A   	movff	___fltol@f1+1,?___fltol+1
 14589  006210  0060  F0EC  F03B   	movff	___fltol@f1+2,?___fltol+2
 14590  006216  0060  F0F0  F03C   	movff	___fltol@f1+3,?___fltol+3
 14591  00621C  0012               	return		;funcret
 14592  00621E                     __end_of___fltol:
 14593                           	opt callstack 0
 14594                           
 14595 ;; *************** function ___flmul *****************
 14596 ;; Defined at:
 14597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;  b               4   15[COMRAM] long 
 14600 ;;  a               4   19[COMRAM] long 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;  prod            4   34[COMRAM] struct .
 14603 ;;  grs             4   29[COMRAM] unsigned long 
 14604 ;;  temp            2   38[COMRAM] struct .
 14605 ;;  bexp            1   33[COMRAM] unsigned char 
 14606 ;;  aexp            1   28[COMRAM] unsigned char 
 14607 ;;  sign            1   27[COMRAM] unsigned char 
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  4   15[COMRAM] unsigned char 
 14610 ;; Registers used:
 14611 ;;		wreg, status,2, status,0, prodl, prodh
 14612 ;; Tracked objects:
 14613 ;;		On entry : 0/1
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14617 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14618 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14620 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14621 ;;Total ram usage:       25 bytes
 14622 ;; Hardware stack levels used:    1
 14623 ;; Hardware stack levels required when called:    7
 14624 ;; This function calls:
 14625 ;;		Nothing
 14626 ;; This function is called by:
 14627 ;;		_get_lqi
 14628 ;; This function uses a non-reentrant model
 14629 ;;
 14630                           
 14631                           	psect	text93
 14632  001324                     __ptext93:
 14633                           	opt callstack 0
 14634  001324                     ___flmul:
 14635                           	opt callstack 18
 14636                           
 14637                           ;incstack = 0
 14638  001324  5013               	movf	(___flmul@b+3)^0,w,c
 14639  001326  0B80               	andlw	128
 14640  001328  6E1C               	movwf	___flmul@sign^0,c
 14641  00132A  5013               	movf	(___flmul@b+3)^0,w,c
 14642  00132C  2413               	addwf	(___flmul@b+3)^0,w,c
 14643  00132E  6E22               	movwf	___flmul@bexp^0,c
 14644  001330  BE12               	btfsc	(___flmul@b+2)^0,7,c
 14645  001332  8022               	bsf	___flmul@bexp^0,0,c
 14646  001334  5022               	movf	___flmul@bexp^0,w,c
 14647  001336  B4D8               	btfsc	status,2,c
 14648  001338  D00D               	goto	l10405
 14649  00133A  2822               	incf	___flmul@bexp^0,w,c
 14650  00133C  A4D8               	btfss	status,2,c
 14651  00133E  D008               	goto	l10403
 14652  001340  0E00               	movlw	0
 14653  001342  6E10               	movwf	___flmul@b^0,c
 14654  001344  0E00               	movlw	0
 14655  001346  6E11               	movwf	(___flmul@b+1)^0,c
 14656  001348  0E00               	movlw	0
 14657  00134A  6E12               	movwf	(___flmul@b+2)^0,c
 14658  00134C  0E00               	movlw	0
 14659  00134E  6E13               	movwf	(___flmul@b+3)^0,c
 14660  001350                     l10403:
 14661  001350  8E12               	bsf	(___flmul@b+2)^0,7,c
 14662  001352  D008               	goto	l10407
 14663  001354                     l10405:
 14664  001354  0E00               	movlw	0
 14665  001356  6E10               	movwf	___flmul@b^0,c
 14666  001358  0E00               	movlw	0
 14667  00135A  6E11               	movwf	(___flmul@b+1)^0,c
 14668  00135C  0E00               	movlw	0
 14669  00135E  6E12               	movwf	(___flmul@b+2)^0,c
 14670  001360  0E00               	movlw	0
 14671  001362  6E13               	movwf	(___flmul@b+3)^0,c
 14672  001364                     l10407:
 14673  001364  5017               	movf	(___flmul@a+3)^0,w,c
 14674  001366  0B80               	andlw	128
 14675  001368  1A1C               	xorwf	___flmul@sign^0,f,c
 14676  00136A  5017               	movf	(___flmul@a+3)^0,w,c
 14677  00136C  2417               	addwf	(___flmul@a+3)^0,w,c
 14678  00136E  6E1D               	movwf	___flmul@aexp^0,c
 14679  001370  BE16               	btfsc	(___flmul@a+2)^0,7,c
 14680  001372  801D               	bsf	___flmul@aexp^0,0,c
 14681  001374  501D               	movf	___flmul@aexp^0,w,c
 14682  001376  B4D8               	btfsc	status,2,c
 14683  001378  D00D               	goto	l10423
 14684  00137A  281D               	incf	___flmul@aexp^0,w,c
 14685  00137C  A4D8               	btfss	status,2,c
 14686  00137E  D008               	goto	l10421
 14687  001380  0E00               	movlw	0
 14688  001382  6E14               	movwf	___flmul@a^0,c
 14689  001384  0E00               	movlw	0
 14690  001386  6E15               	movwf	(___flmul@a+1)^0,c
 14691  001388  0E00               	movlw	0
 14692  00138A  6E16               	movwf	(___flmul@a+2)^0,c
 14693  00138C  0E00               	movlw	0
 14694  00138E  6E17               	movwf	(___flmul@a+3)^0,c
 14695  001390                     l10421:
 14696  001390  8E16               	bsf	(___flmul@a+2)^0,7,c
 14697  001392  D008               	goto	l3810
 14698  001394                     l10423:
 14699  001394  0E00               	movlw	0
 14700  001396  6E14               	movwf	___flmul@a^0,c
 14701  001398  0E00               	movlw	0
 14702  00139A  6E15               	movwf	(___flmul@a+1)^0,c
 14703  00139C  0E00               	movlw	0
 14704  00139E  6E16               	movwf	(___flmul@a+2)^0,c
 14705  0013A0  0E00               	movlw	0
 14706  0013A2  6E17               	movwf	(___flmul@a+3)^0,c
 14707  0013A4                     l3810:
 14708  0013A4  501D               	movf	___flmul@aexp^0,w,c
 14709  0013A6  B4D8               	btfsc	status,2,c
 14710  0013A8  D003               	goto	u8670
 14711  0013AA  5022               	movf	___flmul@bexp^0,w,c
 14712  0013AC  A4D8               	btfss	status,2,c
 14713  0013AE  D009               	goto	l10431
 14714  0013B0                     u8670:
 14715  0013B0  0E00               	movlw	0
 14716  0013B2  6E10               	movwf	?___flmul^0,c
 14717  0013B4  0E00               	movlw	0
 14718  0013B6  6E11               	movwf	(?___flmul+1)^0,c
 14719  0013B8  0E00               	movlw	0
 14720  0013BA  6E12               	movwf	(?___flmul+2)^0,c
 14721  0013BC  0E00               	movlw	0
 14722  0013BE  6E13               	movwf	(?___flmul+3)^0,c
 14723  0013C0  0012               	return	
 14724  0013C2                     l10431:
 14725  0013C2  5016               	movf	(___flmul@a+2)^0,w,c
 14726  0013C4  0210               	mulwf	___flmul@b^0,c
 14727  0013C6  006F FFCC  F027    	movff	prodl,___flmul@temp
 14728  0013CC  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14729  0013D2  5027               	movf	___flmul@temp^0,w,c
 14730  0013D4  6E1E               	movwf	___flmul@grs^0,c
 14731  0013D6  6A1F               	clrf	(___flmul@grs+1)^0,c
 14732  0013D8  6A20               	clrf	(___flmul@grs+2)^0,c
 14733  0013DA  6A21               	clrf	(___flmul@grs+3)^0,c
 14734  0013DC  5028               	movf	(___flmul@temp+1)^0,w,c
 14735  0013DE  6E23               	movwf	___flmul@prod^0,c
 14736  0013E0  6A24               	clrf	(___flmul@prod+1)^0,c
 14737  0013E2  6A25               	clrf	(___flmul@prod+2)^0,c
 14738  0013E4  6A26               	clrf	(___flmul@prod+3)^0,c
 14739  0013E6  5015               	movf	(___flmul@a+1)^0,w,c
 14740  0013E8  0211               	mulwf	(___flmul@b+1)^0,c
 14741  0013EA  006F FFCC  F027    	movff	prodl,___flmul@temp
 14742  0013F0  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14743  0013F6  5027               	movf	___flmul@temp^0,w,c
 14744  0013F8  261E               	addwf	___flmul@grs^0,f,c
 14745  0013FA  0E00               	movlw	0
 14746  0013FC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14747  0013FE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14748  001400  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14749  001402  5028               	movf	(___flmul@temp+1)^0,w,c
 14750  001404  2623               	addwf	___flmul@prod^0,f,c
 14751  001406  0E00               	movlw	0
 14752  001408  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14753  00140A  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14754  00140C  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14755  00140E  5014               	movf	___flmul@a^0,w,c
 14756  001410  0212               	mulwf	(___flmul@b+2)^0,c
 14757  001412  006F FFCC  F027    	movff	prodl,___flmul@temp
 14758  001418  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14759  00141E  5027               	movf	___flmul@temp^0,w,c
 14760  001420  261E               	addwf	___flmul@grs^0,f,c
 14761  001422  0E00               	movlw	0
 14762  001424  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14763  001426  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14764  001428  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14765  00142A  5028               	movf	(___flmul@temp+1)^0,w,c
 14766  00142C  2623               	addwf	___flmul@prod^0,f,c
 14767  00142E  0E00               	movlw	0
 14768  001430  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14769  001432  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14770  001434  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14771  001436  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14772  00143C  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14773  001442  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14774  001448  6A1E               	clrf	___flmul@grs^0,c
 14775  00144A  5014               	movf	___flmul@a^0,w,c
 14776  00144C  0211               	mulwf	(___flmul@b+1)^0,c
 14777  00144E  006F FFCC  F027    	movff	prodl,___flmul@temp
 14778  001454  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14779  00145A  5027               	movf	___flmul@temp^0,w,c
 14780  00145C  261E               	addwf	___flmul@grs^0,f,c
 14781  00145E  5028               	movf	(___flmul@temp+1)^0,w,c
 14782  001460  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14783  001462  0E00               	movlw	0
 14784  001464  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14785  001466  0E00               	movlw	0
 14786  001468  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14787  00146A  5015               	movf	(___flmul@a+1)^0,w,c
 14788  00146C  0210               	mulwf	___flmul@b^0,c
 14789  00146E  006F FFCC  F027    	movff	prodl,___flmul@temp
 14790  001474  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14791  00147A  5027               	movf	___flmul@temp^0,w,c
 14792  00147C  261E               	addwf	___flmul@grs^0,f,c
 14793  00147E  5028               	movf	(___flmul@temp+1)^0,w,c
 14794  001480  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14795  001482  0E00               	movlw	0
 14796  001484  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14797  001486  0E00               	movlw	0
 14798  001488  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14799  00148A  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14800  001490  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14801  001496  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14802  00149C  6A1E               	clrf	___flmul@grs^0,c
 14803  00149E  5014               	movf	___flmul@a^0,w,c
 14804  0014A0  0210               	mulwf	___flmul@b^0,c
 14805  0014A2  006F FFCC  F027    	movff	prodl,___flmul@temp
 14806  0014A8  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14807  0014AE  5027               	movf	___flmul@temp^0,w,c
 14808  0014B0  261E               	addwf	___flmul@grs^0,f,c
 14809  0014B2  5028               	movf	(___flmul@temp+1)^0,w,c
 14810  0014B4  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14811  0014B6  0E00               	movlw	0
 14812  0014B8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14813  0014BA  0E00               	movlw	0
 14814  0014BC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14815  0014BE  5016               	movf	(___flmul@a+2)^0,w,c
 14816  0014C0  0211               	mulwf	(___flmul@b+1)^0,c
 14817  0014C2  006F FFCC  F027    	movff	prodl,___flmul@temp
 14818  0014C8  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14819  0014CE  5027               	movf	___flmul@temp^0,w,c
 14820  0014D0  2623               	addwf	___flmul@prod^0,f,c
 14821  0014D2  5028               	movf	(___flmul@temp+1)^0,w,c
 14822  0014D4  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14823  0014D6  0E00               	movlw	0
 14824  0014D8  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14825  0014DA  0E00               	movlw	0
 14826  0014DC  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14827  0014DE  5015               	movf	(___flmul@a+1)^0,w,c
 14828  0014E0  0212               	mulwf	(___flmul@b+2)^0,c
 14829  0014E2  006F FFCC  F027    	movff	prodl,___flmul@temp
 14830  0014E8  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14831  0014EE  5027               	movf	___flmul@temp^0,w,c
 14832  0014F0  2623               	addwf	___flmul@prod^0,f,c
 14833  0014F2  5028               	movf	(___flmul@temp+1)^0,w,c
 14834  0014F4  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14835  0014F6  0E00               	movlw	0
 14836  0014F8  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14837  0014FA  0E00               	movlw	0
 14838  0014FC  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14839  0014FE  5016               	movf	(___flmul@a+2)^0,w,c
 14840  001500  0212               	mulwf	(___flmul@b+2)^0,c
 14841  001502  006F FFCC  F027    	movff	prodl,___flmul@temp
 14842  001508  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14843  00150E  5027               	movf	___flmul@temp^0,w,c
 14844  001510  6E18               	movwf	??___flmul^0,c
 14845  001512  5028               	movf	(___flmul@temp+1)^0,w,c
 14846  001514  6E19               	movwf	(??___flmul+1)^0,c
 14847  001516  6A1A               	clrf	(??___flmul+2)^0,c
 14848  001518  6A1B               	clrf	(??___flmul+3)^0,c
 14849  00151A  0060  F068  F01B   	movff	??___flmul+2,??___flmul+3
 14850  001520  0060  F064  F01A   	movff	??___flmul+1,??___flmul+2
 14851  001526  0060  F060  F019   	movff	??___flmul,??___flmul+1
 14852  00152C  6A18               	clrf	??___flmul^0,c
 14853  00152E  5018               	movf	??___flmul^0,w,c
 14854  001530  2623               	addwf	___flmul@prod^0,f,c
 14855  001532  5019               	movf	(??___flmul+1)^0,w,c
 14856  001534  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14857  001536  501A               	movf	(??___flmul+2)^0,w,c
 14858  001538  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14859  00153A  501B               	movf	(??___flmul+3)^0,w,c
 14860  00153C  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14861  00153E  5021               	movf	(___flmul@grs+3)^0,w,c
 14862  001540  2623               	addwf	___flmul@prod^0,f,c
 14863  001542  0E00               	movlw	0
 14864  001544  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14865  001546  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14866  001548  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14867  00154A  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14868  001550  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14869  001556  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14870  00155C  6A1E               	clrf	___flmul@grs^0,c
 14871  00155E  501D               	movf	___flmul@aexp^0,w,c
 14872  001560  0060  F088  F018   	movff	___flmul@bexp,??___flmul
 14873  001566  6A19               	clrf	(??___flmul+1)^0,c
 14874  001568  2618               	addwf	??___flmul^0,f,c
 14875  00156A  0E00               	movlw	0
 14876  00156C  2219               	addwfc	(??___flmul+1)^0,f,c
 14877  00156E  0E82               	movlw	130
 14878  001570  2418               	addwf	??___flmul^0,w,c
 14879  001572  6E27               	movwf	___flmul@temp^0,c
 14880  001574  0EFF               	movlw	255
 14881  001576  2019               	addwfc	(??___flmul+1)^0,w,c
 14882  001578  6E28               	movwf	(___flmul@temp+1)^0,c
 14883  00157A  D00F               	goto	l10479
 14884  00157C                     l10473:
 14885  00157C  90D8               	bcf	status,0,c
 14886  00157E  3623               	rlcf	___flmul@prod^0,f,c
 14887  001580  3624               	rlcf	(___flmul@prod+1)^0,f,c
 14888  001582  3625               	rlcf	(___flmul@prod+2)^0,f,c
 14889  001584  3626               	rlcf	(___flmul@prod+3)^0,f,c
 14890  001586  BE21               	btfsc	(___flmul@grs+3)^0,7,c
 14891  001588  8023               	bsf	___flmul@prod^0,0,c
 14892  00158A  90D8               	bcf	status,0,c
 14893  00158C  361E               	rlcf	___flmul@grs^0,f,c
 14894  00158E  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14895  001590  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14896  001592  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14897  001594  0627               	decf	___flmul@temp^0,f,c
 14898  001596  A0D8               	btfss	status,0,c
 14899  001598  0628               	decf	(___flmul@temp+1)^0,f,c
 14900  00159A                     l10479:
 14901  00159A  AE25               	btfss	(___flmul@prod+2)^0,7,c
 14902  00159C  D7EF               	goto	l10473
 14903  00159E  0E00               	movlw	0
 14904  0015A0  6E1D               	movwf	___flmul@aexp^0,c
 14905  0015A2  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14906  0015A4  D017               	goto	l3819
 14907  0015A6  0EFF               	movlw	255
 14908  0015A8  141E               	andwf	___flmul@grs^0,w,c
 14909  0015AA  6E18               	movwf	??___flmul^0,c
 14910  0015AC  0EFF               	movlw	255
 14911  0015AE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14912  0015B0  6E19               	movwf	(??___flmul+1)^0,c
 14913  0015B2  0EFF               	movlw	255
 14914  0015B4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14915  0015B6  6E1A               	movwf	(??___flmul+2)^0,c
 14916  0015B8  0E7F               	movlw	127
 14917  0015BA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14918  0015BC  6E1B               	movwf	(??___flmul+3)^0,c
 14919  0015BE  5018               	movf	??___flmul^0,w,c
 14920  0015C0  1019               	iorwf	(??___flmul+1)^0,w,c
 14921  0015C2  101A               	iorwf	(??___flmul+2)^0,w,c
 14922  0015C4  101B               	iorwf	(??___flmul+3)^0,w,c
 14923  0015C6  B4D8               	btfsc	status,2,c
 14924  0015C8  D003               	goto	l3820
 14925  0015CA                     u8710:
 14926  0015CA  0E01               	movlw	1
 14927  0015CC  6E1D               	movwf	___flmul@aexp^0,c
 14928  0015CE  D002               	goto	l3819
 14929  0015D0                     l3820:
 14930  0015D0  B023               	btfsc	___flmul@prod^0,0,c
 14931  0015D2  D7FB               	goto	u8710
 14932  0015D4                     l3819:
 14933  0015D4  501D               	movf	___flmul@aexp^0,w,c
 14934  0015D6  B4D8               	btfsc	status,2,c
 14935  0015D8  D027               	goto	l10499
 14936  0015DA  0E01               	movlw	1
 14937  0015DC  2623               	addwf	___flmul@prod^0,f,c
 14938  0015DE  0E00               	movlw	0
 14939  0015E0  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14940  0015E2  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14941  0015E4  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14942  0015E6  A026               	btfss	(___flmul@prod+3)^0,0,c
 14943  0015E8  D01F               	goto	l10499
 14944  0015EA  0060  F08C  F018   	movff	___flmul@prod,??___flmul
 14945  0015F0  0060  F090  F019   	movff	___flmul@prod+1,??___flmul+1
 14946  0015F6  0060  F094  F01A   	movff	___flmul@prod+2,??___flmul+2
 14947  0015FC  0060  F098  F01B   	movff	___flmul@prod+3,??___flmul+3
 14948  001602  341B               	rlcf	(??___flmul+3)^0,w,c
 14949  001604  321B               	rrcf	(??___flmul+3)^0,f,c
 14950  001606  321A               	rrcf	(??___flmul+2)^0,f,c
 14951  001608  3219               	rrcf	(??___flmul+1)^0,f,c
 14952  00160A  3218               	rrcf	??___flmul^0,f,c
 14953  00160C  0060  F060  F023   	movff	??___flmul,___flmul@prod
 14954  001612  0060  F064  F024   	movff	??___flmul+1,___flmul@prod+1
 14955  001618  0060  F068  F025   	movff	??___flmul+2,___flmul@prod+2
 14956  00161E  0060  F06C  F026   	movff	??___flmul+3,___flmul@prod+3
 14957  001624  4A27               	infsnz	___flmul@temp^0,f,c
 14958  001626  2A28               	incf	(___flmul@temp+1)^0,f,c
 14959  001628                     l10499:
 14960  001628  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 14961  00162A  D00D               	goto	l10503
 14962  00162C  5028               	movf	(___flmul@temp+1)^0,w,c
 14963  00162E  E103               	bnz	u8750
 14964  001630  2827               	incf	___flmul@temp^0,w,c
 14965  001632  A0D8               	btfss	status,0,c
 14966  001634  D008               	goto	l10503
 14967  001636                     u8750:
 14968  001636  0E00               	movlw	0
 14969  001638  6E23               	movwf	___flmul@prod^0,c
 14970  00163A  0E00               	movlw	0
 14971  00163C  6E24               	movwf	(___flmul@prod+1)^0,c
 14972  00163E  0E80               	movlw	128
 14973  001640  6E25               	movwf	(___flmul@prod+2)^0,c
 14974  001642  0E7F               	movlw	127
 14975  001644  D021               	goto	L8
 14976  001646                     l10503:
 14977  001646  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 14978  001648  D005               	goto	u8760
 14979  00164A  5028               	movf	(___flmul@temp+1)^0,w,c
 14980  00164C  E10E               	bnz	l3827
 14981  00164E  0427               	decf	___flmul@temp^0,w,c
 14982  001650  B0D8               	btfsc	status,0,c
 14983  001652  D00B               	goto	l3827
 14984  001654                     u8760:
 14985  001654  0E00               	movlw	0
 14986  001656  6E23               	movwf	___flmul@prod^0,c
 14987  001658  0E00               	movlw	0
 14988  00165A  6E24               	movwf	(___flmul@prod+1)^0,c
 14989  00165C  0E00               	movlw	0
 14990  00165E  6E25               	movwf	(___flmul@prod+2)^0,c
 14991  001660  0E00               	movlw	0
 14992  001662  6E26               	movwf	(___flmul@prod+3)^0,c
 14993  001664  0E00               	movlw	0
 14994  001666  6E1C               	movwf	___flmul@sign^0,c
 14995  001668  D010               	goto	l10515
 14996  00166A                     l3827:
 14997  00166A  0060  F09C  F022   	movff	___flmul@temp,___flmul@bexp
 14998  001670  0EFF               	movlw	255
 14999  001672  1623               	andwf	___flmul@prod^0,f,c
 15000  001674  0EFF               	movlw	255
 15001  001676  1624               	andwf	(___flmul@prod+1)^0,f,c
 15002  001678  0E7F               	movlw	127
 15003  00167A  1625               	andwf	(___flmul@prod+2)^0,f,c
 15004  00167C  0E00               	movlw	0
 15005  00167E  1626               	andwf	(___flmul@prod+3)^0,f,c
 15006  001680  B022               	btfsc	___flmul@bexp^0,0,c
 15007  001682  8E25               	bsf	(___flmul@prod+2)^0,7,c
 15008  001684  90D8               	bcf	status,0,c
 15009  001686  3022               	rrcf	___flmul@bexp^0,w,c
 15010  001688                     L8:
 15011  001688  6E26               	movwf	(___flmul@prod+3)^0,c
 15012  00168A                     l10515:
 15013  00168A  501C               	movf	___flmul@sign^0,w,c
 15014  00168C  1226               	iorwf	(___flmul@prod+3)^0,f,c
 15015  00168E  0060  F08C  F010   	movff	___flmul@prod,?___flmul
 15016  001694  0060  F090  F011   	movff	___flmul@prod+1,?___flmul+1
 15017  00169A  0060  F094  F012   	movff	___flmul@prod+2,?___flmul+2
 15018  0016A0  0060  F098  F013   	movff	___flmul@prod+3,?___flmul+3
 15019  0016A6  0012               	return		;funcret
 15020  0016A8                     __end_of___flmul:
 15021                           	opt callstack 0
 15022                           
 15023 ;; *************** function ___fladd *****************
 15024 ;; Defined at:
 15025 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  b               4   40[COMRAM] unsigned char 
 15028 ;;  a               4   44[COMRAM] unsigned char 
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;  grs             1   55[COMRAM] unsigned char 
 15031 ;;  bexp            1   54[COMRAM] unsigned char 
 15032 ;;  aexp            1   53[COMRAM] unsigned char 
 15033 ;;  signs           1   52[COMRAM] unsigned char 
 15034 ;; Return value:  Size  Location     Type
 15035 ;;                  4   40[COMRAM] unsigned char 
 15036 ;; Registers used:
 15037 ;;		wreg, status,2, status,0
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/1
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15046 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15047 ;;Total ram usage:       16 bytes
 15048 ;; Hardware stack levels used:    1
 15049 ;; Hardware stack levels required when called:    7
 15050 ;; This function calls:
 15051 ;;		Nothing
 15052 ;; This function is called by:
 15053 ;;		_get_lqi
 15054 ;; This function uses a non-reentrant model
 15055 ;;
 15056                           
 15057                           	psect	text94
 15058  001A16                     __ptext94:
 15059                           	opt callstack 0
 15060  001A16                     ___fladd:
 15061                           	opt callstack 18
 15062                           
 15063                           ;incstack = 0
 15064  001A16  502C               	movf	(___fladd@b+3)^0,w,c
 15065  001A18  0B80               	andlw	128
 15066  001A1A  6E35               	movwf	___fladd@signs^0,c
 15067  001A1C  502C               	movf	(___fladd@b+3)^0,w,c
 15068  001A1E  242C               	addwf	(___fladd@b+3)^0,w,c
 15069  001A20  6E37               	movwf	___fladd@bexp^0,c
 15070  001A22  BE2B               	btfsc	(___fladd@b+2)^0,7,c
 15071  001A24  8037               	bsf	___fladd@bexp^0,0,c
 15072  001A26  5037               	movf	___fladd@bexp^0,w,c
 15073  001A28  B4D8               	btfsc	status,2,c
 15074  001A2A  D00D               	goto	l10205
 15075  001A2C  2837               	incf	___fladd@bexp^0,w,c
 15076  001A2E  A4D8               	btfss	status,2,c
 15077  001A30  D008               	goto	l10201
 15078  001A32  0E00               	movlw	0
 15079  001A34  6E29               	movwf	___fladd@b^0,c
 15080  001A36  0E00               	movlw	0
 15081  001A38  6E2A               	movwf	(___fladd@b+1)^0,c
 15082  001A3A  0E00               	movlw	0
 15083  001A3C  6E2B               	movwf	(___fladd@b+2)^0,c
 15084  001A3E  0E00               	movlw	0
 15085  001A40  6E2C               	movwf	(___fladd@b+3)^0,c
 15086  001A42                     l10201:
 15087  001A42  8E2B               	bsf	(___fladd@b+2)^0,7,c
 15088  001A44  D006               	goto	L9
 15089  001A46                     l10205:
 15090  001A46  0E00               	movlw	0
 15091  001A48  6E29               	movwf	___fladd@b^0,c
 15092  001A4A  0E00               	movlw	0
 15093  001A4C  6E2A               	movwf	(___fladd@b+1)^0,c
 15094  001A4E  0E00               	movlw	0
 15095  001A50  6E2B               	movwf	(___fladd@b+2)^0,c
 15096  001A52                     L9:
 15097  001A52  0E00               	movlw	0
 15098  001A54  6E2C               	movwf	(___fladd@b+3)^0,c
 15099  001A56  5030               	movf	(___fladd@a+3)^0,w,c
 15100  001A58  0B80               	andlw	128
 15101  001A5A  6E36               	movwf	___fladd@aexp^0,c
 15102  001A5C  5035               	movf	___fladd@signs^0,w,c
 15103  001A5E  1836               	xorwf	___fladd@aexp^0,w,c
 15104  001A60  A4D8               	btfss	status,2,c
 15105  001A62  8C35               	bsf	___fladd@signs^0,6,c
 15106  001A64  5030               	movf	(___fladd@a+3)^0,w,c
 15107  001A66  2430               	addwf	(___fladd@a+3)^0,w,c
 15108  001A68  6E36               	movwf	___fladd@aexp^0,c
 15109  001A6A  BE2F               	btfsc	(___fladd@a+2)^0,7,c
 15110  001A6C  8036               	bsf	___fladd@aexp^0,0,c
 15111  001A6E  5036               	movf	___fladd@aexp^0,w,c
 15112  001A70  B4D8               	btfsc	status,2,c
 15113  001A72  D00D               	goto	l10229
 15114  001A74  2836               	incf	___fladd@aexp^0,w,c
 15115  001A76  A4D8               	btfss	status,2,c
 15116  001A78  D008               	goto	l10225
 15117  001A7A  0E00               	movlw	0
 15118  001A7C  6E2D               	movwf	___fladd@a^0,c
 15119  001A7E  0E00               	movlw	0
 15120  001A80  6E2E               	movwf	(___fladd@a+1)^0,c
 15121  001A82  0E00               	movlw	0
 15122  001A84  6E2F               	movwf	(___fladd@a+2)^0,c
 15123  001A86  0E00               	movlw	0
 15124  001A88  6E30               	movwf	(___fladd@a+3)^0,c
 15125  001A8A                     l10225:
 15126  001A8A  8E2F               	bsf	(___fladd@a+2)^0,7,c
 15127  001A8C  D006               	goto	L10
 15128  001A8E                     l10229:
 15129  001A8E  0E00               	movlw	0
 15130  001A90  6E2D               	movwf	___fladd@a^0,c
 15131  001A92  0E00               	movlw	0
 15132  001A94  6E2E               	movwf	(___fladd@a+1)^0,c
 15133  001A96  0E00               	movlw	0
 15134  001A98  6E2F               	movwf	(___fladd@a+2)^0,c
 15135  001A9A                     L10:
 15136  001A9A  0E00               	movlw	0
 15137  001A9C  6E30               	movwf	(___fladd@a+3)^0,c
 15138  001A9E  5037               	movf	___fladd@bexp^0,w,c
 15139  001AA0  5C36               	subwf	___fladd@aexp^0,w,c
 15140  001AA2  B0D8               	btfsc	status,0,c
 15141  001AA4  D031               	goto	l10267
 15142  001AA6  AC35               	btfss	___fladd@signs^0,6,c
 15143  001AA8  D002               	goto	l10237
 15144  001AAA  0E80               	movlw	128
 15145  001AAC  1A35               	xorwf	___fladd@signs^0,f,c
 15146  001AAE                     l10237:
 15147  001AAE  0060  F0DC  F038   	movff	___fladd@bexp,___fladd@grs
 15148  001AB4  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 15149  001ABA  0060  F0E0  F036   	movff	___fladd@grs,___fladd@aexp
 15150  001AC0  0060  F0A4  F038   	movff	___fladd@b,___fladd@grs
 15151  001AC6  0060  F0B4  F029   	movff	___fladd@a,___fladd@b
 15152  001ACC  0060  F0E0  F02D   	movff	___fladd@grs,___fladd@a
 15153  001AD2  0060  F0A8  F038   	movff	___fladd@b+1,___fladd@grs
 15154  001AD8  0060  F0B8  F02A   	movff	___fladd@a+1,___fladd@b+1
 15155  001ADE  0060  F0E0  F02E   	movff	___fladd@grs,___fladd@a+1
 15156  001AE4  0060  F0AC  F038   	movff	___fladd@b+2,___fladd@grs
 15157  001AEA  0060  F0BC  F02B   	movff	___fladd@a+2,___fladd@b+2
 15158  001AF0  0060  F0E0  F02F   	movff	___fladd@grs,___fladd@a+2
 15159  001AF6  0060  F0B0  F038   	movff	___fladd@b+3,___fladd@grs
 15160  001AFC  0060  F0C0  F02C   	movff	___fladd@a+3,___fladd@b+3
 15161  001B02  0060  F0E0  F030   	movff	___fladd@grs,___fladd@a+3
 15162  001B08                     l10267:
 15163  001B08  0E00               	movlw	0
 15164  001B0A  6E38               	movwf	___fladd@grs^0,c
 15165  001B0C  5037               	movf	___fladd@bexp^0,w,c
 15166  001B0E  0060  F0D8  F031   	movff	___fladd@aexp,??___fladd
 15167  001B14  6A32               	clrf	(??___fladd+1)^0,c
 15168  001B16  5E31               	subwf	??___fladd^0,f,c
 15169  001B18  0E00               	movlw	0
 15170  001B1A  5A32               	subwfb	(??___fladd+1)^0,f,c
 15171  001B1C  BE32               	btfsc	(??___fladd+1)^0,7,c
 15172  001B1E  D02D               	goto	l3725
 15173  001B20  5032               	movf	(??___fladd+1)^0,w,c
 15174  001B22  E104               	bnz	u8300
 15175  001B24  0E1A               	movlw	26
 15176  001B26  5C31               	subwf	??___fladd^0,w,c
 15177  001B28  A0D8               	btfss	status,0,c
 15178  001B2A  D027               	goto	l3725
 15179  001B2C                     u8300:
 15180  001B2C  5029               	movf	___fladd@b^0,w,c
 15181  001B2E  102A               	iorwf	(___fladd@b+1)^0,w,c
 15182  001B30  102B               	iorwf	(___fladd@b+2)^0,w,c
 15183  001B32  102C               	iorwf	(___fladd@b+3)^0,w,c
 15184  001B34  B4D8               	btfsc	status,2,c
 15185  001B36  D002               	goto	u8310
 15186  001B38  0E01               	movlw	1
 15187  001B3A  D001               	goto	u8320
 15188  001B3C                     u8310:
 15189  001B3C  0E00               	movlw	0
 15190  001B3E                     u8320:
 15191  001B3E  6E38               	movwf	___fladd@grs^0,c
 15192  001B40  0E00               	movlw	0
 15193  001B42  6E29               	movwf	___fladd@b^0,c
 15194  001B44  0E00               	movlw	0
 15195  001B46  6E2A               	movwf	(___fladd@b+1)^0,c
 15196  001B48  0E00               	movlw	0
 15197  001B4A  6E2B               	movwf	(___fladd@b+2)^0,c
 15198  001B4C  0E00               	movlw	0
 15199  001B4E  6E2C               	movwf	(___fladd@b+3)^0,c
 15200  001B50  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 15201  001B56  D015               	goto	u8350
 15202  001B58                     l3726:
 15203  001B58  A038               	btfss	___fladd@grs^0,0,c
 15204  001B5A  D005               	goto	l10279
 15205  001B5C  90D8               	bcf	status,0,c
 15206  001B5E  3038               	rrcf	___fladd@grs^0,w,c
 15207  001B60  0901               	iorlw	1
 15208  001B62  6E38               	movwf	___fladd@grs^0,c
 15209  001B64  D002               	goto	l10281
 15210  001B66                     l10279:
 15211  001B66  90D8               	bcf	status,0,c
 15212  001B68  3238               	rrcf	___fladd@grs^0,f,c
 15213  001B6A                     l10281:
 15214  001B6A  B029               	btfsc	___fladd@b^0,0,c
 15215  001B6C  8E38               	bsf	___fladd@grs^0,7,c
 15216  001B6E  342C               	rlcf	(___fladd@b+3)^0,w,c
 15217  001B70  322C               	rrcf	(___fladd@b+3)^0,f,c
 15218  001B72  322B               	rrcf	(___fladd@b+2)^0,f,c
 15219  001B74  322A               	rrcf	(___fladd@b+1)^0,f,c
 15220  001B76  3229               	rrcf	___fladd@b^0,f,c
 15221  001B78  2A37               	incf	___fladd@bexp^0,f,c
 15222  001B7A                     l3725:
 15223  001B7A  5036               	movf	___fladd@aexp^0,w,c
 15224  001B7C  5C37               	subwf	___fladd@bexp^0,w,c
 15225  001B7E  A0D8               	btfss	status,0,c
 15226  001B80  D7EB               	goto	l3726
 15227  001B82                     u8350:
 15228  001B82  BC35               	btfsc	___fladd@signs^0,6,c
 15229  001B84  D028               	goto	l10313
 15230  001B86  5037               	movf	___fladd@bexp^0,w,c
 15231  001B88  A4D8               	btfss	status,2,c
 15232  001B8A  D009               	goto	l10295
 15233  001B8C  0E00               	movlw	0
 15234  001B8E  6E29               	movwf	?___fladd^0,c
 15235  001B90  0E00               	movlw	0
 15236  001B92  6E2A               	movwf	(?___fladd+1)^0,c
 15237  001B94  0E00               	movlw	0
 15238  001B96  6E2B               	movwf	(?___fladd+2)^0,c
 15239  001B98  0E00               	movlw	0
 15240  001B9A  6E2C               	movwf	(?___fladd+3)^0,c
 15241  001B9C  0012               	return	
 15242  001B9E                     l10295:
 15243  001B9E  502D               	movf	___fladd@a^0,w,c
 15244  001BA0  2629               	addwf	___fladd@b^0,f,c
 15245  001BA2  502E               	movf	(___fladd@a+1)^0,w,c
 15246  001BA4  222A               	addwfc	(___fladd@b+1)^0,f,c
 15247  001BA6  502F               	movf	(___fladd@a+2)^0,w,c
 15248  001BA8  222B               	addwfc	(___fladd@b+2)^0,f,c
 15249  001BAA  5030               	movf	(___fladd@a+3)^0,w,c
 15250  001BAC  222C               	addwfc	(___fladd@b+3)^0,f,c
 15251  001BAE  A02C               	btfss	(___fladd@b+3)^0,0,c
 15252  001BB0  D071               	goto	u8480
 15253  001BB2  A038               	btfss	___fladd@grs^0,0,c
 15254  001BB4  D005               	goto	l10303
 15255  001BB6  90D8               	bcf	status,0,c
 15256  001BB8  3038               	rrcf	___fladd@grs^0,w,c
 15257  001BBA  0901               	iorlw	1
 15258  001BBC  6E38               	movwf	___fladd@grs^0,c
 15259  001BBE  D002               	goto	l10305
 15260  001BC0                     l10303:
 15261  001BC0  90D8               	bcf	status,0,c
 15262  001BC2  3238               	rrcf	___fladd@grs^0,f,c
 15263  001BC4                     l10305:
 15264  001BC4  B029               	btfsc	___fladd@b^0,0,c
 15265  001BC6  8E38               	bsf	___fladd@grs^0,7,c
 15266  001BC8  342C               	rlcf	(___fladd@b+3)^0,w,c
 15267  001BCA  322C               	rrcf	(___fladd@b+3)^0,f,c
 15268  001BCC  322B               	rrcf	(___fladd@b+2)^0,f,c
 15269  001BCE  322A               	rrcf	(___fladd@b+1)^0,f,c
 15270  001BD0  3229               	rrcf	___fladd@b^0,f,c
 15271  001BD2  2A37               	incf	___fladd@bexp^0,f,c
 15272  001BD4  D05F               	goto	u8480
 15273  001BD6                     l10313:
 15274  001BD6  502D               	movf	___fladd@a^0,w,c
 15275  001BD8  5C29               	subwf	___fladd@b^0,w,c
 15276  001BDA  502E               	movf	(___fladd@a+1)^0,w,c
 15277  001BDC  582A               	subwfb	(___fladd@b+1)^0,w,c
 15278  001BDE  502F               	movf	(___fladd@a+2)^0,w,c
 15279  001BE0  582B               	subwfb	(___fladd@b+2)^0,w,c
 15280  001BE2  502C               	movf	(___fladd@b+3)^0,w,c
 15281  001BE4  0A80               	xorlw	128
 15282  001BE6  6E31               	movwf	??___fladd^0,c
 15283  001BE8  5030               	movf	(___fladd@a+3)^0,w,c
 15284  001BEA  0A80               	xorlw	128
 15285  001BEC  5831               	subwfb	??___fladd^0,w,c
 15286  001BEE  B0D8               	btfsc	status,0,c
 15287  001BF0  D025               	goto	l10323
 15288  001BF2  5029               	movf	___fladd@b^0,w,c
 15289  001BF4  5C2D               	subwf	___fladd@a^0,w,c
 15290  001BF6  6E31               	movwf	??___fladd^0,c
 15291  001BF8  502A               	movf	(___fladd@b+1)^0,w,c
 15292  001BFA  582E               	subwfb	(___fladd@a+1)^0,w,c
 15293  001BFC  6E32               	movwf	(??___fladd+1)^0,c
 15294  001BFE  502B               	movf	(___fladd@b+2)^0,w,c
 15295  001C00  582F               	subwfb	(___fladd@a+2)^0,w,c
 15296  001C02  6E33               	movwf	(??___fladd+2)^0,c
 15297  001C04  502C               	movf	(___fladd@b+3)^0,w,c
 15298  001C06  5830               	subwfb	(___fladd@a+3)^0,w,c
 15299  001C08  6E34               	movwf	(??___fladd+3)^0,c
 15300  001C0A  0EFF               	movlw	255
 15301  001C0C  2431               	addwf	??___fladd^0,w,c
 15302  001C0E  6E29               	movwf	___fladd@b^0,c
 15303  001C10  0EFF               	movlw	255
 15304  001C12  2032               	addwfc	(??___fladd+1)^0,w,c
 15305  001C14  6E2A               	movwf	(___fladd@b+1)^0,c
 15306  001C16  0EFF               	movlw	255
 15307  001C18  2033               	addwfc	(??___fladd+2)^0,w,c
 15308  001C1A  6E2B               	movwf	(___fladd@b+2)^0,c
 15309  001C1C  0EFF               	movlw	255
 15310  001C1E  2034               	addwfc	(??___fladd+3)^0,w,c
 15311  001C20  6E2C               	movwf	(___fladd@b+3)^0,c
 15312  001C22  0E80               	movlw	128
 15313  001C24  1A35               	xorwf	___fladd@signs^0,f,c
 15314  001C26  6C38               	negf	___fladd@grs^0,c
 15315  001C28  5038               	movf	___fladd@grs^0,w,c
 15316  001C2A  A4D8               	btfss	status,2,c
 15317  001C2C  D00F               	goto	l3741
 15318  001C2E  0E01               	movlw	1
 15319  001C30  2629               	addwf	___fladd@b^0,f,c
 15320  001C32  0E00               	movlw	0
 15321  001C34  222A               	addwfc	(___fladd@b+1)^0,f,c
 15322  001C36  222B               	addwfc	(___fladd@b+2)^0,f,c
 15323  001C38  222C               	addwfc	(___fladd@b+3)^0,f,c
 15324  001C3A  D008               	goto	l3741
 15325  001C3C                     l10323:
 15326  001C3C  502D               	movf	___fladd@a^0,w,c
 15327  001C3E  5E29               	subwf	___fladd@b^0,f,c
 15328  001C40  502E               	movf	(___fladd@a+1)^0,w,c
 15329  001C42  5A2A               	subwfb	(___fladd@b+1)^0,f,c
 15330  001C44  502F               	movf	(___fladd@a+2)^0,w,c
 15331  001C46  5A2B               	subwfb	(___fladd@b+2)^0,f,c
 15332  001C48  5030               	movf	(___fladd@a+3)^0,w,c
 15333  001C4A  5A2C               	subwfb	(___fladd@b+3)^0,f,c
 15334  001C4C                     l3741:
 15335  001C4C  5029               	movf	___fladd@b^0,w,c
 15336  001C4E  102A               	iorwf	(___fladd@b+1)^0,w,c
 15337  001C50  102B               	iorwf	(___fladd@b+2)^0,w,c
 15338  001C52  102C               	iorwf	(___fladd@b+3)^0,w,c
 15339  001C54  A4D8               	btfss	status,2,c
 15340  001C56  D01C               	goto	l10347
 15341  001C58  5038               	movf	___fladd@grs^0,w,c
 15342  001C5A  A4D8               	btfss	status,2,c
 15343  001C5C  D019               	goto	l10347
 15344  001C5E  0E00               	movlw	0
 15345  001C60  6E29               	movwf	?___fladd^0,c
 15346  001C62  0E00               	movlw	0
 15347  001C64  6E2A               	movwf	(?___fladd+1)^0,c
 15348  001C66  0E00               	movlw	0
 15349  001C68  6E2B               	movwf	(?___fladd+2)^0,c
 15350  001C6A  0E00               	movlw	0
 15351  001C6C  6E2C               	movwf	(?___fladd+3)^0,c
 15352  001C6E  0012               	return	
 15353  001C70                     l10331:
 15354  001C70  90D8               	bcf	status,0,c
 15355  001C72  3629               	rlcf	___fladd@b^0,f,c
 15356  001C74  362A               	rlcf	(___fladd@b+1)^0,f,c
 15357  001C76  362B               	rlcf	(___fladd@b+2)^0,f,c
 15358  001C78  362C               	rlcf	(___fladd@b+3)^0,f,c
 15359  001C7A  BE38               	btfsc	___fladd@grs^0,7,c
 15360  001C7C  8029               	bsf	___fladd@b^0,0,c
 15361  001C7E  A038               	btfss	___fladd@grs^0,0,c
 15362  001C80  D002               	goto	l10341
 15363  001C82  80D8               	bsf	status,0,c
 15364  001C84  D001               	goto	L11
 15365  001C86                     l10341:
 15366  001C86  90D8               	bcf	status,0,c
 15367  001C88                     L11:
 15368  001C88  3638               	rlcf	___fladd@grs^0,f,c
 15369  001C8A  5037               	movf	___fladd@bexp^0,w,c
 15370  001C8C  A4D8               	btfss	status,2,c
 15371  001C8E  0637               	decf	___fladd@bexp^0,f,c
 15372  001C90                     l10347:
 15373  001C90  AE2B               	btfss	(___fladd@b+2)^0,7,c
 15374  001C92  D7EE               	goto	l10331
 15375  001C94                     u8480:
 15376  001C94  0E00               	movlw	0
 15377  001C96  6E36               	movwf	___fladd@aexp^0,c
 15378  001C98  AE38               	btfss	___fladd@grs^0,7,c
 15379  001C9A  D00C               	goto	l3750
 15380  001C9C  0060  F0E0  F031   	movff	___fladd@grs,??___fladd
 15381  001CA2  0E7F               	movlw	127
 15382  001CA4  1631               	andwf	??___fladd^0,f,c
 15383  001CA6  B4D8               	btfsc	status,2,c
 15384  001CA8  D003               	goto	l3751
 15385  001CAA                     u8500:
 15386  001CAA  0E01               	movlw	1
 15387  001CAC  6E36               	movwf	___fladd@aexp^0,c
 15388  001CAE  D002               	goto	l3750
 15389  001CB0                     l3751:
 15390  001CB0  B029               	btfsc	___fladd@b^0,0,c
 15391  001CB2  D7FB               	goto	u8500
 15392  001CB4                     l3750:
 15393  001CB4  5036               	movf	___fladd@aexp^0,w,c
 15394  001CB6  B4D8               	btfsc	status,2,c
 15395  001CB8  D028               	goto	l10367
 15396  001CBA  0E01               	movlw	1
 15397  001CBC  2629               	addwf	___fladd@b^0,f,c
 15398  001CBE  0E00               	movlw	0
 15399  001CC0  222A               	addwfc	(___fladd@b+1)^0,f,c
 15400  001CC2  222B               	addwfc	(___fladd@b+2)^0,f,c
 15401  001CC4  222C               	addwfc	(___fladd@b+3)^0,f,c
 15402  001CC6  A02C               	btfss	(___fladd@b+3)^0,0,c
 15403  001CC8  D020               	goto	l10367
 15404  001CCA  0060  F0A4  F031   	movff	___fladd@b,??___fladd
 15405  001CD0  0060  F0A8  F032   	movff	___fladd@b+1,??___fladd+1
 15406  001CD6  0060  F0AC  F033   	movff	___fladd@b+2,??___fladd+2
 15407  001CDC  0060  F0B0  F034   	movff	___fladd@b+3,??___fladd+3
 15408  001CE2  3434               	rlcf	(??___fladd+3)^0,w,c
 15409  001CE4  3234               	rrcf	(??___fladd+3)^0,f,c
 15410  001CE6  3233               	rrcf	(??___fladd+2)^0,f,c
 15411  001CE8  3232               	rrcf	(??___fladd+1)^0,f,c
 15412  001CEA  3231               	rrcf	??___fladd^0,f,c
 15413  001CEC  0060  F0C4  F029   	movff	??___fladd,___fladd@b
 15414  001CF2  0060  F0C8  F02A   	movff	??___fladd+1,___fladd@b+1
 15415  001CF8  0060  F0CC  F02B   	movff	??___fladd+2,___fladd@b+2
 15416  001CFE  0060  F0D0  F02C   	movff	??___fladd+3,___fladd@b+3
 15417  001D04  2837               	incf	___fladd@bexp^0,w,c
 15418  001D06  A4D8               	btfss	status,2,c
 15419  001D08  2A37               	incf	___fladd@bexp^0,f,c
 15420  001D0A                     l10367:
 15421  001D0A  2837               	incf	___fladd@bexp^0,w,c
 15422  001D0C  B4D8               	btfsc	status,2,c
 15423  001D0E  D003               	goto	u8560
 15424  001D10  5037               	movf	___fladd@bexp^0,w,c
 15425  001D12  A4D8               	btfss	status,2,c
 15426  001D14  D00D               	goto	l10375
 15427  001D16                     u8560:
 15428  001D16  0E00               	movlw	0
 15429  001D18  6E29               	movwf	___fladd@b^0,c
 15430  001D1A  0E00               	movlw	0
 15431  001D1C  6E2A               	movwf	(___fladd@b+1)^0,c
 15432  001D1E  0E00               	movlw	0
 15433  001D20  6E2B               	movwf	(___fladd@b+2)^0,c
 15434  001D22  0E00               	movlw	0
 15435  001D24  6E2C               	movwf	(___fladd@b+3)^0,c
 15436  001D26  5037               	movf	___fladd@bexp^0,w,c
 15437  001D28  A4D8               	btfss	status,2,c
 15438  001D2A  D002               	goto	l10375
 15439  001D2C  0E00               	movlw	0
 15440  001D2E  6E35               	movwf	___fladd@signs^0,c
 15441  001D30                     l10375:
 15442  001D30  A037               	btfss	___fladd@bexp^0,0,c
 15443  001D32  D002               	goto	l10379
 15444  001D34  8E2B               	bsf	(___fladd@b+2)^0,7,c
 15445  001D36  D001               	goto	l10381
 15446  001D38                     l10379:
 15447  001D38  9E2B               	bcf	(___fladd@b+2)^0,7,c
 15448  001D3A                     l10381:
 15449  001D3A  90D8               	bcf	status,0,c
 15450  001D3C  3037               	rrcf	___fladd@bexp^0,w,c
 15451  001D3E  6E2C               	movwf	(___fladd@b+3)^0,c
 15452  001D40  BE35               	btfsc	___fladd@signs^0,7,c
 15453  001D42  8E2C               	bsf	(___fladd@b+3)^0,7,c
 15454  001D44  0060  F0A4  F029   	movff	___fladd@b,?___fladd
 15455  001D4A  0060  F0A8  F02A   	movff	___fladd@b+1,?___fladd+1
 15456  001D50  0060  F0AC  F02B   	movff	___fladd@b+2,?___fladd+2
 15457  001D56  0060  F0B0  F02C   	movff	___fladd@b+3,?___fladd+3
 15458  001D5C  0012               	return		;funcret
 15459  001D5E                     __end_of___fladd:
 15460                           	opt callstack 0
 15461                           
 15462 ;; *************** function _PHY_DataInd *****************
 15463 ;; Defined at:
 15464 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 15467 ;;		 -> DIO0_Receive_ISR@ind(5), 
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 15470 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  1    wreg      void 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/1
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15480 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15482 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15483 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15484 ;;Total ram usage:        6 bytes
 15485 ;; Hardware stack levels used:    1
 15486 ;; Hardware stack levels required when called:    9
 15487 ;; This function calls:
 15488 ;;		_memcpy
 15489 ;;		_nwkFrameAlloc
 15490 ;; This function is called by:
 15491 ;;		_DIO0_Receive_ISR
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text95
 15496  004970                     __ptext95:
 15497                           	opt callstack 0
 15498  004970                     _PHY_DataInd:
 15499                           	opt callstack 17
 15500                           
 15501                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 15502                           
 15503                           ;incstack = 0
 15504  004970  5013               	movf	PHY_DataInd@ind^0,w,c
 15505  004972  6ED9               	movwf	fsr2l,c
 15506  004974  6ADA               	clrf	fsr2h,c
 15507  004976  EE10 F001          	lfsr	1,1
 15508  00497A  50DE               	movf	postinc2,w,c
 15509  00497C  26E1               	addwf	fsr1l,f,c
 15510  00497E  50DD               	movf	postdec2,w,c
 15511  004980  22E2               	addwfc	fsr1h,f,c
 15512  004982  0E88               	movlw	136
 15513  004984  18E6               	xorwf	postinc1,w,c
 15514  004986  A4D8               	btfss	status,2,c
 15515  004988  0012               	return	
 15516  00498A  5013               	movf	PHY_DataInd@ind^0,w,c
 15517  00498C  6ED9               	movwf	fsr2l,c
 15518  00498E  6ADA               	clrf	fsr2h,c
 15519  004990  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 15520  004996  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 15521  00499C  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 15522  0049A2  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 15523  0049A8  0E61               	movlw	97
 15524  0049AA  18DE               	xorwf	postinc2,w,c
 15525  0049AC  B4D8               	btfsc	status,2,c
 15526  0049AE  D013               	goto	u14650
 15527  0049B0  5013               	movf	PHY_DataInd@ind^0,w,c
 15528  0049B2  6ED9               	movwf	fsr2l,c
 15529  0049B4  6ADA               	clrf	fsr2h,c
 15530  0049B6  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 15531  0049BC  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 15532  0049C2  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 15533  0049C8  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 15534  0049CE  0E41               	movlw	65
 15535  0049D0  18DE               	xorwf	postinc2,w,c
 15536  0049D2  A4D8               	btfss	status,2,c
 15537  0049D4  0012               	return	
 15538  0049D6                     u14650:
 15539  0049D6  5013               	movf	PHY_DataInd@ind^0,w,c
 15540  0049D8  6ED9               	movwf	fsr2l,c
 15541  0049DA  6ADA               	clrf	fsr2h,c
 15542  0049DC  0E02               	movlw	2
 15543  0049DE  26D9               	addwf	fsr2l,f,c
 15544  0049E0  0E10               	movlw	16
 15545  0049E2  60DF               	cpfslt	indf2,c
 15546  0049E4  D001               	goto	l15067
 15547  0049E6  0012               	return	
 15548  0049E8                     l15067:
 15549                           
 15550                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 15551  0049E8  ECED  F032         	call	_nwkFrameAlloc	;wreg free
 15552  0049EC  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 15553  0049F2  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 15554  0049F8  5017               	movf	PHY_DataInd@frame^0,w,c
 15555  0049FA  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 15556  0049FC  B4D8               	btfsc	status,2,c
 15557  0049FE  0012               	return	
 15558                           
 15559                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 15560  004A00  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 15561  004A06  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 15562  004A0C  0E20               	movlw	32
 15563  004A0E  6EDF               	movwf	indf2,c
 15564                           
 15565                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 15566  004A10  5013               	movf	PHY_DataInd@ind^0,w,c
 15567  004A12  6ED9               	movwf	fsr2l,c
 15568  004A14  6ADA               	clrf	fsr2h,c
 15569  004A16  0E02               	movlw	2
 15570  004A18  26D9               	addwf	fsr2l,f,c
 15571  004A1A  EE10 F001          	lfsr	1,1
 15572  004A1E  5017               	movf	PHY_DataInd@frame^0,w,c
 15573  004A20  26E1               	addwf	fsr1l,f,c
 15574  004A22  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15575  004A24  22E2               	addwfc	fsr1h,f,c
 15576  004A26  006F FF7F FFE7     	movff	indf2,indf1
 15577                           
 15578                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 15579  004A2C  5013               	movf	PHY_DataInd@ind^0,w,c
 15580  004A2E  6ED9               	movwf	fsr2l,c
 15581  004A30  6ADA               	clrf	fsr2h,c
 15582  004A32  0E03               	movlw	3
 15583  004A34  26D9               	addwf	fsr2l,f,c
 15584  004A36  EE10 F083          	lfsr	1,131
 15585  004A3A  5017               	movf	PHY_DataInd@frame^0,w,c
 15586  004A3C  26E1               	addwf	fsr1l,f,c
 15587  004A3E  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15588  004A40  22E2               	addwfc	fsr1h,f,c
 15589  004A42  006F FF7F FFE7     	movff	indf2,indf1
 15590                           
 15591                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 15592  004A48  5013               	movf	PHY_DataInd@ind^0,w,c
 15593  004A4A  6ED9               	movwf	fsr2l,c
 15594  004A4C  6ADA               	clrf	fsr2h,c
 15595  004A4E  0E04               	movlw	4
 15596  004A50  26D9               	addwf	fsr2l,f,c
 15597  004A52  EE10 F084          	lfsr	1,132
 15598  004A56  5017               	movf	PHY_DataInd@frame^0,w,c
 15599  004A58  26E1               	addwf	fsr1l,f,c
 15600  004A5A  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15601  004A5C  22E2               	addwfc	fsr1h,f,c
 15602  004A5E  006F FF7F FFE7     	movff	indf2,indf1
 15603                           
 15604                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 15605  004A64  0E02               	movlw	2
 15606  004A66  2417               	addwf	PHY_DataInd@frame^0,w,c
 15607  004A68  6E08               	movwf	memcpy@d1^0,c
 15608  004A6A  0E00               	movlw	0
 15609  004A6C  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 15610  004A6E  6E09               	movwf	(memcpy@d1+1)^0,c
 15611  004A70  5013               	movf	PHY_DataInd@ind^0,w,c
 15612  004A72  6ED9               	movwf	fsr2l,c
 15613  004A74  6ADA               	clrf	fsr2h,c
 15614  004A76  006F FF78  F00A    	movff	postinc2,memcpy@s1
 15615  004A7C  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 15616  004A82  5013               	movf	PHY_DataInd@ind^0,w,c
 15617  004A84  6ED9               	movwf	fsr2l,c
 15618  004A86  6ADA               	clrf	fsr2h,c
 15619  004A88  0E02               	movlw	2
 15620  004A8A  26D9               	addwf	fsr2l,f,c
 15621  004A8C  50DF               	movf	indf2,w,c
 15622  004A8E  6E14               	movwf	??_PHY_DataInd^0,c
 15623  004A90  5014               	movf	??_PHY_DataInd^0,w,c
 15624  004A92  6E0C               	movwf	memcpy@n^0,c
 15625  004A94  6A0D               	clrf	(memcpy@n+1)^0,c
 15626  004A96  ECE7  F039         	call	_memcpy	;wreg free
 15627  004A9A  0012               	return		;funcret
 15628  004A9C                     __end_of_PHY_DataInd:
 15629                           	opt callstack 0
 15630                           
 15631 ;; *************** function _NWK_TaskHandler *****************
 15632 ;; Defined at:
 15633 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 15634 ;; Parameters:    Size  Location     Type
 15635 ;;		None
 15636 ;; Auto vars:     Size  Location     Type
 15637 ;;		None
 15638 ;; Return value:  Size  Location     Type
 15639 ;;                  1    wreg      void 
 15640 ;; Registers used:
 15641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15642 ;; Tracked objects:
 15643 ;;		On entry : 2/0
 15644 ;;		On exit  : 0/0
 15645 ;;		Unchanged: 0/0
 15646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15651 ;;Total ram usage:        0 bytes
 15652 ;; Hardware stack levels used:    1
 15653 ;; Hardware stack levels required when called:   20
 15654 ;; This function calls:
 15655 ;;		_nwkDataReqTaskHandler
 15656 ;;		_nwkRxTaskHandler
 15657 ;;		_nwkTxTaskHandler
 15658 ;; This function is called by:
 15659 ;;		_SYS_TaskHandler
 15660 ;; This function uses a non-reentrant model
 15661 ;;
 15662                           
 15663                           	psect	text96
 15664  008C94                     __ptext96:
 15665                           	opt callstack 0
 15666  008C94                     _NWK_TaskHandler:
 15667                           	opt callstack 9
 15668                           
 15669                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 15670                           
 15671                           ;incstack = 0
 15672  008C94  EC47  F033         	call	_nwkRxTaskHandler	;wreg free
 15673                           
 15674                           ; BSR set to: 1
 15675                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 15676  008C98  EC6F  F01A         	call	_nwkTxTaskHandler	;wreg free
 15677                           
 15678                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 15679  008C9C  EC28  F039         	call	_nwkDataReqTaskHandler	;wreg free
 15680  008CA0  0012               	return		;funcret
 15681  008CA2                     __end_of_NWK_TaskHandler:
 15682                           	opt callstack 0
 15683                           
 15684 ;; *************** function _nwkTxTaskHandler *****************
 15685 ;; Defined at:
 15686 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;		None
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 15691 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15692 ;; Return value:  Size  Location     Type
 15693 ;;                  1    wreg      void 
 15694 ;; Registers used:
 15695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15696 ;; Tracked objects:
 15697 ;;		On entry : 3F/1
 15698 ;;		On exit  : 0/0
 15699 ;;		Unchanged: 0/0
 15700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15704 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;Total ram usage:        4 bytes
 15706 ;; Hardware stack levels used:    1
 15707 ;; Hardware stack levels required when called:   13
 15708 ;; This function calls:
 15709 ;;		_PHY_DataReq
 15710 ;;		_SYS_TimerStart
 15711 ;;		_nwkDataReqTxConf
 15712 ;;		_nwkFrameFree
 15713 ;;		_nwkFrameNext
 15714 ;;		_nwkRouteFrameSent
 15715 ;; This function is called by:
 15716 ;;		_NWK_TaskHandler
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text97
 15721  0034DE                     __ptext97:
 15722                           	opt callstack 0
 15723  0034DE                     _nwkTxTaskHandler:
 15724                           	opt callstack 15
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 15728                           
 15729                           ;incstack = 0
 15730  0034DE  0E00               	movlw	0
 15731  0034E0  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 15732  0034E2  0E00               	movlw	0
 15733  0034E4  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 15734                           
 15735                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15736  0034E6  D0E0               	goto	l16341
 15737  0034E8                     l16295:
 15738                           
 15739                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 15740  0034E8  EE20 F084          	lfsr	2,132
 15741  0034EC  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15742  0034EE  26D9               	addwf	fsr2l,f,c
 15743  0034F0  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15744  0034F2  22DA               	addwfc	fsr2h,f,c
 15745  0034F4  50DE               	movf	postinc2,w,c
 15746  0034F6  10DE               	iorwf	postinc2,w,c
 15747  0034F8  B4D8               	btfsc	status,2,c
 15748  0034FA  D00F               	goto	l16301
 15749                           
 15750                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 15751  0034FC  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15752  003502  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15753  003508  0E11               	movlw	17
 15754  00350A  6EDF               	movwf	indf2,c
 15755                           
 15756                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 15757  00350C  0E95               	movlw	low _nwkTxDelayTimer
 15758  00350E  6E10               	movwf	SYS_TimerStart@timer^0,c
 15759  003510  0E01               	movlw	high _nwkTxDelayTimer
 15760  003512  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 15761  003514  ECB9  F043         	call	_SYS_TimerStart	;wreg free
 15762                           
 15763                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 15764  003518  D0C7               	goto	l16341
 15765  00351A                     l16301:
 15766                           
 15767                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 15768  00351A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15769  003520  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15770  003526  0E13               	movlw	19
 15771  003528  D065               	goto	L13
 15772  00352A                     l16303:
 15773                           
 15774                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 15775  00352A  0101               	movlb	1	; () banked
 15776  00352C  515B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 15777  00352E  115C               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 15778  003530  A4D8               	btfss	status,2,c
 15779  003532  D0BA               	goto	l16341
 15780                           
 15781                           ; BSR set to: 1
 15782                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 15783  003534  0060  F058  F15B   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 15784  00353A  0060  F05C  F15C   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 15785                           
 15786                           ; BSR set to: 1
 15787                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 15788  003540  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15789  003546  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15790  00354C  0E14               	movlw	20
 15791  00354E  6EDF               	movwf	indf2,c
 15792                           
 15793                           ; BSR set to: 1
 15794                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 15795  003550  0E02               	movlw	2
 15796  003552  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 15797  003554  6E11               	movwf	PHY_DataReq@data^0,c
 15798  003556  0E00               	movlw	0
 15799  003558  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 15800  00355A  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 15801  00355C  EE20 F001          	lfsr	2,1
 15802  003560  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15803  003562  26D9               	addwf	fsr2l,f,c
 15804  003564  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15805  003566  22DA               	addwfc	fsr2h,f,c
 15806  003568  50DF               	movf	indf2,w,c
 15807  00356A  6E13               	movwf	PHY_DataReq@size^0,c
 15808  00356C  ECE2  F03C         	call	_PHY_DataReq	;wreg free
 15809                           
 15810                           ; BSR set to: 1
 15811                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 15812  003570  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 15813  003572  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 15814  003574  D099               	goto	l16341
 15815  003576                     l16313:
 15816                           
 15817                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 15818  003576  EE20 F083          	lfsr	2,131
 15819  00357A  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15820  00357C  26D9               	addwf	fsr2l,f,c
 15821  00357E  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15822  003580  22DA               	addwfc	fsr2h,f,c
 15823  003582  50DF               	movf	indf2,w,c
 15824  003584  A4D8               	btfss	status,2,c
 15825  003586  D02F               	goto	l16325
 15826                           
 15827                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 15828  003588  EE20 F00D          	lfsr	2,13
 15829  00358C  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15830  00358E  26D9               	addwf	fsr2l,f,c
 15831  003590  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15832  003592  22DA               	addwfc	fsr2h,f,c
 15833  003594  0101               	movlb	1	; () banked
 15834  003596  5100               	movf	_nwkIb& (0+255),w,b
 15835  003598  18DE               	xorwf	postinc2,w,c
 15836  00359A  E125               	bnz	l16327
 15837  00359C  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15838  00359E  18DE               	xorwf	postinc2,w,c
 15839  0035A0  A4D8               	btfss	status,2,c
 15840  0035A2  D021               	goto	l16325
 15841                           
 15842                           ; BSR set to: 1
 15843  0035A4  EE20 F00B          	lfsr	2,11
 15844  0035A8  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15845  0035AA  26D9               	addwf	fsr2l,f,c
 15846  0035AC  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15847  0035AE  22DA               	addwfc	fsr2h,f,c
 15848  0035B0  A0DF               	btfss	indf2,0,c
 15849  0035B2  D019               	goto	l16325
 15850                           
 15851                           ; BSR set to: 1
 15852                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 15853  0035B4  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15854  0035BA  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15855  0035C0  0E16               	movlw	22
 15856  0035C2  6EDF               	movwf	indf2,c
 15857                           
 15858                           ; BSR set to: 1
 15859                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 15860  0035C4  EE20 F084          	lfsr	2,132
 15861  0035C8  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15862  0035CA  26D9               	addwf	fsr2l,f,c
 15863  0035CC  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15864  0035CE  22DA               	addwfc	fsr2h,f,c
 15865  0035D0  0E06               	movlw	6
 15866  0035D2  6EDE               	movwf	postinc2,c
 15867  0035D4  0E00               	movlw	0
 15868  0035D6  6EDD               	movwf	postdec2,c
 15869                           
 15870                           ; BSR set to: 1
 15871                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 15872  0035D8  0EA2               	movlw	low _nwkTxAckWaitTimer
 15873  0035DA  6E10               	movwf	SYS_TimerStart@timer^0,c
 15874  0035DC  0E01               	movlw	high _nwkTxAckWaitTimer
 15875  0035DE  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 15876  0035E0  ECB9  F043         	call	_SYS_TimerStart	;wreg free
 15877                           
 15878                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 15879  0035E4  D061               	goto	l16341
 15880  0035E6                     l16325:
 15881  0035E6                     l16327:
 15882                           
 15883                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 15884  0035E6  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15885  0035EC  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15886  0035F2  0E17               	movlw	23
 15887  0035F4                     L13:
 15888  0035F4  6EDF               	movwf	indf2,c
 15889  0035F6  D058               	goto	l16341
 15890  0035F8                     l16329:
 15891                           
 15892                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 15893  0035F8  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 15894  0035FE  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 15895  003604  EC24  F02B         	call	_nwkRouteFrameSent	;wreg free
 15896                           
 15897                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 15898  003608  EE20 F087          	lfsr	2,135
 15899  00360C  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15900  00360E  26D9               	addwf	fsr2l,f,c
 15901  003610  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15902  003612  22DA               	addwfc	fsr2h,f,c
 15903  003614  50DE               	movf	postinc2,w,c
 15904  003616  10DE               	iorwf	postinc2,w,c
 15905  003618  A4D8               	btfss	status,2,c
 15906  00361A  D009               	goto	l16335
 15907                           
 15908                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 15909  00361C  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 15910  003622  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 15911  003628  EC49  F045         	call	_nwkFrameFree	;wreg free
 15912  00362C  D03D               	goto	l16341
 15913  00362E                     l16335:
 15914                           
 15915                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 15916  00362E  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 15917  003634  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 15918  00363A  EE20 F087          	lfsr	2,135
 15919  00363E  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15920  003640  26D9               	addwf	fsr2l,f,c
 15921  003642  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15922  003644  22DA               	addwfc	fsr2h,f,c
 15923  003646  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 15924  00364C  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 15925  003652  D801               	call	u16468
 15926  003654  D029               	goto	l16341
 15927  003656                     u16468:
 15928  003656  0005               	push	
 15929  003658  6EFA               	movwf	pclath,c
 15930  00365A  5014               	movf	??_nwkTxTaskHandler^0,w,c
 15931  00365C  6EFD               	movwf	tosl,c
 15932  00365E  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 15933  003660  6EFE               	movwf	tosh,c
 15934  003662  6AFF               	clrf	tosu,c
 15935  003664  50FA               	movf	pclath,w,c
 15936  003666  0012               	return		;indir
 15937  003668                     l16339:
 15938  003668  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15939  00366E  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15940  003674  50DF               	movf	indf2,w,c
 15941  003676  6E14               	movwf	??_nwkTxTaskHandler^0,c
 15942  003678  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 15943                           
 15944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15945                           ; Switch size 1, requested type "simple"
 15946                           ; Number of cases is 1, Range of values is 0 to 0
 15947                           ; switch strategies available:
 15948                           ; Name         Instructions Cycles
 15949                           ; simple_byte            4     3 (average)
 15950                           ;	Chosen strategy is simple_byte
 15951  00367A  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 15952  00367C  0A00               	xorlw	0	; case 0
 15953  00367E  A4D8               	btfss	status,2,c
 15954  003680  D013               	goto	l16341
 15955                           
 15956                           ; Switch size 1, requested type "simple"
 15957                           ; Number of cases is 6, Range of values is 18 to 23
 15958                           ; switch strategies available:
 15959                           ; Name         Instructions Cycles
 15960                           ; simple_byte           19    10 (average)
 15961                           ;	Chosen strategy is simple_byte
 15962  003682  5014               	movf	??_nwkTxTaskHandler^0,w,c
 15963  003684  0A12               	xorlw	18	; case 18
 15964  003686  B4D8               	btfsc	status,2,c
 15965  003688  D72F               	goto	l16295
 15966  00368A  0A01               	xorlw	1	; case 19
 15967  00368C  B4D8               	btfsc	status,2,c
 15968  00368E  D74D               	goto	l16303
 15969  003690  0A07               	xorlw	7	; case 20
 15970  003692  B4D8               	btfsc	status,2,c
 15971  003694  D009               	goto	l16341
 15972  003696  0A01               	xorlw	1	; case 21
 15973  003698  B4D8               	btfsc	status,2,c
 15974  00369A  D76D               	goto	l16313
 15975  00369C  0A03               	xorlw	3	; case 22
 15976  00369E  B4D8               	btfsc	status,2,c
 15977  0036A0  D003               	goto	l16341
 15978  0036A2  0A01               	xorlw	1	; case 23
 15979  0036A4  B4D8               	btfsc	status,2,c
 15980  0036A6  D7A8               	goto	l16329
 15981  0036A8                     l16341:
 15982                           
 15983                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15984  0036A8  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 15985  0036AE  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 15986  0036B4  EC95  F037         	call	_nwkFrameNext	;wreg free
 15987  0036B8  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 15988  0036BE  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 15989  0036C4  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15990  0036C6  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 15991  0036C8  B4D8               	btfsc	status,2,c
 15992  0036CA  0012               	return	
 15993  0036CC  D7CD               	goto	l16339
 15994  0036CE                     __end_of_nwkTxTaskHandler:
 15995                           	opt callstack 0
 15996                           
 15997 ;; *************** function _nwkRouteFrameSent *****************
 15998 ;; Defined at:
 15999 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 16002 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 16005 ;;		 -> nwkRouteTable(70), NULL(0), 
 16006 ;; Return value:  Size  Location     Type
 16007 ;;                  1    wreg      void 
 16008 ;; Registers used:
 16009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16010 ;; Tracked objects:
 16011 ;;		On entry : 0/1
 16012 ;;		On exit  : 0/0
 16013 ;;		Unchanged: 0/0
 16014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16018 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16019 ;;Total ram usage:        6 bytes
 16020 ;; Hardware stack levels used:    1
 16021 ;; Hardware stack levels required when called:    8
 16022 ;; This function calls:
 16023 ;;		_NWK_RouteFindEntry
 16024 ;;		_NWK_RouteFreeEntry
 16025 ;;		_nwkRouteNormalizeRanks
 16026 ;; This function is called by:
 16027 ;;		_nwkTxTaskHandler
 16028 ;; This function uses a non-reentrant model
 16029 ;;
 16030                           
 16031                           	psect	text98
 16032  005648                     __ptext98:
 16033                           	opt callstack 0
 16034  005648                     _nwkRouteFrameSent:
 16035                           	opt callstack 19
 16036                           
 16037                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 16038                           
 16039                           ;incstack = 0
 16040  005648  EE20 F00F          	lfsr	2,15
 16041  00564C  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16042  00564E  26D9               	addwf	fsr2l,f,c
 16043  005650  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16044  005652  22DA               	addwfc	fsr2h,f,c
 16045  005654  28DE               	incf	postinc2,w,c
 16046  005656  E103               	bnz	l15629
 16047  005658  28DE               	incf	postinc2,w,c
 16048  00565A  B4D8               	btfsc	status,2,c
 16049  00565C  0012               	return	
 16050  00565E                     l15629:
 16051                           
 16052                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 16053  00565E  EE20 F00F          	lfsr	2,15
 16054  005662  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16055  005664  26D9               	addwf	fsr2l,f,c
 16056  005666  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16057  005668  22DA               	addwfc	fsr2h,f,c
 16058  00566A  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 16059  005670  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 16060  005676  EE20 F00B          	lfsr	2,11
 16061  00567A  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16062  00567C  26D9               	addwf	fsr2l,f,c
 16063  00567E  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16064  005680  22DA               	addwfc	fsr2h,f,c
 16065  005682  0E00               	movlw	0
 16066  005684  B6DF               	btfsc	indf2,3,c
 16067  005686  0E01               	movlw	1
 16068  005688  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 16069  00568A  EC2F  F03B         	call	_NWK_RouteFindEntry	;wreg free
 16070  00568E  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 16071  005694  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 16072                           
 16073                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 16074  00569A  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 16075  00569C  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 16076  00569E  B4D8               	btfsc	status,2,c
 16077  0056A0  0012               	return	
 16078  0056A2  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16079  0056A8  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16080  0056AE  B0DF               	btfsc	indf2,0,c
 16081  0056B0  0012               	return	
 16082                           
 16083                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 16084  0056B2  EE20 F083          	lfsr	2,131
 16085  0056B6  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16086  0056B8  26D9               	addwf	fsr2l,f,c
 16087  0056BA  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16088  0056BC  22DA               	addwfc	fsr2h,f,c
 16089  0056BE  50DF               	movf	indf2,w,c
 16090  0056C0  A4D8               	btfss	status,2,c
 16091  0056C2  D017               	goto	l15643
 16092                           
 16093                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 16094  0056C4  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16095  0056CA  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16096  0056D0  50DF               	movf	indf2,w,c
 16097  0056D2  0B0F               	andlw	-241
 16098  0056D4  0930               	iorlw	48
 16099  0056D6  6EDF               	movwf	indf2,c
 16100                           
 16101                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 16102  0056D8  EE20 F005          	lfsr	2,5
 16103  0056DC  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 16104  0056DE  26D9               	addwf	fsr2l,f,c
 16105  0056E0  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 16106  0056E2  22DA               	addwfc	fsr2h,f,c
 16107  0056E4  2ADF               	incf	indf2,f,c
 16108  0056E6  28DE               	incf	postinc2,w,c
 16109  0056E8  A4D8               	btfss	status,2,c
 16110  0056EA  0012               	return	
 16111                           
 16112                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 16113  0056EC  ECBE  F041         	call	_nwkRouteNormalizeRanks	;wreg free
 16114  0056F0  0012               	return	
 16115  0056F2                     l15643:
 16116                           
 16117                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 16118  0056F2  0E01               	movlw	1
 16119  0056F4  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 16120  0056F6  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16121  0056FC  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16122  005702  38DF               	swapf	indf2,w,c
 16123  005704  0B0F               	andlw	15
 16124  005706  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 16125  005708  500A               	movf	??_nwkRouteFrameSent^0,w,c
 16126  00570A  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 16127  00570C  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 16128  00570E  50DF               	movf	indf2,w,c
 16129  005710  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 16130  005712  0B0F               	andlw	-241
 16131  005714  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 16132  005716  6EDF               	movwf	indf2,c
 16133  005718  38DF               	swapf	indf2,w,c
 16134  00571A  0B0F               	andlw	15
 16135  00571C  0900               	iorlw	0
 16136  00571E  A4D8               	btfss	status,2,c
 16137  005720  0012               	return	
 16138                           
 16139                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 16140  005722  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 16141  005728  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 16142  00572E  EC67  F042         	call	_NWK_RouteFreeEntry	;wreg free
 16143  005732  0012               	return		;funcret
 16144  005734                     __end_of_nwkRouteFrameSent:
 16145                           	opt callstack 0
 16146                           
 16147 ;; *************** function _nwkRouteNormalizeRanks *****************
 16148 ;; Defined at:
 16149 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 16150 ;; Parameters:    Size  Location     Type
 16151 ;;		None
 16152 ;; Auto vars:     Size  Location     Type
 16153 ;;  i               1    2[COMRAM] unsigned char 
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1    wreg      void 
 16156 ;; Registers used:
 16157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/1
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;Total ram usage:        2 bytes
 16168 ;; Hardware stack levels used:    1
 16169 ;; Hardware stack levels required when called:    7
 16170 ;; This function calls:
 16171 ;;		Nothing
 16172 ;; This function is called by:
 16173 ;;		_nwkRouteFrameSent
 16174 ;; This function uses a non-reentrant model
 16175 ;;
 16176                           
 16177                           	psect	text99
 16178  00837C                     __ptext99:
 16179                           	opt callstack 0
 16180  00837C                     _nwkRouteNormalizeRanks:
 16181                           	opt callstack 19
 16182                           
 16183                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 16184                           
 16185                           ;incstack = 0
 16186  00837C  0E00               	movlw	0
 16187  00837E  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 16188  008380                     l10759:
 16189                           
 16190                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 16191  008380  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 16192  008382  0D07               	mullw	7
 16193  008384  0E89               	movlw	low (_nwkRouteTable+5)
 16194  008386  24F3               	addwf	243,w,c
 16195  008388  6ED9               	movwf	fsr2l,c
 16196  00838A  0E02               	movlw	high (_nwkRouteTable+5)
 16197  00838C  20F4               	addwfc	prodh,w,c
 16198  00838E  6EDA               	movwf	fsr2h,c
 16199  008390  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 16200  008392  0D07               	mullw	7
 16201  008394  0E89               	movlw	low (_nwkRouteTable+5)
 16202  008396  24F3               	addwf	243,w,c
 16203  008398  6EE1               	movwf	fsr1l,c
 16204  00839A  0E02               	movlw	high (_nwkRouteTable+5)
 16205  00839C  20F4               	addwfc	prodh,w,c
 16206  00839E  6EE2               	movwf	fsr1h,c
 16207  0083A0  50E7               	movf	indf1,w,c
 16208  0083A2  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 16209  0083A4  90D8               	bcf	status,0,c
 16210  0083A6  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 16211  0083A8  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 16212  0083AA  6EDF               	movwf	indf2,c
 16213  0083AC  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 16214  0083AE  0E09               	movlw	9
 16215  0083B0  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 16216  0083B2  D7E6               	goto	l10759
 16217  0083B4  0012               	return	
 16218  0083B6                     __end_of_nwkRouteNormalizeRanks:
 16219                           	opt callstack 0
 16220                           
 16221 ;; *************** function _nwkDataReqTxConf *****************
 16222 ;; Defined at:
 16223 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 16224 ;; Parameters:    Size  Location     Type
 16225 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 16226 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 16229 ;;		 -> NULL(0), tx_buffer(524), 
 16230 ;; Return value:  Size  Location     Type
 16231 ;;                  1    wreg      void 
 16232 ;; Registers used:
 16233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16234 ;; Tracked objects:
 16235 ;;		On entry : 0/1
 16236 ;;		On exit  : 3F/1
 16237 ;;		Unchanged: 0/0
 16238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;Total ram usage:        6 bytes
 16244 ;; Hardware stack levels used:    1
 16245 ;; Hardware stack levels required when called:    8
 16246 ;; This function calls:
 16247 ;;		_nwkFrameFree
 16248 ;; This function is called by:
 16249 ;;		_nwkDataReqSendFrame
 16250 ;;		_nwkTxTaskHandler
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text100
 16255  006944                     __ptext100:
 16256                           	opt callstack 0
 16257  006944                     _nwkDataReqTxConf:
 16258                           	opt callstack 19
 16259                           
 16260                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 16261                           
 16262                           ;incstack = 0
 16263  006944  0060  F388  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 16264  00694A  0060  F38C  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 16265  006950  D040               	goto	l15621
 16266  006952                     l15613:
 16267                           
 16268                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 16269  006952  EE20 F002          	lfsr	2,2
 16270  006956  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16271  006958  26D9               	addwf	fsr2l,f,c
 16272  00695A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16273  00695C  22DA               	addwfc	fsr2h,f,c
 16274  00695E  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16275  006960  18DE               	xorwf	postinc2,w,c
 16276  006962  E12B               	bnz	l15619
 16277  006964  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16278  006966  18DE               	xorwf	postinc2,w,c
 16279  006968  A4D8               	btfss	status,2,c
 16280  00696A  D027               	goto	l15619
 16281                           
 16282                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 16283  00696C  EE20 F083          	lfsr	2,131
 16284  006970  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16285  006972  26D9               	addwf	fsr2l,f,c
 16286  006974  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16287  006976  22DA               	addwfc	fsr2h,f,c
 16288  006978  EE10 F011          	lfsr	1,17
 16289  00697C  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16290  00697E  26E1               	addwf	fsr1l,f,c
 16291  006980  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16292  006982  22E2               	addwfc	fsr1h,f,c
 16293  006984  006F FF7F FFE7     	movff	indf2,indf1
 16294                           
 16295                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 16296  00698A  EE20 F086          	lfsr	2,134
 16297  00698E  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16298  006990  26D9               	addwf	fsr2l,f,c
 16299  006992  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16300  006994  22DA               	addwfc	fsr2h,f,c
 16301  006996  EE10 F012          	lfsr	1,18
 16302  00699A  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16303  00699C  26E1               	addwf	fsr1l,f,c
 16304  00699E  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16305  0069A0  22E2               	addwfc	fsr1h,f,c
 16306  0069A2  006F FF7F FFE7     	movff	indf2,indf1
 16307                           
 16308                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 16309  0069A8  EE20 F004          	lfsr	2,4
 16310  0069AC  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16311  0069AE  26D9               	addwf	fsr2l,f,c
 16312  0069B0  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16313  0069B2  22DA               	addwfc	fsr2h,f,c
 16314  0069B4  0E02               	movlw	2
 16315  0069B6  6EDF               	movwf	indf2,c
 16316                           
 16317                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 16318  0069B8  D010               	goto	u15610
 16319  0069BA                     l15619:
 16320                           
 16321                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 16322  0069BA  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 16323  0069C0  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 16324  0069C6  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 16325  0069CC  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 16326  0069D2                     l15621:
 16327  0069D2  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16328  0069D4  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 16329  0069D6  A4D8               	btfss	status,2,c
 16330  0069D8  D7BC               	goto	l15613
 16331  0069DA                     u15610:
 16332                           
 16333                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 16334  0069DA  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 16335  0069E0  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 16336  0069E6  EC49  F045         	call	_nwkFrameFree	;wreg free
 16337                           
 16338                           ; BSR set to: 1
 16339  0069EA  0012               	return		;funcret
 16340  0069EC                     __end_of_nwkDataReqTxConf:
 16341                           	opt callstack 0
 16342                           
 16343 ;; *************** function _PHY_DataReq *****************
 16344 ;; Defined at:
 16345 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 16346 ;; Parameters:    Size  Location     Type
 16347 ;;  data            2   16[COMRAM] PTR unsigned char 
 16348 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16349 ;;  size            1   18[COMRAM] unsigned char 
 16350 ;; Auto vars:     Size  Location     Type
 16351 ;;		None
 16352 ;; Return value:  Size  Location     Type
 16353 ;;                  1    wreg      void 
 16354 ;; Registers used:
 16355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16356 ;; Tracked objects:
 16357 ;;		On entry : 3F/1
 16358 ;;		On exit  : 3F/1
 16359 ;;		Unchanged: 0/0
 16360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16361 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16364 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16365 ;;Total ram usage:        3 bytes
 16366 ;; Hardware stack levels used:    1
 16367 ;; Hardware stack levels required when called:   12
 16368 ;; This function calls:
 16369 ;;		_SPI1_ExchangeByte
 16370 ;;		_SPI1_WriteBlock
 16371 ;;		_SX1276Write
 16372 ;;		_explicitHeaderMode
 16373 ;;		_idle
 16374 ;; This function is called by:
 16375 ;;		_nwkTxTaskHandler
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           	psect	text101
 16380  0079C4                     __ptext101:
 16381                           	opt callstack 0
 16382  0079C4                     _PHY_DataReq:
 16383                           	opt callstack 15
 16384                           
 16385                           ; BSR set to: 1
 16386                           ;../phy/sx1216/phy_src/phy.c: 843:     idle();
 16387                           
 16388                           ; BSR set to: 1
 16389                           ;incstack = 0
 16390  0079C4  EC82  F046         	call	_idle	;wreg free
 16391                           
 16392                           ;../phy/sx1216/phy_src/phy.c: 844:     explicitHeaderMode();
 16393  0079C8  EC96  F045         	call	_explicitHeaderMode	;wreg free
 16394                           
 16395                           ;../phy/sx1216/phy_src/phy.c: 846:     SX1276Write(0x0E, 0x0);
 16396  0079CC  0E00               	movlw	0
 16397  0079CE  6E0F               	movwf	SX1276Write@data^0,c
 16398  0079D0  0E0E               	movlw	14
 16399  0079D2  ECF8  F045         	call	_SX1276Write
 16400                           
 16401                           ;../phy/sx1216/phy_src/phy.c: 847:     SX1276Write(0x0D, 0x00);
 16402  0079D6  0E00               	movlw	0
 16403  0079D8  6E0F               	movwf	SX1276Write@data^0,c
 16404  0079DA  0E0D               	movlw	13
 16405  0079DC  ECF8  F045         	call	_SX1276Write
 16406                           
 16407                           ;../phy/sx1216/phy_src/phy.c: 848:     SX1276Write(0x22, size);
 16408  0079E0  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 16409  0079E6  0E22               	movlw	34
 16410  0079E8  ECF8  F045         	call	_SX1276Write
 16411                           
 16412                           ; BSR set to: 61
 16413  0079EC  9CBC               	bcf	188,6,c	;volatile
 16414                           
 16415                           ; BSR set to: 61
 16416                           ;../phy/sx1216/phy_src/phy.c: 851:     SPI1_ExchangeByte(0x00 | 0x80);
 16417  0079EE  0E80               	movlw	128
 16418  0079F0  EC70  F045         	call	_SPI1_ExchangeByte
 16419                           
 16420                           ; BSR set to: 61
 16421                           ;../phy/sx1216/phy_src/phy.c: 852:     SPI1_WriteBlock(data,size);
 16422  0079F4  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 16423  0079FA  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 16424  007A00  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 16425  007A06  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 16426  007A08  EC9D  F042         	call	_SPI1_WriteBlock	;wreg free
 16427                           
 16428                           ; BSR set to: 61
 16429  007A0C  8CBC               	bsf	188,6,c	;volatile
 16430                           
 16431                           ; BSR set to: 61
 16432                           ;../phy/sx1216/phy_src/phy.c: 854:     SX1276Write(0x01,
 16433  007A0E  0E83               	movlw	131
 16434  007A10  6E0F               	movwf	SX1276Write@data^0,c
 16435  007A12  0E01               	movlw	1
 16436  007A14  ECF8  F045         	call	_SX1276Write
 16437                           
 16438                           ; BSR set to: 61
 16439                           ;../phy/sx1216/phy_src/phy.c: 856:     radio_state_var = START_TX;
 16440  007A18  0E06               	movlw	6
 16441  007A1A  0101               	movlb	1	; () banked
 16442  007A1C  6F64               	movwf	_radio_state_var& (0+255),b
 16443                           
 16444                           ; BSR set to: 1
 16445  007A1E  0012               	return		;funcret
 16446  007A20                     __end_of_PHY_DataReq:
 16447                           	opt callstack 0
 16448                           
 16449 ;; *************** function _idle *****************
 16450 ;; Defined at:
 16451 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 16452 ;; Parameters:    Size  Location     Type
 16453 ;;		None
 16454 ;; Auto vars:     Size  Location     Type
 16455 ;;		None
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      void 
 16458 ;; Registers used:
 16459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16460 ;; Tracked objects:
 16461 ;;		On entry : 3/3D
 16462 ;;		On exit  : 3F/3D
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16469 ;;Total ram usage:        0 bytes
 16470 ;; Hardware stack levels used:    1
 16471 ;; Hardware stack levels required when called:   11
 16472 ;; This function calls:
 16473 ;;		_SX1276Write
 16474 ;; This function is called by:
 16475 ;;		_start_radio_cad
 16476 ;;		_PHY_DataReq
 16477 ;; This function uses a non-reentrant model
 16478 ;;
 16479                           
 16480                           	psect	text102
 16481  008D04                     __ptext102:
 16482                           	opt callstack 0
 16483  008D04                     _idle:
 16484                           	opt callstack 14
 16485                           
 16486                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 16487                           
 16488                           ; BSR set to: 1
 16489                           ;incstack = 0
 16490  008D04  0E81               	movlw	129
 16491  008D06  6E0F               	movwf	SX1276Write@data^0,c
 16492  008D08  0E01               	movlw	1
 16493  008D0A  ECF8  F045         	call	_SX1276Write
 16494                           
 16495                           ; BSR set to: 61
 16496  008D0E  0012               	return		;funcret
 16497  008D10                     __end_of_idle:
 16498                           	opt callstack 0
 16499                           
 16500 ;; *************** function _nwkRxTaskHandler *****************
 16501 ;; Defined at:
 16502 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 16503 ;; Parameters:    Size  Location     Type
 16504 ;;		None
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;  frame           2    2[BANK1 ] PTR struct NwkFrame_t
 16507 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  1    wreg      void 
 16510 ;; Registers used:
 16511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16512 ;; Tracked objects:
 16513 ;;		On entry : 2/0
 16514 ;;		On exit  : 3F/1
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16519 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16520 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16521 ;;Total ram usage:        4 bytes
 16522 ;; Hardware stack levels used:    1
 16523 ;; Hardware stack levels required when called:   19
 16524 ;; This function calls:
 16525 ;;		_nwkFrameFree
 16526 ;;		_nwkFrameNext
 16527 ;;		_nwkRouteFrame
 16528 ;;		_nwkRxHandleIndication
 16529 ;;		_nwkRxHandleReceivedFrame
 16530 ;; This function is called by:
 16531 ;;		_NWK_TaskHandler
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           	psect	text103
 16536  00668E                     __ptext103:
 16537                           	opt callstack 0
 16538  00668E                     _nwkRxTaskHandler:
 16539                           	opt callstack 9
 16540                           
 16541                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 16542                           
 16543                           ; BSR set to: 61
 16544                           ;incstack = 0
 16545  00668E  0E00               	movlw	0
 16546  006690  0101               	movlb	1	; () banked
 16547  006692  6FFE               	movwf	nwkRxTaskHandler@frame& (0+255),b
 16548  006694  0E00               	movlw	0
 16549  006696  6FFF               	movwf	(nwkRxTaskHandler@frame+1)& (0+255),b
 16550                           
 16551                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16552  006698  D03E               	goto	l16285
 16553  00669A                     l16273:
 16554                           
 16555                           ; BSR set to: 1
 16556                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 16557  00669A  0060  F7F8  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 16558  0066A0  0060  F7FC  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 16559  0066A6  EC54  F00B         	call	_nwkRxHandleReceivedFrame	;wreg free
 16560                           
 16561                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 16562  0066AA  D035               	goto	l16285
 16563  0066AC                     l16275:
 16564                           
 16565                           ; BSR set to: 1
 16566                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 16567  0066AC  0060  F7F8  F0D5   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 16568  0066B2  0060  F7FC  F0D6   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 16569  0066B8  ECDD  F02F         	call	_nwkRxHandleIndication	;wreg free
 16570                           
 16571                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 16572  0066BC  D02C               	goto	l16285
 16573  0066BE                     l16277:
 16574                           
 16575                           ; BSR set to: 1
 16576                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 16577  0066BE  0060  F7F8  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 16578  0066C4  0060  F7FC  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 16579  0066CA  ECA2  F02E         	call	_nwkRouteFrame	;wreg free
 16580                           
 16581                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 16582  0066CE  D023               	goto	l16285
 16583  0066D0                     l16279:
 16584                           
 16585                           ; BSR set to: 1
 16586                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 16587  0066D0  0060  F7F8  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 16588  0066D6  0060  F7FC  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 16589  0066DC  EC49  F045         	call	_nwkFrameFree	;wreg free
 16590                           
 16591                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 16592  0066E0  D01A               	goto	l16285
 16593  0066E2                     l16283:
 16594                           
 16595                           ; BSR set to: 1
 16596  0066E2  0060  F7FB  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 16597  0066E8  0060  F7FF  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 16598  0066EE  50DF               	movf	indf2,w,c
 16599  0066F0  6FFC               	movwf	??_nwkRxTaskHandler& (0+255),b
 16600  0066F2  6BFD               	clrf	(??_nwkRxTaskHandler+1)& (0+255),b
 16601                           
 16602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16603                           ; Switch size 1, requested type "simple"
 16604                           ; Number of cases is 1, Range of values is 0 to 0
 16605                           ; switch strategies available:
 16606                           ; Name         Instructions Cycles
 16607                           ; simple_byte            4     3 (average)
 16608                           ;	Chosen strategy is simple_byte
 16609  0066F4  51FD               	movf	(??_nwkRxTaskHandler+1)& (0+255),w,b
 16610  0066F6  0A00               	xorlw	0	; case 0
 16611  0066F8  A4D8               	btfss	status,2,c
 16612  0066FA  D00D               	goto	l16285
 16613                           
 16614                           ; BSR set to: 1
 16615                           ; Switch size 1, requested type "simple"
 16616                           ; Number of cases is 4, Range of values is 32 to 36
 16617                           ; switch strategies available:
 16618                           ; Name         Instructions Cycles
 16619                           ; simple_byte           13     7 (average)
 16620                           ;	Chosen strategy is simple_byte
 16621  0066FC  51FC               	movf	??_nwkRxTaskHandler& (0+255),w,b
 16622  0066FE  0A20               	xorlw	32	; case 32
 16623  006700  B4D8               	btfsc	status,2,c
 16624  006702  D7CB               	goto	l16273
 16625  006704  0A02               	xorlw	2	; case 34
 16626  006706  B4D8               	btfsc	status,2,c
 16627  006708  D7D1               	goto	l16275
 16628  00670A  0A01               	xorlw	1	; case 35
 16629  00670C  B4D8               	btfsc	status,2,c
 16630  00670E  D7D7               	goto	l16277
 16631  006710  0A07               	xorlw	7	; case 36
 16632  006712  B4D8               	btfsc	status,2,c
 16633  006714  D7DD               	goto	l16279
 16634  006716                     l16285:
 16635                           
 16636                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16637  006716  0060  F7F8  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 16638  00671C  0060  F7FC  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 16639  006722  EC95  F037         	call	_nwkFrameNext	;wreg free
 16640  006726  0060  F008  F1FE   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 16641  00672C  0060  F00C  F1FF   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 16642  006732  0101               	movlb	1	; () banked
 16643  006734  51FE               	movf	nwkRxTaskHandler@frame& (0+255),w,b
 16644  006736  11FF               	iorwf	(nwkRxTaskHandler@frame+1)& (0+255),w,b
 16645  006738  B4D8               	btfsc	status,2,c
 16646  00673A  0012               	return	
 16647  00673C  D7D2               	goto	l16283
 16648  00673E                     __end_of_nwkRxTaskHandler:
 16649                           	opt callstack 0
 16650                           
 16651 ;; *************** function _nwkRxHandleReceivedFrame *****************
 16652 ;; Defined at:
 16653 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 16656 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 16659 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16660 ;;  member          1   45[COMRAM] _Bool 
 16661 ;;  broadcast       1   44[COMRAM] _Bool 
 16662 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 16663 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16664 ;; Return value:  Size  Location     Type
 16665 ;;                  1    wreg      void 
 16666 ;; Registers used:
 16667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16668 ;; Tracked objects:
 16669 ;;		On entry : 2/1
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16676 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16677 ;;Total ram usage:       10 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:   10
 16680 ;; This function calls:
 16681 ;;		_NWK_GroupIsMember
 16682 ;;		_nwkRouteFrameReceived
 16683 ;;		_nwkRxRejectDuplicate
 16684 ;;		_nwkTxBroadcastFrame
 16685 ;; This function is called by:
 16686 ;;		_nwkRxTaskHandler
 16687 ;; This function uses a non-reentrant model
 16688 ;;
 16689                           
 16690                           	psect	text104
 16691  0016A8                     __ptext104:
 16692                           	opt callstack 0
 16693  0016A8                     _nwkRxHandleReceivedFrame:
 16694                           	opt callstack 17
 16695                           
 16696                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 16697                           
 16698                           ; BSR set to: 1
 16699                           ;incstack = 0
 16700  0016A8  0E02               	movlw	2
 16701  0016AA  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 16702  0016AC  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 16703  0016AE  0E00               	movlw	0
 16704  0016B0  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 16705  0016B2  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 16706                           
 16707                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 16708  0016B4  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16709  0016BA  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16710  0016C0  0E24               	movlw	36
 16711  0016C2  6EDF               	movwf	indf2,c
 16712                           
 16713                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 16714  0016C4  EE20 F009          	lfsr	2,9
 16715  0016C8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16716  0016CA  26D9               	addwf	fsr2l,f,c
 16717  0016CC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16718  0016CE  22DA               	addwfc	fsr2h,f,c
 16719  0016D0  B2DF               	btfsc	indf2,1,c
 16720  0016D2  0012               	return	
 16721                           
 16722                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 16723  0016D4  EE20 F009          	lfsr	2,9
 16724  0016D8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16725  0016DA  26D9               	addwf	fsr2l,f,c
 16726  0016DC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16727  0016DE  22DA               	addwfc	fsr2h,f,c
 16728  0016E0  A6DF               	btfss	indf2,3,c
 16729  0016E2  D008               	goto	l15673
 16730  0016E4  EE20 F009          	lfsr	2,9
 16731  0016E8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16732  0016EA  26D9               	addwf	fsr2l,f,c
 16733  0016EC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16734  0016EE  22DA               	addwfc	fsr2h,f,c
 16735  0016F0  B0DF               	btfsc	indf2,0,c
 16736  0016F2  0012               	return	
 16737  0016F4                     l15673:
 16738                           
 16739                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 16740  0016F4  EE20 F003          	lfsr	2,3
 16741  0016F8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16742  0016FA  26D9               	addwf	fsr2l,f,c
 16743  0016FC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16744  0016FE  22DA               	addwfc	fsr2h,f,c
 16745  001700  28DE               	incf	postinc2,w,c
 16746  001702  E125               	bnz	l15683
 16747  001704  28DE               	incf	postinc2,w,c
 16748  001706  A4D8               	btfss	status,2,c
 16749  001708  D022               	goto	l15683
 16750                           
 16751                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 16752  00170A  EE20 F00D          	lfsr	2,13
 16753  00170E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16754  001710  26D9               	addwf	fsr2l,f,c
 16755  001712  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16756  001714  22DA               	addwfc	fsr2h,f,c
 16757  001716  0101               	movlb	1	; () banked
 16758  001718  5100               	movf	_nwkIb& (0+255),w,b
 16759  00171A  18DE               	xorwf	postinc2,w,c
 16760  00171C  E104               	bnz	u15730
 16761  00171E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16762  001720  18DE               	xorwf	postinc2,w,c
 16763  001722  B4D8               	btfsc	status,2,c
 16764  001724  D00B               	goto	u15740
 16765  001726                     u15730:
 16766                           
 16767                           ; BSR set to: 1
 16768  001726  EE20 F00D          	lfsr	2,13
 16769  00172A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16770  00172C  26D9               	addwf	fsr2l,f,c
 16771  00172E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16772  001730  22DA               	addwfc	fsr2h,f,c
 16773  001732  28DE               	incf	postinc2,w,c
 16774  001734  E102               	bnz	u15741
 16775  001736  28DE               	incf	postinc2,w,c
 16776  001738  A4D8               	btfss	status,2,c
 16777  00173A                     u15741:
 16778  00173A  0012               	return	
 16779  00173C                     u15740:
 16780                           
 16781                           ; BSR set to: 1
 16782                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 16783  00173C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16784  001742  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16785  001748  0E22               	movlw	34
 16786  00174A  6EDF               	movwf	indf2,c
 16787  00174C  0012               	return	
 16788  00174E                     l15683:
 16789                           
 16790                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 16791  00174E  EE20 F00D          	lfsr	2,13
 16792  001752  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16793  001754  26D9               	addwf	fsr2l,f,c
 16794  001756  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16795  001758  22DA               	addwfc	fsr2h,f,c
 16796  00175A  28DE               	incf	postinc2,w,c
 16797  00175C  E10B               	bnz	l15689
 16798  00175E  28DE               	incf	postinc2,w,c
 16799  001760  A4D8               	btfss	status,2,c
 16800  001762  D008               	goto	l15689
 16801  001764  EE20 F009          	lfsr	2,9
 16802  001768  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16803  00176A  26D9               	addwf	fsr2l,f,c
 16804  00176C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16805  00176E  22DA               	addwfc	fsr2h,f,c
 16806  001770  B0DF               	btfsc	indf2,0,c
 16807  001772  0012               	return	
 16808  001774                     l15689:
 16809                           
 16810                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 16811  001774  EE20 F00B          	lfsr	2,11
 16812  001778  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16813  00177A  26D9               	addwf	fsr2l,f,c
 16814  00177C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16815  00177E  22DA               	addwfc	fsr2h,f,c
 16816  001780  0101               	movlb	1	; () banked
 16817  001782  5100               	movf	_nwkIb& (0+255),w,b
 16818  001784  18DE               	xorwf	postinc2,w,c
 16819  001786  E104               	bnz	l15693
 16820  001788  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16821  00178A  18DE               	xorwf	postinc2,w,c
 16822  00178C  B4D8               	btfsc	status,2,c
 16823  00178E  0012               	return	
 16824  001790                     l15693:
 16825                           
 16826                           ; BSR set to: 1
 16827                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 16828  001790  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 16829  001796  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 16830  00179C  EC67  F01B         	call	_nwkRouteFrameReceived	;wreg free
 16831                           
 16832                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 16833  0017A0  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 16834  0017A6  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 16835  0017AC  EC4E  F015         	call	_nwkRxRejectDuplicate	;wreg free
 16836  0017B0  0900               	iorlw	0
 16837  0017B2  A4D8               	btfss	status,2,c
 16838  0017B4  0012               	return	
 16839                           
 16840                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 16841  0017B6  EE20 F009          	lfsr	2,9
 16842  0017BA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16843  0017BC  26D9               	addwf	fsr2l,f,c
 16844  0017BE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16845  0017C0  22DA               	addwfc	fsr2h,f,c
 16846  0017C2  A6DF               	btfss	indf2,3,c
 16847  0017C4  D0C7               	goto	l15731
 16848                           
 16849                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 16850  0017C6  EE20 F081          	lfsr	2,129
 16851  0017CA  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 16852  0017CC  26D9               	addwf	fsr2l,f,c
 16853  0017CE  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 16854  0017D0  22DA               	addwfc	fsr2h,f,c
 16855  0017D2  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 16856  0017D8  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 16857                           
 16858                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 16859  0017DE  EE20 F00D          	lfsr	2,13
 16860  0017E2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16861  0017E4  26D9               	addwf	fsr2l,f,c
 16862  0017E6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16863  0017E8  22DA               	addwfc	fsr2h,f,c
 16864  0017EA  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 16865  0017F0  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 16866  0017F6  EC20  F043         	call	_NWK_GroupIsMember	;wreg free
 16867  0017FA  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 16868                           
 16869                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 16870  0017FC  0E00               	movlw	0
 16871  0017FE  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16872                           
 16873                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 16874  001800  EE20 F005          	lfsr	2,5
 16875  001804  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16876  001806  26D9               	addwf	fsr2l,f,c
 16877  001808  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16878  00180A  22DA               	addwfc	fsr2h,f,c
 16879  00180C  28DE               	incf	postinc2,w,c
 16880  00180E  E16C               	bnz	l15713
 16881  001810  28DE               	incf	postinc2,w,c
 16882  001812  A4D8               	btfss	status,2,c
 16883  001814  D069               	goto	l15713
 16884                           
 16885                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 16886  001816  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 16887  001818  B4D8               	btfsc	status,2,c
 16888  00181A  D031               	goto	l15711
 16889                           
 16890                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 16891  00181C  EE20 F001          	lfsr	2,1
 16892  001820  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16893  001822  26D9               	addwf	fsr2l,f,c
 16894  001824  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16895  001826  22DA               	addwfc	fsr2h,f,c
 16896  001828  50DF               	movf	indf2,w,c
 16897  00182A  0B0F               	andlw	15
 16898  00182C  0900               	iorlw	0
 16899  00182E  B4D8               	btfsc	status,2,c
 16900  001830  D002               	goto	u15820
 16901  001832  0E01               	movlw	1
 16902  001834  D001               	goto	u15830
 16903  001836                     u15820:
 16904  001836  0E00               	movlw	0
 16905  001838                     u15830:
 16906  001838  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16907                           
 16908                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 16909  00183A  0E01               	movlw	1
 16910  00183C  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16911  00183E  EE20 F001          	lfsr	2,1
 16912  001842  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16913  001844  26D9               	addwf	fsr2l,f,c
 16914  001846  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16915  001848  22DA               	addwfc	fsr2h,f,c
 16916  00184A  50DF               	movf	indf2,w,c
 16917  00184C  0B0F               	andlw	15
 16918  00184E  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 16919  001850  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 16920  001852  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 16921  001854  50DF               	movf	indf2,w,c
 16922  001856  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16923  001858  0BF0               	andlw	-16
 16924  00185A  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16925  00185C  6EDF               	movwf	indf2,c
 16926                           
 16927                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 16928  00185E  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16929  001864  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16930  00186A  38DF               	swapf	indf2,w,c
 16931  00186C  0B0F               	andlw	15
 16932  00186E  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16933  001870  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16934  001876  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16935  00187C  D030               	goto	L15
 16936  00187E                     l15711:
 16937                           
 16938                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 16939  00187E  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16940  001884  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16941  00188A  50DF               	movf	indf2,w,c
 16942  00188C  0B0F               	andlw	15
 16943  00188E  0900               	iorlw	0
 16944  001890  B4D8               	btfsc	status,2,c
 16945  001892  D002               	goto	u15840
 16946  001894  0E01               	movlw	1
 16947  001896  D001               	goto	u15850
 16948  001898                     u15840:
 16949  001898  0E00               	movlw	0
 16950  00189A                     u15850:
 16951  00189A  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16952                           
 16953                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 16954  00189C  0E01               	movlw	1
 16955  00189E  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16956  0018A0  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16957  0018A6  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16958  0018AC  50DF               	movf	indf2,w,c
 16959  0018AE  0B0F               	andlw	15
 16960  0018B0  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 16961  0018B2  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 16962  0018B4  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 16963  0018B6  50DF               	movf	indf2,w,c
 16964  0018B8  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16965  0018BA  0BF0               	andlw	-16
 16966  0018BC  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16967  0018BE  6EDF               	movwf	indf2,c
 16968                           
 16969                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 16970  0018C0  EE20 F001          	lfsr	2,1
 16971  0018C4  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16972  0018C6  26D9               	addwf	fsr2l,f,c
 16973  0018C8  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16974  0018CA  22DA               	addwfc	fsr2h,f,c
 16975  0018CC  38DF               	swapf	indf2,w,c
 16976  0018CE  0B0F               	andlw	15
 16977  0018D0  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16978  0018D2  EE20 F001          	lfsr	2,1
 16979  0018D6  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16980  0018D8  26D9               	addwf	fsr2l,f,c
 16981  0018DA  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16982  0018DC  22DA               	addwfc	fsr2h,f,c
 16983  0018DE                     L15:
 16984  0018DE  50DF               	movf	indf2,w,c
 16985  0018E0  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16986  0018E2  0BF0               	andlw	-16
 16987  0018E4  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16988  0018E6  D014               	goto	L14
 16989  0018E8                     l15713:
 16990                           
 16991                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 16992  0018E8  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 16993  0018EA  B4D8               	btfsc	status,2,c
 16994  0018EC  D00A               	goto	l15719
 16995                           
 16996                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 16997  0018EE  0E01               	movlw	1
 16998  0018F0  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16999                           
 17000                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 17001  0018F2  EE20 F009          	lfsr	2,9
 17002  0018F6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17003  0018F8  26D9               	addwf	fsr2l,f,c
 17004  0018FA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17005  0018FC  22DA               	addwfc	fsr2h,f,c
 17006  0018FE  84DF               	bsf	indf2,2,c
 17007                           
 17008                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 17009  001900  D008               	goto	l15721
 17010  001902                     l15719:
 17011                           
 17012                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 17013  001902  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17014  001908  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17015  00190E  0E23               	movlw	35
 17016  001910                     L14:
 17017  001910  6EDF               	movwf	indf2,c
 17018  001912                     l15721:
 17019                           
 17020                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 17021  001912  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 17022  001914  B4D8               	btfsc	status,2,c
 17023  001916  D008               	goto	l15725
 17024                           
 17025                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 17026  001918  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 17027  00191E  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 17028  001924  EC7C  F023         	call	_nwkTxBroadcastFrame	;wreg free
 17029  001928                     l15725:
 17030                           
 17031                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 17032  001928  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 17033  00192A  B4D8               	btfsc	status,2,c
 17034  00192C  0012               	return	
 17035                           
 17036                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 17037  00192E  EE20 F081          	lfsr	2,129
 17038  001932  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 17039  001934  26D9               	addwf	fsr2l,f,c
 17040  001936  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 17041  001938  22DA               	addwfc	fsr2h,f,c
 17042  00193A  0E02               	movlw	2
 17043  00193C  26DE               	addwf	postinc2,f,c
 17044  00193E  0E00               	movlw	0
 17045  001940  22DD               	addwfc	postdec2,f,c
 17046                           
 17047                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 17048  001942  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17049  001948  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17050  00194E  0E22               	movlw	34
 17051  001950  6EDF               	movwf	indf2,c
 17052  001952  0012               	return	
 17053  001954                     l15731:
 17054                           
 17055                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 17056  001954  EE20 F005          	lfsr	2,5
 17057  001958  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17058  00195A  26D9               	addwf	fsr2l,f,c
 17059  00195C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17060  00195E  22DA               	addwfc	fsr2h,f,c
 17061  001960  28DE               	incf	postinc2,w,c
 17062  001962  E121               	bnz	l15739
 17063  001964  28DE               	incf	postinc2,w,c
 17064  001966  A4D8               	btfss	status,2,c
 17065  001968  D01E               	goto	l15739
 17066  00196A  EE20 F00D          	lfsr	2,13
 17067  00196E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17068  001970  26D9               	addwf	fsr2l,f,c
 17069  001972  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17070  001974  22DA               	addwfc	fsr2h,f,c
 17071  001976  0101               	movlb	1	; () banked
 17072  001978  5100               	movf	_nwkIb& (0+255),w,b
 17073  00197A  18DE               	xorwf	postinc2,w,c
 17074  00197C  E104               	bnz	u15900
 17075  00197E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17076  001980  18DE               	xorwf	postinc2,w,c
 17077  001982  B4D8               	btfsc	status,2,c
 17078  001984  D010               	goto	l15739
 17079  001986                     u15900:
 17080                           
 17081                           ; BSR set to: 1
 17082  001986  EE20 F009          	lfsr	2,9
 17083  00198A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17084  00198C  26D9               	addwf	fsr2l,f,c
 17085  00198E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17086  001990  22DA               	addwfc	fsr2h,f,c
 17087  001992  B4DF               	btfsc	indf2,2,c
 17088  001994  D008               	goto	l15739
 17089                           
 17090                           ; BSR set to: 1
 17091                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 17092  001996  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 17093  00199C  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 17094  0019A2  EC7C  F023         	call	_nwkTxBroadcastFrame	;wreg free
 17095  0019A6                     l15739:
 17096                           
 17097                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 17098  0019A6  EE20 F00D          	lfsr	2,13
 17099  0019AA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17100  0019AC  26D9               	addwf	fsr2l,f,c
 17101  0019AE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17102  0019B0  22DA               	addwfc	fsr2h,f,c
 17103  0019B2  0101               	movlb	1	; () banked
 17104  0019B4  5100               	movf	_nwkIb& (0+255),w,b
 17105  0019B6  18DE               	xorwf	postinc2,w,c
 17106  0019B8  E104               	bnz	u15920
 17107  0019BA  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17108  0019BC  18DE               	xorwf	postinc2,w,c
 17109  0019BE  B4D8               	btfsc	status,2,c
 17110  0019C0  D00B               	goto	u15930
 17111  0019C2                     u15920:
 17112                           
 17113                           ; BSR set to: 1
 17114  0019C2  EE20 F00D          	lfsr	2,13
 17115  0019C6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17116  0019C8  26D9               	addwf	fsr2l,f,c
 17117  0019CA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17118  0019CC  22DA               	addwfc	fsr2h,f,c
 17119  0019CE  28DE               	incf	postinc2,w,c
 17120  0019D0  E10C               	bnz	l15745
 17121  0019D2  28DE               	incf	postinc2,w,c
 17122  0019D4  A4D8               	btfss	status,2,c
 17123  0019D6  D009               	goto	l15745
 17124  0019D8                     u15930:
 17125                           
 17126                           ; BSR set to: 1
 17127                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 17128  0019D8  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17129  0019DE  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17130  0019E4  0E22               	movlw	34
 17131  0019E6  6EDF               	movwf	indf2,c
 17132                           
 17133                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 17134  0019E8  0012               	return	
 17135  0019EA                     l15745:
 17136                           
 17137                           ; BSR set to: 1
 17138  0019EA  EE20 F005          	lfsr	2,5
 17139  0019EE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17140  0019F0  26D9               	addwf	fsr2l,f,c
 17141  0019F2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17142  0019F4  22DA               	addwfc	fsr2h,f,c
 17143  0019F6  5100               	movf	_nwkIb& (0+255),w,b
 17144  0019F8  18DE               	xorwf	postinc2,w,c
 17145  0019FA  E10C               	bnz	l2126
 17146  0019FC  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17147  0019FE  18DE               	xorwf	postinc2,w,c
 17148  001A00  A4D8               	btfss	status,2,c
 17149  001A02  0012               	return	
 17150                           
 17151                           ; BSR set to: 1
 17152                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 17153  001A04  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17154  001A0A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17155  001A10  0E23               	movlw	35
 17156  001A12  6EDF               	movwf	indf2,c
 17157  001A14                     l2126:
 17158  001A14  0012               	return		;funcret
 17159  001A16                     __end_of_nwkRxHandleReceivedFrame:
 17160                           	opt callstack 0
 17161                           
 17162 ;; *************** function _nwkTxBroadcastFrame *****************
 17163 ;; Defined at:
 17164 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 17165 ;; Parameters:    Size  Location     Type
 17166 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 17167 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 17170 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17171 ;; Return value:  Size  Location     Type
 17172 ;;                  1    wreg      void 
 17173 ;; Registers used:
 17174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17175 ;; Tracked objects:
 17176 ;;		On entry : 0/1
 17177 ;;		On exit  : 0/0
 17178 ;;		Unchanged: 0/0
 17179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17183 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17184 ;;Total ram usage:        5 bytes
 17185 ;; Hardware stack levels used:    1
 17186 ;; Hardware stack levels required when called:    9
 17187 ;; This function calls:
 17188 ;;		_memcpy
 17189 ;;		_nwkFrameAlloc
 17190 ;;		_rand
 17191 ;; This function is called by:
 17192 ;;		_nwkRxHandleReceivedFrame
 17193 ;; This function uses a non-reentrant model
 17194 ;;
 17195                           
 17196                           	psect	text105
 17197  0046F8                     __ptext105:
 17198                           	opt callstack 0
 17199  0046F8                     _nwkTxBroadcastFrame:
 17200                           	opt callstack 17
 17201                           
 17202                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 17203                           
 17204                           ;incstack = 0
 17205  0046F8  ECED  F032         	call	_nwkFrameAlloc	;wreg free
 17206  0046FC  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 17207  004702  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 17208  004708  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17209  00470A  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17210  00470C  B4D8               	btfsc	status,2,c
 17211  00470E  0012               	return	
 17212                           
 17213                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 17214  004710  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 17215  004716  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 17216  00471C  0E12               	movlw	18
 17217  00471E  6EDF               	movwf	indf2,c
 17218                           
 17219                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 17220  004720  EE20 F001          	lfsr	2,1
 17221  004724  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17222  004726  26D9               	addwf	fsr2l,f,c
 17223  004728  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17224  00472A  22DA               	addwfc	fsr2h,f,c
 17225  00472C  EE10 F001          	lfsr	1,1
 17226  004730  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17227  004732  26E1               	addwf	fsr1l,f,c
 17228  004734  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17229  004736  22E2               	addwfc	fsr1h,f,c
 17230  004738  006F FF7F FFE7     	movff	indf2,indf1
 17231                           
 17232                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 17233  00473E  EE20 F083          	lfsr	2,131
 17234  004742  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17235  004744  26D9               	addwf	fsr2l,f,c
 17236  004746  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17237  004748  22DA               	addwfc	fsr2h,f,c
 17238  00474A  0E00               	movlw	0
 17239  00474C  6EDF               	movwf	indf2,c
 17240                           
 17241                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 17242  00474E  EC24  F028         	call	_rand	;wreg free
 17243  004752  0E07               	movlw	7
 17244  004754  161A               	andwf	?_rand^0,f,c
 17245  004756  0E00               	movlw	0
 17246  004758  161B               	andwf	(?_rand+1)^0,f,c
 17247  00475A  0E01               	movlw	1
 17248  00475C  261A               	addwf	?_rand^0,f,c
 17249  00475E  0E00               	movlw	0
 17250  004760  221B               	addwfc	(?_rand+1)^0,f,c
 17251  004762  EE20 F084          	lfsr	2,132
 17252  004766  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17253  004768  26D9               	addwf	fsr2l,f,c
 17254  00476A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17255  00476C  22DA               	addwfc	fsr2h,f,c
 17256  00476E  0060  F06B  FFDE   	movff	?_rand,postinc2
 17257  004774  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 17258                           
 17259                           ; BSR set to: 1
 17260                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 17261  00477A  EE20 F087          	lfsr	2,135
 17262  00477E  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17263  004780  26D9               	addwf	fsr2l,f,c
 17264  004782  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17265  004784  22DA               	addwfc	fsr2h,f,c
 17266  004786  0E00               	movlw	0
 17267  004788  6EDE               	movwf	postinc2,c
 17268  00478A  0E00               	movlw	0
 17269  00478C  6EDD               	movwf	postdec2,c
 17270                           
 17271                           ; BSR set to: 1
 17272                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 17273  00478E  0E02               	movlw	2
 17274  004790  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 17275  004792  6E08               	movwf	memcpy@d1^0,c
 17276  004794  0E00               	movlw	0
 17277  004796  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17278  004798  6E09               	movwf	(memcpy@d1+1)^0,c
 17279  00479A  0E02               	movlw	2
 17280  00479C  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 17281  00479E  6E0A               	movwf	memcpy@s1^0,c
 17282  0047A0  0E00               	movlw	0
 17283  0047A2  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17284  0047A4  6E0B               	movwf	(memcpy@s1+1)^0,c
 17285  0047A6  EE20 F001          	lfsr	2,1
 17286  0047AA  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17287  0047AC  26D9               	addwf	fsr2l,f,c
 17288  0047AE  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17289  0047B0  22DA               	addwfc	fsr2h,f,c
 17290  0047B2  50DF               	movf	indf2,w,c
 17291  0047B4  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 17292  0047B6  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 17293  0047B8  6E0C               	movwf	memcpy@n^0,c
 17294  0047BA  6A0D               	clrf	(memcpy@n+1)^0,c
 17295  0047BC  ECE7  F039         	call	_memcpy	;wreg free
 17296                           
 17297                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 17298  0047C0  EE20 F002          	lfsr	2,2
 17299  0047C4  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17300  0047C6  26D9               	addwf	fsr2l,f,c
 17301  0047C8  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17302  0047CA  22DA               	addwfc	fsr2h,f,c
 17303  0047CC  0E41               	movlw	65
 17304  0047CE  6EDE               	movwf	postinc2,c
 17305  0047D0  0E88               	movlw	136
 17306  0047D2  6EDD               	movwf	postdec2,c
 17307                           
 17308                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 17309  0047D4  EE20 F007          	lfsr	2,7
 17310  0047D8  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17311  0047DA  26D9               	addwf	fsr2l,f,c
 17312  0047DC  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17313  0047DE  22DA               	addwfc	fsr2h,f,c
 17314  0047E0  0EFF               	movlw	255
 17315  0047E2  6EDE               	movwf	postinc2,c
 17316  0047E4  0EFF               	movlw	255
 17317  0047E6  6EDD               	movwf	postdec2,c
 17318                           
 17319                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 17320  0047E8  EE20 F005          	lfsr	2,5
 17321  0047EC  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17322  0047EE  26D9               	addwf	fsr2l,f,c
 17323  0047F0  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17324  0047F2  22DA               	addwfc	fsr2h,f,c
 17325  0047F4  EE10 F005          	lfsr	1,5
 17326  0047F8  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17327  0047FA  26E1               	addwf	fsr1l,f,c
 17328  0047FC  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17329  0047FE  22E2               	addwfc	fsr1h,f,c
 17330  004800  006F FF7B FFE6     	movff	postinc2,postinc1
 17331  004806  006F FF77 FFE5     	movff	postdec2,postdec1
 17332                           
 17333                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 17334  00480C  EE20 F009          	lfsr	2,9
 17335  004810  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17336  004812  26D9               	addwf	fsr2l,f,c
 17337  004814  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17338  004816  22DA               	addwfc	fsr2h,f,c
 17339  004818  0060  F403  FFDE   	movff	_nwkIb,postinc2
 17340  00481E  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 17341                           
 17342                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 17343  004824  0101               	movlb	1	; () banked
 17344  004826  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 17345  004828  EE20 F004          	lfsr	2,4
 17346  00482C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17347  00482E  26D9               	addwf	fsr2l,f,c
 17348  004830  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17349  004832  22DA               	addwfc	fsr2h,f,c
 17350  004834  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 17351  00483A  0012               	return		;funcret
 17352  00483C                     __end_of_nwkTxBroadcastFrame:
 17353                           	opt callstack 0
 17354                           
 17355 ;; *************** function _nwkRxRejectDuplicate *****************
 17356 ;; Defined at:
 17357 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 17360 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;  shift           1   23[COMRAM] unsigned char 
 17363 ;;  diff            1   25[COMRAM] unsigned char 
 17364 ;;  i               1   24[COMRAM] unsigned char 
 17365 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 17366 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 17367 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 17368 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 17369 ;; Return value:  Size  Location     Type
 17370 ;;                  1    wreg      _Bool 
 17371 ;; Registers used:
 17372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17373 ;; Tracked objects:
 17374 ;;		On entry : 0/1
 17375 ;;		On exit  : 0/0
 17376 ;;		Unchanged: 0/0
 17377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17379 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17381 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17382 ;;Total ram usage:       13 bytes
 17383 ;; Hardware stack levels used:    1
 17384 ;; Hardware stack levels required when called:    9
 17385 ;; This function calls:
 17386 ;;		_SYS_TimerStart
 17387 ;;		_nwkRouteRemove
 17388 ;; This function is called by:
 17389 ;;		_nwkRxHandleReceivedFrame
 17390 ;; This function uses a non-reentrant model
 17391 ;;
 17392                           
 17393                           	psect	text106
 17394  002A9C                     __ptext106:
 17395                           	opt callstack 0
 17396  002A9C                     _nwkRxRejectDuplicate:
 17397                           	opt callstack 17
 17398                           
 17399                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 17400                           
 17401                           ;incstack = 0
 17402  002A9C  0E00               	movlw	0
 17403  002A9E  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 17404  002AA0  0E00               	movlw	0
 17405  002AA2  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 17406                           
 17407                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 17408  002AA4  0E00               	movlw	0
 17409  002AA6  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 17410  002AA8                     l15113:
 17411                           
 17412                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 17413  002AA8  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 17414  002AAA  0D05               	mullw	5
 17415  002AAC  0EC0               	movlw	low _nwkRxDuplicateRejectionTable
 17416  002AAE  24F3               	addwf	243,w,c
 17417  002AB0  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 17418  002AB2  0E03               	movlw	high _nwkRxDuplicateRejectionTable
 17419  002AB4  20F4               	addwfc	prodh,w,c
 17420  002AB6  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 17421                           
 17422                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 17423  002AB8  EE20 F004          	lfsr	2,4
 17424  002ABC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17425  002ABE  26D9               	addwf	fsr2l,f,c
 17426  002AC0  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17427  002AC2  22DA               	addwfc	fsr2h,f,c
 17428  002AC4  50DF               	movf	indf2,w,c
 17429  002AC6  B4D8               	btfsc	status,2,c
 17430  002AC8  D0B3               	goto	l15153
 17431  002ACA  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 17432  002AD0  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 17433  002AD6  EE10 F00B          	lfsr	1,11
 17434  002ADA  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17435  002ADC  26E1               	addwf	fsr1l,f,c
 17436  002ADE  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17437  002AE0  22E2               	addwfc	fsr1h,f,c
 17438  002AE2  50DE               	movf	postinc2,w,c
 17439  002AE4  18E6               	xorwf	postinc1,w,c
 17440  002AE6  E103               	bnz	u14711
 17441  002AE8  50DE               	movf	postinc2,w,c
 17442  002AEA  18E6               	xorwf	postinc1,w,c
 17443  002AEC  A4D8               	btfss	status,2,c
 17444  002AEE                     u14711:
 17445  002AEE  D0A0               	goto	l15153
 17446                           
 17447                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 17448  002AF0  EE20 F00A          	lfsr	2,10
 17449  002AF4  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17450  002AF6  26D9               	addwf	fsr2l,f,c
 17451  002AF8  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17452  002AFA  22DA               	addwfc	fsr2h,f,c
 17453  002AFC  50DF               	movf	indf2,w,c
 17454  002AFE  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 17455  002B00  EE20 F002          	lfsr	2,2
 17456  002B04  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17457  002B06  26D9               	addwf	fsr2l,f,c
 17458  002B08  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17459  002B0A  22DA               	addwfc	fsr2h,f,c
 17460  002B0C  50DF               	movf	indf2,w,c
 17461  002B0E  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17462  002B10  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 17463  002B12  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17464  002B14  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 17465                           
 17466                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 17467  002B16  0E08               	movlw	8
 17468  002B18  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 17469  002B1A  D055               	goto	l15141
 17470                           
 17471                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 17472  002B1C  EE20 F003          	lfsr	2,3
 17473  002B20  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17474  002B22  26D9               	addwf	fsr2l,f,c
 17475  002B24  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17476  002B26  22DA               	addwfc	fsr2h,f,c
 17477  002B28  50DF               	movf	indf2,w,c
 17478  002B2A  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 17479  002B2C  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 17480  002B32  0E01               	movlw	1
 17481  002B34  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 17482  002B36  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17483  002B38  D002               	goto	u14734
 17484  002B3A                     u14735:
 17485  002B3A  90D8               	bcf	status,0,c
 17486  002B3C  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 17487  002B3E                     u14734:
 17488  002B3E  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 17489  002B40  D7FC               	goto	u14735
 17490  002B42  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 17491  002B44  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 17492  002B46  0900               	iorlw	0
 17493  002B48  B4D8               	btfsc	status,2,c
 17494  002B4A  D028               	goto	l15133
 17495                           
 17496                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 17497  002B4C  EE20 F005          	lfsr	2,5
 17498  002B50  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17499  002B52  26D9               	addwf	fsr2l,f,c
 17500  002B54  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17501  002B56  22DA               	addwfc	fsr2h,f,c
 17502  002B58  0101               	movlb	1	; () banked
 17503  002B5A  5100               	movf	_nwkIb& (0+255),w,b
 17504  002B5C  18DE               	xorwf	postinc2,w,c
 17505  002B5E  E11C               	bnz	l15129
 17506  002B60  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17507  002B62  18DE               	xorwf	postinc2,w,c
 17508  002B64  A4D8               	btfss	status,2,c
 17509  002B66  D018               	goto	l15129
 17510                           
 17511                           ; BSR set to: 1
 17512                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 17513  002B68  EE20 F00D          	lfsr	2,13
 17514  002B6C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17515  002B6E  26D9               	addwf	fsr2l,f,c
 17516  002B70  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17517  002B72  22DA               	addwfc	fsr2h,f,c
 17518  002B74  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 17519  002B7A  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 17520  002B80  EE20 F009          	lfsr	2,9
 17521  002B84  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17522  002B86  26D9               	addwf	fsr2l,f,c
 17523  002B88  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17524  002B8A  22DA               	addwfc	fsr2h,f,c
 17525  002B8C  0E00               	movlw	0
 17526  002B8E  B6DF               	btfsc	indf2,3,c
 17527  002B90  0E01               	movlw	1
 17528  002B92  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 17529  002B94  EC49  F041         	call	_nwkRouteRemove	;wreg free
 17530  002B98                     l15129:
 17531                           
 17532                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 17533  002B98  0E01               	movlw	1
 17534  002B9A  0012               	return	
 17535  002B9C                     l15133:
 17536                           
 17537                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 17538  002B9C  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 17539  002BA2  0E01               	movlw	1
 17540  002BA4  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17541  002BA6  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 17542  002BA8  D002               	goto	u14764
 17543  002BAA                     u14765:
 17544  002BAA  90D8               	bcf	status,0,c
 17545  002BAC  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17546  002BAE                     u14764:
 17547  002BAE  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 17548  002BB0  D7FC               	goto	u14765
 17549  002BB2  EE20 F003          	lfsr	2,3
 17550  002BB6  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17551  002BB8  26D9               	addwf	fsr2l,f,c
 17552  002BBA  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17553  002BBC  22DA               	addwfc	fsr2h,f,c
 17554  002BBE  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17555  002BC0  12DF               	iorwf	indf2,f,c
 17556  002BC2                     l15135:
 17557                           
 17558                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 17559  002BC2  0E00               	movlw	0
 17560  002BC4  0012               	return	
 17561  002BC6                     l15141:
 17562                           
 17563                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 17564  002BC6  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 17565  002BC8  0800               	sublw	0
 17566  002BCA  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 17567                           
 17568                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 17569  002BCC  EE20 F00A          	lfsr	2,10
 17570  002BD0  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17571  002BD2  26D9               	addwf	fsr2l,f,c
 17572  002BD4  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17573  002BD6  22DA               	addwfc	fsr2h,f,c
 17574  002BD8  EE10 F002          	lfsr	1,2
 17575  002BDC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17576  002BDE  26E1               	addwf	fsr1l,f,c
 17577  002BE0  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17578  002BE2  22E2               	addwfc	fsr1h,f,c
 17579  002BE4  006F FF7F FFE7     	movff	indf2,indf1
 17580                           
 17581                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 17582  002BEA  EE20 F003          	lfsr	2,3
 17583  002BEE  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17584  002BF0  26D9               	addwf	fsr2l,f,c
 17585  002BF2  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17586  002BF4  22DA               	addwfc	fsr2h,f,c
 17587  002BF6  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 17588  002BFC  EE10 F003          	lfsr	1,3
 17589  002C00  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17590  002C02  26E1               	addwf	fsr1l,f,c
 17591  002C04  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17592  002C06  22E2               	addwfc	fsr1h,f,c
 17593  002C08  50E7               	movf	indf1,w,c
 17594  002C0A  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17595  002C0C  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 17596  002C0E  D002               	goto	u14774
 17597  002C10                     u14775:
 17598  002C10  90D8               	bcf	status,0,c
 17599  002C12  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17600  002C14                     u14774:
 17601  002C14  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 17602  002C16  D7FC               	goto	u14775
 17603  002C18  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17604  002C1A  0901               	iorlw	1
 17605  002C1C  6EDF               	movwf	indf2,c
 17606                           
 17607                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 17608  002C1E  EE20 F004          	lfsr	2,4
 17609  002C22  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17610  002C24  26D9               	addwf	fsr2l,f,c
 17611  002C26  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17612  002C28  22DA               	addwfc	fsr2h,f,c
 17613  002C2A  0E01               	movlw	1
 17614  002C2C  6EDF               	movwf	indf2,c
 17615  002C2E  D7C9               	goto	l15135
 17616  002C30                     l15153:
 17617                           
 17618                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 17619  002C30  EE20 F004          	lfsr	2,4
 17620  002C34  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17621  002C36  26D9               	addwf	fsr2l,f,c
 17622  002C38  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17623  002C3A  22DA               	addwfc	fsr2h,f,c
 17624  002C3C  50DF               	movf	indf2,w,c
 17625  002C3E  A4D8               	btfss	status,2,c
 17626  002C40  D006               	goto	l15157
 17627                           
 17628                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 17629  002C42  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 17630  002C48  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 17631  002C4E                     l15157:
 17632                           
 17633                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 17634  002C4E  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 17635  002C50  0E09               	movlw	9
 17636  002C52  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 17637  002C54  D729               	goto	l15113
 17638                           
 17639                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 17640  002C56  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17641  002C58  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17642  002C5A  B4D8               	btfsc	status,2,c
 17643  002C5C  D79D               	goto	l15129
 17644                           
 17645                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 17646  002C5E  EE20 F00B          	lfsr	2,11
 17647  002C62  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17648  002C64  26D9               	addwf	fsr2l,f,c
 17649  002C66  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17650  002C68  22DA               	addwfc	fsr2h,f,c
 17651  002C6A  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 17652  002C70  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 17653  002C76  006F FF7B FFE6     	movff	postinc2,postinc1
 17654  002C7C  006F FF77 FFE5     	movff	postdec2,postdec1
 17655                           
 17656                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 17657  002C82  EE20 F00A          	lfsr	2,10
 17658  002C86  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17659  002C88  26D9               	addwf	fsr2l,f,c
 17660  002C8A  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17661  002C8C  22DA               	addwfc	fsr2h,f,c
 17662  002C8E  EE10 F002          	lfsr	1,2
 17663  002C92  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17664  002C94  26E1               	addwf	fsr1l,f,c
 17665  002C96  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17666  002C98  22E2               	addwfc	fsr1h,f,c
 17667  002C9A  006F FF7F FFE7     	movff	indf2,indf1
 17668                           
 17669                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 17670  002CA0  EE20 F003          	lfsr	2,3
 17671  002CA4  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17672  002CA6  26D9               	addwf	fsr2l,f,c
 17673  002CA8  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17674  002CAA  22DA               	addwfc	fsr2h,f,c
 17675  002CAC  0E01               	movlw	1
 17676  002CAE  6EDF               	movwf	indf2,c
 17677                           
 17678                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 17679  002CB0  EE20 F004          	lfsr	2,4
 17680  002CB4  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17681  002CB6  26D9               	addwf	fsr2l,f,c
 17682  002CB8  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17683  002CBA  22DA               	addwfc	fsr2h,f,c
 17684  002CBC  0E01               	movlw	1
 17685  002CBE  6EDF               	movwf	indf2,c
 17686                           
 17687                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 17688  002CC0  0EAF               	movlw	low _nwkRxDuplicateRejectionTimer
 17689  002CC2  6E10               	movwf	SYS_TimerStart@timer^0,c
 17690  002CC4  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 17691  002CC6  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 17692  002CC8  ECB9  F043         	call	_SYS_TimerStart	;wreg free
 17693  002CCC  D77A               	goto	l15135
 17694  002CCE                     __end_of_nwkRxRejectDuplicate:
 17695                           	opt callstack 0
 17696                           
 17697 ;; *************** function _SYS_TimerStart *****************
 17698 ;; Defined at:
 17699 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 17702 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;		None
 17705 ;; Return value:  Size  Location     Type
 17706 ;;                  1    wreg      void 
 17707 ;; Registers used:
 17708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17709 ;; Tracked objects:
 17710 ;;		On entry : 0/0
 17711 ;;		On exit  : 0/0
 17712 ;;		Unchanged: 0/0
 17713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17718 ;;Total ram usage:        2 bytes
 17719 ;; Hardware stack levels used:    1
 17720 ;; Hardware stack levels required when called:    8
 17721 ;; This function calls:
 17722 ;;		_SYS_TimerStarted
 17723 ;;		_placeTimer
 17724 ;; This function is called by:
 17725 ;;		_nwkRxDuplicateRejectionTimerHandler
 17726 ;;		_nwkRxRejectDuplicate
 17727 ;;		_nwkTxAckWaitTimerHandler
 17728 ;;		_nwkTxDelayTimerHandler
 17729 ;;		_nwkTxTaskHandler
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           	psect	text107
 17734  008772                     __ptext107:
 17735                           	opt callstack 0
 17736  008772                     _SYS_TimerStart:
 17737                           	opt callstack 19
 17738                           
 17739                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 17740                           
 17741                           ;incstack = 0
 17742  008772  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 17743  008778  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 17744  00877E  EC8A  F03F         	call	_SYS_TimerStarted	;wreg free
 17745  008782  0900               	iorlw	0
 17746  008784  A4D8               	btfss	status,2,c
 17747  008786  0012               	return	
 17748                           
 17749                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 17750  008788  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 17751  00878E  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 17752  008794  EC58  F01C         	call	_placeTimer	;wreg free
 17753  008798  0012               	return		;funcret
 17754  00879A                     __end_of_SYS_TimerStart:
 17755                           	opt callstack 0
 17756                           
 17757 ;; *************** function _placeTimer *****************
 17758 ;; Defined at:
 17759 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 17762 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 17765 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17766 ;;  timeout         4    7[COMRAM] unsigned long 
 17767 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 17768 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17769 ;; Return value:  Size  Location     Type
 17770 ;;                  1    wreg      void 
 17771 ;; Registers used:
 17772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17773 ;; Tracked objects:
 17774 ;;		On entry : 0/0
 17775 ;;		On exit  : 0/0
 17776 ;;		Unchanged: 0/0
 17777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17779 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17781 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17782 ;;Total ram usage:       14 bytes
 17783 ;; Hardware stack levels used:    1
 17784 ;; Hardware stack levels required when called:    7
 17785 ;; This function calls:
 17786 ;;		Nothing
 17787 ;; This function is called by:
 17788 ;;		_SYS_TimerStart
 17789 ;;		_SYS_TimerTaskHandler
 17790 ;; This function uses a non-reentrant model
 17791 ;;
 17792                           
 17793                           	psect	text108
 17794  0038B0                     __ptext108:
 17795                           	opt callstack 0
 17796  0038B0                     _placeTimer:
 17797                           	opt callstack 21
 17798                           
 17799                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 17800                           
 17801                           ;incstack = 0
 17802  0038B0  0100               	movlb	0	; () banked
 17803  0038B2  51E0               	movf	_timers& (0+255),w,b
 17804  0038B4  11E1               	iorwf	(_timers+1)& (0+255),w,b
 17805  0038B6  B4D8               	btfsc	status,2,c
 17806  0038B8  D0A8               	goto	l14723
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 17810  0038BA  0E00               	movlw	0
 17811  0038BC  6E0C               	movwf	placeTimer@prev^0,c
 17812  0038BE  0E00               	movlw	0
 17813  0038C0  6E0D               	movwf	(placeTimer@prev+1)^0,c
 17814                           
 17815                           ; BSR set to: 0
 17816                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 17817  0038C2  EE20 F006          	lfsr	2,6
 17818  0038C6  5002               	movf	placeTimer@timer^0,w,c
 17819  0038C8  26D9               	addwf	fsr2l,f,c
 17820  0038CA  5003               	movf	(placeTimer@timer+1)^0,w,c
 17821  0038CC  22DA               	addwfc	fsr2h,f,c
 17822  0038CE  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 17823  0038D4  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 17824  0038DA  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 17825  0038E0  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 17829  0038E6  0060  F380  F00E   	movff	_timers,placeTimer@t
 17830  0038EC  0060  F384  F00F   	movff	_timers+1,placeTimer@t+1
 17831  0038F2  D03F               	goto	l14709
 17832  0038F4                     l14699:
 17833                           
 17834                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 17835  0038F4  EE20 F002          	lfsr	2,2
 17836  0038F8  500E               	movf	placeTimer@t^0,w,c
 17837  0038FA  26D9               	addwf	fsr2l,f,c
 17838  0038FC  500F               	movf	(placeTimer@t+1)^0,w,c
 17839  0038FE  22DA               	addwfc	fsr2h,f,c
 17840  003900  50DE               	movf	postinc2,w,c
 17841  003902  5C08               	subwf	placeTimer@timeout^0,w,c
 17842  003904  50DE               	movf	postinc2,w,c
 17843  003906  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 17844  003908  50DE               	movf	postinc2,w,c
 17845  00390A  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 17846  00390C  50DE               	movf	postinc2,w,c
 17847  00390E  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 17848  003910  B0D8               	btfsc	status,0,c
 17849  003912  D00F               	goto	l14705
 17850                           
 17851                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 17852  003914  EE20 F002          	lfsr	2,2
 17853  003918  500E               	movf	placeTimer@t^0,w,c
 17854  00391A  26D9               	addwf	fsr2l,f,c
 17855  00391C  500F               	movf	(placeTimer@t+1)^0,w,c
 17856  00391E  22DA               	addwfc	fsr2h,f,c
 17857  003920  5008               	movf	placeTimer@timeout^0,w,c
 17858  003922  5EDE               	subwf	postinc2,f,c
 17859  003924  5009               	movf	(placeTimer@timeout+1)^0,w,c
 17860  003926  5ADE               	subwfb	postinc2,f,c
 17861  003928  500A               	movf	(placeTimer@timeout+2)^0,w,c
 17862  00392A  5ADE               	subwfb	postinc2,f,c
 17863  00392C  500B               	movf	(placeTimer@timeout+3)^0,w,c
 17864  00392E  5ADE               	subwfb	postinc2,f,c
 17865                           
 17866                           ;../sys/sys_src/sysTimer.c: 158:          break;
 17867  003930  D024               	goto	u14320
 17868  003932                     l14705:
 17869                           
 17870                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 17871  003932  EE20 F002          	lfsr	2,2
 17872  003936  500E               	movf	placeTimer@t^0,w,c
 17873  003938  26D9               	addwf	fsr2l,f,c
 17874  00393A  500F               	movf	(placeTimer@t+1)^0,w,c
 17875  00393C  22DA               	addwfc	fsr2h,f,c
 17876  00393E  50DE               	movf	postinc2,w,c
 17877  003940  5E08               	subwf	placeTimer@timeout^0,f,c
 17878  003942  50DE               	movf	postinc2,w,c
 17879  003944  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 17880  003946  50DE               	movf	postinc2,w,c
 17881  003948  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 17882  00394A  50DD               	movf	postdec2,w,c
 17883  00394C  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 17884                           
 17885                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 17886  00394E  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 17887  003954  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 17888                           
 17889                           ;../sys/sys_src/sysTimer.c: 164:     }
 17890  00395A  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 17891  003960  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 17892  003966  006F FF78  F00E    	movff	postinc2,placeTimer@t
 17893  00396C  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 17894  003972                     l14709:
 17895  003972  500E               	movf	placeTimer@t^0,w,c
 17896  003974  100F               	iorwf	(placeTimer@t+1)^0,w,c
 17897  003976  A4D8               	btfss	status,2,c
 17898  003978  D7BD               	goto	l14699
 17899  00397A                     u14320:
 17900                           
 17901                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 17902  00397A  EE20 F002          	lfsr	2,2
 17903  00397E  5002               	movf	placeTimer@timer^0,w,c
 17904  003980  26D9               	addwf	fsr2l,f,c
 17905  003982  5003               	movf	(placeTimer@timer+1)^0,w,c
 17906  003984  22DA               	addwfc	fsr2h,f,c
 17907  003986  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 17908  00398C  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 17909  003992  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 17910  003998  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 17911                           
 17912                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 17913  00399E  500C               	movf	placeTimer@prev^0,w,c
 17914  0039A0  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 17915  0039A2  B4D8               	btfsc	status,2,c
 17916  0039A4  D01F               	goto	l14719
 17917                           
 17918                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 17919  0039A6  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 17920  0039AC  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 17921  0039B2  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 17922  0039B8  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 17923  0039BE  006F FF7B FFE6     	movff	postinc2,postinc1
 17924  0039C4  006F FF77 FFE5     	movff	postdec2,postdec1
 17925                           
 17926                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 17927  0039CA  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 17928  0039D0  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 17929  0039D6  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 17930  0039DC  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 17931                           
 17932                           ;../sys/sys_src/sysTimer.c: 172:     }
 17933  0039E2  0012               	return	
 17934  0039E4                     l14719:
 17935                           
 17936                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 17937  0039E4  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 17938  0039EA  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 17939  0039F0  0060  F383  FFDE   	movff	_timers,postinc2
 17940  0039F6  0060  F387  FFDD   	movff	_timers+1,postdec2
 17941  0039FC                     l14721:
 17942                           
 17943                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 17944  0039FC  0060  F008  F0E0   	movff	placeTimer@timer,_timers
 17945  003A02  0060  F00C  F0E1   	movff	placeTimer@timer+1,_timers+1
 17946  003A08  0012               	return	
 17947  003A0A                     l14723:
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 17951  003A0A  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 17952  003A10  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 17953  003A16  0E00               	movlw	0
 17954  003A18  6EDE               	movwf	postinc2,c
 17955  003A1A  0E00               	movlw	0
 17956  003A1C  6EDD               	movwf	postdec2,c
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 17960  003A1E  EE20 F006          	lfsr	2,6
 17961  003A22  5002               	movf	placeTimer@timer^0,w,c
 17962  003A24  26D9               	addwf	fsr2l,f,c
 17963  003A26  5003               	movf	(placeTimer@timer+1)^0,w,c
 17964  003A28  22DA               	addwfc	fsr2h,f,c
 17965  003A2A  EE10 F002          	lfsr	1,2
 17966  003A2E  5002               	movf	placeTimer@timer^0,w,c
 17967  003A30  26E1               	addwf	fsr1l,f,c
 17968  003A32  5003               	movf	(placeTimer@timer+1)^0,w,c
 17969  003A34  22E2               	addwfc	fsr1h,f,c
 17970  003A36  006F FF7B FFE6     	movff	postinc2,postinc1
 17971  003A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 17972  003A42  006F FF7B FFE6     	movff	postinc2,postinc1
 17973  003A48  006F FF7B FFE6     	movff	postinc2,postinc1
 17974  003A4E  D7D6               	goto	l14721
 17975  003A50                     __end_of_placeTimer:
 17976                           	opt callstack 0
 17977                           
 17978 ;; *************** function _SYS_TimerStarted *****************
 17979 ;; Defined at:
 17980 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 17981 ;; Parameters:    Size  Location     Type
 17982 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 17983 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17984 ;; Auto vars:     Size  Location     Type
 17985 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 17986 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17987 ;; Return value:  Size  Location     Type
 17988 ;;                  1    wreg      _Bool 
 17989 ;; Registers used:
 17990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17991 ;; Tracked objects:
 17992 ;;		On entry : 0/0
 17993 ;;		On exit  : 0/0
 17994 ;;		Unchanged: 0/0
 17995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18000 ;;Total ram usage:        4 bytes
 18001 ;; Hardware stack levels used:    1
 18002 ;; Hardware stack levels required when called:    7
 18003 ;; This function calls:
 18004 ;;		Nothing
 18005 ;; This function is called by:
 18006 ;;		_SYS_TimerStart
 18007 ;; This function uses a non-reentrant model
 18008 ;;
 18009                           
 18010                           	psect	text109
 18011  007F14                     __ptext109:
 18012                           	opt callstack 0
 18013  007F14                     _SYS_TimerStarted:
 18014                           	opt callstack 19
 18015                           
 18016                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 18017                           
 18018                           ;incstack = 0
 18019  007F14  0060  F380  F004   	movff	_timers,SYS_TimerStarted@t
 18020  007F1A  0060  F384  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 18021  007F20  D015               	goto	l14685
 18022  007F22                     l14677:
 18023                           
 18024                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 18025  007F22  5002               	movf	SYS_TimerStarted@timer^0,w,c
 18026  007F24  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 18027  007F26  E106               	bnz	l14683
 18028  007F28  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 18029  007F2A  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 18030  007F2C  A4D8               	btfss	status,2,c
 18031  007F2E  D002               	goto	l14683
 18032                           
 18033                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 18034  007F30  0E01               	movlw	1
 18035  007F32  0012               	return	
 18036  007F34                     l14683:
 18037  007F34  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 18038  007F3A  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 18039  007F40  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 18040  007F46  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 18041  007F4C                     l14685:
 18042  007F4C  5004               	movf	SYS_TimerStarted@t^0,w,c
 18043  007F4E  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 18044  007F50  A4D8               	btfss	status,2,c
 18045  007F52  D7E7               	goto	l14677
 18046                           
 18047                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 18048  007F54  0E00               	movlw	0
 18049  007F56  0012               	return		;funcret
 18050  007F58                     __end_of_SYS_TimerStarted:
 18051                           	opt callstack 0
 18052                           
 18053 ;; *************** function _nwkRouteFrameReceived *****************
 18054 ;; Defined at:
 18055 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 18058 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18059 ;; Auto vars:     Size  Location     Type
 18060 ;;  discovery       1   16[COMRAM] _Bool 
 18061 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 18062 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18063 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 18064 ;;		 -> nwkRouteTable(70), NULL(0), 
 18065 ;; Return value:  Size  Location     Type
 18066 ;;                  1    wreg      void 
 18067 ;; Registers used:
 18068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18069 ;; Tracked objects:
 18070 ;;		On entry : 3F/1
 18071 ;;		On exit  : 0/0
 18072 ;;		Unchanged: 0/0
 18073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18075 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18077 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18078 ;;Total ram usage:       12 bytes
 18079 ;; Hardware stack levels used:    1
 18080 ;; Hardware stack levels required when called:    8
 18081 ;; This function calls:
 18082 ;;		_NWK_RouteFindEntry
 18083 ;;		_NWK_RouteNewEntry
 18084 ;; This function is called by:
 18085 ;;		_nwkRxHandleReceivedFrame
 18086 ;; This function uses a non-reentrant model
 18087 ;;
 18088                           
 18089                           	psect	text110
 18090  0036CE                     __ptext110:
 18091                           	opt callstack 0
 18092  0036CE                     _nwkRouteFrameReceived:
 18093                           	opt callstack 18
 18094                           
 18095                           ; BSR set to: 1
 18096                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 18097                           
 18098                           ;incstack = 0
 18099  0036CE  0E02               	movlw	2
 18100  0036D0  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 18101  0036D2  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 18102  0036D4  0E00               	movlw	0
 18103  0036D6  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 18104  0036D8  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 18105                           
 18106                           ; BSR set to: 1
 18107                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 18108  0036DA  EE20 F007          	lfsr	2,7
 18109  0036DE  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18110  0036E0  26D9               	addwf	fsr2l,f,c
 18111  0036E2  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18112  0036E4  22DA               	addwfc	fsr2h,f,c
 18113  0036E6  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 18114  0036EC  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 18115  0036F2  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 18116  0036F4  D015               	goto	l15001
 18117                           
 18118                           ; BSR set to: 1
 18119  0036F6  EE20 F00B          	lfsr	2,11
 18120  0036FA  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18121  0036FC  26D9               	addwf	fsr2l,f,c
 18122  0036FE  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18123  003700  22DA               	addwfc	fsr2h,f,c
 18124  003702  EE10 F007          	lfsr	1,7
 18125  003706  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18126  003708  26E1               	addwf	fsr1l,f,c
 18127  00370A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18128  00370C  22E2               	addwfc	fsr1h,f,c
 18129  00370E  50DE               	movf	postinc2,w,c
 18130  003710  18E6               	xorwf	postinc1,w,c
 18131  003712  E105               	bnz	u14520
 18132  003714  50DE               	movf	postinc2,w,c
 18133  003716  18E6               	xorwf	postinc1,w,c
 18134  003718  A4D8               	btfss	status,2,c
 18135  00371A  0012               	return	
 18136  00371C  D001               	goto	l15001
 18137  00371E                     u14520:
 18138  00371E  0012               	return	
 18139  003720                     l15001:
 18140                           
 18141                           ; BSR set to: 1
 18142                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 18143  003720  EE20 F003          	lfsr	2,3
 18144  003724  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18145  003726  26D9               	addwf	fsr2l,f,c
 18146  003728  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18147  00372A  22DA               	addwfc	fsr2h,f,c
 18148  00372C  28DE               	incf	postinc2,w,c
 18149  00372E  E103               	bnz	l15005
 18150  003730  28DE               	incf	postinc2,w,c
 18151  003732  B4D8               	btfsc	status,2,c
 18152  003734  0012               	return	
 18153  003736                     l15005:
 18154                           
 18155                           ; BSR set to: 1
 18156                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 18157  003736  EE20 F00B          	lfsr	2,11
 18158  00373A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18159  00373C  26D9               	addwf	fsr2l,f,c
 18160  00373E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18161  003740  22DA               	addwfc	fsr2h,f,c
 18162  003742  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 18163  003748  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 18164  00374E  0E00               	movlw	0
 18165  003750  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 18166  003752  EC2F  F03B         	call	_NWK_RouteFindEntry	;wreg free
 18167  003756  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 18168  00375C  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 18169                           
 18170                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 18171  003762  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18172  003764  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18173  003766  B4D8               	btfsc	status,2,c
 18174  003768  D067               	goto	l15027
 18175                           
 18176                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 18177  00376A  0E00               	movlw	0
 18178  00376C  6E12               	movwf	_nwkRouteFrameReceived$4119^0,c
 18179  00376E  EE20 F005          	lfsr	2,5
 18180  003772  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18181  003774  26D9               	addwf	fsr2l,f,c
 18182  003776  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18183  003778  22DA               	addwfc	fsr2h,f,c
 18184  00377A  28DE               	incf	postinc2,w,c
 18185  00377C  E113               	bnz	l1933
 18186  00377E  28DE               	incf	postinc2,w,c
 18187  003780  A4D8               	btfss	status,2,c
 18188  003782  D010               	goto	l1933
 18189  003784  EE20 F00D          	lfsr	2,13
 18190  003788  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18191  00378A  26D9               	addwf	fsr2l,f,c
 18192  00378C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18193  00378E  22DA               	addwfc	fsr2h,f,c
 18194  003790  0101               	movlb	1	; () banked
 18195  003792  5100               	movf	_nwkIb& (0+255),w,b
 18196  003794  18DE               	xorwf	postinc2,w,c
 18197  003796  E106               	bnz	l1933
 18198  003798  5101               	movf	(_nwkIb+1)& (0+255),w,b
 18199  00379A  18DE               	xorwf	postinc2,w,c
 18200  00379C  A4D8               	btfss	status,2,c
 18201  00379E  D002               	goto	l1933
 18202                           
 18203                           ; BSR set to: 1
 18204  0037A0  0E01               	movlw	1
 18205  0037A2  6E12               	movwf	_nwkRouteFrameReceived$4119^0,c
 18206  0037A4                     l1933:
 18207  0037A4  5012               	movf	_nwkRouteFrameReceived$4119^0,w,c
 18208  0037A6  B4D8               	btfsc	status,2,c
 18209  0037A8  D002               	goto	u14570
 18210  0037AA  0E01               	movlw	1
 18211  0037AC  D001               	goto	u14580
 18212  0037AE                     u14570:
 18213  0037AE  0E00               	movlw	0
 18214  0037B0                     u14580:
 18215  0037B0  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 18216                           
 18217                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 18218  0037B2  EE20 F007          	lfsr	2,7
 18219  0037B6  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18220  0037B8  26D9               	addwf	fsr2l,f,c
 18221  0037BA  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18222  0037BC  22DA               	addwfc	fsr2h,f,c
 18223  0037BE  EE10 F003          	lfsr	1,3
 18224  0037C2  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18225  0037C4  26E1               	addwf	fsr1l,f,c
 18226  0037C6  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18227  0037C8  22E2               	addwfc	fsr1h,f,c
 18228  0037CA  50DE               	movf	postinc2,w,c
 18229  0037CC  18E6               	xorwf	postinc1,w,c
 18230  0037CE  E104               	bnz	u14590
 18231  0037D0  50DE               	movf	postinc2,w,c
 18232  0037D2  18E6               	xorwf	postinc1,w,c
 18233  0037D4  B4D8               	btfsc	status,2,c
 18234  0037D6  D010               	goto	u14600
 18235  0037D8                     u14590:
 18236  0037D8  EE20 F083          	lfsr	2,131
 18237  0037DC  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 18238  0037DE  26D9               	addwf	fsr2l,f,c
 18239  0037E0  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 18240  0037E2  22DA               	addwfc	fsr2h,f,c
 18241  0037E4  EE10 F006          	lfsr	1,6
 18242  0037E8  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18243  0037EA  26E1               	addwf	fsr1l,f,c
 18244  0037EC  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18245  0037EE  22E2               	addwfc	fsr1h,f,c
 18246  0037F0  50DE               	movf	postinc2,w,c
 18247  0037F2  5CE6               	subwf	postinc1,w,c
 18248  0037F4  A0D8               	btfss	status,0,c
 18249  0037F6  D003               	goto	u14610
 18250  0037F8                     u14600:
 18251  0037F8  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 18252  0037FA  B4D8               	btfsc	status,2,c
 18253  0037FC  D049               	goto	l15033
 18254  0037FE                     u14610:
 18255                           
 18256                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 18257  0037FE  EE20 F007          	lfsr	2,7
 18258  003802  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18259  003804  26D9               	addwf	fsr2l,f,c
 18260  003806  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18261  003808  22DA               	addwfc	fsr2h,f,c
 18262  00380A  EE10 F003          	lfsr	1,3
 18263  00380E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18264  003810  26E1               	addwf	fsr1l,f,c
 18265  003812  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18266  003814  22E2               	addwfc	fsr1h,f,c
 18267  003816  006F FF7B FFE6     	movff	postinc2,postinc1
 18268  00381C  006F FF77 FFE5     	movff	postdec2,postdec1
 18269                           
 18270                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 18271  003822  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 18272  003828  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 18273  00382E  50DF               	movf	indf2,w,c
 18274  003830  0B0F               	andlw	-241
 18275  003832  0930               	iorlw	48
 18276  003834  6EDF               	movwf	indf2,c
 18277  003836  D02C               	goto	l15033
 18278  003838                     l15027:
 18279                           
 18280                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 18281  003838  EC0F  F031         	call	_NWK_RouteNewEntry	;wreg free
 18282  00383C  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 18283  003842  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 18284                           
 18285                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 18286  003848  EE20 F00B          	lfsr	2,11
 18287  00384C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18288  00384E  26D9               	addwf	fsr2l,f,c
 18289  003850  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18290  003852  22DA               	addwfc	fsr2h,f,c
 18291  003854  EE10 F001          	lfsr	1,1
 18292  003858  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18293  00385A  26E1               	addwf	fsr1l,f,c
 18294  00385C  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18295  00385E  22E2               	addwfc	fsr1h,f,c
 18296  003860  006F FF7B FFE6     	movff	postinc2,postinc1
 18297  003866  006F FF77 FFE5     	movff	postdec2,postdec1
 18298                           
 18299                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 18300  00386C  EE20 F007          	lfsr	2,7
 18301  003870  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18302  003872  26D9               	addwf	fsr2l,f,c
 18303  003874  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18304  003876  22DA               	addwfc	fsr2h,f,c
 18305  003878  EE10 F003          	lfsr	1,3
 18306  00387C  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18307  00387E  26E1               	addwf	fsr1l,f,c
 18308  003880  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18309  003882  22E2               	addwfc	fsr1h,f,c
 18310  003884  006F FF7B FFE6     	movff	postinc2,postinc1
 18311  00388A  006F FF77 FFE5     	movff	postdec2,postdec1
 18312  003890                     l15033:
 18313                           
 18314                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 18315  003890  EE20 F083          	lfsr	2,131
 18316  003894  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 18317  003896  26D9               	addwf	fsr2l,f,c
 18318  003898  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 18319  00389A  22DA               	addwfc	fsr2h,f,c
 18320  00389C  EE10 F006          	lfsr	1,6
 18321  0038A0  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18322  0038A2  26E1               	addwf	fsr1l,f,c
 18323  0038A4  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18324  0038A6  22E2               	addwfc	fsr1h,f,c
 18325  0038A8  006F FF7F FFE7     	movff	indf2,indf1
 18326  0038AE  0012               	return		;funcret
 18327  0038B0                     __end_of_nwkRouteFrameReceived:
 18328                           	opt callstack 0
 18329                           
 18330 ;; *************** function _NWK_RouteNewEntry *****************
 18331 ;; Defined at:
 18332 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 18333 ;; Parameters:    Size  Location     Type
 18334 ;;		None
 18335 ;; Auto vars:     Size  Location     Type
 18336 ;;  i               1    5[COMRAM] unsigned char 
 18337 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 18338 ;;		 -> nwkRouteTable(70), NULL(0), 
 18339 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 18340 ;;		 -> nwkRouteTable(70), 
 18341 ;; Return value:  Size  Location     Type
 18342 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 18343 ;; Registers used:
 18344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18345 ;; Tracked objects:
 18346 ;;		On entry : 0/1
 18347 ;;		On exit  : 0/0
 18348 ;;		Unchanged: 0/0
 18349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18351 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18353 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18354 ;;Total ram usage:        9 bytes
 18355 ;; Hardware stack levels used:    1
 18356 ;; Hardware stack levels required when called:    7
 18357 ;; This function calls:
 18358 ;;		Nothing
 18359 ;; This function is called by:
 18360 ;;		_nwkRouteFrameReceived
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           	psect	text111
 18365  00621E                     __ptext111:
 18366                           	opt callstack 0
 18367  00621E                     _NWK_RouteNewEntry:
 18368                           	opt callstack 18
 18369                           
 18370                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 18371                           
 18372                           ;incstack = 0
 18373  00621E  0E84               	movlw	low _nwkRouteTable
 18374  006220  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 18375  006222  0E02               	movlw	high _nwkRouteTable
 18376  006224  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 18377                           
 18378                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 18379  006226  0E00               	movlw	0
 18380  006228  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 18381  00622A  0E00               	movlw	0
 18382  00622C  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 18383                           
 18384                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 18385  00622E  0E00               	movlw	0
 18386  006230  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 18387  006232                     l14839:
 18388                           
 18389                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 18390  006232  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 18391  006238  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 18392  00623E  B0DF               	btfsc	indf2,0,c
 18393  006240  D02A               	goto	l14853
 18394                           
 18395                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 18396  006242  EE20 F005          	lfsr	2,5
 18397  006246  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 18398  006248  26D9               	addwf	fsr2l,f,c
 18399  00624A  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 18400  00624C  22DA               	addwfc	fsr2h,f,c
 18401  00624E  50DF               	movf	indf2,w,c
 18402  006250  A4D8               	btfss	status,2,c
 18403  006252  D007               	goto	l14847
 18404                           
 18405                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 18406  006254  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 18407  00625A  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 18408                           
 18409                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 18410  006260  D022               	goto	u14480
 18411  006262                     l14847:
 18412                           
 18413                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 18414  006262  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18415  006264  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18416  006266  B4D8               	btfsc	status,2,c
 18417  006268  D010               	goto	u14470
 18418  00626A  EE20 F005          	lfsr	2,5
 18419  00626E  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18420  006270  26D9               	addwf	fsr2l,f,c
 18421  006272  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18422  006274  22DA               	addwfc	fsr2h,f,c
 18423  006276  EE10 F005          	lfsr	1,5
 18424  00627A  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 18425  00627C  26E1               	addwf	fsr1l,f,c
 18426  00627E  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 18427  006280  22E2               	addwfc	fsr1h,f,c
 18428  006282  50DE               	movf	postinc2,w,c
 18429  006284  5CE6               	subwf	postinc1,w,c
 18430  006286  B0D8               	btfsc	status,0,c
 18431  006288  D006               	goto	l14853
 18432  00628A                     u14470:
 18433                           
 18434                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 18435  00628A  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 18436  006290  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 18437  006296                     l14853:
 18438  006296  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 18439  006298  0E07               	movlw	7
 18440  00629A  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 18441  00629C  0E00               	movlw	0
 18442  00629E  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 18443  0062A0  0E09               	movlw	9
 18444  0062A2  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 18445  0062A4  D7C6               	goto	l14839
 18446  0062A6                     u14480:
 18447                           
 18448                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 18449  0062A6  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 18450  0062AC  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 18451  0062B2  92DF               	bcf	indf2,1,c
 18452                           
 18453                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 18454  0062B4  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 18455  0062BA  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 18456  0062C0  50DF               	movf	indf2,w,c
 18457  0062C2  0B0F               	andlw	-241
 18458  0062C4  0930               	iorlw	48
 18459  0062C6  6EDF               	movwf	indf2,c
 18460                           
 18461                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 18462  0062C8  EE20 F005          	lfsr	2,5
 18463  0062CC  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18464  0062CE  26D9               	addwf	fsr2l,f,c
 18465  0062D0  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18466  0062D2  22DA               	addwfc	fsr2h,f,c
 18467  0062D4  0E80               	movlw	128
 18468  0062D6  6EDF               	movwf	indf2,c
 18469                           
 18470                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 18471  0062D8  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 18472  0062DE  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 18473  0062E4  0012               	return		;funcret
 18474  0062E6                     __end_of_NWK_RouteNewEntry:
 18475                           	opt callstack 0
 18476                           
 18477 ;; *************** function _nwkRxHandleIndication *****************
 18478 ;; Defined at:
 18479 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;  frame           2  117[BANK0 ] PTR struct NwkFrame_t
 18482 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18483 ;; Auto vars:     Size  Location     Type
 18484 ;;  ack             1  121[BANK0 ] _Bool 
 18485 ;; Return value:  Size  Location     Type
 18486 ;;                  1    wreg      void 
 18487 ;; Registers used:
 18488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18489 ;; Tracked objects:
 18490 ;;		On entry : 2/1
 18491 ;;		On exit  : 0/0
 18492 ;;		Unchanged: 0/0
 18493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18496 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18497 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18498 ;;Total ram usage:        5 bytes
 18499 ;; Hardware stack levels used:    1
 18500 ;; Hardware stack levels required when called:   18
 18501 ;; This function calls:
 18502 ;;		_nwkRxIndicateFrame
 18503 ;;		_nwkRxSendAck
 18504 ;; This function is called by:
 18505 ;;		_nwkRxTaskHandler
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           	psect	text112
 18510  005FBA                     __ptext112:
 18511                           	opt callstack 0
 18512  005FBA                     _nwkRxHandleIndication:
 18513                           	opt callstack 9
 18514                           
 18515                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 18516                           
 18517                           ;incstack = 0
 18518  005FBA  0E00               	movlw	0
 18519  005FBC  0101               	movlb	1	; () banked
 18520  005FBE  6F61               	movwf	_nwkRxAckControl& (0+255),b
 18521                           
 18522                           ; BSR set to: 1
 18523                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 18524  005FC0  0060  F354  F0BB   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 18525  005FC6  0060  F358  F0BC   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 18526  005FCC  EC71  F018         	call	_nwkRxIndicateFrame	;wreg free
 18527  005FD0  0100               	movlb	0	; () banked
 18528  005FD2  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 18532  005FD4  EE20 F00B          	lfsr	2,11
 18533  005FD8  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18534  005FDA  26D9               	addwf	fsr2l,f,c
 18535  005FDC  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18536  005FDE  22DA               	addwfc	fsr2h,f,c
 18537  005FE0  B0DF               	btfsc	indf2,0,c
 18538  005FE2  D002               	goto	l15757
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 18542  005FE4  0E00               	movlw	0
 18543  005FE6  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18544  005FE8                     l15757:
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 18548  005FE8  EE20 F007          	lfsr	2,7
 18549  005FEC  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18550  005FEE  26D9               	addwf	fsr2l,f,c
 18551  005FF0  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18552  005FF2  22DA               	addwfc	fsr2h,f,c
 18553  005FF4  28DE               	incf	postinc2,w,c
 18554  005FF6  E11C               	bnz	l15765
 18555  005FF8  28DE               	incf	postinc2,w,c
 18556  005FFA  A4D8               	btfss	status,2,c
 18557  005FFC  D019               	goto	l15765
 18558                           
 18559                           ; BSR set to: 0
 18560  005FFE  EE20 F00F          	lfsr	2,15
 18561  006002  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18562  006004  26D9               	addwf	fsr2l,f,c
 18563  006006  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18564  006008  22DA               	addwfc	fsr2h,f,c
 18565  00600A  0101               	movlb	1	; () banked
 18566  00600C  5100               	movf	_nwkIb& (0+255),w,b
 18567  00600E  18DE               	xorwf	postinc2,w,c
 18568  006010  E10F               	bnz	l15765
 18569  006012  5101               	movf	(_nwkIb+1)& (0+255),w,b
 18570  006014  18DE               	xorwf	postinc2,w,c
 18571  006016  A4D8               	btfss	status,2,c
 18572  006018  D00B               	goto	l15765
 18573                           
 18574                           ; BSR set to: 1
 18575  00601A  0100               	movlb	0	; () banked
 18576  00601C  EE20 F00B          	lfsr	2,11
 18577  006020  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18578  006022  26D9               	addwf	fsr2l,f,c
 18579  006024  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18580  006026  22DA               	addwfc	fsr2h,f,c
 18581  006028  B6DF               	btfsc	indf2,3,c
 18582  00602A  D002               	goto	l15765
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 18586  00602C  0E01               	movlw	1
 18587  00602E  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18588  006030                     l15765:
 18589                           
 18590                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 18591  006030  0100               	movlb	0	; () banked
 18592  006032  EE20 F005          	lfsr	2,5
 18593  006036  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18594  006038  26D9               	addwf	fsr2l,f,c
 18595  00603A  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18596  00603C  22DA               	addwfc	fsr2h,f,c
 18597  00603E  28DE               	incf	postinc2,w,c
 18598  006040  E105               	bnz	l15769
 18599  006042  28DE               	incf	postinc2,w,c
 18600  006044  A4D8               	btfss	status,2,c
 18601  006046  D002               	goto	l15769
 18602                           
 18603                           ; BSR set to: 0
 18604                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 18605  006048  0E00               	movlw	0
 18606  00604A  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18607  00604C                     l15769:
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 18611  00604C  0101               	movlb	1	; () banked
 18612  00604E  2900               	incf	_nwkIb& (0+255),w,b
 18613  006050  E106               	bnz	l2184
 18614  006052  2901               	incf	(_nwkIb+1)& (0+255),w,b
 18615  006054  A4D8               	btfss	status,2,c
 18616  006056  D003               	goto	l2184
 18617                           
 18618                           ; BSR set to: 1
 18619                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 18620  006058  0E00               	movlw	0
 18621  00605A  0100               	movlb	0	; () banked
 18622  00605C  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18623  00605E                     l2184:
 18624                           
 18625                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 18626  00605E  0100               	movlb	0	; () banked
 18627  006060  51D9               	movf	nwkRxHandleIndication@ack& (0+255),w,b
 18628  006062  B4D8               	btfsc	status,2,c
 18629  006064  D008               	goto	l15775
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 18633  006066  0060  F354  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 18634  00606C  0060  F358  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 18635  006072  ECB3  F029         	call	_nwkRxSendAck	;wreg free
 18636  006076                     l15775:
 18637                           
 18638                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 18639  006076  0060  F357  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 18640  00607C  0060  F35B  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 18641  006082  0E24               	movlw	36
 18642  006084  6EDF               	movwf	indf2,c
 18643  006086  0012               	return		;funcret
 18644  006088                     __end_of_nwkRxHandleIndication:
 18645                           	opt callstack 0
 18646                           
 18647 ;; *************** function _nwkRxSendAck *****************
 18648 ;; Defined at:
 18649 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 18650 ;; Parameters:    Size  Location     Type
 18651 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 18652 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18653 ;; Auto vars:     Size  Location     Type
 18654 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 18655 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18656 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 18657 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18658 ;; Return value:  Size  Location     Type
 18659 ;;                  1    wreg      void 
 18660 ;; Registers used:
 18661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18662 ;; Tracked objects:
 18663 ;;		On entry : 3F/0
 18664 ;;		On exit  : 0/0
 18665 ;;		Unchanged: 0/0
 18666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18668 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18671 ;;Total ram usage:        6 bytes
 18672 ;; Hardware stack levels used:    1
 18673 ;; Hardware stack levels required when called:   11
 18674 ;; This function calls:
 18675 ;;		_nwkFrameAlloc
 18676 ;;		_nwkFrameCommandInit
 18677 ;;		_nwkTxFrame
 18678 ;; This function is called by:
 18679 ;;		_nwkRxHandleIndication
 18680 ;; This function uses a non-reentrant model
 18681 ;;
 18682                           
 18683                           	psect	text113
 18684  005366                     __ptext113:
 18685                           	opt callstack 0
 18686  005366                     _nwkRxSendAck:
 18687                           	opt callstack 15
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 18691                           
 18692                           ;incstack = 0
 18693  005366  ECED  F032         	call	_nwkFrameAlloc	;wreg free
 18694  00536A  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 18695  005370  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 18696  005376  502E               	movf	nwkRxSendAck@ack^0,w,c
 18697  005378  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 18698  00537A  B4D8               	btfsc	status,2,c
 18699  00537C  0012               	return	
 18700                           
 18701                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 18702  00537E  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 18703  005384  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 18704  00538A  EC31  F040         	call	_nwkFrameCommandInit	;wreg free
 18705                           
 18706                           ; BSR set to: 1
 18707                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 18708  00538E  EE20 F001          	lfsr	2,1
 18709  005392  502E               	movf	nwkRxSendAck@ack^0,w,c
 18710  005394  26D9               	addwf	fsr2l,f,c
 18711  005396  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18712  005398  22DA               	addwfc	fsr2h,f,c
 18713  00539A  0E03               	movlw	3
 18714  00539C  26DF               	addwf	indf2,f,c
 18715                           
 18716                           ; BSR set to: 1
 18717                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 18718  00539E  EE20 F087          	lfsr	2,135
 18719  0053A2  502E               	movf	nwkRxSendAck@ack^0,w,c
 18720  0053A4  26D9               	addwf	fsr2l,f,c
 18721  0053A6  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18722  0053A8  22DA               	addwfc	fsr2h,f,c
 18723  0053AA  0E00               	movlw	0
 18724  0053AC  6EDE               	movwf	postinc2,c
 18725  0053AE  0E00               	movlw	0
 18726  0053B0  6EDD               	movwf	postdec2,c
 18727                           
 18728                           ; BSR set to: 1
 18729                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 18730  0053B2  EE20 F00B          	lfsr	2,11
 18731  0053B6  502A               	movf	nwkRxSendAck@frame^0,w,c
 18732  0053B8  26D9               	addwf	fsr2l,f,c
 18733  0053BA  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18734  0053BC  22DA               	addwfc	fsr2h,f,c
 18735  0053BE  EE10 F00B          	lfsr	1,11
 18736  0053C2  502E               	movf	nwkRxSendAck@ack^0,w,c
 18737  0053C4  26E1               	addwf	fsr1l,f,c
 18738  0053C6  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18739  0053C8  22E2               	addwfc	fsr1h,f,c
 18740  0053CA  B2DF               	btfsc	indf2,1,c
 18741  0053CC  D002               	bra	u14695
 18742  0053CE  92E7               	bcf	indf1,1,c
 18743  0053D0  D001               	bra	u14696
 18744  0053D2                     u14695:
 18745  0053D2  82E7               	bsf	indf1,1,c
 18746  0053D4                     u14696:
 18747                           
 18748                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 18749  0053D4  EE20 F00D          	lfsr	2,13
 18750  0053D8  502A               	movf	nwkRxSendAck@frame^0,w,c
 18751  0053DA  26D9               	addwf	fsr2l,f,c
 18752  0053DC  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18753  0053DE  22DA               	addwfc	fsr2h,f,c
 18754  0053E0  EE10 F00F          	lfsr	1,15
 18755  0053E4  502E               	movf	nwkRxSendAck@ack^0,w,c
 18756  0053E6  26E1               	addwf	fsr1l,f,c
 18757  0053E8  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18758  0053EA  22E2               	addwfc	fsr1h,f,c
 18759  0053EC  006F FF7B FFE6     	movff	postinc2,postinc1
 18760  0053F2  006F FF77 FFE5     	movff	postdec2,postdec1
 18761                           
 18762                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 18763  0053F8  EE20 F081          	lfsr	2,129
 18764  0053FC  502E               	movf	nwkRxSendAck@ack^0,w,c
 18765  0053FE  26D9               	addwf	fsr2l,f,c
 18766  005400  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18767  005402  22DA               	addwfc	fsr2h,f,c
 18768  005404  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 18769  00540A  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 18770                           
 18771                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 18772  005410  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 18773  005416  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 18774  00541C  0E00               	movlw	0
 18775  00541E  6EDF               	movwf	indf2,c
 18776                           
 18777                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 18778  005420  EE20 F002          	lfsr	2,2
 18779  005424  502C               	movf	nwkRxSendAck@command^0,w,c
 18780  005426  26D9               	addwf	fsr2l,f,c
 18781  005428  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18782  00542A  22DA               	addwfc	fsr2h,f,c
 18783  00542C  0060  F587  FFDF   	movff	_nwkRxAckControl,indf2
 18784                           
 18785                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 18786  005432  EE20 F00C          	lfsr	2,12
 18787  005436  502A               	movf	nwkRxSendAck@frame^0,w,c
 18788  005438  26D9               	addwf	fsr2l,f,c
 18789  00543A  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18790  00543C  22DA               	addwfc	fsr2h,f,c
 18791  00543E  EE10 F001          	lfsr	1,1
 18792  005442  502C               	movf	nwkRxSendAck@command^0,w,c
 18793  005444  26E1               	addwf	fsr1l,f,c
 18794  005446  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18795  005448  22E2               	addwfc	fsr1h,f,c
 18796  00544A  006F FF7F FFE7     	movff	indf2,indf1
 18797                           
 18798                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 18799  005450  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 18800  005456  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 18801  00545C  ECED  F01D         	call	_nwkTxFrame	;wreg free
 18802  005460  0012               	return		;funcret
 18803  005462                     __end_of_nwkRxSendAck:
 18804                           	opt callstack 0
 18805                           
 18806 ;; *************** function _nwkRxIndicateFrame *****************
 18807 ;; Defined at:
 18808 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  frame           2   91[BANK0 ] PTR struct NwkFrame_t
 18811 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;  ind            12  105[BANK0 ] struct NWK_DataInd_t
 18814 ;;  header          2  103[BANK0 ] PTR __pack struct NwkFra
 18815 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18816 ;; Return value:  Size  Location     Type
 18817 ;;                  1    wreg      _Bool 
 18818 ;; Registers used:
 18819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18820 ;; Tracked objects:
 18821 ;;		On entry : 3F/1
 18822 ;;		On exit  : 0/0
 18823 ;;		Unchanged: 0/0
 18824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18825 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18826 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18827 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18828 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18829 ;;Total ram usage:       26 bytes
 18830 ;; Hardware stack levels used:    1
 18831 ;; Hardware stack levels required when called:   17
 18832 ;; This function calls:
 18833 ;;		_appDataInd
 18834 ;;		_nwkRxServiceDataInd
 18835 ;;		nwkFrame@nwkFramePayloadSize
 18836 ;; This function is called by:
 18837 ;;		_nwkRxHandleIndication
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841                           	psect	text114
 18842  0030E2                     __ptext114:
 18843                           	opt callstack 0
 18844  0030E2                     _nwkRxIndicateFrame:
 18845                           	opt callstack 9
 18846                           
 18847                           ; BSR set to: 1
 18848                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 18849                           
 18850                           ;incstack = 0
 18851  0030E2  0E02               	movlw	2
 18852  0030E4  0100               	movlb	0	; () banked
 18853  0030E6  25BB               	addwf	nwkRxIndicateFrame@frame& (0+255),w,b
 18854  0030E8  6FC7               	movwf	nwkRxIndicateFrame@header& (0+255),b
 18855  0030EA  0E00               	movlw	0
 18856  0030EC  21BC               	addwfc	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18857  0030EE  6FC8               	movwf	(nwkRxIndicateFrame@header+1)& (0+255),b
 18858                           
 18859                           ; BSR set to: 0
 18860                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 18861  0030F0  EE20 F00F          	lfsr	2,15
 18862  0030F4  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18863  0030F6  26D9               	addwf	fsr2l,f,c
 18864  0030F8  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18865  0030FA  22DA               	addwfc	fsr2h,f,c
 18866  0030FC  38DF               	swapf	223,w,c
 18867  0030FE  0B0F               	andlw	15
 18868  003100  6FBD               	movwf	??_nwkRxIndicateFrame& (0+255),b
 18869  003102  51BD               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 18870  003104  0D02               	mullw	2
 18871  003106  0E06               	movlw	low (_nwkIb+6)
 18872  003108  24F3               	addwf	243,w,c
 18873  00310A  6ED9               	movwf	fsr2l,c
 18874  00310C  0E01               	movlw	high (_nwkIb+6)
 18875  00310E  20F4               	addwfc	prodh,w,c
 18876  003110  6EDA               	movwf	fsr2h,c
 18877  003112  50DE               	movf	postinc2,w,c
 18878  003114  10DE               	iorwf	postinc2,w,c
 18879  003116  A4D8               	btfss	status,2,c
 18880  003118  D002               	goto	l15213
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 18884  00311A  0E00               	movlw	0
 18885  00311C  0012               	return	
 18886  00311E                     l15213:
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 18890  00311E  EE20 F00B          	lfsr	2,11
 18891  003122  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18892  003124  26D9               	addwf	fsr2l,f,c
 18893  003126  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18894  003128  22DA               	addwfc	fsr2h,f,c
 18895  00312A  006F FF78  F0C9    	movff	postinc2,nwkRxIndicateFrame@ind
 18896  003130  006F FF74  F0CA    	movff	postdec2,nwkRxIndicateFrame@ind+1
 18897                           
 18898                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 18899  003136  EE20 F00D          	lfsr	2,13
 18900  00313A  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18901  00313C  26D9               	addwf	fsr2l,f,c
 18902  00313E  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18903  003140  22DA               	addwfc	fsr2h,f,c
 18904  003142  006F FF78  F0CB    	movff	postinc2,nwkRxIndicateFrame@ind+2
 18905  003148  006F FF74  F0CC    	movff	postdec2,nwkRxIndicateFrame@ind+3
 18906                           
 18907                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 18908  00314E  EE20 F00F          	lfsr	2,15
 18909  003152  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18910  003154  26D9               	addwf	fsr2l,f,c
 18911  003156  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18912  003158  22DA               	addwfc	fsr2h,f,c
 18913  00315A  50DF               	movf	223,w,c
 18914  00315C  0B0F               	andlw	15
 18915  00315E  6FCD               	movwf	(nwkRxIndicateFrame@ind+4)& (0+255),b
 18916                           
 18917                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 18918  003160  EE20 F00F          	lfsr	2,15
 18919  003164  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18920  003166  26D9               	addwf	fsr2l,f,c
 18921  003168  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18922  00316A  22DA               	addwfc	fsr2h,f,c
 18923  00316C  38DF               	swapf	223,w,c
 18924  00316E  0B0F               	andlw	15
 18925  003170  6FCE               	movwf	(nwkRxIndicateFrame@ind+5)& (0+255),b
 18926                           
 18927                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 18928  003172  EE20 F081          	lfsr	2,129
 18929  003176  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18930  003178  26D9               	addwf	fsr2l,f,c
 18931  00317A  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18932  00317C  22DA               	addwfc	fsr2h,f,c
 18933  00317E  006F FF78  F0D0    	movff	postinc2,nwkRxIndicateFrame@ind+7
 18934  003184  006F FF74  F0D1    	movff	postdec2,nwkRxIndicateFrame@ind+8
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 18938  00318A  0060  F2EC  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4705
 18939  003190  0060  F2F0  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4705+1
 18940  003196  EC7B  F043         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 18941  00319A  6FD2               	movwf	(nwkRxIndicateFrame@ind+9)& (0+255),b
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 18945  00319C  EE20 F083          	lfsr	2,131
 18946  0031A0  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18947  0031A2  26D9               	addwf	fsr2l,f,c
 18948  0031A4  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18949  0031A6  22DA               	addwfc	fsr2h,f,c
 18950  0031A8  50DF               	movf	indf2,w,c
 18951  0031AA  6FD3               	movwf	(nwkRxIndicateFrame@ind+10)& (0+255),b
 18952                           
 18953                           ; BSR set to: 0
 18954                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 18955  0031AC  EE20 F084          	lfsr	2,132
 18956  0031B0  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18957  0031B2  26D9               	addwf	fsr2l,f,c
 18958  0031B4  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18959  0031B6  22DA               	addwfc	fsr2h,f,c
 18960  0031B8  50DF               	movf	indf2,w,c
 18961  0031BA  6FD4               	movwf	(nwkRxIndicateFrame@ind+11)& (0+255),b
 18962                           
 18963                           ; BSR set to: 0
 18964                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 18965  0031BC  EE20 F009          	lfsr	2,9
 18966  0031C0  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18967  0031C2  26D9               	addwf	fsr2l,f,c
 18968  0031C4  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18969  0031C6  22DA               	addwfc	fsr2h,f,c
 18970  0031C8  0E00               	movlw	0
 18971  0031CA  B0DF               	btfsc	indf2,0,c
 18972  0031CC  0E01               	movlw	1
 18973  0031CE  6FCF               	movwf	(nwkRxIndicateFrame@ind+6)& (0+255),b
 18974                           
 18975                           ; BSR set to: 0
 18976                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 18977  0031D0  EE20 F009          	lfsr	2,9
 18978  0031D4  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18979  0031D6  26D9               	addwf	fsr2l,f,c
 18980  0031D8  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18981  0031DA  22DA               	addwfc	fsr2h,f,c
 18982  0031DC  B2DF               	btfsc	indf2,1,c
 18983  0031DE  D002               	goto	l15227
 18984                           
 18985                           ; BSR set to: 0
 18986  0031E0  0E00               	movlw	0
 18987  0031E2  D001               	goto	L16
 18988  0031E4                     l15227:
 18989                           
 18990                           ; BSR set to: 0
 18991  0031E4  0E02               	movlw	2
 18992  0031E6                     L16:
 18993  0031E6  6FC1               	movwf	_nwkRxIndicateFrame$5152& (0+255),b
 18994                           
 18995                           ; BSR set to: 0
 18996  0031E8  51C1               	movf	_nwkRxIndicateFrame$5152& (0+255),w,b
 18997  0031EA  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18998                           
 18999                           ; BSR set to: 0
 19000                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 19001  0031EC  EE20 F009          	lfsr	2,9
 19002  0031F0  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19003  0031F2  26D9               	addwf	fsr2l,f,c
 19004  0031F4  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19005  0031F6  22DA               	addwfc	fsr2h,f,c
 19006  0031F8  B4DF               	btfsc	indf2,2,c
 19007  0031FA  D002               	goto	l15235
 19008                           
 19009                           ; BSR set to: 0
 19010  0031FC  0E00               	movlw	0
 19011  0031FE  D001               	goto	L17
 19012  003200                     l15235:
 19013                           
 19014                           ; BSR set to: 0
 19015  003200  0E20               	movlw	32
 19016  003202                     L17:
 19017  003202  6FC2               	movwf	_nwkRxIndicateFrame$5153& (0+255),b
 19018                           
 19019                           ; BSR set to: 0
 19020  003204  51C2               	movf	_nwkRxIndicateFrame$5153& (0+255),w,b
 19021  003206  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19022                           
 19023                           ; BSR set to: 0
 19024                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 19025  003208  EE20 F009          	lfsr	2,9
 19026  00320C  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19027  00320E  26D9               	addwf	fsr2l,f,c
 19028  003210  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19029  003212  22DA               	addwfc	fsr2h,f,c
 19030  003214  B6DF               	btfsc	indf2,3,c
 19031  003216  D002               	goto	l15243
 19032                           
 19033                           ; BSR set to: 0
 19034  003218  0E00               	movlw	0
 19035  00321A  D001               	goto	L18
 19036  00321C                     l15243:
 19037                           
 19038                           ; BSR set to: 0
 19039  00321C  0E40               	movlw	64
 19040  00321E                     L18:
 19041  00321E  6FC3               	movwf	_nwkRxIndicateFrame$5154& (0+255),b
 19042                           
 19043                           ; BSR set to: 0
 19044  003220  51C3               	movf	_nwkRxIndicateFrame$5154& (0+255),w,b
 19045  003222  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19046                           
 19047                           ; BSR set to: 0
 19048                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 19049  003224  EE20 F00D          	lfsr	2,13
 19050  003228  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19051  00322A  26D9               	addwf	fsr2l,f,c
 19052  00322C  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19053  00322E  22DA               	addwfc	fsr2h,f,c
 19054  003230  28DE               	incf	postinc2,w,c
 19055  003232  E103               	bnz	u14860
 19056  003234  28DE               	incf	postinc2,w,c
 19057  003236  B4D8               	btfsc	status,2,c
 19058  003238  D002               	goto	l15251
 19059  00323A                     u14860:
 19060                           
 19061                           ; BSR set to: 0
 19062  00323A  0E00               	movlw	0
 19063  00323C  D001               	goto	L19
 19064  00323E                     l15251:
 19065                           
 19066                           ; BSR set to: 0
 19067  00323E  0E04               	movlw	4
 19068  003240                     L19:
 19069  003240  6FC4               	movwf	_nwkRxIndicateFrame$5155& (0+255),b
 19070                           
 19071                           ; BSR set to: 0
 19072  003242  51C4               	movf	_nwkRxIndicateFrame$5155& (0+255),w,b
 19073  003244  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 19077  003246  EE20 F007          	lfsr	2,7
 19078  00324A  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19079  00324C  26D9               	addwf	fsr2l,f,c
 19080  00324E  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19081  003250  22DA               	addwfc	fsr2h,f,c
 19082  003252  EE10 F00B          	lfsr	1,11
 19083  003256  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19084  003258  26E1               	addwf	fsr1l,f,c
 19085  00325A  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19086  00325C  22E2               	addwfc	fsr1h,f,c
 19087  00325E  50DE               	movf	postinc2,w,c
 19088  003260  18E6               	xorwf	postinc1,w,c
 19089  003262  E104               	bnz	u14870
 19090  003264  50DE               	movf	postinc2,w,c
 19091  003266  18E6               	xorwf	postinc1,w,c
 19092  003268  B4D8               	btfsc	status,2,c
 19093  00326A  D002               	goto	l15259
 19094  00326C                     u14870:
 19095                           
 19096                           ; BSR set to: 0
 19097  00326C  0E00               	movlw	0
 19098  00326E  D001               	goto	L20
 19099  003270                     l15259:
 19100                           
 19101                           ; BSR set to: 0
 19102  003270  0E08               	movlw	8
 19103  003272                     L20:
 19104  003272  6FC5               	movwf	_nwkRxIndicateFrame$5156& (0+255),b
 19105                           
 19106                           ; BSR set to: 0
 19107  003274  51C5               	movf	_nwkRxIndicateFrame$5156& (0+255),w,b
 19108  003276  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 19112  003278  EE20 F003          	lfsr	2,3
 19113  00327C  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19114  00327E  26D9               	addwf	fsr2l,f,c
 19115  003280  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19116  003282  22DA               	addwfc	fsr2h,f,c
 19117  003284  28DE               	incf	postinc2,w,c
 19118  003286  E103               	bnz	u14880
 19119  003288  28DE               	incf	postinc2,w,c
 19120  00328A  B4D8               	btfsc	status,2,c
 19121  00328C  D002               	goto	l15267
 19122  00328E                     u14880:
 19123                           
 19124                           ; BSR set to: 0
 19125  00328E  0E00               	movlw	0
 19126  003290  D001               	goto	L21
 19127  003292                     l15267:
 19128                           
 19129                           ; BSR set to: 0
 19130  003292  0E10               	movlw	16
 19131  003294                     L21:
 19132  003294  6FC6               	movwf	_nwkRxIndicateFrame$5157& (0+255),b
 19133                           
 19134                           ; BSR set to: 0
 19135  003296  51C6               	movf	_nwkRxIndicateFrame$5157& (0+255),w,b
 19136  003298  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19137                           
 19138                           ; BSR set to: 0
 19139                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 19140  00329A  0EC9               	movlw	low nwkRxIndicateFrame@ind
 19141  00329C  6F76               	movwf	nwkRxServiceDataInd@ind& (0+255),b
 19142  00329E  EE20 F00F          	lfsr	2,15
 19143  0032A2  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19144  0032A4  26D9               	addwf	fsr2l,f,c
 19145  0032A6  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19146  0032A8  22DA               	addwfc	fsr2h,f,c
 19147  0032AA  38DF               	swapf	223,w,c
 19148  0032AC  0B0F               	andlw	15
 19149  0032AE  6FBD               	movwf	??_nwkRxIndicateFrame& (0+255),b
 19150  0032B0  51BD               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 19151  0032B2  0D02               	mullw	2
 19152  0032B4  0E06               	movlw	low (_nwkIb+6)
 19153  0032B6  24F3               	addwf	243,w,c
 19154  0032B8  6ED9               	movwf	fsr2l,c
 19155  0032BA  0E01               	movlw	high (_nwkIb+6)
 19156  0032BC  20F4               	addwfc	prodh,w,c
 19157  0032BE  6EDA               	movwf	fsr2h,c
 19158  0032C0  006F FF78  F0BE    	movff	postinc2,??_nwkRxIndicateFrame+1
 19159  0032C6  006F FF74  F0BF    	movff	postdec2,??_nwkRxIndicateFrame+2
 19160  0032CC  D801               	call	u14898
 19161  0032CE  0012               	return	
 19162  0032D0                     u14898:
 19163  0032D0  0005               	push	
 19164  0032D2  6EFA               	movwf	pclath,c
 19165  0032D4  51BE               	movf	(??_nwkRxIndicateFrame+1)& (0+255),w,b
 19166  0032D6  6EFD               	movwf	tosl,c
 19167  0032D8  51BF               	movf	(??_nwkRxIndicateFrame+2)& (0+255),w,b
 19168  0032DA  6EFE               	movwf	tosh,c
 19169  0032DC  6AFF               	clrf	tosu,c
 19170  0032DE  50FA               	movf	pclath,w,c
 19171  0032E0  0012               	return		;indir
 19172  0032E2                     __end_of_nwkRxIndicateFrame:
 19173                           	opt callstack 0
 19174                           
 19175 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 19176 ;; Defined at:
 19177 ;;		line 134 in file "../nwk/nwk_inc\nwkFrame.h"
 19178 ;; Parameters:    Size  Location     Type
 19179 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 19180 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19181 ;; Auto vars:     Size  Location     Type
 19182 ;;		None
 19183 ;; Return value:  Size  Location     Type
 19184 ;;                  1    wreg      unsigned char 
 19185 ;; Registers used:
 19186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19187 ;; Tracked objects:
 19188 ;;		On entry : 3F/0
 19189 ;;		On exit  : 3F/0
 19190 ;;		Unchanged: 3F/0
 19191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19196 ;;Total ram usage:        4 bytes
 19197 ;; Hardware stack levels used:    1
 19198 ;; Hardware stack levels required when called:    7
 19199 ;; This function calls:
 19200 ;;		Nothing
 19201 ;; This function is called by:
 19202 ;;		_nwkRxIndicateFrame
 19203 ;; This function uses a non-reentrant model
 19204 ;;
 19205                           
 19206                           	psect	text115
 19207  0086F6                     __ptext115:
 19208                           	opt callstack 0
 19209  0086F6                     nwkFrame@nwkFramePayloadSize:
 19210                           	opt callstack 18
 19211                           
 19212                           ; BSR set to: 0
 19213                           
 19214                           ;incstack = 0
 19215  0086F6  EE20 F081          	lfsr	2,129
 19216  0086FA  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 19217  0086FC  26D9               	addwf	fsr2l,f,c
 19218  0086FE  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4705+1)^0,w,c
 19219  008700  22DA               	addwfc	fsr2h,f,c
 19220  008702  50DF               	movf	indf2,w,c
 19221  008704  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 19222  008706  EE20 F001          	lfsr	2,1
 19223  00870A  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 19224  00870C  26D9               	addwf	fsr2l,f,c
 19225  00870E  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4705+1)^0,w,c
 19226  008710  22DA               	addwfc	fsr2h,f,c
 19227  008712  50DF               	movf	indf2,w,c
 19228  008714  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 19229  008716  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 19230  008718  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 19231  00871A  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 19232  00871C  0F02               	addlw	2
 19233                           
 19234                           ; BSR set to: 0
 19235  00871E  0012               	return		;funcret
 19236  008720                     __end_ofnwkFrame@nwkFramePayloadSize:
 19237                           	opt callstack 0
 19238                           
 19239 ;; *************** function _appDataInd *****************
 19240 ;; Defined at:
 19241 ;;		line 45 in file "../app/app_src/application.c"
 19242 ;; Parameters:    Size  Location     Type
 19243 ;;  ind             1   22[BANK0 ] PTR struct NWK_DataInd_t
 19244 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19245 ;; Auto vars:     Size  Location     Type
 19246 ;;  i               1   90[BANK0 ] unsigned char 
 19247 ;;  data           65   23[BANK0 ] unsigned char [65]
 19248 ;;  dataptr         2   88[BANK0 ] PTR unsigned char 
 19249 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19250 ;; Return value:  Size  Location     Type
 19251 ;;                  1    wreg      _Bool 
 19252 ;; Registers used:
 19253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19254 ;; Tracked objects:
 19255 ;;		On entry : 3F/0
 19256 ;;		On exit  : 3F/1
 19257 ;;		Unchanged: 0/0
 19258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19259 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19260 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19262 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19263 ;;Total ram usage:       69 bytes
 19264 ;; Hardware stack levels used:    1
 19265 ;; Hardware stack levels required when called:   16
 19266 ;; This function calls:
 19267 ;;		_memset
 19268 ;;		_printf
 19269 ;; This function is called by:
 19270 ;;		_bootLoadApplication
 19271 ;;		_nwkRxIndicateFrame
 19272 ;; This function uses a non-reentrant model
 19273 ;;
 19274                           
 19275                           	psect	text116
 19276  0071CE                     __ptext116:
 19277                           	opt callstack 0
 19278  0071CE                     _appDataInd:
 19279                           	opt callstack 9
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;../app/app_src/application.c: 45: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 46: {;../app/app_src/application.c: 48:     uint8_t data[64 + 1];;.
      +                          ./app/app_src/application.c: 49:     uint8_t* dataptr = ind->data;
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;incstack = 0
 19286  0071CE  5176               	movf	appDataInd@ind& (0+255),w,b
 19287  0071D0  6ED9               	movwf	fsr2l,c
 19288  0071D2  6ADA               	clrf	fsr2h,c
 19289  0071D4  0E07               	movlw	7
 19290  0071D6  26D9               	addwf	fsr2l,f,c
 19291  0071D8  006F FF78  F0B8    	movff	postinc2,appDataInd@dataptr
 19292  0071DE  006F FF74  F0B9    	movff	postdec2,appDataInd@dataptr+1
 19293                           
 19294                           ; BSR set to: 0
 19295                           ;../app/app_src/application.c: 50:     memset(data, 0 , sizeof(data));
 19296  0071E4  0E77               	movlw	low appDataInd@data
 19297  0071E6  6E02               	movwf	memset@dest^0,c
 19298  0071E8  6A03               	clrf	(memset@dest+1)^0,c
 19299  0071EA  0E00               	movlw	0
 19300  0071EC  6E05               	movwf	(memset@c+1)^0,c
 19301  0071EE  0E00               	movlw	0
 19302  0071F0  6E04               	movwf	memset@c^0,c
 19303  0071F2  0E00               	movlw	0
 19304  0071F4  6E07               	movwf	(memset@n+1)^0,c
 19305  0071F6  0E41               	movlw	65
 19306  0071F8  6E06               	movwf	memset@n^0,c
 19307  0071FA  EC2F  F022         	call	_memset	;wreg free
 19308                           
 19309                           ;../app/app_src/application.c: 51:     for(uint8_t i = 0; i < 64; i++){
 19310  0071FE  0E00               	movlw	0
 19311  007200  0100               	movlb	0	; () banked
 19312  007202  6FBA               	movwf	appDataInd@i& (0+255),b
 19313  007204                     l14739:
 19314                           
 19315                           ; BSR set to: 0
 19316                           ;../app/app_src/application.c: 52:         data[i] = *dataptr++;
 19317  007204  0060  F2E3  FFD9   	movff	appDataInd@dataptr,fsr2l
 19318  00720A  0060  F2E7  FFDA   	movff	appDataInd@dataptr+1,fsr2h
 19319  007210  51BA               	movf	appDataInd@i& (0+255),w,b
 19320  007212  0F77               	addlw	low appDataInd@data
 19321  007214  6EE1               	movwf	fsr1l,c
 19322  007216  6AE2               	clrf	fsr1h,c
 19323  007218  006F FF7F FFE7     	movff	indf2,indf1
 19324                           
 19325                           ; BSR set to: 0
 19326  00721E  4BB8               	infsnz	appDataInd@dataptr& (0+255),f,b
 19327  007220  2BB9               	incf	(appDataInd@dataptr+1)& (0+255),f,b
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;../app/app_src/application.c: 53:     }
 19331  007222  2BBA               	incf	appDataInd@i& (0+255),f,b
 19332                           
 19333                           ; BSR set to: 0
 19334  007224  0E3F               	movlw	63
 19335  007226  65BA               	cpfsgt	appDataInd@i& (0+255),b
 19336  007228  D7ED               	goto	l14739
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;../app/app_src/application.c: 54:     printf("RX:%04X:%s\r\n", ind->srcAddr, data);
 19340  00722A  0E8D               	movlw	low STR_1
 19341  00722C  6E55               	movwf	printf@fmt^0,c
 19342  00722E  0EFE               	movlw	high STR_1
 19343  007230  6E56               	movwf	(printf@fmt+1)^0,c
 19344  007232  5176               	movf	appDataInd@ind& (0+255),w,b
 19345  007234  6ED9               	movwf	fsr2l,c
 19346  007236  6ADA               	clrf	fsr2h,c
 19347  007238  006F FF78  F057    	movff	postinc2,?_printf+2
 19348  00723E  006F FF74  F058    	movff	postdec2,?_printf+3
 19349  007244  0E77               	movlw	low appDataInd@data
 19350  007246  6E59               	movwf	(?_printf+4)^0,c
 19351  007248  EC3B  F044         	call	_printf	;wreg free
 19352                           
 19353                           ; BSR set to: 1
 19354                           ;../app/app_src/application.c: 55:     return 1;
 19355  00724C  0E01               	movlw	1
 19356                           
 19357                           ; BSR set to: 1
 19358  00724E  0012               	return		;funcret
 19359  007250                     __end_of_appDataInd:
 19360                           	opt callstack 0
 19361                           
 19362 ;; *************** function _nwkRxServiceDataInd *****************
 19363 ;; Defined at:
 19364 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 19365 ;; Parameters:    Size  Location     Type
 19366 ;;  ind             1   22[BANK0 ] PTR struct NWK_DataInd_t
 19367 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19368 ;; Auto vars:     Size  Location     Type
 19369 ;;		None
 19370 ;; Return value:  Size  Location     Type
 19371 ;;                  1    wreg      _Bool 
 19372 ;; Registers used:
 19373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19374 ;; Tracked objects:
 19375 ;;		On entry : 3F/0
 19376 ;;		On exit  : 0/0
 19377 ;;		Unchanged: 0/0
 19378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19379 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19382 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19383 ;;Total ram usage:        5 bytes
 19384 ;; Hardware stack levels used:    1
 19385 ;; Hardware stack levels required when called:   10
 19386 ;; This function calls:
 19387 ;;		_nwkRouteErrorReceived
 19388 ;;		_nwkTxAckReceived
 19389 ;; This function is called by:
 19390 ;;		_nwkRxInit
 19391 ;;		_nwkRxIndicateFrame
 19392 ;; This function uses a non-reentrant model
 19393 ;;
 19394                           
 19395                           	psect	text117
 19396  00751A                     __ptext117:
 19397                           	opt callstack 0
 19398  00751A                     _nwkRxServiceDataInd:
 19399                           	opt callstack 15
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 19403                           
 19404                           ; BSR set to: 1
 19405                           ;incstack = 0
 19406  00751A  5176               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 19407  00751C  6ED9               	movwf	fsr2l,c
 19408  00751E  6ADA               	clrf	fsr2h,c
 19409  007520  0E09               	movlw	9
 19410  007522  26D9               	addwf	fsr2l,f,c
 19411  007524  50DF               	movf	indf2,w,c
 19412  007526  A4D8               	btfss	status,2,c
 19413  007528  D00E               	goto	l14897
 19414  00752A                     u14500:
 19415                           
 19416                           ; BSR set to: 0
 19417                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 19418  00752A  0E00               	movlw	0
 19419  00752C  0012               	return	
 19420  00752E                     l14883:
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 19424  00752E  0060  F1D8  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 19425  007534  ECD3  F031         	call	_nwkTxAckReceived	;wreg free
 19426  007538  0012               	return	
 19427  00753A                     l14887:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 19431  00753A  0060  F1D8  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 19432  007540  EC10  F03D         	call	_nwkRouteErrorReceived	;wreg free
 19433  007544  0012               	return	
 19434  007546                     l14897:
 19435                           
 19436                           ; BSR set to: 0
 19437  007546  5176               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 19438  007548  6ED9               	movwf	fsr2l,c
 19439  00754A  6ADA               	clrf	fsr2h,c
 19440  00754C  0E07               	movlw	7
 19441  00754E  26D9               	addwf	fsr2l,f,c
 19442  007550  006F FF78  F077    	movff	postinc2,??_nwkRxServiceDataInd
 19443  007556  006F FF74  F078    	movff	postdec2,??_nwkRxServiceDataInd+1
 19444  00755C  0060  F1DF  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 19445  007562  0060  F1E3  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 19446  007568  50DF               	movf	indf2,w,c
 19447  00756A  6F79               	movwf	(??_nwkRxServiceDataInd+2)& (0+255),b
 19448  00756C  6B7A               	clrf	(??_nwkRxServiceDataInd+3)& (0+255),b
 19449                           
 19450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19451                           ; Switch size 1, requested type "simple"
 19452                           ; Number of cases is 1, Range of values is 0 to 0
 19453                           ; switch strategies available:
 19454                           ; Name         Instructions Cycles
 19455                           ; simple_byte            4     3 (average)
 19456                           ;	Chosen strategy is simple_byte
 19457  00756E  517A               	movf	(??_nwkRxServiceDataInd+3)& (0+255),w,b
 19458  007570  0A00               	xorlw	0	; case 0
 19459  007572  A4D8               	btfss	status,2,c
 19460  007574  D7DA               	goto	u14500
 19461                           
 19462                           ; BSR set to: 0
 19463                           ; Switch size 1, requested type "simple"
 19464                           ; Number of cases is 2, Range of values is 0 to 1
 19465                           ; switch strategies available:
 19466                           ; Name         Instructions Cycles
 19467                           ; simple_byte            7     4 (average)
 19468                           ;	Chosen strategy is simple_byte
 19469  007576  5179               	movf	(??_nwkRxServiceDataInd+2)& (0+255),w,b
 19470  007578  0A00               	xorlw	0	; case 0
 19471  00757A  B4D8               	btfsc	status,2,c
 19472  00757C  D7D8               	goto	l14883
 19473  00757E  0A01               	xorlw	1	; case 1
 19474  007580  B4D8               	btfsc	status,2,c
 19475  007582  D7DB               	goto	l14887
 19476  007584  D7D2               	goto	u14500
 19477  007586                     __end_of_nwkRxServiceDataInd:
 19478                           	opt callstack 0
 19479                           
 19480 ;; *************** function _nwkTxAckReceived *****************
 19481 ;; Defined at:
 19482 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 19485 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19486 ;; Auto vars:     Size  Location     Type
 19487 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 19488 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19489 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 19490 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 19491 ;; Return value:  Size  Location     Type
 19492 ;;                  1    wreg      _Bool 
 19493 ;; Registers used:
 19494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19495 ;; Tracked objects:
 19496 ;;		On entry : 3F/0
 19497 ;;		On exit  : 0/0
 19498 ;;		Unchanged: 0/0
 19499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19501 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19503 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19504 ;;Total ram usage:        7 bytes
 19505 ;; Hardware stack levels used:    1
 19506 ;; Hardware stack levels required when called:    8
 19507 ;; This function calls:
 19508 ;;		_nwkFrameNext
 19509 ;; This function is called by:
 19510 ;;		_nwkRxServiceDataInd
 19511 ;; This function uses a non-reentrant model
 19512 ;;
 19513                           
 19514                           	psect	text118
 19515  0063A6                     __ptext118:
 19516                           	opt callstack 0
 19517  0063A6                     _nwkTxAckReceived:
 19518                           	opt callstack 16
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 19522                           
 19523                           ;incstack = 0
 19524  0063A6  5008               	movf	nwkTxAckReceived@ind^0,w,c
 19525  0063A8  6ED9               	movwf	fsr2l,c
 19526  0063AA  6ADA               	clrf	fsr2h,c
 19527  0063AC  0E07               	movlw	7
 19528  0063AE  26D9               	addwf	fsr2l,f,c
 19529  0063B0  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 19530  0063B6  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 19534  0063BC  0E00               	movlw	0
 19535  0063BE  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 19536  0063C0  0E00               	movlw	0
 19537  0063C2  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 19541  0063C4  5008               	movf	nwkTxAckReceived@ind^0,w,c
 19542  0063C6  6ED9               	movwf	fsr2l,c
 19543  0063C8  6ADA               	clrf	fsr2h,c
 19544  0063CA  0E09               	movlw	9
 19545  0063CC  26D9               	addwf	fsr2l,f,c
 19546  0063CE  0E03               	movlw	3
 19547  0063D0  18DE               	xorwf	postinc2,w,c
 19548  0063D2  B4D8               	btfsc	status,2,c
 19549  0063D4  D035               	goto	l14657
 19550  0063D6                     u14230:
 19551                           
 19552                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 19553  0063D6  0E00               	movlw	0
 19554  0063D8  0012               	return	
 19555  0063DA                     l14645:
 19556                           
 19557                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 19558  0063DA  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 19559  0063E0  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 19560  0063E6  0E16               	movlw	22
 19561  0063E8  18DE               	xorwf	postinc2,w,c
 19562  0063EA  A4D8               	btfss	status,2,c
 19563  0063EC  D029               	goto	l14657
 19564  0063EE  EE20 F001          	lfsr	2,1
 19565  0063F2  500B               	movf	nwkTxAckReceived@command^0,w,c
 19566  0063F4  26D9               	addwf	fsr2l,f,c
 19567  0063F6  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 19568  0063F8  22DA               	addwfc	fsr2h,f,c
 19569  0063FA  EE10 F00C          	lfsr	1,12
 19570  0063FE  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19571  006400  26E1               	addwf	fsr1l,f,c
 19572  006402  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 19573  006404  22E2               	addwfc	fsr1h,f,c
 19574  006406  50DE               	movf	postinc2,w,c
 19575  006408  18E6               	xorwf	postinc1,w,c
 19576  00640A  A4D8               	btfss	status,2,c
 19577  00640C  D019               	goto	l14657
 19578                           
 19579                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 19580  00640E  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 19581  006414  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 19582  00641A  0E17               	movlw	23
 19583  00641C  6EDF               	movwf	indf2,c
 19584                           
 19585                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 19586  00641E  EE20 F002          	lfsr	2,2
 19587  006422  500B               	movf	nwkTxAckReceived@command^0,w,c
 19588  006424  26D9               	addwf	fsr2l,f,c
 19589  006426  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 19590  006428  22DA               	addwfc	fsr2h,f,c
 19591  00642A  EE10 F086          	lfsr	1,134
 19592  00642E  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19593  006430  26E1               	addwf	fsr1l,f,c
 19594  006432  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 19595  006434  22E2               	addwfc	fsr1h,f,c
 19596  006436  006F FF7F FFE7     	movff	indf2,indf1
 19597                           
 19598                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 19599  00643C  0E01               	movlw	1
 19600  00643E  0012               	return	
 19601  006440                     l14657:
 19602                           
 19603                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 19604  006440  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 19605  006446  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 19606  00644C  EC95  F037         	call	_nwkFrameNext	;wreg free
 19607  006450  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 19608  006456  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 19609  00645C  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19610  00645E  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 19611  006460  B4D8               	btfsc	status,2,c
 19612  006462  D7B9               	goto	u14230
 19613  006464  D7BA               	goto	l14645
 19614  006466                     __end_of_nwkTxAckReceived:
 19615                           	opt callstack 0
 19616                           
 19617 ;; *************** function _nwkFrameNext *****************
 19618 ;; Defined at:
 19619 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 19620 ;; Parameters:    Size  Location     Type
 19621 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 19622 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;		None
 19625 ;; Return value:  Size  Location     Type
 19626 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 19627 ;; Registers used:
 19628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19638 ;;Total ram usage:        6 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:    7
 19641 ;; This function calls:
 19642 ;;		Nothing
 19643 ;; This function is called by:
 19644 ;;		_nwkRxTaskHandler
 19645 ;;		_nwkTxAckReceived
 19646 ;;		_nwkTxAckWaitTimerHandler
 19647 ;;		_nwkTxDelayTimerHandler
 19648 ;;		_nwkTxTaskHandler
 19649 ;; This function uses a non-reentrant model
 19650 ;;
 19651                           
 19652                           	psect	text119
 19653  006F2A                     __ptext119:
 19654                           	opt callstack 0
 19655  006F2A                     _nwkFrameNext:
 19656                           	opt callstack 20
 19657                           
 19658                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 19659                           
 19660                           ;incstack = 0
 19661  006F2A  5002               	movf	nwkFrameNext@frame^0,w,c
 19662  006F2C  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 19663  006F2E  A4D8               	btfss	status,2,c
 19664  006F30  D026               	goto	l14503
 19665                           
 19666                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 19667  006F32  0EBD               	movlw	low _nwkFrameFrames
 19668  006F34  6E02               	movwf	nwkFrameNext@frame^0,c
 19669  006F36  0E05               	movlw	high _nwkFrameFrames
 19670  006F38  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 19671                           
 19672                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 19673                           
 19674                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 19675  006F3A  0EAD               	movlw	173
 19676  006F3C  6E04               	movwf	??_nwkFrameNext^0,c
 19677  006F3E  0E02               	movlw	2
 19678  006F40  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19679  006F42  0EBD               	movlw	low _nwkFrameFrames
 19680  006F44  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19681  006F46  0E05               	movlw	high _nwkFrameFrames
 19682  006F48  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19683  006F4A  5004               	movf	??_nwkFrameNext^0,w,c
 19684  006F4C  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19685  006F4E  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19686  006F50  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19687  006F52  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19688  006F54  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19689  006F56  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19690  006F58  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19691  006F5A  B0D8               	btfsc	status,0,c
 19692  006F5C  D026               	goto	u14040
 19693  006F5E                     l14497:
 19694                           
 19695                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 19696  006F5E  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 19697  006F64  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 19698  006F6A  50DF               	movf	indf2,w,c
 19699  006F6C  B4D8               	btfsc	status,2,c
 19700  006F6E  D007               	goto	l14503
 19701                           
 19702                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 19703  006F70  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 19704  006F76  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 19705  006F7C  0012               	return	
 19706  006F7E                     l14503:
 19707                           
 19708                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 19709  006F7E  0E89               	movlw	137
 19710  006F80  2602               	addwf	nwkFrameNext@frame^0,f,c
 19711  006F82  0E00               	movlw	0
 19712  006F84  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 19713  006F86  0EAD               	movlw	173
 19714  006F88  6E04               	movwf	??_nwkFrameNext^0,c
 19715  006F8A  0E02               	movlw	2
 19716  006F8C  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19717  006F8E  0EBD               	movlw	low _nwkFrameFrames
 19718  006F90  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19719  006F92  0E05               	movlw	high _nwkFrameFrames
 19720  006F94  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19721  006F96  5004               	movf	??_nwkFrameNext^0,w,c
 19722  006F98  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19723  006F9A  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19724  006F9C  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19725  006F9E  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19726  006FA0  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19727  006FA2  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19728  006FA4  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19729  006FA6  A0D8               	btfss	status,0,c
 19730  006FA8  D7DA               	goto	l14497
 19731  006FAA                     u14040:
 19732                           
 19733                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 19734  006FAA  0E00               	movlw	0
 19735  006FAC  6E02               	movwf	?_nwkFrameNext^0,c
 19736  006FAE  0E00               	movlw	0
 19737  006FB0  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 19738  006FB2  0012               	return		;funcret
 19739  006FB4                     __end_of_nwkFrameNext:
 19740                           	opt callstack 0
 19741                           
 19742 ;; *************** function _nwkRouteErrorReceived *****************
 19743 ;; Defined at:
 19744 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 19747 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19748 ;; Auto vars:     Size  Location     Type
 19749 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 19750 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1    wreg      _Bool 
 19753 ;; Registers used:
 19754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 3F/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19764 ;;Total ram usage:        4 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    9
 19767 ;; This function calls:
 19768 ;;		_nwkRouteRemove
 19769 ;; This function is called by:
 19770 ;;		_nwkRxServiceDataInd
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text120
 19775  007A20                     __ptext120:
 19776                           	opt callstack 0
 19777  007A20                     _nwkRouteErrorReceived:
 19778                           	opt callstack 15
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 19782                           
 19783                           ;incstack = 0
 19784  007A20  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19785  007A22  6ED9               	movwf	fsr2l,c
 19786  007A24  6ADA               	clrf	fsr2h,c
 19787  007A26  0E07               	movlw	7
 19788  007A28  26D9               	addwf	fsr2l,f,c
 19789  007A2A  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 19790  007A30  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 19791                           
 19792                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 19793  007A36  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19794  007A38  6ED9               	movwf	fsr2l,c
 19795  007A3A  6ADA               	clrf	fsr2h,c
 19796  007A3C  0E09               	movlw	9
 19797  007A3E  26D9               	addwf	fsr2l,f,c
 19798  007A40  0E06               	movlw	6
 19799  007A42  18DE               	xorwf	postinc2,w,c
 19800  007A44  B4D8               	btfsc	status,2,c
 19801  007A46  D002               	goto	l14629
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 19805  007A48  0E00               	movlw	0
 19806  007A4A  0012               	return	
 19807  007A4C                     l14629:
 19808                           
 19809                           ; BSR set to: 0
 19810                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 19811  007A4C  EE20 F003          	lfsr	2,3
 19812  007A50  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 19813  007A52  26D9               	addwf	fsr2l,f,c
 19814  007A54  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19815  007A56  22DA               	addwfc	fsr2h,f,c
 19816  007A58  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 19817  007A5E  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 19818  007A64  EE20 F005          	lfsr	2,5
 19819  007A68  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 19820  007A6A  26D9               	addwf	fsr2l,f,c
 19821  007A6C  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19822  007A6E  22DA               	addwfc	fsr2h,f,c
 19823  007A70  50DF               	movf	indf2,w,c
 19824  007A72  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 19825  007A74  EC49  F041         	call	_nwkRouteRemove	;wreg free
 19826                           
 19827                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 19828  007A78  0E01               	movlw	1
 19829  007A7A  0012               	return		;funcret
 19830  007A7C                     __end_of_nwkRouteErrorReceived:
 19831                           	opt callstack 0
 19832                           
 19833 ;; *************** function _nwkRouteRemove *****************
 19834 ;; Defined at:
 19835 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 19836 ;; Parameters:    Size  Location     Type
 19837 ;;  dst             2    7[COMRAM] unsigned short 
 19838 ;;  multicast       1    9[COMRAM] unsigned char 
 19839 ;; Auto vars:     Size  Location     Type
 19840 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 19841 ;;		 -> nwkRouteTable(70), NULL(0), 
 19842 ;; Return value:  Size  Location     Type
 19843 ;;                  1    wreg      void 
 19844 ;; Registers used:
 19845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19846 ;; Tracked objects:
 19847 ;;		On entry : 3E/1
 19848 ;;		On exit  : 0/0
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19851 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;Total ram usage:        5 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; Hardware stack levels required when called:    8
 19858 ;; This function calls:
 19859 ;;		_NWK_RouteFindEntry
 19860 ;;		_NWK_RouteFreeEntry
 19861 ;; This function is called by:
 19862 ;;		_nwkRouteErrorReceived
 19863 ;;		_nwkRxRejectDuplicate
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text121
 19868  008292                     __ptext121:
 19869                           	opt callstack 0
 19870  008292                     _nwkRouteRemove:
 19871                           	opt callstack 17
 19872                           
 19873                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 19874                           
 19875                           ;incstack = 0
 19876  008292  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 19877  008298  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 19878  00829E  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 19879  0082A4  EC2F  F03B         	call	_NWK_RouteFindEntry	;wreg free
 19880  0082A8  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 19881  0082AE  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 19882                           
 19883                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 19884  0082B4  500B               	movf	nwkRouteRemove@entry^0,w,c
 19885  0082B6  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 19886  0082B8  B4D8               	btfsc	status,2,c
 19887  0082BA  0012               	return	
 19888                           
 19889                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 19890  0082BC  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 19891  0082C2  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 19892  0082C8  EC67  F042         	call	_NWK_RouteFreeEntry	;wreg free
 19893  0082CC  0012               	return		;funcret
 19894  0082CE                     __end_of_nwkRouteRemove:
 19895                           	opt callstack 0
 19896                           
 19897 ;; *************** function _NWK_RouteFreeEntry *****************
 19898 ;; Defined at:
 19899 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 19900 ;; Parameters:    Size  Location     Type
 19901 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 19902 ;;		 -> nwkRouteTable(70), NULL(0), 
 19903 ;; Auto vars:     Size  Location     Type
 19904 ;;		None
 19905 ;; Return value:  Size  Location     Type
 19906 ;;                  1    wreg      void 
 19907 ;; Registers used:
 19908 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19909 ;; Tracked objects:
 19910 ;;		On entry : 0/1
 19911 ;;		On exit  : 0/0
 19912 ;;		Unchanged: 0/0
 19913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19918 ;;Total ram usage:        2 bytes
 19919 ;; Hardware stack levels used:    1
 19920 ;; Hardware stack levels required when called:    7
 19921 ;; This function calls:
 19922 ;;		Nothing
 19923 ;; This function is called by:
 19924 ;;		_nwkRouteRemove
 19925 ;;		_nwkRouteFrameSent
 19926 ;; This function uses a non-reentrant model
 19927 ;;
 19928                           
 19929                           	psect	text122
 19930  0084CE                     __ptext122:
 19931                           	opt callstack 0
 19932  0084CE                     _NWK_RouteFreeEntry:
 19933                           	opt callstack 19
 19934                           
 19935                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 19936                           
 19937                           ;incstack = 0
 19938  0084CE  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 19939  0084D4  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 19940  0084DA  B0DF               	btfsc	indf2,0,c
 19941  0084DC  0012               	return	
 19942                           
 19943                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 19944  0084DE  EE20 F001          	lfsr	2,1
 19945  0084E2  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 19946  0084E4  26D9               	addwf	fsr2l,f,c
 19947  0084E6  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 19948  0084E8  22DA               	addwfc	fsr2h,f,c
 19949  0084EA  0EFF               	movlw	255
 19950  0084EC  6EDE               	movwf	postinc2,c
 19951  0084EE  0EFF               	movlw	255
 19952  0084F0  6EDD               	movwf	postdec2,c
 19953                           
 19954                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 19955  0084F2  EE20 F005          	lfsr	2,5
 19956  0084F6  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 19957  0084F8  26D9               	addwf	fsr2l,f,c
 19958  0084FA  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 19959  0084FC  22DA               	addwfc	fsr2h,f,c
 19960  0084FE  0E00               	movlw	0
 19961  008500  6EDF               	movwf	indf2,c
 19962  008502  0012               	return		;funcret
 19963  008504                     __end_of_NWK_RouteFreeEntry:
 19964                           	opt callstack 0
 19965                           
 19966 ;; *************** function _printf *****************
 19967 ;; Defined at:
 19968 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
 19971 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 19972 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 19973 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 19974 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 19975 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 19976 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 19977 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 19978 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 19979 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 19980 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 19981 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 19982 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 19983 ;; Auto vars:     Size  Location     Type
 19984 ;;  ret             2    0        int 
 19985 ;;  ap              1   92[COMRAM] PTR void [1]
 19986 ;;		 -> ?_printf(2), 
 19987 ;; Return value:  Size  Location     Type
 19988 ;;                  2   84[COMRAM] int 
 19989 ;; Registers used:
 19990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19991 ;; Tracked objects:
 19992 ;;		On entry : 0/0
 19993 ;;		On exit  : 3F/1
 19994 ;;		Unchanged: 0/0
 19995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19996 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19997 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19999 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20000 ;;Total ram usage:        9 bytes
 20001 ;; Hardware stack levels used:    1
 20002 ;; Hardware stack levels required when called:   15
 20003 ;; This function calls:
 20004 ;;		_vfprintf
 20005 ;; This function is called by:
 20006 ;;		_appDataInd
 20007 ;;		_cmdSend
 20008 ;;		_cmdBcast
 20009 ;;		_cmdAddr
 20010 ;;		_cmdSetAddr
 20011 ;;		_cmdNaddr
 20012 ;;		_cmdSetNaddr
 20013 ;;		_cmdMac
 20014 ;;		_cmdSetSink
 20015 ;;		_cmdSetAES
 20016 ;;		_cmdGetCAD
 20017 ;;		_cmdRstCAD
 20018 ;;		_cmdGetMode
 20019 ;;		_cmdGetRFCH
 20020 ;;		_cmdSetRFCH
 20021 ;;		_cmdGetTX
 20022 ;;		_cmdSetTX
 20023 ;;		_cmdGetCADRSSI
 20024 ;;		_cmdSetCADRSSI
 20025 ;;		_cmdSetParity
 20026 ;;		_cmdBootLoad
 20027 ;;		_cmdGetSF
 20028 ;;		_cmdSetSF
 20029 ;;		_print_hop_table
 20030 ;;		_set_hop_table_ttl
 20031 ;;		_executeATCommand
 20032 ;;		_sendInfo
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text123
 20037  008876                     __ptext123:
 20038                           	opt callstack 0
 20039  008876                     _printf:
 20040                           	opt callstack 12
 20041                           
 20042                           ;incstack = 0
 20043  008876  0E57               	movlw	low (?_printf+2)
 20044  008878  6E5D               	movwf	printf@ap^0,c
 20045  00887A  0E00               	movlw	0
 20046  00887C  6E4E               	movwf	vfprintf@fp^0,c
 20047  00887E  0E00               	movlw	0
 20048  008880  6E4F               	movwf	(vfprintf@fp+1)^0,c
 20049  008882  0060  F154  F050   	movff	printf@fmt,vfprintf@fmt
 20050  008888  0060  F158  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 20051  00888E  0E5D               	movlw	low printf@ap
 20052  008890  6E52               	movwf	vfprintf@ap^0,c
 20053  008892  EC94  F03B         	call	_vfprintf	;wreg free
 20054                           
 20055                           ; BSR set to: 1
 20056  008896  0012               	return		;funcret
 20057  008898                     __end_of_printf:
 20058                           	opt callstack 0
 20059                           
 20060 ;; *************** function _vfprintf *****************
 20061 ;; Defined at:
 20062 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 20065 ;;		 -> NULL(0), 
 20066 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 20067 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20068 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 20069 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20070 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20071 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20072 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20073 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20074 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20075 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20076 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20077 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20078 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20079 ;;  ap              1   81[COMRAM] PTR PTR void 
 20080 ;;		 -> printf@ap(1), 
 20081 ;; Auto vars:     Size  Location     Type
 20082 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 20083 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20084 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 20085 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20086 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20087 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20088 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20089 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20090 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20091 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20092 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20093 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20094 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20095 ;; Return value:  Size  Location     Type
 20096 ;;                  2   77[COMRAM] int 
 20097 ;; Registers used:
 20098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20099 ;; Tracked objects:
 20100 ;;		On entry : 0/0
 20101 ;;		On exit  : 3F/1
 20102 ;;		Unchanged: 0/0
 20103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20104 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20107 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20108 ;;Total ram usage:        7 bytes
 20109 ;; Hardware stack levels used:    1
 20110 ;; Hardware stack levels required when called:   14
 20111 ;; This function calls:
 20112 ;;		_vfpfcnvrt
 20113 ;; This function is called by:
 20114 ;;		_printf
 20115 ;; This function uses a non-reentrant model
 20116 ;;
 20117                           
 20118                           	psect	text124
 20119  007728                     __ptext124:
 20120                           	opt callstack 0
 20121  007728                     _vfprintf:
 20122                           	opt callstack 12
 20123                           
 20124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 20125                           
 20126                           ; BSR set to: 1
 20127                           ;incstack = 0
 20128  007728  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 20129  00772E  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 20130                           
 20131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 20132  007734  0E00               	movlw	0
 20133  007736  0101               	movlb	1	; () banked
 20134  007738  6F5A               	movwf	(_nout+1)& (0+255),b
 20135  00773A  0E00               	movlw	0
 20136  00773C  6F59               	movwf	_nout& (0+255),b
 20137                           
 20138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 20139  00773E  D012               	goto	l14555
 20140  007740                     l14553:
 20141                           
 20142                           ; BSR set to: 1
 20143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 20144  007740  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 20145  007746  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 20146  00774C  0E53               	movlw	low vfprintf@cfmt
 20147  00774E  6E48               	movwf	vfpfcnvrt@fmt^0,c
 20148  007750  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 20149  007756  EC20  F003         	call	_vfpfcnvrt	;wreg free
 20150  00775A  5046               	movf	?_vfpfcnvrt^0,w,c
 20151  00775C  0101               	movlb	1	; () banked
 20152  00775E  2759               	addwf	_nout& (0+255),f,b
 20153  007760  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 20154  007762  235A               	addwfc	(_nout+1)& (0+255),f,b
 20155  007764                     l14555:
 20156                           
 20157                           ; BSR set to: 1
 20158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 20159  007764  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 20160  00776A  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 20161  007770                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20162  007770  6AF8               	clrf	tblptru,c
 20163  007772                     	endif
 20164  007772                     	if	0	;tblptru may be non-zero
 20165  007772                     	endif
 20166  007772  0008               	tblrd		*
 20167  007774  50F5               	movf	tablat,w,c
 20168  007776  0900               	iorlw	0
 20169  007778  A4D8               	btfss	status,2,c
 20170  00777A  D7E2               	goto	l14553
 20171                           
 20172                           ; BSR set to: 1
 20173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 20174  00777C  0060  F564  F04E   	movff	_nout,?_vfprintf
 20175  007782  0060  F568  F04F   	movff	_nout+1,?_vfprintf+1
 20176                           
 20177                           ; BSR set to: 1
 20178  007788  0012               	return		;funcret
 20179  00778A                     __end_of_vfprintf:
 20180                           	opt callstack 0
 20181                           
 20182 ;; *************** function _vfpfcnvrt *****************
 20183 ;; Defined at:
 20184 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20185 ;; Parameters:    Size  Location     Type
 20186 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 20187 ;;		 -> NULL(0), 
 20188 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 20189 ;;		 -> vfprintf@cfmt(2), 
 20190 ;;  ap              1   72[COMRAM] PTR PTR void 
 20191 ;;		 -> printf@ap(1), 
 20192 ;; Auto vars:     Size  Location     Type
 20193 ;;  llu             8   14[BANK0 ] unsigned long long 
 20194 ;;  ll              8    0[BANK0 ] long long 
 20195 ;;  f               4    0        long long 
 20196 ;;  vp              3    0        PTR void 
 20197 ;;  ct              3    0        unsigned char [3]
 20198 ;;  done            2   10[BANK0 ] int 
 20199 ;;  i               2    0        int 
 20200 ;;  cp              1    9[BANK0 ] PTR unsigned char 
 20201 ;;		 -> ?_printf(2), appDataInd@data(65), 
 20202 ;;  c               1    8[BANK0 ] unsigned char 
 20203 ;; Return value:  Size  Location     Type
 20204 ;;                  2   69[COMRAM] int 
 20205 ;; Registers used:
 20206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20207 ;; Tracked objects:
 20208 ;;		On entry : 0/1
 20209 ;;		On exit  : 0/0
 20210 ;;		Unchanged: 0/0
 20211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20213 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20215 ;;      Totals:         8      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20216 ;;Total ram usage:       30 bytes
 20217 ;; Hardware stack levels used:    1
 20218 ;; Hardware stack levels required when called:   13
 20219 ;; This function calls:
 20220 ;;		_atoi
 20221 ;;		_dtoa
 20222 ;;		_fputc
 20223 ;;		_isdigit
 20224 ;;		_stoa
 20225 ;;		_utoa
 20226 ;;		_xtoa
 20227 ;; This function is called by:
 20228 ;;		_vfprintf
 20229 ;; This function uses a non-reentrant model
 20230 ;;
 20231                           
 20232                           	psect	text125
 20233  000640                     __ptext125:
 20234                           	opt callstack 0
 20235  000640                     _vfpfcnvrt:
 20236                           	opt callstack 12
 20237                           
 20238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 20239                           
 20240                           ; BSR set to: 1
 20241                           ;incstack = 0
 20242  000640  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20243  000642  6ED9               	movwf	fsr2l,c
 20244  000644  6ADA               	clrf	fsr2h,c
 20245  000646  006F FF7B FFF6     	movff	postinc2,tblptrl
 20246  00064C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20247  000652                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20248  000652  6AF8               	clrf	tblptru,c
 20249  000654                     	endif
 20250  000654                     	if	0	;tblptru may be non-zero
 20251  000654                     	endif
 20252  000654  0008               	tblrd		*
 20253  000656  50F5               	movf	tablat,w,c
 20254  000658  0A25               	xorlw	37
 20255  00065A  A4D8               	btfss	status,2,c
 20256  00065C  D24C               	goto	l14475
 20257                           
 20258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 20259  00065E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20260  000660  6ED9               	movwf	fsr2l,c
 20261  000662  6ADA               	clrf	fsr2h,c
 20262  000664  2ADE               	incf	postinc2,f,c
 20263  000666  0E00               	movlw	0
 20264  000668  22DD               	addwfc	postdec2,f,c
 20265                           
 20266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 20267  00066A  0E00               	movlw	0
 20268  00066C  0100               	movlb	0	; () banked
 20269  00066E  6FDB               	movwf	(_width+1)& (0+255),b
 20270  000670  0E00               	movlw	0
 20271  000672  6FDA               	movwf	_width& (0+255),b
 20272  000674  C0DA  F0DE         	movff	_width,_flags
 20273  000678  C0DB  F0DF         	movff	_width+1,_flags+1
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 20277  00067C  69DC               	setf	_prec& (0+255),b
 20278  00067E  69DD               	setf	(_prec+1)& (0+255),b
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 20282  000680  0E00               	movlw	0
 20283  000682  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20284  000684  0E00               	movlw	0
 20285  000686  D013               	goto	L22
 20286  000688                     l14363:
 20287                           
 20288                           ; BSR set to: 0
 20289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 20290  000688  81DE               	bsf	_flags& (0+255),0,b
 20291  00068A                     l14365:
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 20295  00068A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20296  00068C  6ED9               	movwf	fsr2l,c
 20297  00068E  6ADA               	clrf	fsr2h,c
 20298  000690  2ADE               	incf	postinc2,f,c
 20299  000692  0E00               	movlw	0
 20300  000694  22DD               	addwfc	postdec2,f,c
 20301                           
 20302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 20303  000696  D030               	goto	l14389
 20304  000698                     l14367:
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 20308  000698  83DE               	bsf	_flags& (0+255),1,b
 20309  00069A  D7F7               	goto	l14365
 20310  00069C                     l14371:
 20311                           
 20312                           ; BSR set to: 0
 20313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 20314  00069C  85DE               	bsf	_flags& (0+255),2,b
 20315  00069E  D7F5               	goto	l14365
 20316  0006A0                     l14375:
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 20320  0006A0  87DE               	bsf	_flags& (0+255),3,b
 20321  0006A2  D7F3               	goto	l14365
 20322  0006A4                     l14379:
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 20326  0006A4  89DE               	bsf	_flags& (0+255),4,b
 20327  0006A6  D7F1               	goto	l14365
 20328  0006A8                     l14383:
 20329                           
 20330                           ; BSR set to: 0
 20331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 20332  0006A8  0E00               	movlw	0
 20333  0006AA  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20334  0006AC  0E01               	movlw	1
 20335  0006AE                     L22:
 20336  0006AE  6F6A               	movwf	vfpfcnvrt@done& (0+255),b
 20337                           
 20338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 20339  0006B0  D023               	goto	l14389
 20340  0006B2                     l14387:
 20341                           
 20342                           ; BSR set to: 0
 20343  0006B2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20344  0006B4  6ED9               	movwf	fsr2l,c
 20345  0006B6  6ADA               	clrf	fsr2h,c
 20346  0006B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20347  0006BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20348  0006C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20349  0006C4  6AF8               	clrf	tblptru,c
 20350  0006C6                     	endif
 20351  0006C6                     	if	0	;tblptru may be non-zero
 20352  0006C6                     	endif
 20353  0006C6  0008               	tblrd		*
 20354  0006C8  50F5               	movf	tablat,w,c
 20355  0006CA  6E4A               	movwf	??_vfpfcnvrt^0,c
 20356  0006CC  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 20357                           
 20358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20359                           ; Switch size 1, requested type "simple"
 20360                           ; Number of cases is 1, Range of values is 0 to 0
 20361                           ; switch strategies available:
 20362                           ; Name         Instructions Cycles
 20363                           ; simple_byte            4     3 (average)
 20364                           ;	Chosen strategy is simple_byte
 20365  0006CE  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 20366  0006D0  0A00               	xorlw	0	; case 0
 20367  0006D2  A4D8               	btfss	status,2,c
 20368  0006D4  D7E9               	goto	l14383
 20369                           
 20370                           ; BSR set to: 0
 20371                           ; Switch size 1, requested type "simple"
 20372                           ; Number of cases is 5, Range of values is 32 to 48
 20373                           ; switch strategies available:
 20374                           ; Name         Instructions Cycles
 20375                           ; simple_byte           16     9 (average)
 20376                           ;	Chosen strategy is simple_byte
 20377  0006D6  504A               	movf	??_vfpfcnvrt^0,w,c
 20378  0006D8  0A20               	xorlw	32	; case 32
 20379  0006DA  B4D8               	btfsc	status,2,c
 20380  0006DC  D7E1               	goto	l14375
 20381  0006DE  0A03               	xorlw	3	; case 35
 20382  0006E0  B4D8               	btfsc	status,2,c
 20383  0006E2  D7E0               	goto	l14379
 20384  0006E4  0A08               	xorlw	8	; case 43
 20385  0006E6  B4D8               	btfsc	status,2,c
 20386  0006E8  D7D9               	goto	l14371
 20387  0006EA  0A06               	xorlw	6	; case 45
 20388  0006EC  B4D8               	btfsc	status,2,c
 20389  0006EE  D7CC               	goto	l14363
 20390  0006F0  0A1D               	xorlw	29	; case 48
 20391  0006F2  B4D8               	btfsc	status,2,c
 20392  0006F4  D7D1               	goto	l14367
 20393  0006F6  D7D8               	goto	l14383
 20394  0006F8                     l14389:
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 20398  0006F8  516A               	movf	vfpfcnvrt@done& (0+255),w,b
 20399  0006FA  116B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 20400  0006FC  B4D8               	btfsc	status,2,c
 20401  0006FE  D7D9               	goto	l14387
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 20405  000700  B1DE               	btfsc	_flags& (0+255),0,b
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 20409  000702  93DE               	bcf	_flags& (0+255),1,b
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 20413  000704  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20414  000706  6ED9               	movwf	fsr2l,c
 20415  000708  6ADA               	clrf	fsr2h,c
 20416  00070A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20417  000710  006F FF77 FFF7     	movff	postdec2,tblptrh
 20418  000716                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20419  000716  6AF8               	clrf	tblptru,c
 20420  000718                     	endif
 20421  000718                     	if	0	;tblptru may be non-zero
 20422  000718                     	endif
 20423  000718  0008               	tblrd		*
 20424  00071A  50F5               	movf	tablat,w,c
 20425  00071C  0A2A               	xorlw	42
 20426  00071E  A4D8               	btfss	status,2,c
 20427  000720  D01C               	goto	l14403
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 20431  000722  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20432  000724  6ED9               	movwf	fsr2l,c
 20433  000726  6ADA               	clrf	fsr2h,c
 20434  000728  2ADE               	incf	postinc2,f,c
 20435  00072A  0E00               	movlw	0
 20436  00072C  22DD               	addwfc	postdec2,f,c
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 20440  00072E  5049               	movf	vfpfcnvrt@ap^0,w,c
 20441  000730  6ED9               	movwf	fsr2l,c
 20442  000732  6ADA               	clrf	fsr2h,c
 20443  000734  0E02               	movlw	2
 20444  000736  26DF               	addwf	indf2,f,c
 20445  000738  5CDF               	subwf	indf2,w,c
 20446  00073A  6ED9               	movwf	fsr2l,c
 20447  00073C  6ADA               	clrf	fsr2h,c
 20448  00073E  006F FF78  F0DA    	movff	postinc2,_width
 20449  000744  006F FF78  F0DB    	movff	postinc2,_width+1
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 20453  00074A  AFDB               	btfss	(_width+1)& (0+255),7,b
 20454  00074C  D044               	goto	u13930
 20455                           
 20456                           ; BSR set to: 0
 20457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 20458  00074E  81DE               	bsf	_flags& (0+255),0,b
 20459                           
 20460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 20461  000750  6DDA               	negf	_width& (0+255),b
 20462  000752  1FDB               	comf	(_width+1)& (0+255),f,b
 20463  000754  B0D8               	btfsc	status,0,c
 20464  000756  2BDB               	incf	(_width+1)& (0+255),f,b
 20465  000758  D03E               	goto	u13930
 20466  00075A                     l14403:
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 20470  00075A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20471  00075C  6ED9               	movwf	fsr2l,c
 20472  00075E  6ADA               	clrf	fsr2h,c
 20473  000760  006F FF78  F009    	movff	postinc2,atoi@s
 20474  000766  006F FF74  F00A    	movff	postdec2,atoi@s+1
 20475  00076C  EC6A  F01F         	call	_atoi	;wreg free
 20476  000770  0060  F024  F0DA   	movff	?_atoi,_width
 20477  000776  0060  F028  F0DB   	movff	?_atoi+1,_width+1
 20478                           
 20479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 20480  00077C  D006               	goto	l14407
 20481  00077E                     l14405:
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 20485  00077E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20486  000780  6ED9               	movwf	fsr2l,c
 20487  000782  6ADA               	clrf	fsr2h,c
 20488  000784  2ADE               	incf	postinc2,f,c
 20489  000786  0E00               	movlw	0
 20490  000788  22DD               	addwfc	postdec2,f,c
 20491  00078A                     l14407:
 20492  00078A  0ED0               	movlw	208
 20493  00078C  6E4A               	movwf	??_vfpfcnvrt^0,c
 20494  00078E  0EFF               	movlw	255
 20495  000790  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 20496  000792  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20497  000794  6ED9               	movwf	fsr2l,c
 20498  000796  6ADA               	clrf	fsr2h,c
 20499  000798  006F FF7B FFF6     	movff	postinc2,tblptrl
 20500  00079E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20501  0007A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20502  0007A4  6AF8               	clrf	tblptru,c
 20503  0007A6                     	endif
 20504  0007A6                     	if	0	;tblptru may be non-zero
 20505  0007A6                     	endif
 20506  0007A6  0008               	tblrd		*
 20507  0007A8  50F5               	movf	tablat,w,c
 20508  0007AA  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 20509  0007AC  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 20510  0007AE  504A               	movf	??_vfpfcnvrt^0,w,c
 20511  0007B0  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 20512  0007B2  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 20513  0007B4  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 20514  0007B6  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 20515  0007B8  E106               	bnz	u13910
 20516  0007BA  0E0A               	movlw	10
 20517  0007BC  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 20518  0007BE  B0D8               	btfsc	status,0,c
 20519  0007C0  D002               	goto	u13910
 20520  0007C2  0E01               	movlw	1
 20521  0007C4  D001               	goto	u13920
 20522  0007C6                     u13910:
 20523  0007C6  0E00               	movlw	0
 20524  0007C8                     u13920:
 20525  0007C8  0100               	movlb	0	; () banked
 20526  0007CA  6F6C               	movwf	_vfpfcnvrt$7242& (0+255),b
 20527  0007CC  6B6D               	clrf	(_vfpfcnvrt$7242+1)& (0+255),b
 20528                           
 20529                           ; BSR set to: 0
 20530  0007CE  516C               	movf	_vfpfcnvrt$7242& (0+255),w,b
 20531  0007D0  116D               	iorwf	(_vfpfcnvrt$7242+1)& (0+255),w,b
 20532  0007D2  A4D8               	btfss	status,2,c
 20533  0007D4  D7D4               	goto	l14405
 20534  0007D6                     u13930:
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20538  0007D6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20539  0007D8  6ED9               	movwf	fsr2l,c
 20540  0007DA  6ADA               	clrf	fsr2h,c
 20541  0007DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20542  0007E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20543  0007E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20544  0007E8  6AF8               	clrf	tblptru,c
 20545  0007EA                     	endif
 20546  0007EA                     	if	0	;tblptru may be non-zero
 20547  0007EA                     	endif
 20548  0007EA  0008               	tblrd		*
 20549  0007EC  50F5               	movf	tablat,w,c
 20550  0007EE  0A64               	xorlw	100
 20551  0007F0  B4D8               	btfsc	status,2,c
 20552  0007F2  D00F               	goto	u13950
 20553                           
 20554                           ; BSR set to: 0
 20555  0007F4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20556  0007F6  6ED9               	movwf	fsr2l,c
 20557  0007F8  6ADA               	clrf	fsr2h,c
 20558  0007FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20559  000800  006F FF77 FFF7     	movff	postdec2,tblptrh
 20560  000806                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20561  000806  6AF8               	clrf	tblptru,c
 20562  000808                     	endif
 20563  000808                     	if	0	;tblptru may be non-zero
 20564  000808                     	endif
 20565  000808  0008               	tblrd		*
 20566  00080A  50F5               	movf	tablat,w,c
 20567  00080C  0A69               	xorlw	105
 20568  00080E  A4D8               	btfss	status,2,c
 20569  000810  D044               	goto	l14425
 20570  000812                     u13950:
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20574  000812  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20575  000814  6ED9               	movwf	fsr2l,c
 20576  000816  6ADA               	clrf	fsr2h,c
 20577  000818  2ADE               	incf	postinc2,f,c
 20578  00081A  0E00               	movlw	0
 20579  00081C  22DD               	addwfc	postdec2,f,c
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20583  00081E  5049               	movf	vfpfcnvrt@ap^0,w,c
 20584  000820  6ED9               	movwf	fsr2l,c
 20585  000822  6ADA               	clrf	fsr2h,c
 20586  000824  50DF               	movf	indf2,w,c
 20587  000826  2ADF               	incf	indf2,f,c
 20588  000828  2ADF               	incf	indf2,f,c
 20589  00082A  6ED9               	movwf	fsr2l,c
 20590  00082C  6ADA               	clrf	fsr2h,c
 20591  00082E  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 20592  000834  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 20593  00083A  0E00               	movlw	0
 20594  00083C  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 20595  00083E  0EFF               	movlw	-1
 20596  000840  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 20597  000842  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 20598  000844  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 20599  000846  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 20600  000848  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 20601  00084A  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20605  00084C  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 20606  000852  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 20607  000858  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 20608  00085E  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 20609  000864  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 20610  00086A  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 20611  000870  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 20612  000876  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 20613  00087C  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 20614  000882  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 20615  000888  EC48  F010         	call	_dtoa	;wreg free
 20616  00088C  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 20617  000892  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 20618  000898  0012               	return	
 20619  00089A                     l14425:
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20623  00089A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20624  00089C  6ED9               	movwf	fsr2l,c
 20625  00089E  6ADA               	clrf	fsr2h,c
 20626  0008A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20627  0008A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20628  0008AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20629  0008AC  6AF8               	clrf	tblptru,c
 20630  0008AE                     	endif
 20631  0008AE                     	if	0	;tblptru may be non-zero
 20632  0008AE                     	endif
 20633  0008AE  0008               	tblrd		*
 20634  0008B0  50F5               	movf	tablat,w,c
 20635  0008B2  0A73               	xorlw	115
 20636  0008B4  A4D8               	btfss	status,2,c
 20637  0008B6  D022               	goto	l14435
 20638                           
 20639                           ; BSR set to: 0
 20640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20641  0008B8  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20642  0008BA  6ED9               	movwf	fsr2l,c
 20643  0008BC  6ADA               	clrf	fsr2h,c
 20644  0008BE  2ADE               	incf	postinc2,f,c
 20645  0008C0  0E00               	movlw	0
 20646  0008C2  22DD               	addwfc	postdec2,f,c
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20650  0008C4  5049               	movf	vfpfcnvrt@ap^0,w,c
 20651  0008C6  6ED9               	movwf	fsr2l,c
 20652  0008C8  6ADA               	clrf	fsr2h,c
 20653  0008CA  2ADF               	incf	indf2,f,c
 20654  0008CC  04DF               	decf	indf2,w,c
 20655  0008CE  6ED9               	movwf	fsr2l,c
 20656  0008D0  6ADA               	clrf	fsr2h,c
 20657  0008D2  006F FF78  F069    	movff	postinc2,vfpfcnvrt@cp
 20658                           
 20659                           ; BSR set to: 0
 20660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20661  0008D8  0060  F118  F00D   	movff	vfpfcnvrt@fp,stoa@fp
 20662  0008DE  0060  F11C  F00E   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 20663  0008E4  0060  F1A4  F00F   	movff	vfpfcnvrt@cp,stoa@s
 20664  0008EA  ECD9  F022         	call	_stoa	;wreg free
 20665  0008EE  0060  F034  F046   	movff	?_stoa,?_vfpfcnvrt
 20666  0008F4  0060  F038  F047   	movff	?_stoa+1,?_vfpfcnvrt+1
 20667  0008FA  0012               	return	
 20668  0008FC                     l14435:
 20669                           
 20670                           ; BSR set to: 0
 20671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20672  0008FC  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20673  0008FE  6ED9               	movwf	fsr2l,c
 20674  000900  6ADA               	clrf	fsr2h,c
 20675  000902  006F FF7B FFF6     	movff	postinc2,tblptrl
 20676  000908  006F FF77 FFF7     	movff	postdec2,tblptrh
 20677  00090E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20678  00090E  6AF8               	clrf	tblptru,c
 20679  000910                     	endif
 20680  000910                     	if	0	;tblptru may be non-zero
 20681  000910                     	endif
 20682  000910  0008               	tblrd		*
 20683  000912  50F5               	movf	tablat,w,c
 20684  000914  0A75               	xorlw	117
 20685  000916  A4D8               	btfss	status,2,c
 20686  000918  D047               	goto	l14445
 20687                           
 20688                           ; BSR set to: 0
 20689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20690  00091A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20691  00091C  6ED9               	movwf	fsr2l,c
 20692  00091E  6ADA               	clrf	fsr2h,c
 20693  000920  2ADE               	incf	postinc2,f,c
 20694  000922  0E00               	movlw	0
 20695  000924  22DD               	addwfc	postdec2,f,c
 20696                           
 20697                           ; BSR set to: 0
 20698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20699  000926  5049               	movf	vfpfcnvrt@ap^0,w,c
 20700  000928  6ED9               	movwf	fsr2l,c
 20701  00092A  6ADA               	clrf	fsr2h,c
 20702  00092C  50DF               	movf	indf2,w,c
 20703  00092E  2ADF               	incf	indf2,f,c
 20704  000930  2ADF               	incf	indf2,f,c
 20705  000932  6ED9               	movwf	fsr2l,c
 20706  000934  6ADA               	clrf	fsr2h,c
 20707  000936  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 20708  00093C  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 20709  000942  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 20710  000948  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 20711  00094E  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20712  000950  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20713  000952  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20714  000954  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20715  000956  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20716  000958  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20717                           
 20718                           ; BSR set to: 0
 20719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20720  00095A  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 20721  000960  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 20722  000966  0060  F1B8  F021   	movff	vfpfcnvrt@llu,utoa@d
 20723  00096C  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 20724  000972  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 20725  000978  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 20726  00097E  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 20727  000984  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 20728  00098A  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 20729  000990  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 20730  000996  EC67  F016         	call	_utoa	;wreg free
 20731  00099A  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 20732  0009A0  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 20733  0009A6  0012               	return	
 20734  0009A8                     l14445:
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 20738  0009A8  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20739  0009AA  6ED9               	movwf	fsr2l,c
 20740  0009AC  6ADA               	clrf	fsr2h,c
 20741  0009AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 20742  0009B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 20743  0009BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20744  0009BA  6AF8               	clrf	tblptru,c
 20745  0009BC                     	endif
 20746  0009BC                     	if	0	;tblptru may be non-zero
 20747  0009BC                     	endif
 20748  0009BC  0008               	tblrd		*
 20749  0009BE  50F5               	movf	tablat,w,c
 20750  0009C0  0A78               	xorlw	120
 20751  0009C2  B4D8               	btfsc	status,2,c
 20752  0009C4  D00F               	goto	u13990
 20753                           
 20754                           ; BSR set to: 0
 20755  0009C6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20756  0009C8  6ED9               	movwf	fsr2l,c
 20757  0009CA  6ADA               	clrf	fsr2h,c
 20758  0009CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20759  0009D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20760  0009D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20761  0009D8  6AF8               	clrf	tblptru,c
 20762  0009DA                     	endif
 20763  0009DA                     	if	0	;tblptru may be non-zero
 20764  0009DA                     	endif
 20765  0009DA  0008               	tblrd		*
 20766  0009DC  50F5               	movf	tablat,w,c
 20767  0009DE  0A58               	xorlw	88
 20768  0009E0  A4D8               	btfss	status,2,c
 20769  0009E2  D058               	goto	l14459
 20770  0009E4                     u13990:
 20771                           
 20772                           ; BSR set to: 0
 20773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 20774  0009E4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20775  0009E6  6ED9               	movwf	fsr2l,c
 20776  0009E8  6ADA               	clrf	fsr2h,c
 20777  0009EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20778  0009F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20779  0009F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20780  0009F6  6AF8               	clrf	tblptru,c
 20781  0009F8                     	endif
 20782  0009F8                     	if	0	;tblptru may be non-zero
 20783  0009F8                     	endif
 20784  0009F8  0008               	tblrd		*
 20785  0009FA  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 20786                           
 20787                           ; BSR set to: 0
 20788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 20789  000A00  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20790  000A02  6ED9               	movwf	fsr2l,c
 20791  000A04  6ADA               	clrf	fsr2h,c
 20792  000A06  2ADE               	incf	postinc2,f,c
 20793  000A08  0E00               	movlw	0
 20794  000A0A  22DD               	addwfc	postdec2,f,c
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20798  000A0C  5049               	movf	vfpfcnvrt@ap^0,w,c
 20799  000A0E  6ED9               	movwf	fsr2l,c
 20800  000A10  6ADA               	clrf	fsr2h,c
 20801  000A12  50DF               	movf	indf2,w,c
 20802  000A14  2ADF               	incf	indf2,f,c
 20803  000A16  2ADF               	incf	indf2,f,c
 20804  000A18  6ED9               	movwf	fsr2l,c
 20805  000A1A  6ADA               	clrf	fsr2h,c
 20806  000A1C  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 20807  000A22  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 20808  000A28  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 20809  000A2E  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 20810  000A34  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20811  000A36  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20812  000A38  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20813  000A3A  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20814  000A3C  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20815  000A3E  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 20819  000A40  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 20820  000A46  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 20821  000A4C  0060  F1B8  F021   	movff	vfpfcnvrt@llu,xtoa@d
 20822  000A52  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 20823  000A58  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 20824  000A5E  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 20825  000A64  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 20826  000A6A  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 20827  000A70  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 20828  000A76  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 20829  000A7C  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 20830  000A82  ECA0  F011         	call	_xtoa	;wreg free
 20831  000A86  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 20832  000A8C  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 20833  000A92  0012               	return	
 20834  000A94                     l14459:
 20835                           
 20836                           ; BSR set to: 0
 20837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 20838  000A94  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20839  000A96  6ED9               	movwf	fsr2l,c
 20840  000A98  6ADA               	clrf	fsr2h,c
 20841  000A9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20842  000AA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20843  000AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20844  000AA6  6AF8               	clrf	tblptru,c
 20845  000AA8                     	endif
 20846  000AA8                     	if	0	;tblptru may be non-zero
 20847  000AA8                     	endif
 20848  000AA8  0008               	tblrd		*
 20849  000AAA  50F5               	movf	tablat,w,c
 20850  000AAC  0A25               	xorlw	37
 20851  000AAE  A4D8               	btfss	status,2,c
 20852  000AB0  D017               	goto	l14469
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 20856  000AB2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20857  000AB4  6ED9               	movwf	fsr2l,c
 20858  000AB6  6ADA               	clrf	fsr2h,c
 20859  000AB8  2ADE               	incf	postinc2,f,c
 20860  000ABA  0E00               	movlw	0
 20861  000ABC  22DD               	addwfc	postdec2,f,c
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 20865  000ABE  0E00               	movlw	0
 20866  000AC0  6E05               	movwf	(fputc@c+1)^0,c
 20867  000AC2  0E25               	movlw	37
 20868  000AC4  6E04               	movwf	fputc@c^0,c
 20869  000AC6  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 20870  000ACC  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 20871  000AD2  ECC3  F03A         	call	_fputc	;wreg free
 20872  000AD6                     l14465:
 20873                           
 20874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 20875  000AD6  0E00               	movlw	0
 20876  000AD8  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 20877  000ADA  0E01               	movlw	1
 20878  000ADC  6E46               	movwf	?_vfpfcnvrt^0,c
 20879  000ADE  0012               	return	
 20880  000AE0                     l14469:
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 20884  000AE0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20885  000AE2  6ED9               	movwf	fsr2l,c
 20886  000AE4  6ADA               	clrf	fsr2h,c
 20887  000AE6  2ADE               	incf	postinc2,f,c
 20888  000AE8  0E00               	movlw	0
 20889  000AEA  22DD               	addwfc	postdec2,f,c
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 20893  000AEC  0E00               	movlw	0
 20894  000AEE  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 20895  000AF0  0E00               	movlw	0
 20896  000AF2  6E46               	movwf	?_vfpfcnvrt^0,c
 20897  000AF4  0012               	return	
 20898  000AF6                     l14475:
 20899                           
 20900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 20901  000AF6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20902  000AF8  6ED9               	movwf	fsr2l,c
 20903  000AFA  6ADA               	clrf	fsr2h,c
 20904  000AFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20905  000B02  006F FF77 FFF7     	movff	postdec2,tblptrh
 20906  000B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20907  000B08  6AF8               	clrf	tblptru,c
 20908  000B0A                     	endif
 20909  000B0A                     	if	0	;tblptru may be non-zero
 20910  000B0A                     	endif
 20911  000B0A  0008               	tblrd		*
 20912  000B0C  50F5               	movf	tablat,w,c
 20913  000B0E  6E04               	movwf	fputc@c^0,c
 20914  000B10  6A05               	clrf	(fputc@c+1)^0,c
 20915  000B12  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 20916  000B18  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 20917  000B1E  ECC3  F03A         	call	_fputc	;wreg free
 20918                           
 20919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 20920  000B22  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20921  000B24  6ED9               	movwf	fsr2l,c
 20922  000B26  6ADA               	clrf	fsr2h,c
 20923  000B28  2ADE               	incf	postinc2,f,c
 20924  000B2A  0E00               	movlw	0
 20925  000B2C  22DD               	addwfc	postdec2,f,c
 20926  000B2E  D7D3               	goto	l14465
 20927  000B30                     __end_of_vfpfcnvrt:
 20928                           	opt callstack 0
 20929                           
 20930 ;; *************** function _xtoa *****************
 20931 ;; Defined at:
 20932 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20933 ;; Parameters:    Size  Location     Type
 20934 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 20935 ;;		 -> NULL(0), 
 20936 ;;  d               8   32[COMRAM] unsigned long long 
 20937 ;;  x               1   40[COMRAM] unsigned char 
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;  n               8   57[COMRAM] unsigned long long 
 20940 ;;  c               2   67[COMRAM] int 
 20941 ;;  i               2   65[COMRAM] int 
 20942 ;;  w               2   55[COMRAM] int 
 20943 ;;  p               2   53[COMRAM] int 
 20944 ;; Return value:  Size  Location     Type
 20945 ;;                  2   30[COMRAM] int 
 20946 ;; Registers used:
 20947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20948 ;; Tracked objects:
 20949 ;;		On entry : 3F/0
 20950 ;;		On exit  : 0/0
 20951 ;;		Unchanged: 0/0
 20952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20953 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20954 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20955 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20956 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20957 ;;Total ram usage:       39 bytes
 20958 ;; Hardware stack levels used:    1
 20959 ;; Hardware stack levels required when called:   12
 20960 ;; This function calls:
 20961 ;;		_isalpha
 20962 ;;		_isupper
 20963 ;;		_pad
 20964 ;;		_toupper
 20965 ;; This function is called by:
 20966 ;;		_vfpfcnvrt
 20967 ;; This function uses a non-reentrant model
 20968 ;;
 20969                           
 20970                           	psect	text126
 20971  002340                     __ptext126:
 20972                           	opt callstack 0
 20973  002340                     _xtoa:
 20974                           	opt callstack 12
 20975                           
 20976                           ; BSR set to: 0
 20977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 20978                           
 20979                           ;incstack = 0
 20980  002340  AFDD               	btfss	(_prec+1)& (0+255),7,b
 20981                           
 20982                           ; BSR set to: 0
 20983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 20984  002342  93DE               	bcf	_flags& (0+255),1,b
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 20988  002344  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 20989  002346  D005               	goto	u13570
 20990  002348  51DD               	movf	(_prec+1)& (0+255),w,b
 20991  00234A  E108               	bnz	l3127
 20992  00234C  05DC               	decf	_prec& (0+255),w,b
 20993  00234E  B0D8               	btfsc	status,0,c
 20994  002350  D005               	goto	l3127
 20995  002352                     u13570:
 20996                           
 20997                           ; BSR set to: 0
 20998  002352  0E00               	movlw	0
 20999  002354  6E37               	movwf	(xtoa@p+1)^0,c
 21000  002356  0E01               	movlw	1
 21001  002358  6E36               	movwf	xtoa@p^0,c
 21002  00235A  D006               	goto	l3129
 21003  00235C                     l3127:
 21004                           
 21005                           ; BSR set to: 0
 21006  00235C  0060  F370  F036   	movff	_prec,xtoa@p
 21007  002362  0060  F374  F037   	movff	_prec+1,xtoa@p+1
 21008  002368                     l3129:
 21009                           
 21010                           ; BSR set to: 0
 21011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 21012  002368  0060  F368  F038   	movff	_width,xtoa@w
 21013  00236E  0060  F36C  F039   	movff	_width+1,xtoa@w+1
 21014                           
 21015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 21016  002374  A9DE               	btfss	_flags& (0+255),4,b
 21017  002376  D004               	goto	l14217
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 21021  002378  0EFE               	movlw	254
 21022  00237A  2638               	addwf	xtoa@w^0,f,c
 21023  00237C  0EFF               	movlw	255
 21024  00237E  2239               	addwfc	(xtoa@w+1)^0,f,c
 21025  002380                     l14217:
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 21029  002380  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 21030  002386  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 21031  00238C  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 21032  002392  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 21033  002398  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 21034  00239E  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 21035  0023A4  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 21036  0023AA  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 21037                           
 21038                           ; BSR set to: 0
 21039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 21040  0023B0  0E00               	movlw	0
 21041  0023B2  6E43               	movwf	(xtoa@i+1)^0,c
 21042  0023B4  0E1F               	movlw	31
 21043  0023B6  6E42               	movwf	xtoa@i^0,c
 21044                           
 21045                           ; BSR set to: 0
 21046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 21047  0023B8  0E00               	movlw	0
 21048  0023BA  0101               	movlb	1	; () banked
 21049  0023BC  6F94               	movwf	(_dbuf+31)& (0+255),b
 21050                           
 21051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21052  0023BE  D0A8               	goto	l14253
 21053  0023C0                     l14223:
 21054                           
 21055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 21056  0023C0  0642               	decf	xtoa@i^0,f,c
 21057  0023C2  A0D8               	btfss	status,0,c
 21058  0023C4  0643               	decf	(xtoa@i+1)^0,f,c
 21059                           
 21060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 21061  0023C6  0E0F               	movlw	15
 21062  0023C8  143A               	andwf	xtoa@n^0,w,c
 21063  0023CA  6E44               	movwf	xtoa@c^0,c
 21064  0023CC  6A45               	clrf	(xtoa@c+1)^0,c
 21065                           
 21066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 21067  0023CE  BE45               	btfsc	(xtoa@c+1)^0,7,c
 21068  0023D0  D008               	goto	l14231
 21069  0023D2  5045               	movf	(xtoa@c+1)^0,w,c
 21070  0023D4  E104               	bnz	u13590
 21071  0023D6  0E0A               	movlw	10
 21072  0023D8  5C44               	subwf	xtoa@c^0,w,c
 21073  0023DA  A0D8               	btfss	status,0,c
 21074  0023DC  D002               	goto	l14231
 21075  0023DE                     u13590:
 21076  0023DE  0E57               	movlw	87
 21077  0023E0  D001               	goto	L23
 21078  0023E2                     l14231:
 21079  0023E2  0E30               	movlw	48
 21080  0023E4                     L23:
 21081  0023E4  2444               	addwf	xtoa@c^0,w,c
 21082  0023E6  6E44               	movwf	xtoa@c^0,c
 21083  0023E8  0E00               	movlw	0
 21084  0023EA  2045               	addwfc	(xtoa@c+1)^0,w,c
 21085  0023EC  6E45               	movwf	(xtoa@c+1)^0,c
 21086                           
 21087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 21088  0023EE  0EBF               	movlw	191
 21089  0023F0  6E2A               	movwf	??_xtoa^0,c
 21090  0023F2  0EFF               	movlw	255
 21091  0023F4  6E2B               	movwf	(??_xtoa+1)^0,c
 21092  0023F6  5029               	movf	xtoa@x^0,w,c
 21093  0023F8  6E2C               	movwf	(??_xtoa+2)^0,c
 21094  0023FA  6A2D               	clrf	(??_xtoa+3)^0,c
 21095  0023FC  502A               	movf	??_xtoa^0,w,c
 21096  0023FE  262C               	addwf	(??_xtoa+2)^0,f,c
 21097  002400  502B               	movf	(??_xtoa+1)^0,w,c
 21098  002402  222D               	addwfc	(??_xtoa+3)^0,f,c
 21099  002404  502D               	movf	(??_xtoa+3)^0,w,c
 21100  002406  E106               	bnz	u13600
 21101  002408  0E1A               	movlw	26
 21102  00240A  5C2C               	subwf	(??_xtoa+2)^0,w,c
 21103  00240C  B0D8               	btfsc	status,0,c
 21104  00240E  D002               	goto	u13600
 21105  002410  0E01               	movlw	1
 21106  002412  D001               	goto	u13610
 21107  002414                     u13600:
 21108  002414  0E00               	movlw	0
 21109  002416                     u13610:
 21110  002416  6E32               	movwf	_xtoa$7227^0,c
 21111  002418  6A33               	clrf	(_xtoa$7227+1)^0,c
 21112  00241A  5032               	movf	_xtoa$7227^0,w,c
 21113  00241C  1033               	iorwf	(_xtoa$7227+1)^0,w,c
 21114  00241E  B4D8               	btfsc	status,2,c
 21115  002420  D02B               	goto	l14245
 21116  002422  0E9F               	movlw	159
 21117  002424  6E2A               	movwf	??_xtoa^0,c
 21118  002426  0EFF               	movlw	255
 21119  002428  6E2B               	movwf	(??_xtoa+1)^0,c
 21120  00242A  0E20               	movlw	32
 21121  00242C  1044               	iorwf	xtoa@c^0,w,c
 21122  00242E  6E2C               	movwf	(??_xtoa+2)^0,c
 21123  002430  0E00               	movlw	0
 21124  002432  1045               	iorwf	(xtoa@c+1)^0,w,c
 21125  002434  6E2D               	movwf	(??_xtoa+3)^0,c
 21126  002436  502A               	movf	??_xtoa^0,w,c
 21127  002438  262C               	addwf	(??_xtoa+2)^0,f,c
 21128  00243A  502B               	movf	(??_xtoa+1)^0,w,c
 21129  00243C  222D               	addwfc	(??_xtoa+3)^0,f,c
 21130  00243E  502D               	movf	(??_xtoa+3)^0,w,c
 21131  002440  E106               	bnz	u13630
 21132  002442  0E1A               	movlw	26
 21133  002444  5C2C               	subwf	(??_xtoa+2)^0,w,c
 21134  002446  B0D8               	btfsc	status,0,c
 21135  002448  D002               	goto	u13630
 21136  00244A  0E01               	movlw	1
 21137  00244C  D001               	goto	u13640
 21138  00244E                     u13630:
 21139  00244E  0E00               	movlw	0
 21140  002450                     u13640:
 21141  002450  6E34               	movwf	_xtoa$7228^0,c
 21142  002452  6A35               	clrf	(_xtoa$7228+1)^0,c
 21143  002454  5034               	movf	_xtoa$7228^0,w,c
 21144  002456  1035               	iorwf	(_xtoa$7228+1)^0,w,c
 21145  002458  B4D8               	btfsc	status,2,c
 21146  00245A  D00E               	goto	l14245
 21147                           
 21148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 21149  00245C  0060  F110  F008   	movff	xtoa@c,toupper@c
 21150  002462  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 21151  002468  ECE9  F03D         	call	_toupper	;wreg free
 21152  00246C  0060  F020  F044   	movff	?_toupper,xtoa@c
 21153  002472  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 21154  002478                     l14245:
 21155                           
 21156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 21157  002478  0E75               	movlw	low _dbuf
 21158  00247A  2442               	addwf	xtoa@i^0,w,c
 21159  00247C  6ED9               	movwf	fsr2l,c
 21160  00247E  0E01               	movlw	high _dbuf
 21161  002480  2043               	addwfc	(xtoa@i+1)^0,w,c
 21162  002482  6EDA               	movwf	fsr2h,c
 21163  002484  0060  F113  FFDF   	movff	xtoa@c,indf2
 21164                           
 21165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 21166  00248A  0636               	decf	xtoa@p^0,f,c
 21167  00248C  A0D8               	btfss	status,0,c
 21168  00248E  0637               	decf	(xtoa@p+1)^0,f,c
 21169                           
 21170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 21171  002490  0638               	decf	xtoa@w^0,f,c
 21172  002492  A0D8               	btfss	status,0,c
 21173  002494  0639               	decf	(xtoa@w+1)^0,f,c
 21174                           
 21175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 21176  002496  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 21177  00249C  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 21178  0024A2  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 21179  0024A8  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 21180  0024AE  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 21181  0024B4  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 21182  0024BA  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 21183  0024C0  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 21184  0024C6  0E05               	movlw	5
 21185  0024C8  D009               	goto	u13660
 21186  0024CA                     u13665:
 21187  0024CA  90D8               	bcf	status,0,c
 21188  0024CC  3231               	rrcf	(??_xtoa+7)^0,f,c
 21189  0024CE  3230               	rrcf	(??_xtoa+6)^0,f,c
 21190  0024D0  322F               	rrcf	(??_xtoa+5)^0,f,c
 21191  0024D2  322E               	rrcf	(??_xtoa+4)^0,f,c
 21192  0024D4  322D               	rrcf	(??_xtoa+3)^0,f,c
 21193  0024D6  322C               	rrcf	(??_xtoa+2)^0,f,c
 21194  0024D8  322B               	rrcf	(??_xtoa+1)^0,f,c
 21195  0024DA  322A               	rrcf	??_xtoa^0,f,c
 21196  0024DC                     u13660:
 21197  0024DC  2EE8               	decfsz	wreg,f,c
 21198  0024DE  D7F5               	goto	u13665
 21199  0024E0  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 21200  0024E6  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 21201  0024EC  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 21202  0024F2  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 21203  0024F8  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 21204  0024FE  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 21205  002504  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 21206  00250A  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 21207  002510                     l14253:
 21208                           
 21209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21210  002510  BE43               	btfsc	(xtoa@i+1)^0,7,c
 21211  002512  D021               	goto	u13710
 21212  002514  5043               	movf	(xtoa@i+1)^0,w,c
 21213  002516  E104               	bnz	u13670
 21214  002518  0E02               	movlw	2
 21215  00251A  5C42               	subwf	xtoa@i^0,w,c
 21216  00251C  A0D8               	btfss	status,0,c
 21217  00251E  D01B               	goto	u13710
 21218  002520                     u13670:
 21219  002520  503A               	movf	xtoa@n^0,w,c
 21220  002522  103B               	iorwf	(xtoa@n+1)^0,w,c
 21221  002524  103C               	iorwf	(xtoa@n+2)^0,w,c
 21222  002526  103D               	iorwf	(xtoa@n+3)^0,w,c
 21223  002528  103E               	iorwf	(xtoa@n+4)^0,w,c
 21224  00252A  103F               	iorwf	(xtoa@n+5)^0,w,c
 21225  00252C  1040               	iorwf	(xtoa@n+6)^0,w,c
 21226  00252E  1041               	iorwf	(xtoa@n+7)^0,w,c
 21227  002530  A4D8               	btfss	status,2,c
 21228  002532  D746               	goto	l14223
 21229  002534  BE37               	btfsc	(xtoa@p+1)^0,7,c
 21230  002536  D005               	goto	u13690
 21231  002538  5037               	movf	(xtoa@p+1)^0,w,c
 21232  00253A  E102               	bnz	u13691
 21233  00253C  0436               	decf	xtoa@p^0,w,c
 21234  00253E  B0D8               	btfsc	status,0,c
 21235  002540                     u13691:
 21236  002540  D73F               	goto	l14223
 21237  002542                     u13690:
 21238  002542  BE39               	btfsc	(xtoa@w+1)^0,7,c
 21239  002544  D008               	goto	u13710
 21240  002546  5039               	movf	(xtoa@w+1)^0,w,c
 21241  002548  E103               	bnz	u13700
 21242  00254A  0438               	decf	xtoa@w^0,w,c
 21243  00254C  A0D8               	btfss	status,0,c
 21244  00254E  D003               	goto	u13710
 21245  002550                     u13700:
 21246  002550  0100               	movlb	0	; () banked
 21247  002552  B3DE               	btfsc	_flags& (0+255),1,b
 21248  002554  D735               	goto	l14223
 21249  002556                     u13710:
 21250                           
 21251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 21252  002556  0100               	movlb	0	; () banked
 21253  002558  A9DE               	btfss	_flags& (0+255),4,b
 21254  00255A  D017               	goto	l14269
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 21258  00255C  0642               	decf	xtoa@i^0,f,c
 21259  00255E  A0D8               	btfss	status,0,c
 21260  002560  0643               	decf	(xtoa@i+1)^0,f,c
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 21264  002562  0E75               	movlw	low _dbuf
 21265  002564  2442               	addwf	xtoa@i^0,w,c
 21266  002566  6ED9               	movwf	fsr2l,c
 21267  002568  0E01               	movlw	high _dbuf
 21268  00256A  2043               	addwfc	(xtoa@i+1)^0,w,c
 21269  00256C  6EDA               	movwf	fsr2h,c
 21270  00256E  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 21271                           
 21272                           ; BSR set to: 0
 21273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 21274  002574  0642               	decf	xtoa@i^0,f,c
 21275  002576  A0D8               	btfss	status,0,c
 21276  002578  0643               	decf	(xtoa@i+1)^0,f,c
 21277                           
 21278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 21279  00257A  0E75               	movlw	low _dbuf
 21280  00257C  2442               	addwf	xtoa@i^0,w,c
 21281  00257E  6ED9               	movwf	fsr2l,c
 21282  002580  0E01               	movlw	high _dbuf
 21283  002582  2043               	addwfc	(xtoa@i+1)^0,w,c
 21284  002584  6EDA               	movwf	fsr2h,c
 21285  002586  0E30               	movlw	48
 21286  002588  6EDF               	movwf	indf2,c
 21287  00258A                     l14269:
 21288                           
 21289                           ; BSR set to: 0
 21290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 21291  00258A  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 21292  002590  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 21293  002596  0E75               	movlw	low _dbuf
 21294  002598  2442               	addwf	xtoa@i^0,w,c
 21295  00259A  6E16               	movwf	pad@buf^0,c
 21296  00259C  0E01               	movlw	high _dbuf
 21297  00259E  2043               	addwfc	(xtoa@i+1)^0,w,c
 21298  0025A0  6E17               	movwf	(pad@buf+1)^0,c
 21299  0025A2  0060  F0E0  F018   	movff	xtoa@w,pad@p
 21300  0025A8  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 21301  0025AE  EC92  F032         	call	_pad	;wreg free
 21302  0025B2  0060  F050  F01F   	movff	?_pad,?_xtoa
 21303  0025B8  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 21304  0025BE  0012               	return		;funcret
 21305  0025C0                     __end_of_xtoa:
 21306                           	opt callstack 0
 21307                           
 21308 ;; *************** function _toupper *****************
 21309 ;; Defined at:
 21310 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 21311 ;; Parameters:    Size  Location     Type
 21312 ;;  c               2    7[COMRAM] int 
 21313 ;; Auto vars:     Size  Location     Type
 21314 ;;		None
 21315 ;; Return value:  Size  Location     Type
 21316 ;;                  2    7[COMRAM] int 
 21317 ;; Registers used:
 21318 ;;		wreg, status,2, status,0
 21319 ;; Tracked objects:
 21320 ;;		On entry : 0/0
 21321 ;;		On exit  : 0/0
 21322 ;;		Unchanged: 0/0
 21323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21327 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21328 ;;Total ram usage:        8 bytes
 21329 ;; Hardware stack levels used:    1
 21330 ;; Hardware stack levels required when called:    8
 21331 ;; This function calls:
 21332 ;;		_islower
 21333 ;; This function is called by:
 21334 ;;		_xtoa
 21335 ;;		___strtoxl
 21336 ;; This function uses a non-reentrant model
 21337 ;;
 21338                           
 21339                           	psect	text127
 21340  007BD2                     __ptext127:
 21341                           	opt callstack 0
 21342  007BD2                     _toupper:
 21343                           	opt callstack 15
 21344                           
 21345                           ;incstack = 0
 21346  007BD2  0E9F               	movlw	159
 21347  007BD4  6E0A               	movwf	??_toupper^0,c
 21348  007BD6  0EFF               	movlw	255
 21349  007BD8  6E0B               	movwf	(??_toupper+1)^0,c
 21350  007BDA  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 21351  007BE0  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 21352  007BE6  500A               	movf	??_toupper^0,w,c
 21353  007BE8  260C               	addwf	(??_toupper+2)^0,f,c
 21354  007BEA  500B               	movf	(??_toupper+1)^0,w,c
 21355  007BEC  220D               	addwfc	(??_toupper+3)^0,f,c
 21356  007BEE  500D               	movf	(??_toupper+3)^0,w,c
 21357  007BF0  E106               	bnz	u12980
 21358  007BF2  0E1A               	movlw	26
 21359  007BF4  5C0C               	subwf	(??_toupper+2)^0,w,c
 21360  007BF6  B0D8               	btfsc	status,0,c
 21361  007BF8  D002               	goto	u12980
 21362  007BFA  0E01               	movlw	1
 21363  007BFC  D001               	goto	u12990
 21364  007BFE                     u12980:
 21365  007BFE  0E00               	movlw	0
 21366  007C00                     u12990:
 21367  007C00  6E0E               	movwf	_toupper$7868^0,c
 21368  007C02  6A0F               	clrf	(_toupper$7868+1)^0,c
 21369  007C04  500E               	movf	_toupper$7868^0,w,c
 21370  007C06  100F               	iorwf	(_toupper$7868+1)^0,w,c
 21371  007C08  B4D8               	btfsc	status,2,c
 21372  007C0A  D005               	goto	l4032
 21373  007C0C  0E5F               	movlw	95
 21374  007C0E  1408               	andwf	toupper@c^0,w,c
 21375  007C10  6E08               	movwf	?_toupper^0,c
 21376  007C12  6A09               	clrf	(?_toupper+1)^0,c
 21377  007C14  0012               	return	
 21378  007C16                     l4032:
 21379  007C16  0060  F020  F008   	movff	toupper@c,?_toupper
 21380  007C1C  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 21381  007C22  0012               	return		;funcret
 21382  007C24                     __end_of_toupper:
 21383                           	opt callstack 0
 21384                           
 21385 ;; *************** function _islower *****************
 21386 ;; Defined at:
 21387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  c               2    1[COMRAM] int 
 21390 ;; Auto vars:     Size  Location     Type
 21391 ;;		None
 21392 ;; Return value:  Size  Location     Type
 21393 ;;                  2    1[COMRAM] int 
 21394 ;; Registers used:
 21395 ;;		wreg, status,2, status,0
 21396 ;; Tracked objects:
 21397 ;;		On entry : 0/0
 21398 ;;		On exit  : 0/0
 21399 ;;		Unchanged: 0/0
 21400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21403 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21404 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21405 ;;Total ram usage:        6 bytes
 21406 ;; Hardware stack levels used:    1
 21407 ;; Hardware stack levels required when called:    7
 21408 ;; This function calls:
 21409 ;;		Nothing
 21410 ;; This function is called by:
 21411 ;;		_toupper
 21412 ;; This function uses a non-reentrant model
 21413 ;;
 21414                           
 21415                           	psect	text128
 21416  008570                     __ptext128:
 21417                           	opt callstack 0
 21418  008570                     _islower:
 21419                           	opt callstack 15
 21420                           
 21421                           ;incstack = 0
 21422  008570  0E9F               	movlw	159
 21423  008572  6E04               	movwf	??_islower^0,c
 21424  008574  0EFF               	movlw	255
 21425  008576  6E05               	movwf	(??_islower+1)^0,c
 21426  008578  0060  F008  F006   	movff	islower@c,??_islower+2
 21427  00857E  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 21428  008584  5004               	movf	??_islower^0,w,c
 21429  008586  2606               	addwf	(??_islower+2)^0,f,c
 21430  008588  5005               	movf	(??_islower+1)^0,w,c
 21431  00858A  2207               	addwfc	(??_islower+3)^0,f,c
 21432  00858C  5007               	movf	(??_islower+3)^0,w,c
 21433  00858E  E106               	bnz	u12870
 21434  008590  0E1A               	movlw	26
 21435  008592  5C06               	subwf	(??_islower+2)^0,w,c
 21436  008594  B0D8               	btfsc	status,0,c
 21437  008596  D002               	goto	u12870
 21438  008598  0E01               	movlw	1
 21439  00859A  D001               	goto	u12880
 21440  00859C                     u12870:
 21441  00859C  0E00               	movlw	0
 21442  00859E                     u12880:
 21443  00859E  6E02               	movwf	?_islower^0,c
 21444  0085A0  6A03               	clrf	(?_islower+1)^0,c
 21445  0085A2  0012               	return		;funcret
 21446  0085A4                     __end_of_islower:
 21447                           	opt callstack 0
 21448                           
 21449 ;; *************** function _isupper *****************
 21450 ;; Defined at:
 21451 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 21452 ;; Parameters:    Size  Location     Type
 21453 ;;  c               2    1[COMRAM] int 
 21454 ;; Auto vars:     Size  Location     Type
 21455 ;;		None
 21456 ;; Return value:  Size  Location     Type
 21457 ;;                  2    1[COMRAM] int 
 21458 ;; Registers used:
 21459 ;;		wreg, status,2, status,0
 21460 ;; Tracked objects:
 21461 ;;		On entry : 0/0
 21462 ;;		On exit  : 0/0
 21463 ;;		Unchanged: 0/0
 21464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21468 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21469 ;;Total ram usage:        6 bytes
 21470 ;; Hardware stack levels used:    1
 21471 ;; Hardware stack levels required when called:    7
 21472 ;; This function calls:
 21473 ;;		Nothing
 21474 ;; This function is called by:
 21475 ;;		_xtoa
 21476 ;; This function uses a non-reentrant model
 21477 ;;
 21478                           
 21479                           	psect	text129
 21480  0085A4                     __ptext129:
 21481                           	opt callstack 0
 21482  0085A4                     _isupper:
 21483                           	opt callstack 16
 21484                           
 21485                           ;incstack = 0
 21486  0085A4  0EBF               	movlw	191
 21487  0085A6  6E04               	movwf	??_isupper^0,c
 21488  0085A8  0EFF               	movlw	255
 21489  0085AA  6E05               	movwf	(??_isupper+1)^0,c
 21490  0085AC  0060  F008  F006   	movff	isupper@c,??_isupper+2
 21491  0085B2  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 21492  0085B8  5004               	movf	??_isupper^0,w,c
 21493  0085BA  2606               	addwf	(??_isupper+2)^0,f,c
 21494  0085BC  5005               	movf	(??_isupper+1)^0,w,c
 21495  0085BE  2207               	addwfc	(??_isupper+3)^0,f,c
 21496  0085C0  5007               	movf	(??_isupper+3)^0,w,c
 21497  0085C2  E106               	bnz	u12940
 21498  0085C4  0E1A               	movlw	26
 21499  0085C6  5C06               	subwf	(??_isupper+2)^0,w,c
 21500  0085C8  B0D8               	btfsc	status,0,c
 21501  0085CA  D002               	goto	u12940
 21502  0085CC  0E01               	movlw	1
 21503  0085CE  D001               	goto	u12950
 21504  0085D0                     u12940:
 21505  0085D0  0E00               	movlw	0
 21506  0085D2                     u12950:
 21507  0085D2  6E02               	movwf	?_isupper^0,c
 21508  0085D4  6A03               	clrf	(?_isupper+1)^0,c
 21509  0085D6  0012               	return		;funcret
 21510  0085D8                     __end_of_isupper:
 21511                           	opt callstack 0
 21512                           
 21513 ;; *************** function _isalpha *****************
 21514 ;; Defined at:
 21515 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 21516 ;; Parameters:    Size  Location     Type
 21517 ;;  c               2    1[COMRAM] int 
 21518 ;; Auto vars:     Size  Location     Type
 21519 ;;		None
 21520 ;; Return value:  Size  Location     Type
 21521 ;;                  2    1[COMRAM] int 
 21522 ;; Registers used:
 21523 ;;		wreg, status,2, status,0
 21524 ;; Tracked objects:
 21525 ;;		On entry : 0/0
 21526 ;;		On exit  : 0/0
 21527 ;;		Unchanged: 0/0
 21528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21533 ;;Total ram usage:        6 bytes
 21534 ;; Hardware stack levels used:    1
 21535 ;; Hardware stack levels required when called:    7
 21536 ;; This function calls:
 21537 ;;		Nothing
 21538 ;; This function is called by:
 21539 ;;		_xtoa
 21540 ;;		___strtoxl
 21541 ;; This function uses a non-reentrant model
 21542 ;;
 21543                           
 21544                           	psect	text130
 21545  0085D8                     __ptext130:
 21546                           	opt callstack 0
 21547  0085D8                     _isalpha:
 21548                           	opt callstack 16
 21549                           
 21550                           ;incstack = 0
 21551  0085D8  0E9F               	movlw	159
 21552  0085DA  6E04               	movwf	??_isalpha^0,c
 21553  0085DC  0EFF               	movlw	255
 21554  0085DE  6E05               	movwf	(??_isalpha+1)^0,c
 21555  0085E0  0E20               	movlw	32
 21556  0085E2  1002               	iorwf	isalpha@c^0,w,c
 21557  0085E4  6E06               	movwf	(??_isalpha+2)^0,c
 21558  0085E6  0E00               	movlw	0
 21559  0085E8  1003               	iorwf	(isalpha@c+1)^0,w,c
 21560  0085EA  6E07               	movwf	(??_isalpha+3)^0,c
 21561  0085EC  5004               	movf	??_isalpha^0,w,c
 21562  0085EE  2606               	addwf	(??_isalpha+2)^0,f,c
 21563  0085F0  5005               	movf	(??_isalpha+1)^0,w,c
 21564  0085F2  2207               	addwfc	(??_isalpha+3)^0,f,c
 21565  0085F4  5007               	movf	(??_isalpha+3)^0,w,c
 21566  0085F6  E106               	bnz	u12960
 21567  0085F8  0E1A               	movlw	26
 21568  0085FA  5C06               	subwf	(??_isalpha+2)^0,w,c
 21569  0085FC  B0D8               	btfsc	status,0,c
 21570  0085FE  D002               	goto	u12960
 21571  008600  0E01               	movlw	1
 21572  008602  D001               	goto	u12970
 21573  008604                     u12960:
 21574  008604  0E00               	movlw	0
 21575  008606                     u12970:
 21576  008606  6E02               	movwf	?_isalpha^0,c
 21577  008608  6A03               	clrf	(?_isalpha+1)^0,c
 21578  00860A  0012               	return		;funcret
 21579  00860C                     __end_of_isalpha:
 21580                           	opt callstack 0
 21581                           
 21582 ;; *************** function _utoa *****************
 21583 ;; Defined at:
 21584 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21585 ;; Parameters:    Size  Location     Type
 21586 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 21587 ;;		 -> NULL(0), 
 21588 ;;  d               8   32[COMRAM] unsigned long long 
 21589 ;; Auto vars:     Size  Location     Type
 21590 ;;  n               8   52[COMRAM] unsigned long long 
 21591 ;;  i               2   60[COMRAM] int 
 21592 ;;  w               2   50[COMRAM] int 
 21593 ;;  p               2   48[COMRAM] int 
 21594 ;; Return value:  Size  Location     Type
 21595 ;;                  2   30[COMRAM] int 
 21596 ;; Registers used:
 21597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21598 ;; Tracked objects:
 21599 ;;		On entry : 3F/0
 21600 ;;		On exit  : 0/0
 21601 ;;		Unchanged: 0/0
 21602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21603 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21604 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21605 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21606 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21607 ;;Total ram usage:       32 bytes
 21608 ;; Hardware stack levels used:    1
 21609 ;; Hardware stack levels required when called:   12
 21610 ;; This function calls:
 21611 ;;		___lodiv
 21612 ;;		___lomod
 21613 ;;		_pad
 21614 ;; This function is called by:
 21615 ;;		_vfpfcnvrt
 21616 ;; This function uses a non-reentrant model
 21617 ;;
 21618                           
 21619                           	psect	text131
 21620  002CCE                     __ptext131:
 21621                           	opt callstack 0
 21622  002CCE                     _utoa:
 21623                           	opt callstack 12
 21624                           
 21625                           ; BSR set to: 0
 21626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 21627                           
 21628                           ;incstack = 0
 21629  002CCE  AFDD               	btfss	(_prec+1)& (0+255),7,b
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 21633  002CD0  93DE               	bcf	_flags& (0+255),1,b
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 21637  002CD2  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 21638  002CD4  D005               	goto	u13500
 21639  002CD6  51DD               	movf	(_prec+1)& (0+255),w,b
 21640  002CD8  E108               	bnz	l3112
 21641  002CDA  05DC               	decf	_prec& (0+255),w,b
 21642  002CDC  B0D8               	btfsc	status,0,c
 21643  002CDE  D005               	goto	l3112
 21644  002CE0                     u13500:
 21645                           
 21646                           ; BSR set to: 0
 21647  002CE0  0E00               	movlw	0
 21648  002CE2  6E32               	movwf	(utoa@p+1)^0,c
 21649  002CE4  0E01               	movlw	1
 21650  002CE6  6E31               	movwf	utoa@p^0,c
 21651  002CE8  D006               	goto	l3114
 21652  002CEA                     l3112:
 21653                           
 21654                           ; BSR set to: 0
 21655  002CEA  0060  F370  F031   	movff	_prec,utoa@p
 21656  002CF0  0060  F374  F032   	movff	_prec+1,utoa@p+1
 21657  002CF6                     l3114:
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 21661  002CF6  0060  F368  F033   	movff	_width,utoa@w
 21662  002CFC  0060  F36C  F034   	movff	_width+1,utoa@w+1
 21663                           
 21664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 21665  002D02  0060  F084  F035   	movff	utoa@d,utoa@n
 21666  002D08  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 21667  002D0E  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 21668  002D14  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 21669  002D1A  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 21670  002D20  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 21671  002D26  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 21672  002D2C  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 21676  002D32  0E00               	movlw	0
 21677  002D34  6E3E               	movwf	(utoa@i+1)^0,c
 21678  002D36  0E1F               	movlw	31
 21679  002D38  6E3D               	movwf	utoa@i^0,c
 21680                           
 21681                           ; BSR set to: 0
 21682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 21683  002D3A  0E00               	movlw	0
 21684  002D3C  0101               	movlb	1	; () banked
 21685  002D3E  6F94               	movwf	(_dbuf+31)& (0+255),b
 21686                           
 21687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21688  002D40  D096               	goto	l14193
 21689  002D42                     l14183:
 21690                           
 21691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 21692  002D42  063D               	decf	utoa@i^0,f,c
 21693  002D44  A0D8               	btfss	status,0,c
 21694  002D46  063E               	decf	(utoa@i+1)^0,f,c
 21695                           
 21696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 21697  002D48  0E75               	movlw	low _dbuf
 21698  002D4A  243D               	addwf	utoa@i^0,w,c
 21699  002D4C  6ED9               	movwf	fsr2l,c
 21700  002D4E  0E01               	movlw	high _dbuf
 21701  002D50  203E               	addwfc	(utoa@i+1)^0,w,c
 21702  002D52  6EDA               	movwf	fsr2h,c
 21703  002D54  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 21704  002D5A  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 21705  002D60  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 21706  002D66  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 21707  002D6C  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 21708  002D72  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 21709  002D78  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 21710  002D7E  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 21711  002D84  0E0A               	movlw	10
 21712  002D86  6E0A               	movwf	___lomod@divisor^0,c
 21713  002D88  0E00               	movlw	0
 21714  002D8A  6E0B               	movwf	(___lomod@divisor+1)^0,c
 21715  002D8C  0E00               	movlw	0
 21716  002D8E  6E0C               	movwf	(___lomod@divisor+2)^0,c
 21717  002D90  0E00               	movlw	0
 21718  002D92  6E0D               	movwf	(___lomod@divisor+3)^0,c
 21719  002D94  0E00               	movlw	0
 21720  002D96  6E0E               	movwf	(___lomod@divisor+4)^0,c
 21721  002D98  0E00               	movlw	0
 21722  002D9A  6E0F               	movwf	(___lomod@divisor+5)^0,c
 21723  002D9C  0E00               	movlw	0
 21724  002D9E  6E10               	movwf	(___lomod@divisor+6)^0,c
 21725  002DA0  0E00               	movlw	0
 21726  002DA2  6E11               	movwf	(___lomod@divisor+7)^0,c
 21727  002DA4  EC33  F032         	call	___lomod	;wreg free
 21728  002DA8  0060  F008  F029   	movff	?___lomod,??_utoa
 21729  002DAE  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 21730  002DB4  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 21731  002DBA  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 21732  002DC0  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 21733  002DC6  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 21734  002DCC  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 21735  002DD2  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 21736  002DD8  5029               	movf	??_utoa^0,w,c
 21737  002DDA  0F30               	addlw	48
 21738  002DDC  6EDF               	movwf	indf2,c
 21739                           
 21740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 21741  002DDE  0631               	decf	utoa@p^0,f,c
 21742  002DE0  A0D8               	btfss	status,0,c
 21743  002DE2  0632               	decf	(utoa@p+1)^0,f,c
 21744                           
 21745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 21746  002DE4  0633               	decf	utoa@w^0,f,c
 21747  002DE6  A0D8               	btfss	status,0,c
 21748  002DE8  0634               	decf	(utoa@w+1)^0,f,c
 21749                           
 21750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 21751  002DEA  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 21752  002DF0  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 21753  002DF6  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 21754  002DFC  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 21755  002E02  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 21756  002E08  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 21757  002E0E  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 21758  002E14  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 21759  002E1A  0E0A               	movlw	10
 21760  002E1C  6E0A               	movwf	___lodiv@divisor^0,c
 21761  002E1E  0E00               	movlw	0
 21762  002E20  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 21763  002E22  0E00               	movlw	0
 21764  002E24  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 21765  002E26  0E00               	movlw	0
 21766  002E28  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 21767  002E2A  0E00               	movlw	0
 21768  002E2C  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 21769  002E2E  0E00               	movlw	0
 21770  002E30  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 21771  002E32  0E00               	movlw	0
 21772  002E34  6E10               	movwf	(___lodiv@divisor+6)^0,c
 21773  002E36  0E00               	movlw	0
 21774  002E38  6E11               	movwf	(___lodiv@divisor+7)^0,c
 21775  002E3A  ECEE  F02C         	call	___lodiv	;wreg free
 21776  002E3E  0060  F008  F035   	movff	?___lodiv,utoa@n
 21777  002E44  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 21778  002E4A  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 21779  002E50  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 21780  002E56  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 21781  002E5C  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 21782  002E62  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 21783  002E68  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 21784  002E6E                     l14193:
 21785                           
 21786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21787  002E6E  503D               	movf	utoa@i^0,w,c
 21788  002E70  103E               	iorwf	(utoa@i+1)^0,w,c
 21789  002E72  B4D8               	btfsc	status,2,c
 21790  002E74  D01B               	goto	u13550
 21791  002E76  5035               	movf	utoa@n^0,w,c
 21792  002E78  1036               	iorwf	(utoa@n+1)^0,w,c
 21793  002E7A  1037               	iorwf	(utoa@n+2)^0,w,c
 21794  002E7C  1038               	iorwf	(utoa@n+3)^0,w,c
 21795  002E7E  1039               	iorwf	(utoa@n+4)^0,w,c
 21796  002E80  103A               	iorwf	(utoa@n+5)^0,w,c
 21797  002E82  103B               	iorwf	(utoa@n+6)^0,w,c
 21798  002E84  103C               	iorwf	(utoa@n+7)^0,w,c
 21799  002E86  A4D8               	btfss	status,2,c
 21800  002E88  D75C               	goto	l14183
 21801  002E8A  BE32               	btfsc	(utoa@p+1)^0,7,c
 21802  002E8C  D005               	goto	u13530
 21803  002E8E  5032               	movf	(utoa@p+1)^0,w,c
 21804  002E90  E102               	bnz	u13531
 21805  002E92  0431               	decf	utoa@p^0,w,c
 21806  002E94  B0D8               	btfsc	status,0,c
 21807  002E96                     u13531:
 21808  002E96  D755               	goto	l14183
 21809  002E98                     u13530:
 21810  002E98  BE34               	btfsc	(utoa@w+1)^0,7,c
 21811  002E9A  D008               	goto	u13550
 21812  002E9C  5034               	movf	(utoa@w+1)^0,w,c
 21813  002E9E  E103               	bnz	u13540
 21814  002EA0  0433               	decf	utoa@w^0,w,c
 21815  002EA2  A0D8               	btfss	status,0,c
 21816  002EA4  D003               	goto	u13550
 21817  002EA6                     u13540:
 21818  002EA6  0100               	movlb	0	; () banked
 21819  002EA8  B3DE               	btfsc	_flags& (0+255),1,b
 21820  002EAA  D74B               	goto	l14183
 21821  002EAC                     u13550:
 21822                           
 21823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 21824  002EAC  0060  F07C  F014   	movff	utoa@fp,pad@fp
 21825  002EB2  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 21826  002EB8  0E75               	movlw	low _dbuf
 21827  002EBA  243D               	addwf	utoa@i^0,w,c
 21828  002EBC  6E16               	movwf	pad@buf^0,c
 21829  002EBE  0E01               	movlw	high _dbuf
 21830  002EC0  203E               	addwfc	(utoa@i+1)^0,w,c
 21831  002EC2  6E17               	movwf	(pad@buf+1)^0,c
 21832  002EC4  0060  F0CC  F018   	movff	utoa@w,pad@p
 21833  002ECA  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 21834  002ED0  EC92  F032         	call	_pad	;wreg free
 21835  002ED4  0060  F050  F01F   	movff	?_pad,?_utoa
 21836  002EDA  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 21837  002EE0  0012               	return		;funcret
 21838  002EE2                     __end_of_utoa:
 21839                           	opt callstack 0
 21840                           
 21841 ;; *************** function ___lomod *****************
 21842 ;; Defined at:
 21843 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 21844 ;; Parameters:    Size  Location     Type
 21845 ;;  dividend        8    1[COMRAM] unsigned long long 
 21846 ;;  divisor         8    9[COMRAM] unsigned long long 
 21847 ;; Auto vars:     Size  Location     Type
 21848 ;;  counter         1   17[COMRAM] unsigned char 
 21849 ;; Return value:  Size  Location     Type
 21850 ;;                  8    1[COMRAM] unsigned long long 
 21851 ;; Registers used:
 21852 ;;		wreg, status,2, status,0
 21853 ;; Tracked objects:
 21854 ;;		On entry : 0/1
 21855 ;;		On exit  : 0/0
 21856 ;;		Unchanged: 0/0
 21857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21858 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21861 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;Total ram usage:       17 bytes
 21863 ;; Hardware stack levels used:    1
 21864 ;; Hardware stack levels required when called:    7
 21865 ;; This function calls:
 21866 ;;		Nothing
 21867 ;; This function is called by:
 21868 ;;		_utoa
 21869 ;; This function uses a non-reentrant model
 21870 ;;
 21871                           
 21872                           	psect	text132
 21873  006466                     __ptext132:
 21874                           	opt callstack 0
 21875  006466                     ___lomod:
 21876                           	opt callstack 16
 21877                           
 21878                           ;incstack = 0
 21879  006466  500A               	movf	___lomod@divisor^0,w,c
 21880  006468  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 21881  00646A  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 21882  00646C  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 21883  00646E  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 21884  006470  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 21885  006472  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 21886  006474  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 21887  006476  B4D8               	btfsc	status,2,c
 21888  006478  D03C               	goto	l3644
 21889  00647A  0E01               	movlw	1
 21890  00647C  6E12               	movwf	___lomod@counter^0,c
 21891  00647E  D00A               	goto	l14045
 21892  006480                     l14043:
 21893  006480  90D8               	bcf	status,0,c
 21894  006482  360A               	rlcf	___lomod@divisor^0,f,c
 21895  006484  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 21896  006486  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 21897  006488  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 21898  00648A  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 21899  00648C  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 21900  00648E  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 21901  006490  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 21902  006492  2A12               	incf	___lomod@counter^0,f,c
 21903  006494                     l14045:
 21904  006494  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 21905  006496  D7F4               	goto	l14043
 21906  006498                     u13210:
 21907  006498  500A               	movf	___lomod@divisor^0,w,c
 21908  00649A  5C02               	subwf	___lomod@dividend^0,w,c
 21909  00649C  500B               	movf	(___lomod@divisor+1)^0,w,c
 21910  00649E  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 21911  0064A0  500C               	movf	(___lomod@divisor+2)^0,w,c
 21912  0064A2  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 21913  0064A4  500D               	movf	(___lomod@divisor+3)^0,w,c
 21914  0064A6  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 21915  0064A8  500E               	movf	(___lomod@divisor+4)^0,w,c
 21916  0064AA  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 21917  0064AC  500F               	movf	(___lomod@divisor+5)^0,w,c
 21918  0064AE  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 21919  0064B0  5010               	movf	(___lomod@divisor+6)^0,w,c
 21920  0064B2  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 21921  0064B4  5011               	movf	(___lomod@divisor+7)^0,w,c
 21922  0064B6  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 21923  0064B8  A0D8               	btfss	status,0,c
 21924  0064BA  D010               	goto	l14051
 21925  0064BC  500A               	movf	___lomod@divisor^0,w,c
 21926  0064BE  5E02               	subwf	___lomod@dividend^0,f,c
 21927  0064C0  500B               	movf	(___lomod@divisor+1)^0,w,c
 21928  0064C2  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 21929  0064C4  500C               	movf	(___lomod@divisor+2)^0,w,c
 21930  0064C6  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 21931  0064C8  500D               	movf	(___lomod@divisor+3)^0,w,c
 21932  0064CA  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 21933  0064CC  500E               	movf	(___lomod@divisor+4)^0,w,c
 21934  0064CE  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 21935  0064D0  500F               	movf	(___lomod@divisor+5)^0,w,c
 21936  0064D2  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 21937  0064D4  5010               	movf	(___lomod@divisor+6)^0,w,c
 21938  0064D6  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 21939  0064D8  5011               	movf	(___lomod@divisor+7)^0,w,c
 21940  0064DA  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 21941  0064DC                     l14051:
 21942  0064DC  90D8               	bcf	status,0,c
 21943  0064DE  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 21944  0064E0  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 21945  0064E2  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 21946  0064E4  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 21947  0064E6  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 21948  0064E8  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 21949  0064EA  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 21950  0064EC  320A               	rrcf	___lomod@divisor^0,f,c
 21951  0064EE  2E12               	decfsz	___lomod@counter^0,f,c
 21952  0064F0  D7D3               	goto	u13210
 21953  0064F2                     l3644:
 21954  0064F2  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 21955  0064F8  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 21956  0064FE  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 21957  006504  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 21958  00650A  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 21959  006510  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 21960  006516  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 21961  00651C  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 21962  006522  0012               	return		;funcret
 21963  006524                     __end_of___lomod:
 21964                           	opt callstack 0
 21965                           
 21966 ;; *************** function ___lodiv *****************
 21967 ;; Defined at:
 21968 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 21969 ;; Parameters:    Size  Location     Type
 21970 ;;  dividend        8    1[COMRAM] unsigned long long 
 21971 ;;  divisor         8    9[COMRAM] unsigned long long 
 21972 ;; Auto vars:     Size  Location     Type
 21973 ;;  quotient        8   17[COMRAM] unsigned long long 
 21974 ;;  counter         1   25[COMRAM] unsigned char 
 21975 ;; Return value:  Size  Location     Type
 21976 ;;                  8    1[COMRAM] unsigned long long 
 21977 ;; Registers used:
 21978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21979 ;; Tracked objects:
 21980 ;;		On entry : 0/1
 21981 ;;		On exit  : 0/0
 21982 ;;		Unchanged: 0/0
 21983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21984 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21985 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21987 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21988 ;;Total ram usage:       25 bytes
 21989 ;; Hardware stack levels used:    1
 21990 ;; Hardware stack levels required when called:    7
 21991 ;; This function calls:
 21992 ;;		Nothing
 21993 ;; This function is called by:
 21994 ;;		_utoa
 21995 ;; This function uses a non-reentrant model
 21996 ;;
 21997                           
 21998                           	psect	text133
 21999  0059DC                     __ptext133:
 22000                           	opt callstack 0
 22001  0059DC                     ___lodiv:
 22002                           	opt callstack 16
 22003                           
 22004                           ;incstack = 0
 22005  0059DC  EE20  F012         	lfsr	2,___lodiv@quotient
 22006  0059E0  0E07               	movlw	7
 22007  0059E2                     u13161:
 22008  0059E2  6ADE               	clrf	postinc2,c
 22009  0059E4  06E8               	decf	wreg,f,c
 22010  0059E6  E2FD               	bc	u13161
 22011  0059E8  500A               	movf	___lodiv@divisor^0,w,c
 22012  0059EA  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 22013  0059EC  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 22014  0059EE  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 22015  0059F0  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 22016  0059F2  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 22017  0059F4  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 22018  0059F6  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 22019  0059F8  B4D8               	btfsc	status,2,c
 22020  0059FA  D046               	goto	l3634
 22021  0059FC  0E01               	movlw	1
 22022  0059FE  6E1A               	movwf	___lodiv@counter^0,c
 22023  005A00  D00A               	goto	l14025
 22024  005A02                     l14023:
 22025  005A02  90D8               	bcf	status,0,c
 22026  005A04  360A               	rlcf	___lodiv@divisor^0,f,c
 22027  005A06  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 22028  005A08  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 22029  005A0A  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 22030  005A0C  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 22031  005A0E  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 22032  005A10  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 22033  005A12  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 22034  005A14  2A1A               	incf	___lodiv@counter^0,f,c
 22035  005A16                     l14025:
 22036  005A16  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 22037  005A18  D7F4               	goto	l14023
 22038  005A1A                     u13180:
 22039  005A1A  90D8               	bcf	status,0,c
 22040  005A1C  3612               	rlcf	___lodiv@quotient^0,f,c
 22041  005A1E  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 22042  005A20  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 22043  005A22  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 22044  005A24  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 22045  005A26  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 22046  005A28  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 22047  005A2A  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 22048  005A2C  500A               	movf	___lodiv@divisor^0,w,c
 22049  005A2E  5C02               	subwf	___lodiv@dividend^0,w,c
 22050  005A30  500B               	movf	(___lodiv@divisor+1)^0,w,c
 22051  005A32  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 22052  005A34  500C               	movf	(___lodiv@divisor+2)^0,w,c
 22053  005A36  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 22054  005A38  500D               	movf	(___lodiv@divisor+3)^0,w,c
 22055  005A3A  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 22056  005A3C  500E               	movf	(___lodiv@divisor+4)^0,w,c
 22057  005A3E  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 22058  005A40  500F               	movf	(___lodiv@divisor+5)^0,w,c
 22059  005A42  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 22060  005A44  5010               	movf	(___lodiv@divisor+6)^0,w,c
 22061  005A46  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 22062  005A48  5011               	movf	(___lodiv@divisor+7)^0,w,c
 22063  005A4A  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 22064  005A4C  A0D8               	btfss	status,0,c
 22065  005A4E  D011               	goto	l14035
 22066  005A50  500A               	movf	___lodiv@divisor^0,w,c
 22067  005A52  5E02               	subwf	___lodiv@dividend^0,f,c
 22068  005A54  500B               	movf	(___lodiv@divisor+1)^0,w,c
 22069  005A56  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 22070  005A58  500C               	movf	(___lodiv@divisor+2)^0,w,c
 22071  005A5A  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 22072  005A5C  500D               	movf	(___lodiv@divisor+3)^0,w,c
 22073  005A5E  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 22074  005A60  500E               	movf	(___lodiv@divisor+4)^0,w,c
 22075  005A62  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 22076  005A64  500F               	movf	(___lodiv@divisor+5)^0,w,c
 22077  005A66  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 22078  005A68  5010               	movf	(___lodiv@divisor+6)^0,w,c
 22079  005A6A  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 22080  005A6C  5011               	movf	(___lodiv@divisor+7)^0,w,c
 22081  005A6E  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 22082  005A70  8012               	bsf	___lodiv@quotient^0,0,c
 22083  005A72                     l14035:
 22084  005A72  90D8               	bcf	status,0,c
 22085  005A74  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 22086  005A76  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 22087  005A78  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 22088  005A7A  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 22089  005A7C  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 22090  005A7E  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 22091  005A80  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 22092  005A82  320A               	rrcf	___lodiv@divisor^0,f,c
 22093  005A84  2E1A               	decfsz	___lodiv@counter^0,f,c
 22094  005A86  D7C9               	goto	u13180
 22095  005A88                     l3634:
 22096  005A88  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 22097  005A8E  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 22098  005A94  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 22099  005A9A  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 22100  005AA0  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 22101  005AA6  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 22102  005AAC  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 22103  005AB2  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 22104  005AB8  0012               	return		;funcret
 22105  005ABA                     __end_of___lodiv:
 22106                           	opt callstack 0
 22107                           
 22108 ;; *************** function _stoa *****************
 22109 ;; Defined at:
 22110 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22111 ;; Parameters:    Size  Location     Type
 22112 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 22113 ;;		 -> NULL(0), 
 22114 ;;  s               1   14[COMRAM] PTR unsigned char 
 22115 ;;		 -> ?_printf(2), appDataInd@data(65), 
 22116 ;; Auto vars:     Size  Location     Type
 22117 ;;  nuls            7   16[COMRAM] unsigned char [7]
 22118 ;;  l               2   30[COMRAM] int 
 22119 ;;  p               2   28[COMRAM] int 
 22120 ;;  w               2   25[COMRAM] int 
 22121 ;;  i               2   23[COMRAM] int 
 22122 ;;  cp              1   27[COMRAM] PTR unsigned char 
 22123 ;;		 -> ?_printf(2), stoa@nuls(7), appDataInd@data(65), 
 22124 ;; Return value:  Size  Location     Type
 22125 ;;                  2   12[COMRAM] int 
 22126 ;; Registers used:
 22127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22128 ;; Tracked objects:
 22129 ;;		On entry : 3F/0
 22130 ;;		On exit  : 0/0
 22131 ;;		Unchanged: 0/0
 22132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22134 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22136 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22137 ;;Total ram usage:       20 bytes
 22138 ;; Hardware stack levels used:    1
 22139 ;; Hardware stack levels required when called:   10
 22140 ;; This function calls:
 22141 ;;		_fputc
 22142 ;;		_strlen
 22143 ;; This function is called by:
 22144 ;;		_vfpfcnvrt
 22145 ;; This function uses a non-reentrant model
 22146 ;;
 22147                           
 22148                           	psect	text134
 22149  0045B2                     __ptext134:
 22150                           	opt callstack 0
 22151  0045B2                     _stoa:
 22152                           	opt callstack 14
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 22156                           
 22157                           ;incstack = 0
 22158  0045B2  EE20  F1EE         	lfsr	2,stoa@F1139
 22159  0045B6  EE10  F011         	lfsr	1,stoa@nuls
 22160  0045BA  0E06               	movlw	6
 22161  0045BC                     u13401:
 22162  0045BC  006F FF6F FFE3     	movff	plusw2,plusw1
 22163  0045C2  06E8               	decf	wreg,f,c
 22164  0045C4  E2FB               	bc	u13401
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 22168  0045C6  0060  F03C  F01C   	movff	stoa@s,stoa@cp
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 22172  0045CC  501C               	movf	stoa@cp^0,w,c
 22173  0045CE  A4D8               	btfss	status,2,c
 22174  0045D0  D002               	goto	l14137
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 22178  0045D2  0E11               	movlw	low stoa@nuls
 22179  0045D4  6E1C               	movwf	stoa@cp^0,c
 22180  0045D6                     l14137:
 22181                           
 22182                           ; BSR set to: 0
 22183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 22184  0045D6  0060  F070  F002   	movff	stoa@cp,strlen@s
 22185  0045DC  6A03               	clrf	(strlen@s+1)^0,c
 22186  0045DE  EC3B  F03E         	call	_strlen	;wreg free
 22187  0045E2  0060  F008  F01F   	movff	?_strlen,stoa@l
 22188  0045E8  0060  F00C  F020   	movff	?_strlen+1,stoa@l+1
 22189                           
 22190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 22191  0045EE  0060  F370  F01D   	movff	_prec,stoa@p
 22192  0045F4  0060  F374  F01E   	movff	_prec+1,stoa@p+1
 22193                           
 22194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 22195  0045FA  BE1E               	btfsc	(stoa@p+1)^0,7,c
 22196  0045FC  D010               	goto	l3093
 22197  0045FE  501F               	movf	stoa@l^0,w,c
 22198  004600  5C1D               	subwf	stoa@p^0,w,c
 22199  004602  501E               	movf	(stoa@p+1)^0,w,c
 22200  004604  0A80               	xorlw	128
 22201  004606  6E10               	movwf	??_stoa^0,c
 22202  004608  5020               	movf	(stoa@l+1)^0,w,c
 22203  00460A  0A80               	xorlw	128
 22204  00460C  5810               	subwfb	??_stoa^0,w,c
 22205  00460E  B0D8               	btfsc	status,0,c
 22206  004610  D006               	goto	l3093
 22207  004612  0060  F074  F01F   	movff	stoa@p,stoa@l
 22208  004618  0060  F078  F020   	movff	stoa@p+1,stoa@l+1
 22209  00461E                     l3093:
 22210                           
 22211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 22212  00461E  0060  F07C  F01D   	movff	stoa@l,stoa@p
 22213  004624  0060  F080  F01E   	movff	stoa@l+1,stoa@p+1
 22214                           
 22215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 22216  00462A  0060  F368  F01A   	movff	_width,stoa@w
 22217  004630  0060  F36C  F01B   	movff	_width+1,stoa@w+1
 22218                           
 22219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 22220  004636  0100               	movlb	0	; () banked
 22221  004638  A1DE               	btfss	_flags& (0+255),0,b
 22222  00463A  D00F               	goto	l14151
 22223  00463C  D018               	goto	u13450
 22224  00463E                     l14147:
 22225                           
 22226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 22227  00463E  0E00               	movlw	0
 22228  004640  6E05               	movwf	(fputc@c+1)^0,c
 22229  004642  0E20               	movlw	32
 22230  004644  6E04               	movwf	fputc@c^0,c
 22231  004646  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22232  00464C  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22233  004652  ECC3  F03A         	call	_fputc	;wreg free
 22234                           
 22235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 22236  004656  4A1F               	infsnz	stoa@l^0,f,c
 22237  004658  2A20               	incf	(stoa@l+1)^0,f,c
 22238  00465A                     l14151:
 22239                           
 22240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 22241  00465A  501A               	movf	stoa@w^0,w,c
 22242  00465C  5C1F               	subwf	stoa@l^0,w,c
 22243  00465E  5020               	movf	(stoa@l+1)^0,w,c
 22244  004660  0A80               	xorlw	128
 22245  004662  6E10               	movwf	??_stoa^0,c
 22246  004664  501B               	movf	(stoa@w+1)^0,w,c
 22247  004666  0A80               	xorlw	128
 22248  004668  5810               	subwfb	??_stoa^0,w,c
 22249  00466A  A0D8               	btfss	status,0,c
 22250  00466C  D7E8               	goto	l14147
 22251  00466E                     u13450:
 22252                           
 22253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 22254  00466E  0E00               	movlw	0
 22255  004670  6E19               	movwf	(stoa@i+1)^0,c
 22256  004672  0E00               	movlw	0
 22257  004674  6E18               	movwf	stoa@i^0,c
 22258                           
 22259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 22260  004676  D013               	goto	l14161
 22261  004678                     l14155:
 22262                           
 22263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 22264  004678  501C               	movf	stoa@cp^0,w,c
 22265  00467A  6ED9               	movwf	fsr2l,c
 22266  00467C  6ADA               	clrf	fsr2h,c
 22267  00467E  50DF               	movf	indf2,w,c
 22268  004680  6E10               	movwf	??_stoa^0,c
 22269  004682  5010               	movf	??_stoa^0,w,c
 22270  004684  6E04               	movwf	fputc@c^0,c
 22271  004686  6A05               	clrf	(fputc@c+1)^0,c
 22272  004688  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22273  00468E  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22274  004694  ECC3  F03A         	call	_fputc	;wreg free
 22275                           
 22276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 22277  004698  2A1C               	incf	stoa@cp^0,f,c
 22278                           
 22279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 22280  00469A  4A18               	infsnz	stoa@i^0,f,c
 22281  00469C  2A19               	incf	(stoa@i+1)^0,f,c
 22282  00469E                     l14161:
 22283                           
 22284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 22285  00469E  501D               	movf	stoa@p^0,w,c
 22286  0046A0  5C18               	subwf	stoa@i^0,w,c
 22287  0046A2  5019               	movf	(stoa@i+1)^0,w,c
 22288  0046A4  0A80               	xorlw	128
 22289  0046A6  6E10               	movwf	??_stoa^0,c
 22290  0046A8  501E               	movf	(stoa@p+1)^0,w,c
 22291  0046AA  0A80               	xorlw	128
 22292  0046AC  5810               	subwfb	??_stoa^0,w,c
 22293  0046AE  A0D8               	btfss	status,0,c
 22294  0046B0  D7E3               	goto	l14155
 22295                           
 22296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 22297  0046B2  0100               	movlb	0	; () banked
 22298  0046B4  B1DE               	btfsc	_flags& (0+255),0,b
 22299  0046B6  D00F               	goto	l14169
 22300  0046B8  D018               	goto	u13480
 22301  0046BA                     l14165:
 22302                           
 22303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 22304  0046BA  0E00               	movlw	0
 22305  0046BC  6E05               	movwf	(fputc@c+1)^0,c
 22306  0046BE  0E20               	movlw	32
 22307  0046C0  6E04               	movwf	fputc@c^0,c
 22308  0046C2  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22309  0046C8  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22310  0046CE  ECC3  F03A         	call	_fputc	;wreg free
 22311                           
 22312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 22313  0046D2  4A1F               	infsnz	stoa@l^0,f,c
 22314  0046D4  2A20               	incf	(stoa@l+1)^0,f,c
 22315  0046D6                     l14169:
 22316                           
 22317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 22318  0046D6  501A               	movf	stoa@w^0,w,c
 22319  0046D8  5C1F               	subwf	stoa@l^0,w,c
 22320  0046DA  5020               	movf	(stoa@l+1)^0,w,c
 22321  0046DC  0A80               	xorlw	128
 22322  0046DE  6E10               	movwf	??_stoa^0,c
 22323  0046E0  501B               	movf	(stoa@w+1)^0,w,c
 22324  0046E2  0A80               	xorlw	128
 22325  0046E4  5810               	subwfb	??_stoa^0,w,c
 22326  0046E6  A0D8               	btfss	status,0,c
 22327  0046E8  D7E8               	goto	l14165
 22328  0046EA                     u13480:
 22329                           
 22330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 22331                           
 22332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
 22333  0046EA  0060  F07C  F00D   	movff	stoa@l,?_stoa
 22334  0046F0  0060  F080  F00E   	movff	stoa@l+1,?_stoa+1
 22335  0046F6  0012               	return		;funcret
 22336  0046F8                     __end_of_stoa:
 22337                           	opt callstack 0
 22338                           
 22339 ;; *************** function _dtoa *****************
 22340 ;; Defined at:
 22341 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22342 ;; Parameters:    Size  Location     Type
 22343 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 22344 ;;		 -> NULL(0), 
 22345 ;;  d               8   32[COMRAM] long long 
 22346 ;; Auto vars:     Size  Location     Type
 22347 ;;  n               8   56[COMRAM] long long 
 22348 ;;  i               2   64[COMRAM] int 
 22349 ;;  s               2   54[COMRAM] int 
 22350 ;;  w               2   52[COMRAM] int 
 22351 ;;  p               2   50[COMRAM] int 
 22352 ;; Return value:  Size  Location     Type
 22353 ;;                  2   30[COMRAM] int 
 22354 ;; Registers used:
 22355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22356 ;; Tracked objects:
 22357 ;;		On entry : 3F/0
 22358 ;;		On exit  : 0/0
 22359 ;;		Unchanged: 0/0
 22360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22361 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22362 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22363 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22364 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22365 ;;Total ram usage:       36 bytes
 22366 ;; Hardware stack levels used:    1
 22367 ;; Hardware stack levels required when called:   12
 22368 ;; This function calls:
 22369 ;;		___aodiv
 22370 ;;		___aomod
 22371 ;;		_abs
 22372 ;;		_pad
 22373 ;; This function is called by:
 22374 ;;		_vfpfcnvrt
 22375 ;; This function uses a non-reentrant model
 22376 ;;
 22377                           
 22378                           	psect	text135
 22379  002090                     __ptext135:
 22380                           	opt callstack 0
 22381  002090                     _dtoa:
 22382                           	opt callstack 12
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 22386                           
 22387                           ;incstack = 0
 22388  002090  0060  F084  F039   	movff	dtoa@d,dtoa@n
 22389  002096  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 22390  00209C  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 22391  0020A2  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 22392  0020A8  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 22393  0020AE  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 22394  0020B4  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 22395  0020BA  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 22396                           
 22397                           ; BSR set to: 0
 22398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 22399  0020C0  AE40               	btfss	(dtoa@n+7)^0,7,c
 22400  0020C2  D002               	goto	u13250
 22401  0020C4  0E01               	movlw	1
 22402  0020C6  D001               	goto	u13260
 22403  0020C8                     u13250:
 22404  0020C8  0E00               	movlw	0
 22405  0020CA                     u13260:
 22406  0020CA  6E37               	movwf	dtoa@s^0,c
 22407  0020CC  6A38               	clrf	(dtoa@s+1)^0,c
 22408                           
 22409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 22410  0020CE  5037               	movf	dtoa@s^0,w,c
 22411  0020D0  1038               	iorwf	(dtoa@s+1)^0,w,c
 22412  0020D2  B4D8               	btfsc	status,2,c
 22413  0020D4  D010               	goto	l14073
 22414                           
 22415                           ; BSR set to: 0
 22416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 22417  0020D6  1E40               	comf	(dtoa@n+7)^0,f,c
 22418  0020D8  1E3F               	comf	(dtoa@n+6)^0,f,c
 22419  0020DA  1E3E               	comf	(dtoa@n+5)^0,f,c
 22420  0020DC  1E3D               	comf	(dtoa@n+4)^0,f,c
 22421  0020DE  1E3C               	comf	(dtoa@n+3)^0,f,c
 22422  0020E0  1E3B               	comf	(dtoa@n+2)^0,f,c
 22423  0020E2  1E3A               	comf	(dtoa@n+1)^0,f,c
 22424  0020E4  6C39               	negf	dtoa@n^0,c
 22425  0020E6  0E00               	movlw	0
 22426  0020E8  223A               	addwfc	(dtoa@n+1)^0,f,c
 22427  0020EA  223B               	addwfc	(dtoa@n+2)^0,f,c
 22428  0020EC  223C               	addwfc	(dtoa@n+3)^0,f,c
 22429  0020EE  223D               	addwfc	(dtoa@n+4)^0,f,c
 22430  0020F0  223E               	addwfc	(dtoa@n+5)^0,f,c
 22431  0020F2  223F               	addwfc	(dtoa@n+6)^0,f,c
 22432  0020F4  2240               	addwfc	(dtoa@n+7)^0,f,c
 22433  0020F6                     l14073:
 22434                           
 22435                           ; BSR set to: 0
 22436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 22437  0020F6  AFDD               	btfss	(_prec+1)& (0+255),7,b
 22438                           
 22439                           ; BSR set to: 0
 22440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 22441  0020F8  93DE               	bcf	_flags& (0+255),1,b
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 22445  0020FA  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 22446  0020FC  D005               	goto	u13290
 22447  0020FE  51DD               	movf	(_prec+1)& (0+255),w,b
 22448  002100  E108               	bnz	l3064
 22449  002102  05DC               	decf	_prec& (0+255),w,b
 22450  002104  B0D8               	btfsc	status,0,c
 22451  002106  D005               	goto	l3064
 22452  002108                     u13290:
 22453                           
 22454                           ; BSR set to: 0
 22455  002108  0E00               	movlw	0
 22456  00210A  6E34               	movwf	(dtoa@p+1)^0,c
 22457  00210C  0E01               	movlw	1
 22458  00210E  6E33               	movwf	dtoa@p^0,c
 22459  002110  D006               	goto	l3066
 22460  002112                     l3064:
 22461                           
 22462                           ; BSR set to: 0
 22463  002112  0060  F370  F033   	movff	_prec,dtoa@p
 22464  002118  0060  F374  F034   	movff	_prec+1,dtoa@p+1
 22465  00211E                     l3066:
 22466                           
 22467                           ; BSR set to: 0
 22468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 22469  00211E  0060  F368  F035   	movff	_width,dtoa@w
 22470  002124  0060  F36C  F036   	movff	_width+1,dtoa@w+1
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 22474  00212A  5037               	movf	dtoa@s^0,w,c
 22475  00212C  1038               	iorwf	(dtoa@s+1)^0,w,c
 22476  00212E  A4D8               	btfss	status,2,c
 22477  002130  D002               	goto	u13310
 22478                           
 22479                           ; BSR set to: 0
 22480  002132  A5DE               	btfss	_flags& (0+255),2,b
 22481  002134  D003               	goto	l14087
 22482  002136                     u13310:
 22483                           
 22484                           ; BSR set to: 0
 22485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 22486  002136  0635               	decf	dtoa@w^0,f,c
 22487  002138  A0D8               	btfss	status,0,c
 22488  00213A  0636               	decf	(dtoa@w+1)^0,f,c
 22489  00213C                     l14087:
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 22493  00213C  0E00               	movlw	0
 22494  00213E  6E42               	movwf	(dtoa@i+1)^0,c
 22495  002140  0E1F               	movlw	31
 22496  002142  6E41               	movwf	dtoa@i^0,c
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 22500  002144  0E00               	movlw	0
 22501  002146  0101               	movlb	1	; () banked
 22502  002148  6F94               	movwf	(_dbuf+31)& (0+255),b
 22503                           
 22504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22505  00214A  D09E               	goto	l14101
 22506  00214C                     l14091:
 22507                           
 22508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 22509  00214C  0641               	decf	dtoa@i^0,f,c
 22510  00214E  A0D8               	btfss	status,0,c
 22511  002150  0642               	decf	(dtoa@i+1)^0,f,c
 22512                           
 22513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 22514  002152  0E75               	movlw	low _dbuf
 22515  002154  2441               	addwf	dtoa@i^0,w,c
 22516  002156  6ED9               	movwf	fsr2l,c
 22517  002158  0E01               	movlw	high _dbuf
 22518  00215A  2042               	addwfc	(dtoa@i+1)^0,w,c
 22519  00215C  6EDA               	movwf	fsr2h,c
 22520  00215E  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 22521  002164  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 22522  00216A  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 22523  002170  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 22524  002176  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 22525  00217C  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 22526  002182  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 22527  002188  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 22528  00218E  0E0A               	movlw	10
 22529  002190  6E0A               	movwf	___aomod@divisor^0,c
 22530  002192  0E00               	movlw	0
 22531  002194  6E0B               	movwf	(___aomod@divisor+1)^0,c
 22532  002196  0E00               	movlw	0
 22533  002198  6E0C               	movwf	(___aomod@divisor+2)^0,c
 22534  00219A  0E00               	movlw	0
 22535  00219C  6E0D               	movwf	(___aomod@divisor+3)^0,c
 22536  00219E  0E00               	movlw	0
 22537  0021A0  6E0E               	movwf	(___aomod@divisor+4)^0,c
 22538  0021A2  0E00               	movlw	0
 22539  0021A4  6E0F               	movwf	(___aomod@divisor+5)^0,c
 22540  0021A6  0E00               	movlw	0
 22541  0021A8  6E10               	movwf	(___aomod@divisor+6)^0,c
 22542  0021AA  0E00               	movlw	0
 22543  0021AC  6E11               	movwf	(___aomod@divisor+7)^0,c
 22544  0021AE  EC1E  F024         	call	___aomod	;wreg free
 22545  0021B2  0060  F008  F029   	movff	?___aomod,??_dtoa
 22546  0021B8  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 22547  0021BE  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 22548  0021C4  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 22549  0021CA  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 22550  0021D0  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 22551  0021D6  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 22552  0021DC  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 22553  0021E2  0060  F0A4  F014   	movff	??_dtoa,abs@a
 22554  0021E8  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 22555  0021EE  ECCE  F040         	call	_abs	;wreg free
 22556  0021F2  5014               	movf	?_abs^0,w,c
 22557  0021F4  0F30               	addlw	48
 22558  0021F6  6EDF               	movwf	indf2,c
 22559                           
 22560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 22561  0021F8  0633               	decf	dtoa@p^0,f,c
 22562  0021FA  A0D8               	btfss	status,0,c
 22563  0021FC  0634               	decf	(dtoa@p+1)^0,f,c
 22564                           
 22565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 22566  0021FE  0635               	decf	dtoa@w^0,f,c
 22567  002200  A0D8               	btfss	status,0,c
 22568  002202  0636               	decf	(dtoa@w+1)^0,f,c
 22569                           
 22570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 22571  002204  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 22572  00220A  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 22573  002210  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 22574  002216  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 22575  00221C  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 22576  002222  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 22577  002228  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 22578  00222E  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 22579  002234  0E0A               	movlw	10
 22580  002236  6E0A               	movwf	___aodiv@divisor^0,c
 22581  002238  0E00               	movlw	0
 22582  00223A  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 22583  00223C  0E00               	movlw	0
 22584  00223E  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 22585  002240  0E00               	movlw	0
 22586  002242  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 22587  002244  0E00               	movlw	0
 22588  002246  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 22589  002248  0E00               	movlw	0
 22590  00224A  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 22591  00224C  0E00               	movlw	0
 22592  00224E  6E10               	movwf	(___aodiv@divisor+6)^0,c
 22593  002250  0E00               	movlw	0
 22594  002252  6E11               	movwf	(___aodiv@divisor+7)^0,c
 22595  002254  EC83  F021         	call	___aodiv	;wreg free
 22596  002258  0060  F008  F039   	movff	?___aodiv,dtoa@n
 22597  00225E  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 22598  002264  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 22599  00226A  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 22600  002270  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 22601  002276  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 22602  00227C  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 22603  002282  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 22604  002288                     l14101:
 22605                           
 22606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22607  002288  BE42               	btfsc	(dtoa@i+1)^0,7,c
 22608  00228A  D020               	goto	u13360
 22609  00228C  5042               	movf	(dtoa@i+1)^0,w,c
 22610  00228E  E103               	bnz	u13320
 22611  002290  0441               	decf	dtoa@i^0,w,c
 22612  002292  A0D8               	btfss	status,0,c
 22613  002294  D01B               	goto	u13360
 22614  002296                     u13320:
 22615  002296  5039               	movf	dtoa@n^0,w,c
 22616  002298  103A               	iorwf	(dtoa@n+1)^0,w,c
 22617  00229A  103B               	iorwf	(dtoa@n+2)^0,w,c
 22618  00229C  103C               	iorwf	(dtoa@n+3)^0,w,c
 22619  00229E  103D               	iorwf	(dtoa@n+4)^0,w,c
 22620  0022A0  103E               	iorwf	(dtoa@n+5)^0,w,c
 22621  0022A2  103F               	iorwf	(dtoa@n+6)^0,w,c
 22622  0022A4  1040               	iorwf	(dtoa@n+7)^0,w,c
 22623  0022A6  A4D8               	btfss	status,2,c
 22624  0022A8  D751               	goto	l14091
 22625  0022AA  BE34               	btfsc	(dtoa@p+1)^0,7,c
 22626  0022AC  D005               	goto	u13340
 22627  0022AE  5034               	movf	(dtoa@p+1)^0,w,c
 22628  0022B0  E102               	bnz	u13341
 22629  0022B2  0433               	decf	dtoa@p^0,w,c
 22630  0022B4  B0D8               	btfsc	status,0,c
 22631  0022B6                     u13341:
 22632  0022B6  D74A               	goto	l14091
 22633  0022B8                     u13340:
 22634  0022B8  BE36               	btfsc	(dtoa@w+1)^0,7,c
 22635  0022BA  D008               	goto	u13360
 22636  0022BC  5036               	movf	(dtoa@w+1)^0,w,c
 22637  0022BE  E103               	bnz	u13350
 22638  0022C0  0435               	decf	dtoa@w^0,w,c
 22639  0022C2  A0D8               	btfss	status,0,c
 22640  0022C4  D003               	goto	u13360
 22641  0022C6                     u13350:
 22642  0022C6  0100               	movlb	0	; () banked
 22643  0022C8  B3DE               	btfsc	_flags& (0+255),1,b
 22644  0022CA  D740               	goto	l14091
 22645  0022CC                     u13360:
 22646                           
 22647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 22648  0022CC  5037               	movf	dtoa@s^0,w,c
 22649  0022CE  1038               	iorwf	(dtoa@s+1)^0,w,c
 22650  0022D0  A4D8               	btfss	status,2,c
 22651  0022D2  D003               	goto	u13380
 22652  0022D4  0100               	movlb	0	; () banked
 22653  0022D6  A5DE               	btfss	_flags& (0+255),2,b
 22654  0022D8  D018               	goto	l14125
 22655  0022DA                     u13380:
 22656                           
 22657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 22658  0022DA  0641               	decf	dtoa@i^0,f,c
 22659  0022DC  A0D8               	btfss	status,0,c
 22660  0022DE  0642               	decf	(dtoa@i+1)^0,f,c
 22661                           
 22662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 22663  0022E0  5037               	movf	dtoa@s^0,w,c
 22664  0022E2  1038               	iorwf	(dtoa@s+1)^0,w,c
 22665  0022E4  A4D8               	btfss	status,2,c
 22666  0022E6  D004               	goto	l14121
 22667  0022E8  0E00               	movlw	0
 22668  0022EA  6E32               	movwf	(_dtoa$7199+1)^0,c
 22669  0022EC  0E2B               	movlw	43
 22670  0022EE  D003               	goto	L24
 22671  0022F0                     l14121:
 22672  0022F0  0E00               	movlw	0
 22673  0022F2  6E32               	movwf	(_dtoa$7199+1)^0,c
 22674  0022F4  0E2D               	movlw	45
 22675  0022F6                     L24:
 22676  0022F6  6E31               	movwf	_dtoa$7199^0,c
 22677  0022F8  0E75               	movlw	low _dbuf
 22678  0022FA  2441               	addwf	dtoa@i^0,w,c
 22679  0022FC  6ED9               	movwf	fsr2l,c
 22680  0022FE  0E01               	movlw	high _dbuf
 22681  002300  2042               	addwfc	(dtoa@i+1)^0,w,c
 22682  002302  6EDA               	movwf	fsr2h,c
 22683  002304  0060  F0C7  FFDF   	movff	_dtoa$7199,indf2
 22684  00230A                     l14125:
 22685                           
 22686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 22687  00230A  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 22688  002310  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 22689  002316  0E75               	movlw	low _dbuf
 22690  002318  2441               	addwf	dtoa@i^0,w,c
 22691  00231A  6E16               	movwf	pad@buf^0,c
 22692  00231C  0E01               	movlw	high _dbuf
 22693  00231E  2042               	addwfc	(dtoa@i+1)^0,w,c
 22694  002320  6E17               	movwf	(pad@buf+1)^0,c
 22695  002322  0060  F0D4  F018   	movff	dtoa@w,pad@p
 22696  002328  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 22697  00232E  EC92  F032         	call	_pad	;wreg free
 22698  002332  0060  F050  F01F   	movff	?_pad,?_dtoa
 22699  002338  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 22700  00233E  0012               	return		;funcret
 22701  002340                     __end_of_dtoa:
 22702                           	opt callstack 0
 22703                           
 22704 ;; *************** function _pad *****************
 22705 ;; Defined at:
 22706 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22707 ;; Parameters:    Size  Location     Type
 22708 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 22709 ;;		 -> NULL(0), 
 22710 ;;  buf             2   21[COMRAM] PTR unsigned char 
 22711 ;;		 -> dbuf(32), 
 22712 ;;  p               2   23[COMRAM] int 
 22713 ;; Auto vars:     Size  Location     Type
 22714 ;;  w               2   28[COMRAM] int 
 22715 ;;  i               2   26[COMRAM] int 
 22716 ;; Return value:  Size  Location     Type
 22717 ;;                  2   19[COMRAM] int 
 22718 ;; Registers used:
 22719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22720 ;; Tracked objects:
 22721 ;;		On entry : 0/0
 22722 ;;		On exit  : 0/0
 22723 ;;		Unchanged: 0/0
 22724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22728 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22729 ;;Total ram usage:       11 bytes
 22730 ;; Hardware stack levels used:    1
 22731 ;; Hardware stack levels required when called:   11
 22732 ;; This function calls:
 22733 ;;		_fputc
 22734 ;;		_fputs
 22735 ;;		_strlen
 22736 ;; This function is called by:
 22737 ;;		_dtoa
 22738 ;;		_utoa
 22739 ;;		_xtoa
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text136
 22744  006524                     __ptext136:
 22745                           	opt callstack 0
 22746  006524                     _pad:
 22747                           	opt callstack 12
 22748                           
 22749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 22750                           
 22751                           ;incstack = 0
 22752  006524  0100               	movlb	0	; () banked
 22753  006526  A1DE               	btfss	_flags& (0+255),0,b
 22754  006528  D00E               	goto	l13887
 22755                           
 22756                           ; BSR set to: 0
 22757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 22758  00652A  0060  F058  F00D   	movff	pad@buf,fputs@s
 22759  006530  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22760  006536  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22761  00653C  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22762  006542  ECAF  F040         	call	_fputs	;wreg free
 22763  006546                     l13887:
 22764                           
 22765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 22766  006546  BE19               	btfsc	(pad@p+1)^0,7,c
 22767  006548  D007               	goto	l13891
 22768  00654A  0060  F060  F01D   	movff	pad@p,pad@w
 22769  006550  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 22770  006556  D004               	goto	l3053
 22771  006558                     l13891:
 22772  006558  0E00               	movlw	0
 22773  00655A  6E1E               	movwf	(pad@w+1)^0,c
 22774  00655C  0E00               	movlw	0
 22775  00655E  6E1D               	movwf	pad@w^0,c
 22776  006560                     l3053:
 22777                           
 22778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 22779  006560  0E00               	movlw	0
 22780  006562  6E1C               	movwf	(pad@i+1)^0,c
 22781  006564  0E00               	movlw	0
 22782  006566  6E1B               	movwf	pad@i^0,c
 22783                           
 22784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22785  006568  D00E               	goto	l13897
 22786  00656A                     l13893:
 22787                           
 22788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 22789  00656A  0E00               	movlw	0
 22790  00656C  6E05               	movwf	(fputc@c+1)^0,c
 22791  00656E  0E20               	movlw	32
 22792  006570  6E04               	movwf	fputc@c^0,c
 22793  006572  0060  F050  F006   	movff	pad@fp,fputc@fp
 22794  006578  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 22795  00657E  ECC3  F03A         	call	_fputc	;wreg free
 22796                           
 22797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 22798  006582  4A1B               	infsnz	pad@i^0,f,c
 22799  006584  2A1C               	incf	(pad@i+1)^0,f,c
 22800  006586                     l13897:
 22801                           
 22802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22803  006586  501D               	movf	pad@w^0,w,c
 22804  006588  5C1B               	subwf	pad@i^0,w,c
 22805  00658A  501C               	movf	(pad@i+1)^0,w,c
 22806  00658C  0A80               	xorlw	128
 22807  00658E  6E1A               	movwf	??_pad^0,c
 22808  006590  501E               	movf	(pad@w+1)^0,w,c
 22809  006592  0A80               	xorlw	128
 22810  006594  581A               	subwfb	??_pad^0,w,c
 22811  006596  A0D8               	btfss	status,0,c
 22812  006598  D7E8               	goto	l13893
 22813                           
 22814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 22815  00659A  0100               	movlb	0	; () banked
 22816  00659C  B1DE               	btfsc	_flags& (0+255),0,b
 22817  00659E  D00E               	goto	l13901
 22818                           
 22819                           ; BSR set to: 0
 22820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 22821  0065A0  0060  F058  F00D   	movff	pad@buf,fputs@s
 22822  0065A6  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22823  0065AC  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22824  0065B2  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22825  0065B8  ECAF  F040         	call	_fputs	;wreg free
 22826  0065BC                     l13901:
 22827                           
 22828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 22829  0065BC  0060  F058  F002   	movff	pad@buf,strlen@s
 22830  0065C2  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 22831  0065C8  EC3B  F03E         	call	_strlen	;wreg free
 22832  0065CC  501D               	movf	pad@w^0,w,c
 22833  0065CE  2402               	addwf	?_strlen^0,w,c
 22834  0065D0  6E14               	movwf	?_pad^0,c
 22835  0065D2  501E               	movf	(pad@w+1)^0,w,c
 22836  0065D4  2003               	addwfc	(?_strlen+1)^0,w,c
 22837  0065D6  6E15               	movwf	(?_pad+1)^0,c
 22838  0065D8  0012               	return		;funcret
 22839  0065DA                     __end_of_pad:
 22840                           	opt callstack 0
 22841                           
 22842 ;; *************** function _strlen *****************
 22843 ;; Defined at:
 22844 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 22845 ;; Parameters:    Size  Location     Type
 22846 ;;  s               2    1[COMRAM] PTR const unsigned char 
 22847 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 22848 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 22849 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 22850 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 22851 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 22852 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 22853 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 22854 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 22855 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 22856 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 22857 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 22858 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 22859 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 22860 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;  a               2    3[COMRAM] PTR const unsigned char 
 22863 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 22864 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 22865 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 22866 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 22867 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 22868 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 22869 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 22870 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 22871 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 22872 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 22873 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 22874 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 22875 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 22876 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 22877 ;; Return value:  Size  Location     Type
 22878 ;;                  2    1[COMRAM] unsigned int 
 22879 ;; Registers used:
 22880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22881 ;; Tracked objects:
 22882 ;;		On entry : 0/0
 22883 ;;		On exit  : 0/0
 22884 ;;		Unchanged: 0/0
 22885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22890 ;;Total ram usage:        4 bytes
 22891 ;; Hardware stack levels used:    1
 22892 ;; Hardware stack levels required when called:    7
 22893 ;; This function calls:
 22894 ;;		Nothing
 22895 ;; This function is called by:
 22896 ;;		_cmdSend
 22897 ;;		_cmdBcast
 22898 ;;		_cmdSetAES
 22899 ;;		_pad
 22900 ;;		_stoa
 22901 ;;		_strstr
 22902 ;; This function uses a non-reentrant model
 22903 ;;
 22904                           
 22905                           	psect	text137
 22906  007C76                     __ptext137:
 22907                           	opt callstack 0
 22908  007C76                     _strlen:
 22909                           	opt callstack 20
 22910                           
 22911                           ;incstack = 0
 22912  007C76  0060  F008  F004   	movff	strlen@s,strlen@a
 22913  007C7C  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 22914  007C82  D002               	goto	l13865
 22915  007C84                     l13863:
 22916  007C84  4A02               	infsnz	strlen@s^0,f,c
 22917  007C86  2A03               	incf	(strlen@s+1)^0,f,c
 22918  007C88                     l13865:
 22919  007C88  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 22920  007C8E  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 22921  007C94  0E00               	movlw	low (__mediumconst shr (0+16))
 22922  007C96  6EF8               	movwf	tblptru,c
 22923  007C98  0E0F               	movlw	(high __ramtop+-1)
 22924  007C9A  64F7               	cpfsgt	tblptrh,c
 22925  007C9C  D003               	bra	u12847
 22926  007C9E  0008               	tblrd		*
 22927  007CA0  50F5               	movf	tablat,w,c
 22928  007CA2  D007               	bra	u12840
 22929  007CA4                     u12847:
 22930  007CA4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22931  007CAA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22932  007CB0  50EF               	movf	indf0,w,c
 22933  007CB2                     u12840:
 22934  007CB2  0900               	iorlw	0
 22935  007CB4  A4D8               	btfss	status,2,c
 22936  007CB6  D7E6               	goto	l13863
 22937  007CB8  5004               	movf	strlen@a^0,w,c
 22938  007CBA  5C02               	subwf	strlen@s^0,w,c
 22939  007CBC  6E02               	movwf	?_strlen^0,c
 22940  007CBE  5005               	movf	(strlen@a+1)^0,w,c
 22941  007CC0  5803               	subwfb	(strlen@s+1)^0,w,c
 22942  007CC2  6E03               	movwf	(?_strlen+1)^0,c
 22943  007CC4  0012               	return		;funcret
 22944  007CC6                     __end_of_strlen:
 22945                           	opt callstack 0
 22946                           
 22947 ;; *************** function _fputs *****************
 22948 ;; Defined at:
 22949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 22950 ;; Parameters:    Size  Location     Type
 22951 ;;  s               2   12[COMRAM] PTR const unsigned char 
 22952 ;;		 -> dbuf(32), 
 22953 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 22954 ;;		 -> NULL(0), 
 22955 ;; Auto vars:     Size  Location     Type
 22956 ;;  i               2   17[COMRAM] int 
 22957 ;;  c               1   16[COMRAM] unsigned char 
 22958 ;; Return value:  Size  Location     Type
 22959 ;;                  2   12[COMRAM] int 
 22960 ;; Registers used:
 22961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22962 ;; Tracked objects:
 22963 ;;		On entry : 3F/0
 22964 ;;		On exit  : 0/0
 22965 ;;		Unchanged: 0/0
 22966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22968 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22970 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22971 ;;Total ram usage:        7 bytes
 22972 ;; Hardware stack levels used:    1
 22973 ;; Hardware stack levels required when called:   10
 22974 ;; This function calls:
 22975 ;;		_fputc
 22976 ;; This function is called by:
 22977 ;;		_pad
 22978 ;; This function uses a non-reentrant model
 22979 ;;
 22980                           
 22981                           	psect	text138
 22982  00815E                     __ptext138:
 22983                           	opt callstack 0
 22984  00815E                     _fputs:
 22985                           	opt callstack 12
 22986                           
 22987                           ; BSR set to: 0
 22988                           
 22989                           ;incstack = 0
 22990  00815E  0E00               	movlw	0
 22991  008160  6E13               	movwf	(fputs@i+1)^0,c
 22992  008162  0E00               	movlw	0
 22993  008164  6E12               	movwf	fputs@i^0,c
 22994  008166  D00E               	goto	l13877
 22995  008168                     l13873:
 22996  008168  0060  F044  F004   	movff	fputs@c,fputc@c
 22997  00816E  6A05               	clrf	(fputc@c+1)^0,c
 22998  008170  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 22999  008176  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 23000  00817C  ECC3  F03A         	call	_fputc	;wreg free
 23001  008180  4A12               	infsnz	fputs@i^0,f,c
 23002  008182  2A13               	incf	(fputs@i+1)^0,f,c
 23003  008184                     l13877:
 23004  008184  5012               	movf	fputs@i^0,w,c
 23005  008186  240D               	addwf	fputs@s^0,w,c
 23006  008188  6ED9               	movwf	fsr2l,c
 23007  00818A  5013               	movf	(fputs@i+1)^0,w,c
 23008  00818C  200E               	addwfc	(fputs@s+1)^0,w,c
 23009  00818E  6EDA               	movwf	fsr2h,c
 23010  008190  50DF               	movf	indf2,w,c
 23011  008192  6E11               	movwf	fputs@c^0,c
 23012  008194  5011               	movf	fputs@c^0,w,c
 23013  008196  B4D8               	btfsc	status,2,c
 23014  008198  0012               	return	
 23015  00819A  D7E6               	goto	l13873
 23016  00819C                     __end_of_fputs:
 23017                           	opt callstack 0
 23018                           
 23019 ;; *************** function _fputc *****************
 23020 ;; Defined at:
 23021 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 23022 ;; Parameters:    Size  Location     Type
 23023 ;;  c               2    3[COMRAM] int 
 23024 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 23025 ;;		 -> NULL(0), 
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;		None
 23028 ;; Return value:  Size  Location     Type
 23029 ;;                  2    3[COMRAM] int 
 23030 ;; Registers used:
 23031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23032 ;; Tracked objects:
 23033 ;;		On entry : 0/0
 23034 ;;		On exit  : 0/0
 23035 ;;		Unchanged: 0/0
 23036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23039 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23040 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23041 ;;Total ram usage:        9 bytes
 23042 ;; Hardware stack levels used:    1
 23043 ;; Hardware stack levels required when called:    9
 23044 ;; This function calls:
 23045 ;;		_putch
 23046 ;; This function is called by:
 23047 ;;		_pad
 23048 ;;		_stoa
 23049 ;;		_vfpfcnvrt
 23050 ;;		_fputs
 23051 ;; This function uses a non-reentrant model
 23052 ;;
 23053                           
 23054                           	psect	text139
 23055  007586                     __ptext139:
 23056                           	opt callstack 0
 23057  007586                     _fputc:
 23058                           	opt callstack 12
 23059                           
 23060                           ;incstack = 0
 23061  007586  5006               	movf	fputc@fp^0,w,c
 23062  007588  1007               	iorwf	(fputc@fp+1)^0,w,c
 23063  00758A  B4D8               	btfsc	status,2,c
 23064  00758C  D004               	goto	u12810
 23065  00758E  5006               	movf	fputc@fp^0,w,c
 23066  007590  1007               	iorwf	(fputc@fp+1)^0,w,c
 23067  007592  A4D8               	btfss	status,2,c
 23068  007594  D004               	goto	l13853
 23069  007596                     u12810:
 23070  007596  5004               	movf	fputc@c^0,w,c
 23071  007598  EC99  F046         	call	_putch
 23072  00759C  0012               	return	
 23073  00759E                     l13853:
 23074  00759E  EE20 F004          	lfsr	2,4
 23075  0075A2  5006               	movf	fputc@fp^0,w,c
 23076  0075A4  26D9               	addwf	fsr2l,f,c
 23077  0075A6  5007               	movf	(fputc@fp+1)^0,w,c
 23078  0075A8  22DA               	addwfc	fsr2h,f,c
 23079  0075AA  50DE               	movf	postinc2,w,c
 23080  0075AC  10DE               	iorwf	postinc2,w,c
 23081  0075AE  B4D8               	btfsc	status,2,c
 23082  0075B0  D016               	goto	u12830
 23083  0075B2  EE20 F004          	lfsr	2,4
 23084  0075B6  5006               	movf	fputc@fp^0,w,c
 23085  0075B8  26D9               	addwf	fsr2l,f,c
 23086  0075BA  5007               	movf	(fputc@fp+1)^0,w,c
 23087  0075BC  22DA               	addwfc	fsr2h,f,c
 23088  0075BE  EE10 F002          	lfsr	1,2
 23089  0075C2  5006               	movf	fputc@fp^0,w,c
 23090  0075C4  26E1               	addwf	fsr1l,f,c
 23091  0075C6  5007               	movf	(fputc@fp+1)^0,w,c
 23092  0075C8  22E2               	addwfc	fsr1h,f,c
 23093  0075CA  50DE               	movf	postinc2,w,c
 23094  0075CC  5CE6               	subwf	postinc1,w,c
 23095  0075CE  50E6               	movf	postinc1,w,c
 23096  0075D0  0A80               	xorlw	128
 23097  0075D2  6E0C               	movwf	(??_fputc+4)^0,c
 23098  0075D4  50DE               	movf	postinc2,w,c
 23099  0075D6  0A80               	xorlw	128
 23100  0075D8  580C               	subwfb	(??_fputc+4)^0,w,c
 23101  0075DA  B0D8               	btfsc	status,0,c
 23102  0075DC  0012               	return	
 23103  0075DE                     u12830:
 23104  0075DE  EE20 F002          	lfsr	2,2
 23105  0075E2  5006               	movf	fputc@fp^0,w,c
 23106  0075E4  26D9               	addwf	fsr2l,f,c
 23107  0075E6  5007               	movf	(fputc@fp+1)^0,w,c
 23108  0075E8  22DA               	addwfc	fsr2h,f,c
 23109  0075EA  2ADE               	incf	postinc2,f,c
 23110  0075EC  0E00               	movlw	0
 23111  0075EE  22DD               	addwfc	postdec2,f,c
 23112  0075F0  0012               	return		;funcret
 23113  0075F2                     __end_of_fputc:
 23114                           	opt callstack 0
 23115                           
 23116 ;; *************** function _putch *****************
 23117 ;; Defined at:
 23118 ;;		line 242 in file "mcc_generated_files/uart1.c"
 23119 ;; Parameters:    Size  Location     Type
 23120 ;;  txData          1    wreg     unsigned char 
 23121 ;; Auto vars:     Size  Location     Type
 23122 ;;  txData          1    2[COMRAM] unsigned char 
 23123 ;; Return value:  Size  Location     Type
 23124 ;;                  1    wreg      void 
 23125 ;; Registers used:
 23126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23127 ;; Tracked objects:
 23128 ;;		On entry : 0/0
 23129 ;;		On exit  : 3F/39
 23130 ;;		Unchanged: 0/0
 23131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23136 ;;Total ram usage:        1 bytes
 23137 ;; Hardware stack levels used:    1
 23138 ;; Hardware stack levels required when called:    8
 23139 ;; This function calls:
 23140 ;;		_UART1_Write
 23141 ;; This function is called by:
 23142 ;;		_fputc
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           
 23146                           	psect	text140
 23147  008D32                     __ptext140:
 23148                           	opt callstack 0
 23149  008D32                     _putch:
 23150                           	opt callstack 12
 23151                           
 23152                           ;incstack = 0
 23153                           ;putch@txData stored from wreg
 23154  008D32  6E03               	movwf	putch@txData^0,c
 23155                           
 23156                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 23157  008D34  5003               	movf	putch@txData^0,w,c
 23158  008D36  ECAC  F03F         	call	_UART1_Write
 23159                           
 23160                           ; BSR set to: 57
 23161  008D3A  0012               	return		;funcret
 23162  008D3C                     __end_of_putch:
 23163                           	opt callstack 0
 23164                           
 23165 ;; *************** function _UART1_Write *****************
 23166 ;; Defined at:
 23167 ;;		line 210 in file "mcc_generated_files/uart1.c"
 23168 ;; Parameters:    Size  Location     Type
 23169 ;;  txData          1    wreg     unsigned char 
 23170 ;; Auto vars:     Size  Location     Type
 23171 ;;  txData          1    1[COMRAM] unsigned char 
 23172 ;; Return value:  Size  Location     Type
 23173 ;;                  1    wreg      void 
 23174 ;; Registers used:
 23175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23176 ;; Tracked objects:
 23177 ;;		On entry : 0/0
 23178 ;;		On exit  : 3F/39
 23179 ;;		Unchanged: 0/0
 23180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23185 ;;Total ram usage:        1 bytes
 23186 ;; Hardware stack levels used:    1
 23187 ;; Hardware stack levels required when called:    7
 23188 ;; This function calls:
 23189 ;;		Nothing
 23190 ;; This function is called by:
 23191 ;;		_putch
 23192 ;; This function uses a non-reentrant model
 23193 ;;
 23194                           
 23195                           	psect	text141
 23196  007F58                     __ptext141:
 23197                           	opt callstack 0
 23198  007F58                     _UART1_Write:
 23199                           	opt callstack 12
 23200                           
 23201                           ; BSR set to: 57
 23202                           ;incstack = 0
 23203                           ;UART1_Write@txData stored from wreg
 23204  007F58  6E02               	movwf	UART1_Write@txData^0,c
 23205  007F5A                     
 23206                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 23207                           
 23208                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 23209  007F5A  0101               	movlb	1	; () banked
 23210  007F5C  51ED               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 23211  007F5E  B4D8               	btfsc	status,2,c
 23212  007F60  D7FC               	goto	l13827
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 23216  007F62  0139               	movlb	57	; () banked
 23217  007F64  B993               	btfsc	147,4,b	;volatile
 23218  007F66  D004               	goto	l1395
 23219                           
 23220                           ; BSR set to: 57
 23221                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 23222  007F68  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 23223                           
 23224                           ;mcc_generated_files/uart1.c: 223:     }
 23225  007F6E  D013               	goto	l13843
 23226  007F70                     l1395:
 23227                           
 23228                           ; BSR set to: 57
 23229                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 23230  007F70  9993               	bcf	147,4,b	;volatile
 23231                           
 23232                           ; BSR set to: 57
 23233                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 23234  007F72  0E00               	movlw	low _uart1TxBuffer
 23235  007F74  0100               	movlb	0	; () banked
 23236  007F76  25E9               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 23237  007F78  6ED9               	movwf	fsr2l,c
 23238  007F7A  6ADA               	clrf	fsr2h,c
 23239  007F7C  0E03               	movlw	high _uart1TxBuffer
 23240  007F7E  22DA               	addwfc	fsr2h,f,c
 23241  007F80  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 23242                           
 23243                           ; BSR set to: 0
 23244  007F86  2BE9               	incf	_uart1TxHead& (0+255),f,b	;volatile
 23245                           
 23246                           ; BSR set to: 0
 23247                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 23248  007F88  0E3F               	movlw	63
 23249  007F8A  65E9               	cpfsgt	_uart1TxHead& (0+255),b
 23250  007F8C  D002               	goto	l13841
 23251                           
 23252                           ; BSR set to: 0
 23253                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 23254  007F8E  0E00               	movlw	0
 23255  007F90  6FE9               	movwf	_uart1TxHead& (0+255),b	;volatile
 23256  007F92                     l13841:
 23257                           
 23258                           ; BSR set to: 0
 23259                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 23260  007F92  0101               	movlb	1	; () banked
 23261  007F94  07ED               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 23262  007F96                     l13843:
 23263                           
 23264                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 23265  007F96  0139               	movlb	57	; () banked
 23266  007F98  8993               	bsf	147,4,b	;volatile
 23267                           
 23268                           ; BSR set to: 57
 23269  007F9A  0012               	return		;funcret
 23270  007F9C                     __end_of_UART1_Write:
 23271                           	opt callstack 0
 23272                           
 23273 ;; *************** function _abs *****************
 23274 ;; Defined at:
 23275 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;  a               2   19[COMRAM] int 
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;		None
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  2   19[COMRAM] int 
 23282 ;; Registers used:
 23283 ;;		wreg, status,2, status,0
 23284 ;; Tracked objects:
 23285 ;;		On entry : 0/1
 23286 ;;		On exit  : 0/0
 23287 ;;		Unchanged: 0/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23293 ;;Total ram usage:        4 bytes
 23294 ;; Hardware stack levels used:    1
 23295 ;; Hardware stack levels required when called:    7
 23296 ;; This function calls:
 23297 ;;		Nothing
 23298 ;; This function is called by:
 23299 ;;		_dtoa
 23300 ;; This function uses a non-reentrant model
 23301 ;;
 23302                           
 23303                           	psect	text142
 23304  00819C                     __ptext142:
 23305                           	opt callstack 0
 23306  00819C                     _abs:
 23307                           	opt callstack 16
 23308                           
 23309                           ; BSR set to: 57
 23310                           ;incstack = 0
 23311  00819C  BE15               	btfsc	(abs@a+1)^0,7,c
 23312  00819E  D005               	goto	u12930
 23313  0081A0  5015               	movf	(abs@a+1)^0,w,c
 23314  0081A2  E114               	bnz	l3871
 23315  0081A4  0414               	decf	abs@a^0,w,c
 23316  0081A6  B0D8               	btfsc	status,0,c
 23317  0081A8  D011               	goto	l3871
 23318  0081AA                     u12930:
 23319  0081AA  0060  F050  F016   	movff	abs@a,??_abs
 23320  0081B0  0060  F054  F017   	movff	abs@a+1,??_abs+1
 23321  0081B6  1E16               	comf	??_abs^0,f,c
 23322  0081B8  1E17               	comf	(??_abs+1)^0,f,c
 23323  0081BA  4A16               	infsnz	??_abs^0,f,c
 23324  0081BC  2A17               	incf	(??_abs+1)^0,f,c
 23325  0081BE  0060  F058  F014   	movff	??_abs,?_abs
 23326  0081C4  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 23327  0081CA  0012               	return	
 23328  0081CC                     l3871:
 23329  0081CC  0060  F050  F014   	movff	abs@a,?_abs
 23330  0081D2  0060  F054  F015   	movff	abs@a+1,?_abs+1
 23331  0081D8  0012               	return		;funcret
 23332  0081DA                     __end_of_abs:
 23333                           	opt callstack 0
 23334                           
 23335 ;; *************** function ___aomod *****************
 23336 ;; Defined at:
 23337 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 23338 ;; Parameters:    Size  Location     Type
 23339 ;;  dividend        8    1[COMRAM] long long 
 23340 ;;  divisor         8    9[COMRAM] long long 
 23341 ;; Auto vars:     Size  Location     Type
 23342 ;;  sign            1   18[COMRAM] unsigned char 
 23343 ;;  counter         1   17[COMRAM] unsigned char 
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  8    1[COMRAM] long long 
 23346 ;; Registers used:
 23347 ;;		wreg, status,2, status,0
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/1
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23353 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23356 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23357 ;;Total ram usage:       18 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:    7
 23360 ;; This function calls:
 23361 ;;		Nothing
 23362 ;; This function is called by:
 23363 ;;		_dtoa
 23364 ;; This function uses a non-reentrant model
 23365 ;;
 23366                           
 23367                           	psect	text143
 23368  00483C                     __ptext143:
 23369                           	opt callstack 0
 23370  00483C                     ___aomod:
 23371                           	opt callstack 16
 23372                           
 23373                           ;incstack = 0
 23374  00483C  0E00               	movlw	0
 23375  00483E  6E13               	movwf	___aomod@sign^0,c
 23376  004840  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 23377  004842  D012               	goto	l13989
 23378  004844  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23379  004846  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23380  004848  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23381  00484A  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23382  00484C  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23383  00484E  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23384  004850  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23385  004852  6C02               	negf	___aomod@dividend^0,c
 23386  004854  0E00               	movlw	0
 23387  004856  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23388  004858  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23389  00485A  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23390  00485C  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23391  00485E  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23392  004860  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23393  004862  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23394  004864  0E01               	movlw	1
 23395  004866  6E13               	movwf	___aomod@sign^0,c
 23396  004868                     l13989:
 23397  004868  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23398  00486A  D010               	goto	l13993
 23399  00486C  1E11               	comf	(___aomod@divisor+7)^0,f,c
 23400  00486E  1E10               	comf	(___aomod@divisor+6)^0,f,c
 23401  004870  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 23402  004872  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 23403  004874  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 23404  004876  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 23405  004878  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 23406  00487A  6C0A               	negf	___aomod@divisor^0,c
 23407  00487C  0E00               	movlw	0
 23408  00487E  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 23409  004880  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 23410  004882  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 23411  004884  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 23412  004886  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 23413  004888  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 23414  00488A  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 23415  00488C                     l13993:
 23416  00488C  500A               	movf	___aomod@divisor^0,w,c
 23417  00488E  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 23418  004890  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 23419  004892  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 23420  004894  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 23421  004896  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 23422  004898  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 23423  00489A  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 23424  00489C  B4D8               	btfsc	status,2,c
 23425  00489E  D03C               	goto	l14009
 23426  0048A0  0E01               	movlw	1
 23427  0048A2  6E12               	movwf	___aomod@counter^0,c
 23428  0048A4  D00A               	goto	l13999
 23429  0048A6                     l13997:
 23430  0048A6  90D8               	bcf	status,0,c
 23431  0048A8  360A               	rlcf	___aomod@divisor^0,f,c
 23432  0048AA  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 23433  0048AC  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 23434  0048AE  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 23435  0048B0  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 23436  0048B2  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 23437  0048B4  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 23438  0048B6  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 23439  0048B8  2A12               	incf	___aomod@counter^0,f,c
 23440  0048BA                     l13999:
 23441  0048BA  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23442  0048BC  D7F4               	goto	l13997
 23443  0048BE                     u13130:
 23444  0048BE  500A               	movf	___aomod@divisor^0,w,c
 23445  0048C0  5C02               	subwf	___aomod@dividend^0,w,c
 23446  0048C2  500B               	movf	(___aomod@divisor+1)^0,w,c
 23447  0048C4  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 23448  0048C6  500C               	movf	(___aomod@divisor+2)^0,w,c
 23449  0048C8  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 23450  0048CA  500D               	movf	(___aomod@divisor+3)^0,w,c
 23451  0048CC  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 23452  0048CE  500E               	movf	(___aomod@divisor+4)^0,w,c
 23453  0048D0  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 23454  0048D2  500F               	movf	(___aomod@divisor+5)^0,w,c
 23455  0048D4  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 23456  0048D6  5010               	movf	(___aomod@divisor+6)^0,w,c
 23457  0048D8  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 23458  0048DA  5011               	movf	(___aomod@divisor+7)^0,w,c
 23459  0048DC  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 23460  0048DE  A0D8               	btfss	status,0,c
 23461  0048E0  D010               	goto	l14005
 23462  0048E2  500A               	movf	___aomod@divisor^0,w,c
 23463  0048E4  5E02               	subwf	___aomod@dividend^0,f,c
 23464  0048E6  500B               	movf	(___aomod@divisor+1)^0,w,c
 23465  0048E8  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 23466  0048EA  500C               	movf	(___aomod@divisor+2)^0,w,c
 23467  0048EC  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 23468  0048EE  500D               	movf	(___aomod@divisor+3)^0,w,c
 23469  0048F0  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 23470  0048F2  500E               	movf	(___aomod@divisor+4)^0,w,c
 23471  0048F4  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 23472  0048F6  500F               	movf	(___aomod@divisor+5)^0,w,c
 23473  0048F8  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 23474  0048FA  5010               	movf	(___aomod@divisor+6)^0,w,c
 23475  0048FC  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 23476  0048FE  5011               	movf	(___aomod@divisor+7)^0,w,c
 23477  004900  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 23478  004902                     l14005:
 23479  004902  90D8               	bcf	status,0,c
 23480  004904  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 23481  004906  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 23482  004908  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 23483  00490A  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 23484  00490C  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 23485  00490E  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 23486  004910  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 23487  004912  320A               	rrcf	___aomod@divisor^0,f,c
 23488  004914  2E12               	decfsz	___aomod@counter^0,f,c
 23489  004916  D7D3               	goto	u13130
 23490  004918                     l14009:
 23491  004918  5013               	movf	___aomod@sign^0,w,c
 23492  00491A  B4D8               	btfsc	status,2,c
 23493  00491C  D010               	goto	l14013
 23494  00491E  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23495  004920  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23496  004922  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23497  004924  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23498  004926  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23499  004928  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23500  00492A  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23501  00492C  6C02               	negf	___aomod@dividend^0,c
 23502  00492E  0E00               	movlw	0
 23503  004930  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23504  004932  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23505  004934  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23506  004936  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23507  004938  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23508  00493A  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23509  00493C  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23510  00493E                     l14013:
 23511  00493E  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 23512  004944  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 23513  00494A  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 23514  004950  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 23515  004956  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 23516  00495C  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 23517  004962  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 23518  004968  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 23519  00496E  0012               	return		;funcret
 23520  004970                     __end_of___aomod:
 23521                           	opt callstack 0
 23522                           
 23523 ;; *************** function ___aodiv *****************
 23524 ;; Defined at:
 23525 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 23526 ;; Parameters:    Size  Location     Type
 23527 ;;  dividend        8    1[COMRAM] long long 
 23528 ;;  divisor         8    9[COMRAM] long long 
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;  quotient        8   19[COMRAM] long long 
 23531 ;;  sign            1   18[COMRAM] unsigned char 
 23532 ;;  counter         1   17[COMRAM] unsigned char 
 23533 ;; Return value:  Size  Location     Type
 23534 ;;                  8    1[COMRAM] long long 
 23535 ;; Registers used:
 23536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23537 ;; Tracked objects:
 23538 ;;		On entry : 0/1
 23539 ;;		On exit  : 0/0
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23542 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23543 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23545 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23546 ;;Total ram usage:       26 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; Hardware stack levels required when called:    7
 23549 ;; This function calls:
 23550 ;;		Nothing
 23551 ;; This function is called by:
 23552 ;;		_dtoa
 23553 ;; This function uses a non-reentrant model
 23554 ;;
 23555                           
 23556                           	psect	text144
 23557  004306                     __ptext144:
 23558                           	opt callstack 0
 23559  004306                     ___aodiv:
 23560                           	opt callstack 16
 23561                           
 23562                           ;incstack = 0
 23563  004306  0E00               	movlw	0
 23564  004308  6E13               	movwf	___aodiv@sign^0,c
 23565  00430A  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23566  00430C  D012               	goto	l13945
 23567  00430E  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 23568  004310  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 23569  004312  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 23570  004314  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 23571  004316  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 23572  004318  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 23573  00431A  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 23574  00431C  6C0A               	negf	___aodiv@divisor^0,c
 23575  00431E  0E00               	movlw	0
 23576  004320  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 23577  004322  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 23578  004324  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 23579  004326  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 23580  004328  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 23581  00432A  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 23582  00432C  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 23583  00432E  0E01               	movlw	1
 23584  004330  6E13               	movwf	___aodiv@sign^0,c
 23585  004332                     l13945:
 23586  004332  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 23587  004334  D012               	goto	l13951
 23588  004336  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 23589  004338  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 23590  00433A  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 23591  00433C  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 23592  00433E  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 23593  004340  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 23594  004342  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 23595  004344  6C02               	negf	___aodiv@dividend^0,c
 23596  004346  0E00               	movlw	0
 23597  004348  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 23598  00434A  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 23599  00434C  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 23600  00434E  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 23601  004350  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 23602  004352  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 23603  004354  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 23604  004356  0E01               	movlw	1
 23605  004358  1A13               	xorwf	___aodiv@sign^0,f,c
 23606  00435A                     l13951:
 23607  00435A  EE20  F014         	lfsr	2,___aodiv@quotient
 23608  00435E  0E07               	movlw	7
 23609  004360                     u13051:
 23610  004360  6ADE               	clrf	postinc2,c
 23611  004362  06E8               	decf	wreg,f,c
 23612  004364  E2FD               	bc	u13051
 23613  004366  500A               	movf	___aodiv@divisor^0,w,c
 23614  004368  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 23615  00436A  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 23616  00436C  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 23617  00436E  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 23618  004370  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 23619  004372  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 23620  004374  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 23621  004376  B4D8               	btfsc	status,2,c
 23622  004378  D046               	goto	l13973
 23623  00437A  0E01               	movlw	1
 23624  00437C  6E12               	movwf	___aodiv@counter^0,c
 23625  00437E  D00A               	goto	l13959
 23626  004380                     l13957:
 23627  004380  90D8               	bcf	status,0,c
 23628  004382  360A               	rlcf	___aodiv@divisor^0,f,c
 23629  004384  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 23630  004386  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 23631  004388  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 23632  00438A  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 23633  00438C  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 23634  00438E  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 23635  004390  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 23636  004392  2A12               	incf	___aodiv@counter^0,f,c
 23637  004394                     l13959:
 23638  004394  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23639  004396  D7F4               	goto	l13957
 23640  004398                     u13070:
 23641  004398  90D8               	bcf	status,0,c
 23642  00439A  3614               	rlcf	___aodiv@quotient^0,f,c
 23643  00439C  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 23644  00439E  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 23645  0043A0  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 23646  0043A2  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 23647  0043A4  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 23648  0043A6  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 23649  0043A8  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 23650  0043AA  500A               	movf	___aodiv@divisor^0,w,c
 23651  0043AC  5C02               	subwf	___aodiv@dividend^0,w,c
 23652  0043AE  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23653  0043B0  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 23654  0043B2  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23655  0043B4  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 23656  0043B6  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23657  0043B8  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 23658  0043BA  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23659  0043BC  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 23660  0043BE  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23661  0043C0  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 23662  0043C2  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23663  0043C4  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 23664  0043C6  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23665  0043C8  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 23666  0043CA  A0D8               	btfss	status,0,c
 23667  0043CC  D011               	goto	l13969
 23668  0043CE  500A               	movf	___aodiv@divisor^0,w,c
 23669  0043D0  5E02               	subwf	___aodiv@dividend^0,f,c
 23670  0043D2  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23671  0043D4  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 23672  0043D6  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23673  0043D8  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 23674  0043DA  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23675  0043DC  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 23676  0043DE  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23677  0043E0  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 23678  0043E2  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23679  0043E4  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 23680  0043E6  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23681  0043E8  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 23682  0043EA  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23683  0043EC  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 23684  0043EE  8014               	bsf	___aodiv@quotient^0,0,c
 23685  0043F0                     l13969:
 23686  0043F0  90D8               	bcf	status,0,c
 23687  0043F2  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 23688  0043F4  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 23689  0043F6  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 23690  0043F8  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 23691  0043FA  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 23692  0043FC  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 23693  0043FE  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 23694  004400  320A               	rrcf	___aodiv@divisor^0,f,c
 23695  004402  2E12               	decfsz	___aodiv@counter^0,f,c
 23696  004404  D7C9               	goto	u13070
 23697  004406                     l13973:
 23698  004406  5013               	movf	___aodiv@sign^0,w,c
 23699  004408  B4D8               	btfsc	status,2,c
 23700  00440A  D010               	goto	l13977
 23701  00440C  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 23702  00440E  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 23703  004410  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 23704  004412  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 23705  004414  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 23706  004416  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 23707  004418  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 23708  00441A  6C14               	negf	___aodiv@quotient^0,c
 23709  00441C  0E00               	movlw	0
 23710  00441E  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 23711  004420  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 23712  004422  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 23713  004424  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 23714  004426  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 23715  004428  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 23716  00442A  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 23717  00442C                     l13977:
 23718  00442C  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 23719  004432  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 23720  004438  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 23721  00443E  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 23722  004444  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 23723  00444A  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 23724  004450  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 23725  004456  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 23726  00445C  0012               	return		;funcret
 23727  00445E                     __end_of___aodiv:
 23728                           	opt callstack 0
 23729                           
 23730 ;; *************** function _atoi *****************
 23731 ;; Defined at:
 23732 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 23733 ;; Parameters:    Size  Location     Type
 23734 ;;  s               2    8[COMRAM] PTR const unsigned char 
 23735 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 23736 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 23737 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 23738 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 23739 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 23740 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 23741 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 23742 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 23743 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 23744 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 23745 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 23746 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 23747 ;; Auto vars:     Size  Location     Type
 23748 ;;  n               2   21[COMRAM] int 
 23749 ;;  neg             2   14[COMRAM] int 
 23750 ;; Return value:  Size  Location     Type
 23751 ;;                  2    8[COMRAM] int 
 23752 ;; Registers used:
 23753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23754 ;; Tracked objects:
 23755 ;;		On entry : 3F/0
 23756 ;;		On exit  : 0/0
 23757 ;;		Unchanged: 0/0
 23758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23760 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23761 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23762 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23763 ;;Total ram usage:       15 bytes
 23764 ;; Hardware stack levels used:    1
 23765 ;; Hardware stack levels required when called:    8
 23766 ;; This function calls:
 23767 ;;		___wmul
 23768 ;;		_isdigit
 23769 ;;		_isspace
 23770 ;; This function is called by:
 23771 ;;		_vfpfcnvrt
 23772 ;; This function uses a non-reentrant model
 23773 ;;
 23774                           
 23775                           	psect	text145
 23776  003ED4                     __ptext145:
 23777                           	opt callstack 0
 23778  003ED4                     _atoi:
 23779                           	opt callstack 16
 23780                           
 23781                           ; BSR set to: 0
 23782                           
 23783                           ;incstack = 0
 23784  003ED4  0E00               	movlw	0
 23785  003ED6  6E17               	movwf	(atoi@n+1)^0,c
 23786  003ED8  0E00               	movlw	0
 23787  003EDA  6E16               	movwf	atoi@n^0,c
 23788  003EDC  0E00               	movlw	0
 23789  003EDE  6E10               	movwf	(atoi@neg+1)^0,c
 23790  003EE0  0E00               	movlw	0
 23791  003EE2  6E0F               	movwf	atoi@neg^0,c
 23792  003EE4  D002               	goto	l14277
 23793  003EE6                     l14275:
 23794                           
 23795                           ; BSR set to: 0
 23796  003EE6  4A09               	infsnz	atoi@s^0,f,c
 23797  003EE8  2A0A               	incf	(atoi@s+1)^0,f,c
 23798  003EEA                     l14277:
 23799                           
 23800                           ; BSR set to: 0
 23801  003EEA  0E01               	movlw	1
 23802  003EEC  6E15               	movwf	_atoi$7703^0,c
 23803                           
 23804                           ; BSR set to: 0
 23805  003EEE  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23806  003EF4  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23807  003EFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23808  003EFA  6AF8               	clrf	tblptru,c
 23809  003EFC                     	endif
 23810  003EFC                     	if	0	;tblptru may be non-zero
 23811  003EFC                     	endif
 23812  003EFC  0008               	tblrd		*
 23813  003EFE  50F5               	movf	tablat,w,c
 23814  003F00  0A20               	xorlw	32
 23815  003F02  B4D8               	btfsc	status,2,c
 23816  003F04  D01B               	goto	l14285
 23817                           
 23818                           ; BSR set to: 0
 23819  003F06  0EF7               	movlw	247
 23820  003F08  6E0B               	movwf	??_atoi^0,c
 23821  003F0A  0EFF               	movlw	255
 23822  003F0C  6E0C               	movwf	(??_atoi+1)^0,c
 23823  003F0E  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23824  003F14  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23825  003F1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23826  003F1A  6AF8               	clrf	tblptru,c
 23827  003F1C                     	endif
 23828  003F1C                     	if	0	;tblptru may be non-zero
 23829  003F1C                     	endif
 23830  003F1C  0008               	tblrd		*
 23831  003F1E  50F5               	movf	tablat,w,c
 23832  003F20  6E0D               	movwf	(??_atoi+2)^0,c
 23833  003F22  6A0E               	clrf	(??_atoi+3)^0,c
 23834  003F24  500B               	movf	??_atoi^0,w,c
 23835  003F26  260D               	addwf	(??_atoi+2)^0,f,c
 23836  003F28  500C               	movf	(??_atoi+1)^0,w,c
 23837  003F2A  220E               	addwfc	(??_atoi+3)^0,f,c
 23838  003F2C  500E               	movf	(??_atoi+3)^0,w,c
 23839  003F2E  E104               	bnz	u13740
 23840  003F30  0E05               	movlw	5
 23841  003F32  5C0D               	subwf	(??_atoi+2)^0,w,c
 23842  003F34  A0D8               	btfss	status,0,c
 23843  003F36  D002               	goto	l14285
 23844  003F38                     u13740:
 23845                           
 23846                           ; BSR set to: 0
 23847  003F38  0E00               	movlw	0
 23848  003F3A  6E15               	movwf	_atoi$7703^0,c
 23849  003F3C                     l14285:
 23850                           
 23851                           ; BSR set to: 0
 23852  003F3C  0060  F054  F011   	movff	_atoi$7703,_atoi$7702
 23853  003F42  6A12               	clrf	(_atoi$7702+1)^0,c
 23854                           
 23855                           ; BSR set to: 0
 23856  003F44  5011               	movf	_atoi$7702^0,w,c
 23857  003F46  1012               	iorwf	(_atoi$7702+1)^0,w,c
 23858  003F48  B4D8               	btfsc	status,2,c
 23859  003F4A  D008               	goto	l14295
 23860  003F4C  D7CC               	goto	l14275
 23861  003F4E                     l14291:
 23862                           
 23863                           ; BSR set to: 0
 23864  003F4E  0E00               	movlw	0
 23865  003F50  6E10               	movwf	(atoi@neg+1)^0,c
 23866  003F52  0E01               	movlw	1
 23867  003F54  6E0F               	movwf	atoi@neg^0,c
 23868  003F56                     l14293:
 23869  003F56  4A09               	infsnz	atoi@s^0,f,c
 23870  003F58  2A0A               	incf	(atoi@s+1)^0,f,c
 23871  003F5A  D036               	goto	l14301
 23872  003F5C                     l14295:
 23873                           
 23874                           ; BSR set to: 0
 23875  003F5C  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23876  003F62  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23877  003F68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23878  003F68  6AF8               	clrf	tblptru,c
 23879  003F6A                     	endif
 23880  003F6A                     	if	0	;tblptru may be non-zero
 23881  003F6A                     	endif
 23882  003F6A  0008               	tblrd		*
 23883  003F6C  50F5               	movf	tablat,w,c
 23884  003F6E  6E0B               	movwf	??_atoi^0,c
 23885  003F70  6A0C               	clrf	(??_atoi+1)^0,c
 23886                           
 23887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23888                           ; Switch size 1, requested type "simple"
 23889                           ; Number of cases is 1, Range of values is 0 to 0
 23890                           ; switch strategies available:
 23891                           ; Name         Instructions Cycles
 23892                           ; simple_byte            4     3 (average)
 23893                           ;	Chosen strategy is simple_byte
 23894  003F72  500C               	movf	(??_atoi+1)^0,w,c
 23895  003F74  0A00               	xorlw	0	; case 0
 23896  003F76  A4D8               	btfss	status,2,c
 23897  003F78  D027               	goto	l14301
 23898                           
 23899                           ; BSR set to: 0
 23900                           ; Switch size 1, requested type "simple"
 23901                           ; Number of cases is 2, Range of values is 43 to 45
 23902                           ; switch strategies available:
 23903                           ; Name         Instructions Cycles
 23904                           ; simple_byte            7     4 (average)
 23905                           ;	Chosen strategy is simple_byte
 23906  003F7A  500B               	movf	??_atoi^0,w,c
 23907  003F7C  0A2B               	xorlw	43	; case 43
 23908  003F7E  B4D8               	btfsc	status,2,c
 23909  003F80  D7EA               	goto	l14293
 23910  003F82  0A06               	xorlw	6	; case 45
 23911  003F84  B4D8               	btfsc	status,2,c
 23912  003F86  D7E3               	goto	l14291
 23913  003F88  D01F               	goto	l14301
 23914  003F8A                     l14297:
 23915  003F8A  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 23916  003F90  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 23917  003F96  0E00               	movlw	0
 23918  003F98  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 23919  003F9A  0E0A               	movlw	10
 23920  003F9C  6E04               	movwf	___wmul@multiplicand^0,c
 23921  003F9E  EC39  F043         	call	___wmul	;wreg free
 23922  003FA2  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23923  003FA8  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23924  003FAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23925  003FAE  6AF8               	clrf	tblptru,c
 23926  003FB0                     	endif
 23927  003FB0                     	if	0	;tblptru may be non-zero
 23928  003FB0                     	endif
 23929  003FB0  0008               	tblrd		*
 23930  003FB2  50F5               	movf	tablat,w,c
 23931  003FB4  5E02               	subwf	?___wmul^0,f,c
 23932  003FB6  0E00               	movlw	0
 23933  003FB8  5A03               	subwfb	(?___wmul+1)^0,f,c
 23934  003FBA  0E30               	movlw	48
 23935  003FBC  2402               	addwf	?___wmul^0,w,c
 23936  003FBE  6E16               	movwf	atoi@n^0,c
 23937  003FC0  0E00               	movlw	0
 23938  003FC2  2003               	addwfc	(?___wmul+1)^0,w,c
 23939  003FC4  6E17               	movwf	(atoi@n+1)^0,c
 23940  003FC6  D7C7               	goto	l14293
 23941  003FC8                     l14301:
 23942  003FC8  0ED0               	movlw	208
 23943  003FCA  6E0B               	movwf	??_atoi^0,c
 23944  003FCC  0EFF               	movlw	255
 23945  003FCE  6E0C               	movwf	(??_atoi+1)^0,c
 23946  003FD0  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23947  003FD6  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23948  003FDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23949  003FDC  6AF8               	clrf	tblptru,c
 23950  003FDE                     	endif
 23951  003FDE                     	if	0	;tblptru may be non-zero
 23952  003FDE                     	endif
 23953  003FDE  0008               	tblrd		*
 23954  003FE0  50F5               	movf	tablat,w,c
 23955  003FE2  6E0D               	movwf	(??_atoi+2)^0,c
 23956  003FE4  6A0E               	clrf	(??_atoi+3)^0,c
 23957  003FE6  500B               	movf	??_atoi^0,w,c
 23958  003FE8  260D               	addwf	(??_atoi+2)^0,f,c
 23959  003FEA  500C               	movf	(??_atoi+1)^0,w,c
 23960  003FEC  220E               	addwfc	(??_atoi+3)^0,f,c
 23961  003FEE  500E               	movf	(??_atoi+3)^0,w,c
 23962  003FF0  E106               	bnz	u13760
 23963  003FF2  0E0A               	movlw	10
 23964  003FF4  5C0D               	subwf	(??_atoi+2)^0,w,c
 23965  003FF6  B0D8               	btfsc	status,0,c
 23966  003FF8  D002               	goto	u13760
 23967  003FFA  0E01               	movlw	1
 23968  003FFC  D001               	goto	u13770
 23969  003FFE                     u13760:
 23970  003FFE  0E00               	movlw	0
 23971  004000                     u13770:
 23972  004000  6E13               	movwf	_atoi$7704^0,c
 23973  004002  6A14               	clrf	(_atoi$7704+1)^0,c
 23974  004004  5013               	movf	_atoi$7704^0,w,c
 23975  004006  1014               	iorwf	(_atoi$7704+1)^0,w,c
 23976  004008  A4D8               	btfss	status,2,c
 23977  00400A  D7BF               	goto	l14297
 23978  00400C  500F               	movf	atoi@neg^0,w,c
 23979  00400E  1010               	iorwf	(atoi@neg+1)^0,w,c
 23980  004010  A4D8               	btfss	status,2,c
 23981  004012  D011               	goto	l3902
 23982  004014  0060  F058  F00B   	movff	atoi@n,??_atoi
 23983  00401A  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 23984  004020  1E0B               	comf	??_atoi^0,f,c
 23985  004022  1E0C               	comf	(??_atoi+1)^0,f,c
 23986  004024  4A0B               	infsnz	??_atoi^0,f,c
 23987  004026  2A0C               	incf	(??_atoi+1)^0,f,c
 23988  004028  0060  F02C  F009   	movff	??_atoi,?_atoi
 23989  00402E  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 23990  004034  0012               	return	
 23991  004036                     l3902:
 23992  004036  0060  F058  F009   	movff	atoi@n,?_atoi
 23993  00403C  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 23994  004042  0012               	return		;funcret
 23995  004044                     __end_of_atoi:
 23996                           	opt callstack 0
 23997                           
 23998 ;; *************** function _isspace *****************
 23999 ;; Defined at:
 24000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 24001 ;; Parameters:    Size  Location     Type
 24002 ;;  c               2    1[COMRAM] int 
 24003 ;; Auto vars:     Size  Location     Type
 24004 ;;		None
 24005 ;; Return value:  Size  Location     Type
 24006 ;;                  2    1[COMRAM] int 
 24007 ;; Registers used:
 24008 ;;		wreg, status,2, status,0
 24009 ;; Tracked objects:
 24010 ;;		On entry : 0/0
 24011 ;;		On exit  : 0/0
 24012 ;;		Unchanged: 0/0
 24013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24017 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24018 ;;Total ram usage:        7 bytes
 24019 ;; Hardware stack levels used:    1
 24020 ;; Hardware stack levels required when called:    7
 24021 ;; This function calls:
 24022 ;;		Nothing
 24023 ;; This function is called by:
 24024 ;;		_atoi
 24025 ;;		___strtoxl
 24026 ;; This function uses a non-reentrant model
 24027 ;;
 24028                           
 24029                           	psect	text146
 24030  007F9C                     __ptext146:
 24031                           	opt callstack 0
 24032  007F9C                     _isspace:
 24033                           	opt callstack 16
 24034                           
 24035                           ;incstack = 0
 24036  007F9C  0E01               	movlw	1
 24037  007F9E  6E08               	movwf	_isspace$7729^0,c
 24038  007FA0  0E20               	movlw	32
 24039  007FA2  1802               	xorwf	isspace@c^0,w,c
 24040  007FA4  1003               	iorwf	(isspace@c+1)^0,w,c
 24041  007FA6  B4D8               	btfsc	status,2,c
 24042  007FA8  D016               	goto	l14063
 24043  007FAA  0EF7               	movlw	247
 24044  007FAC  6E04               	movwf	??_isspace^0,c
 24045  007FAE  0EFF               	movlw	255
 24046  007FB0  6E05               	movwf	(??_isspace+1)^0,c
 24047  007FB2  0060  F008  F006   	movff	isspace@c,??_isspace+2
 24048  007FB8  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 24049  007FBE  5004               	movf	??_isspace^0,w,c
 24050  007FC0  2606               	addwf	(??_isspace+2)^0,f,c
 24051  007FC2  5005               	movf	(??_isspace+1)^0,w,c
 24052  007FC4  2207               	addwfc	(??_isspace+3)^0,f,c
 24053  007FC6  5007               	movf	(??_isspace+3)^0,w,c
 24054  007FC8  E104               	bnz	u13240
 24055  007FCA  0E05               	movlw	5
 24056  007FCC  5C06               	subwf	(??_isspace+2)^0,w,c
 24057  007FCE  A0D8               	btfss	status,0,c
 24058  007FD0  D002               	goto	l14063
 24059  007FD2                     u13240:
 24060  007FD2  0E00               	movlw	0
 24061  007FD4  6E08               	movwf	_isspace$7729^0,c
 24062  007FD6                     l14063:
 24063  007FD6  0060  F020  F002   	movff	_isspace$7729,?_isspace
 24064  007FDC  6A03               	clrf	(?_isspace+1)^0,c
 24065  007FDE  0012               	return		;funcret
 24066  007FE0                     __end_of_isspace:
 24067                           	opt callstack 0
 24068                           
 24069 ;; *************** function _isdigit *****************
 24070 ;; Defined at:
 24071 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 24072 ;; Parameters:    Size  Location     Type
 24073 ;;  c               2    1[COMRAM] int 
 24074 ;; Auto vars:     Size  Location     Type
 24075 ;;		None
 24076 ;; Return value:  Size  Location     Type
 24077 ;;                  2    1[COMRAM] int 
 24078 ;; Registers used:
 24079 ;;		wreg, status,2, status,0
 24080 ;; Tracked objects:
 24081 ;;		On entry : 0/0
 24082 ;;		On exit  : 0/0
 24083 ;;		Unchanged: 0/0
 24084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24089 ;;Total ram usage:        6 bytes
 24090 ;; Hardware stack levels used:    1
 24091 ;; Hardware stack levels required when called:    7
 24092 ;; This function calls:
 24093 ;;		Nothing
 24094 ;; This function is called by:
 24095 ;;		_vfpfcnvrt
 24096 ;;		_atoi
 24097 ;;		___strtoxl
 24098 ;; This function uses a non-reentrant model
 24099 ;;
 24100                           
 24101                           	psect	text147
 24102  00860C                     __ptext147:
 24103                           	opt callstack 0
 24104  00860C                     _isdigit:
 24105                           	opt callstack 17
 24106                           
 24107                           ;incstack = 0
 24108  00860C  0ED0               	movlw	208
 24109  00860E  6E04               	movwf	??_isdigit^0,c
 24110  008610  0EFF               	movlw	255
 24111  008612  6E05               	movwf	(??_isdigit+1)^0,c
 24112  008614  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 24113  00861A  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 24114  008620  5004               	movf	??_isdigit^0,w,c
 24115  008622  2606               	addwf	(??_isdigit+2)^0,f,c
 24116  008624  5005               	movf	(??_isdigit+1)^0,w,c
 24117  008626  2207               	addwfc	(??_isdigit+3)^0,f,c
 24118  008628  5007               	movf	(??_isdigit+3)^0,w,c
 24119  00862A  E106               	bnz	u13010
 24120  00862C  0E0A               	movlw	10
 24121  00862E  5C06               	subwf	(??_isdigit+2)^0,w,c
 24122  008630  B0D8               	btfsc	status,0,c
 24123  008632  D002               	goto	u13010
 24124  008634  0E01               	movlw	1
 24125  008636  D001               	goto	u13020
 24126  008638                     u13010:
 24127  008638  0E00               	movlw	0
 24128  00863A                     u13020:
 24129  00863A  6E02               	movwf	?_isdigit^0,c
 24130  00863C  6A03               	clrf	(?_isdigit+1)^0,c
 24131  00863E  0012               	return		;funcret
 24132  008640                     __end_of_isdigit:
 24133                           	opt callstack 0
 24134                           
 24135 ;; *************** function ___wmul *****************
 24136 ;; Defined at:
 24137 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 24138 ;; Parameters:    Size  Location     Type
 24139 ;;  multiplier      2    1[COMRAM] unsigned int 
 24140 ;;  multiplicand    2    3[COMRAM] unsigned int 
 24141 ;; Auto vars:     Size  Location     Type
 24142 ;;  product         2    5[COMRAM] unsigned int 
 24143 ;; Return value:  Size  Location     Type
 24144 ;;                  2    1[COMRAM] unsigned int 
 24145 ;; Registers used:
 24146 ;;		wreg, status,2, status,0, prodl, prodh
 24147 ;; Tracked objects:
 24148 ;;		On entry : 0/0
 24149 ;;		On exit  : 0/0
 24150 ;;		Unchanged: 0/0
 24151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24156 ;;Total ram usage:        6 bytes
 24157 ;; Hardware stack levels used:    1
 24158 ;; Hardware stack levels required when called:    7
 24159 ;; This function calls:
 24160 ;;		Nothing
 24161 ;; This function is called by:
 24162 ;;		_atoi
 24163 ;;		_CircularBufferPushBack
 24164 ;;		_CircularBufferPopFront
 24165 ;; This function uses a non-reentrant model
 24166 ;;
 24167                           
 24168                           	psect	text148
 24169  008672                     __ptext148:
 24170                           	opt callstack 0
 24171  008672                     ___wmul:
 24172                           	opt callstack 19
 24173                           
 24174                           ;incstack = 0
 24175  008672  5002               	movf	___wmul@multiplier^0,w,c
 24176  008674  0204               	mulwf	___wmul@multiplicand^0,c
 24177  008676  006F FFCC  F006    	movff	prodl,___wmul@product
 24178  00867C  006F FFD0  F007    	movff	prodh,___wmul@product+1
 24179  008682  5002               	movf	___wmul@multiplier^0,w,c
 24180  008684  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 24181  008686  50F3               	movf	243,w,c
 24182  008688  2607               	addwf	(___wmul@product+1)^0,f,c
 24183  00868A  5003               	movf	(___wmul@multiplier+1)^0,w,c
 24184  00868C  0204               	mulwf	___wmul@multiplicand^0,c
 24185  00868E  50F3               	movf	243,w,c
 24186  008690  2607               	addwf	(___wmul@product+1)^0,f,c
 24187  008692  0060  F018  F002   	movff	___wmul@product,?___wmul
 24188  008698  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 24189  00869E  0012               	return		;funcret
 24190  0086A0                     __end_of___wmul:
 24191                           	opt callstack 0
 24192                           
 24193 ;; *************** function _nwkRouteFrame *****************
 24194 ;; Defined at:
 24195 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 24196 ;; Parameters:    Size  Location     Type
 24197 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 24198 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24199 ;; Auto vars:     Size  Location     Type
 24200 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 24201 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24202 ;; Return value:  Size  Location     Type
 24203 ;;                  1    wreg      void 
 24204 ;; Registers used:
 24205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24206 ;; Tracked objects:
 24207 ;;		On entry : 2/1
 24208 ;;		On exit  : 3F/1
 24209 ;;		Unchanged: 0/0
 24210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24215 ;;Total ram usage:        4 bytes
 24216 ;; Hardware stack levels used:    1
 24217 ;; Hardware stack levels required when called:   12
 24218 ;; This function calls:
 24219 ;;		_NWK_RouteNextHop
 24220 ;;		_nwkFrameFree
 24221 ;;		_nwkRouteSendRouteError
 24222 ;;		_nwkTxFrame
 24223 ;; This function is called by:
 24224 ;;		_nwkRxTaskHandler
 24225 ;; This function uses a non-reentrant model
 24226 ;;
 24227                           
 24228                           	psect	text149
 24229  005D44                     __ptext149:
 24230                           	opt callstack 0
 24231  005D44                     _nwkRouteFrame:
 24232                           	opt callstack 15
 24233                           
 24234                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 24235                           
 24236                           ;incstack = 0
 24237  005D44  0E02               	movlw	2
 24238  005D46  2433               	addwf	nwkRouteFrame@frame^0,w,c
 24239  005D48  6E35               	movwf	nwkRouteFrame@header^0,c
 24240  005D4A  0E00               	movlw	0
 24241  005D4C  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 24242  005D4E  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 24243                           
 24244                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 24245  005D50  EE20 F00D          	lfsr	2,13
 24246  005D54  5035               	movf	nwkRouteFrame@header^0,w,c
 24247  005D56  26D9               	addwf	fsr2l,f,c
 24248  005D58  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24249  005D5A  22DA               	addwfc	fsr2h,f,c
 24250  005D5C  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 24251  005D62  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 24252  005D68  EE20 F009          	lfsr	2,9
 24253  005D6C  5035               	movf	nwkRouteFrame@header^0,w,c
 24254  005D6E  26D9               	addwf	fsr2l,f,c
 24255  005D70  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24256  005D72  22DA               	addwfc	fsr2h,f,c
 24257  005D74  0E00               	movlw	0
 24258  005D76  B6DF               	btfsc	indf2,3,c
 24259  005D78  0E01               	movlw	1
 24260  005D7A  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 24261  005D7C  ECFD  F03E         	call	_NWK_RouteNextHop	;wreg free
 24262  005D80  2808               	incf	?_NWK_RouteNextHop^0,w,c
 24263  005D82  E103               	bnz	u15680
 24264  005D84  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 24265  005D86  B4D8               	btfsc	status,2,c
 24266  005D88  D01B               	goto	l15655
 24267  005D8A                     u15680:
 24268                           
 24269                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 24270  005D8A  EE20 F087          	lfsr	2,135
 24271  005D8E  5033               	movf	nwkRouteFrame@frame^0,w,c
 24272  005D90  26D9               	addwf	fsr2l,f,c
 24273  005D92  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24274  005D94  22DA               	addwfc	fsr2h,f,c
 24275  005D96  0E00               	movlw	0
 24276  005D98  6EDE               	movwf	postinc2,c
 24277  005D9A  0E00               	movlw	0
 24278  005D9C  6EDD               	movwf	postdec2,c
 24279                           
 24280                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 24281  005D9E  EE20 F086          	lfsr	2,134
 24282  005DA2  5033               	movf	nwkRouteFrame@frame^0,w,c
 24283  005DA4  26D9               	addwf	fsr2l,f,c
 24284  005DA6  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24285  005DA8  22DA               	addwfc	fsr2h,f,c
 24286  005DAA  0E02               	movlw	2
 24287  005DAC  6EDF               	movwf	indf2,c
 24288                           
 24289                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 24290  005DAE  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 24291  005DB4  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 24292  005DBA  ECED  F01D         	call	_nwkTxFrame	;wreg free
 24293                           
 24294                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 24295  005DBE  0012               	return	
 24296  005DC0                     l15655:
 24297                           
 24298                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 24299  005DC0  EE20 F00B          	lfsr	2,11
 24300  005DC4  5035               	movf	nwkRouteFrame@header^0,w,c
 24301  005DC6  26D9               	addwf	fsr2l,f,c
 24302  005DC8  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24303  005DCA  22DA               	addwfc	fsr2h,f,c
 24304  005DCC  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 24305  005DD2  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 24306  005DD8  EE20 F00D          	lfsr	2,13
 24307  005DDC  5035               	movf	nwkRouteFrame@header^0,w,c
 24308  005DDE  26D9               	addwf	fsr2l,f,c
 24309  005DE0  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24310  005DE2  22DA               	addwfc	fsr2h,f,c
 24311  005DE4  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 24312  005DEA  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 24313  005DF0  EE20 F009          	lfsr	2,9
 24314  005DF4  5035               	movf	nwkRouteFrame@header^0,w,c
 24315  005DF6  26D9               	addwf	fsr2l,f,c
 24316  005DF8  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24317  005DFA  22DA               	addwfc	fsr2h,f,c
 24318  005DFC  0E00               	movlw	0
 24319  005DFE  B6DF               	btfsc	indf2,3,c
 24320  005E00  0E01               	movlw	1
 24321  005E02  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 24322  005E04  EC7E  F02C         	call	_nwkRouteSendRouteError	;wreg free
 24323                           
 24324                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 24325  005E08  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 24326  005E0E  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 24327  005E14  EC49  F045         	call	_nwkFrameFree	;wreg free
 24328                           
 24329                           ; BSR set to: 1
 24330  005E18  0012               	return		;funcret
 24331  005E1A                     __end_of_nwkRouteFrame:
 24332                           	opt callstack 0
 24333                           
 24334 ;; *************** function _nwkRouteSendRouteError *****************
 24335 ;; Defined at:
 24336 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;  src             2   41[COMRAM] unsigned short 
 24339 ;;  dst             2   43[COMRAM] unsigned short 
 24340 ;;  multicast       1   45[COMRAM] unsigned char 
 24341 ;; Auto vars:     Size  Location     Type
 24342 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 24343 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24344 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 24345 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24346 ;; Return value:  Size  Location     Type
 24347 ;;                  1    wreg      void 
 24348 ;; Registers used:
 24349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24350 ;; Tracked objects:
 24351 ;;		On entry : 0/1
 24352 ;;		On exit  : 0/0
 24353 ;;		Unchanged: 0/0
 24354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24355 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24356 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24358 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24359 ;;Total ram usage:        9 bytes
 24360 ;; Hardware stack levels used:    1
 24361 ;; Hardware stack levels required when called:   11
 24362 ;; This function calls:
 24363 ;;		_nwkFrameAlloc
 24364 ;;		_nwkFrameCommandInit
 24365 ;;		_nwkTxFrame
 24366 ;; This function is called by:
 24367 ;;		_nwkRouteFrame
 24368 ;; This function uses a non-reentrant model
 24369 ;;
 24370                           
 24371                           	psect	text150
 24372  0058FC                     __ptext150:
 24373                           	opt callstack 0
 24374  0058FC                     _nwkRouteSendRouteError:
 24375                           	opt callstack 15
 24376                           
 24377                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24378                           
 24379                           ; BSR set to: 1
 24380                           ;incstack = 0
 24381  0058FC  ECED  F032         	call	_nwkFrameAlloc	;wreg free
 24382  005900  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 24383  005906  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 24384  00590C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24385  00590E  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24386  005910  B4D8               	btfsc	status,2,c
 24387  005912  0012               	return	
 24388                           
 24389                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 24390  005914  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 24391  00591A  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 24392  005920  EC31  F040         	call	_nwkFrameCommandInit	;wreg free
 24393                           
 24394                           ; BSR set to: 1
 24395                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 24396  005924  EE20 F001          	lfsr	2,1
 24397  005928  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24398  00592A  26D9               	addwf	fsr2l,f,c
 24399  00592C  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24400  00592E  22DA               	addwfc	fsr2h,f,c
 24401  005930  0E06               	movlw	6
 24402  005932  26DF               	addwf	indf2,f,c
 24403                           
 24404                           ; BSR set to: 1
 24405                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 24406  005934  EE20 F087          	lfsr	2,135
 24407  005938  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24408  00593A  26D9               	addwf	fsr2l,f,c
 24409  00593C  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24410  00593E  22DA               	addwfc	fsr2h,f,c
 24411  005940  0E00               	movlw	0
 24412  005942  6EDE               	movwf	postinc2,c
 24413  005944  0E00               	movlw	0
 24414  005946  6EDD               	movwf	postdec2,c
 24415                           
 24416                           ; BSR set to: 1
 24417                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 24418  005948  EE20 F00F          	lfsr	2,15
 24419  00594C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24420  00594E  26D9               	addwf	fsr2l,f,c
 24421  005950  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24422  005952  22DA               	addwfc	fsr2h,f,c
 24423  005954  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24424  00595A  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24425                           
 24426                           ; BSR set to: 1
 24427                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 24428  005960  EE20 F081          	lfsr	2,129
 24429  005964  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24430  005966  26D9               	addwf	fsr2l,f,c
 24431  005968  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24432  00596A  22DA               	addwfc	fsr2h,f,c
 24433  00596C  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 24434  005972  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 24435                           
 24436                           ; BSR set to: 1
 24437                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 24438  005978  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 24439  00597E  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 24440  005984  0E01               	movlw	1
 24441  005986  6EDF               	movwf	indf2,c
 24442                           
 24443                           ; BSR set to: 1
 24444                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 24445  005988  EE20 F001          	lfsr	2,1
 24446  00598C  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24447  00598E  26D9               	addwf	fsr2l,f,c
 24448  005990  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24449  005992  22DA               	addwfc	fsr2h,f,c
 24450  005994  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24451  00599A  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 24455  0059A0  EE20 F003          	lfsr	2,3
 24456  0059A4  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24457  0059A6  26D9               	addwf	fsr2l,f,c
 24458  0059A8  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24459  0059AA  22DA               	addwfc	fsr2h,f,c
 24460  0059AC  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 24461  0059B2  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 24462                           
 24463                           ; BSR set to: 1
 24464                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 24465  0059B8  EE20 F005          	lfsr	2,5
 24466  0059BC  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24467  0059BE  26D9               	addwf	fsr2l,f,c
 24468  0059C0  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24469  0059C2  22DA               	addwfc	fsr2h,f,c
 24470  0059C4  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 24471                           
 24472                           ; BSR set to: 1
 24473                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 24474  0059CA  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 24475  0059D0  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 24476  0059D6  ECED  F01D         	call	_nwkTxFrame	;wreg free
 24477  0059DA  0012               	return		;funcret
 24478  0059DC                     __end_of_nwkRouteSendRouteError:
 24479                           	opt callstack 0
 24480                           
 24481 ;; *************** function _nwkFrameCommandInit *****************
 24482 ;; Defined at:
 24483 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 24484 ;; Parameters:    Size  Location     Type
 24485 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24486 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24487 ;; Auto vars:     Size  Location     Type
 24488 ;;		None
 24489 ;; Return value:  Size  Location     Type
 24490 ;;                  1    wreg      void 
 24491 ;; Registers used:
 24492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24493 ;; Tracked objects:
 24494 ;;		On entry : 0/0
 24495 ;;		On exit  : 3F/1
 24496 ;;		Unchanged: 0/0
 24497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24502 ;;Total ram usage:        2 bytes
 24503 ;; Hardware stack levels used:    1
 24504 ;; Hardware stack levels required when called:    7
 24505 ;; This function calls:
 24506 ;;		Nothing
 24507 ;; This function is called by:
 24508 ;;		_nwkRouteSendRouteError
 24509 ;;		_nwkRxSendAck
 24510 ;; This function uses a non-reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text151
 24514  008062                     __ptext151:
 24515                           	opt callstack 0
 24516  008062                     _nwkFrameCommandInit:
 24517                           	opt callstack 18
 24518                           
 24519                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 24520                           
 24521                           ;incstack = 0
 24522  008062  EE20 F083          	lfsr	2,131
 24523  008066  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24524  008068  26D9               	addwf	fsr2l,f,c
 24525  00806A  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24526  00806C  22DA               	addwfc	fsr2h,f,c
 24527  00806E  0E00               	movlw	0
 24528  008070  6EDF               	movwf	indf2,c
 24529                           
 24530                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 24531  008072  0101               	movlb	1	; () banked
 24532  008074  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 24533  008076  EE20 F00C          	lfsr	2,12
 24534  00807A  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24535  00807C  26D9               	addwf	fsr2l,f,c
 24536  00807E  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24537  008080  22DA               	addwfc	fsr2h,f,c
 24538  008082  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 24539                           
 24540                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 24541  008088  EE20 F00D          	lfsr	2,13
 24542  00808C  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24543  00808E  26D9               	addwf	fsr2l,f,c
 24544  008090  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24545  008092  22DA               	addwfc	fsr2h,f,c
 24546  008094  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24547  00809A  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24548                           
 24549                           ; BSR set to: 1
 24550  0080A0  0012               	return		;funcret
 24551  0080A2                     __end_of_nwkFrameCommandInit:
 24552                           	opt callstack 0
 24553                           
 24554 ;; *************** function _nwkFrameFree *****************
 24555 ;; Defined at:
 24556 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 24557 ;; Parameters:    Size  Location     Type
 24558 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24559 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24560 ;; Auto vars:     Size  Location     Type
 24561 ;;		None
 24562 ;; Return value:  Size  Location     Type
 24563 ;;                  1    wreg      void 
 24564 ;; Registers used:
 24565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24566 ;; Tracked objects:
 24567 ;;		On entry : 0/1
 24568 ;;		On exit  : 3F/1
 24569 ;;		Unchanged: 0/0
 24570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24575 ;;Total ram usage:        2 bytes
 24576 ;; Hardware stack levels used:    1
 24577 ;; Hardware stack levels required when called:    7
 24578 ;; This function calls:
 24579 ;;		Nothing
 24580 ;; This function is called by:
 24581 ;;		_nwkDataReqTxConf
 24582 ;;		_nwkRouteFrame
 24583 ;;		_nwkRxTaskHandler
 24584 ;;		_nwkTxTaskHandler
 24585 ;; This function uses a non-reentrant model
 24586 ;;
 24587                           
 24588                           	psect	text152
 24589  008A92                     __ptext152:
 24590                           	opt callstack 0
 24591  008A92                     _nwkFrameFree:
 24592                           	opt callstack 20
 24593                           
 24594                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 24595                           
 24596                           ; BSR set to: 1
 24597                           ;incstack = 0
 24598  008A92  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 24599  008A98  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 24600  008A9E  0E00               	movlw	0
 24601  008AA0  6EDF               	movwf	indf2,c
 24602                           
 24603                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 24604  008AA2  0101               	movlb	1	; () banked
 24605  008AA4  0726               	decf	(_nwkIb+38)& (0+255),f,b
 24606  008AA6  A0D8               	btfss	status,0,c
 24607  008AA8  0727               	decf	(_nwkIb+39)& (0+255),f,b
 24608                           
 24609                           ; BSR set to: 1
 24610  008AAA  0012               	return		;funcret
 24611  008AAC                     __end_of_nwkFrameFree:
 24612                           	opt callstack 0
 24613                           
 24614 ;; *************** function _nwkDataReqTaskHandler *****************
 24615 ;; Defined at:
 24616 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 24617 ;; Parameters:    Size  Location     Type
 24618 ;;		None
 24619 ;; Auto vars:     Size  Location     Type
 24620 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 24621 ;;		 -> NULL(0), tx_buffer(524), 
 24622 ;; Return value:  Size  Location     Type
 24623 ;;                  1    wreg      void 
 24624 ;; Registers used:
 24625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24626 ;; Tracked objects:
 24627 ;;		On entry : 0/1
 24628 ;;		On exit  : 0/0
 24629 ;;		Unchanged: 0/0
 24630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24635 ;;Total ram usage:        4 bytes
 24636 ;; Hardware stack levels used:    1
 24637 ;; Hardware stack levels required when called:   12
 24638 ;; This function calls:
 24639 ;;		_nwkDataReqConfirm
 24640 ;;		_nwkDataReqSendFrame
 24641 ;; This function is called by:
 24642 ;;		_NWK_TaskHandler
 24643 ;; This function uses a non-reentrant model
 24644 ;;
 24645                           
 24646                           	psect	text153
 24647  007250                     __ptext153:
 24648                           	opt callstack 0
 24649  007250                     _nwkDataReqTaskHandler:
 24650                           	opt callstack 16
 24651                           
 24652                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 24653                           
 24654                           ; BSR set to: 1
 24655                           ;incstack = 0
 24656  007250  0060  F388  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 24657  007256  0060  F38C  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 24658  00725C  D035               	goto	l16371
 24659  00725E                     l16353:
 24660                           
 24661                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 24662  00725E  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 24663  007264  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 24664  00726A  ECAF  F00E         	call	_nwkDataReqSendFrame	;wreg free
 24665  00726E  0012               	return	
 24666  007270                     l16359:
 24667                           
 24668                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 24669  007270  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 24670  007276  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 24671  00727C  EC9A  F02B         	call	_nwkDataReqConfirm	;wreg free
 24672  007280  0012               	return	
 24673  007282                     l16367:
 24674  007282  EE20 F004          	lfsr	2,4
 24675  007286  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24676  007288  26D9               	addwf	fsr2l,f,c
 24677  00728A  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24678  00728C  22DA               	addwfc	fsr2h,f,c
 24679  00728E  50DF               	movf	indf2,w,c
 24680  007290  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 24681  007292  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 24682                           
 24683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24684                           ; Switch size 1, requested type "simple"
 24685                           ; Number of cases is 1, Range of values is 0 to 0
 24686                           ; switch strategies available:
 24687                           ; Name         Instructions Cycles
 24688                           ; simple_byte            4     3 (average)
 24689                           ;	Chosen strategy is simple_byte
 24690  007294  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 24691  007296  0A00               	xorlw	0	; case 0
 24692  007298  A4D8               	btfss	status,2,c
 24693  00729A  D00A               	goto	l16369
 24694                           
 24695                           ; Switch size 1, requested type "simple"
 24696                           ; Number of cases is 3, Range of values is 0 to 2
 24697                           ; switch strategies available:
 24698                           ; Name         Instructions Cycles
 24699                           ; simple_byte           10     6 (average)
 24700                           ;	Chosen strategy is simple_byte
 24701  00729C  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 24702  00729E  0A00               	xorlw	0	; case 0
 24703  0072A0  B4D8               	btfsc	status,2,c
 24704  0072A2  D7DD               	goto	l16353
 24705  0072A4  0A01               	xorlw	1	; case 1
 24706  0072A6  B4D8               	btfsc	status,2,c
 24707  0072A8  D003               	goto	l16369
 24708  0072AA  0A03               	xorlw	3	; case 2
 24709  0072AC  B4D8               	btfsc	status,2,c
 24710  0072AE  D7E0               	goto	l16359
 24711  0072B0                     l16369:
 24712                           
 24713                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 24714  0072B0  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 24715  0072B6  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 24716  0072BC  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 24717  0072C2  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 24718  0072C8                     l16371:
 24719  0072C8  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24720  0072CA  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24721  0072CC  B4D8               	btfsc	status,2,c
 24722  0072CE  0012               	return	
 24723  0072D0  D7D8               	goto	l16367
 24724  0072D2                     __end_of_nwkDataReqTaskHandler:
 24725                           	opt callstack 0
 24726                           
 24727 ;; *************** function _nwkDataReqSendFrame *****************
 24728 ;; Defined at:
 24729 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 24730 ;; Parameters:    Size  Location     Type
 24731 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 24732 ;;		 -> NULL(0), tx_buffer(524), 
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 24735 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24736 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 24737 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24738 ;; Return value:  Size  Location     Type
 24739 ;;                  1    wreg      void 
 24740 ;; Registers used:
 24741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24742 ;; Tracked objects:
 24743 ;;		On entry : 0/1
 24744 ;;		On exit  : 0/0
 24745 ;;		Unchanged: 0/0
 24746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24748 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24750 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24751 ;;Total ram usage:        7 bytes
 24752 ;; Hardware stack levels used:    1
 24753 ;; Hardware stack levels required when called:   11
 24754 ;; This function calls:
 24755 ;;		_memcpy
 24756 ;;		_nwkFrameAlloc
 24757 ;;		_nwkTxFrame
 24758 ;; This function is called by:
 24759 ;;		_nwkDataReqTaskHandler
 24760 ;; This function uses a non-reentrant model
 24761 ;;
 24762                           
 24763                           	psect	text154
 24764  001D5E                     __ptext154:
 24765                           	opt callstack 0
 24766  001D5E                     _nwkDataReqSendFrame:
 24767                           	opt callstack 16
 24768                           
 24769                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24770                           
 24771                           ;incstack = 0
 24772  001D5E  ECED  F032         	call	_nwkFrameAlloc	;wreg free
 24773  001D62  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 24774  001D68  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 24775  001D6E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24776  001D70  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24777  001D72  A4D8               	btfss	status,2,c
 24778  001D74  D011               	goto	l15585
 24779                           
 24780                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 24781  001D76  EE20 F004          	lfsr	2,4
 24782  001D7A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24783  001D7C  26D9               	addwf	fsr2l,f,c
 24784  001D7E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24785  001D80  22DA               	addwfc	fsr2h,f,c
 24786  001D82  0E02               	movlw	2
 24787  001D84  6EDF               	movwf	indf2,c
 24788                           
 24789                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 24790  001D86  EE20 F011          	lfsr	2,17
 24791  001D8A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24792  001D8C  26D9               	addwf	fsr2l,f,c
 24793  001D8E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24794  001D90  22DA               	addwfc	fsr2h,f,c
 24795  001D92  0E02               	movlw	2
 24796  001D94  6EDF               	movwf	indf2,c
 24797  001D96  0012               	return	
 24798  001D98                     l15585:
 24799                           
 24800                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 24801  001D98  EE20 F002          	lfsr	2,2
 24802  001D9C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24803  001D9E  26D9               	addwf	fsr2l,f,c
 24804  001DA0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24805  001DA2  22DA               	addwfc	fsr2h,f,c
 24806  001DA4  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 24807  001DAA  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 24808                           
 24809                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 24810  001DB0  EE20 F004          	lfsr	2,4
 24811  001DB4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24812  001DB6  26D9               	addwf	fsr2l,f,c
 24813  001DB8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24814  001DBA  22DA               	addwfc	fsr2h,f,c
 24815  001DBC  0E01               	movlw	1
 24816  001DBE  6EDF               	movwf	indf2,c
 24817                           
 24818                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 24819  001DC0  EE20 F087          	lfsr	2,135
 24820  001DC4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24821  001DC6  26D9               	addwf	fsr2l,f,c
 24822  001DC8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24823  001DCA  22DA               	addwfc	fsr2h,f,c
 24824  001DCC  0E44               	movlw	low _nwkDataReqTxConf
 24825  001DCE  6EDE               	movwf	postinc2,c
 24826  001DD0  0E69               	movlw	high _nwkDataReqTxConf
 24827  001DD2  6EDD               	movwf	postdec2,c
 24828                           
 24829                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 24830  001DD4  EE20 F086          	lfsr	2,134
 24831  001DD8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24832  001DDA  26D9               	addwf	fsr2l,f,c
 24833  001DDC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24834  001DDE  22DA               	addwfc	fsr2h,f,c
 24835  001DE0  EE10 F009          	lfsr	1,9
 24836  001DE4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24837  001DE6  26E1               	addwf	fsr1l,f,c
 24838  001DE8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24839  001DEA  22E2               	addwfc	fsr1h,f,c
 24840  001DEC  A4E7               	btfss	indf1,2,c
 24841  001DEE  D002               	goto	u15510
 24842  001DF0  0E01               	movlw	1
 24843  001DF2  D001               	goto	u15520
 24844  001DF4                     u15510:
 24845  001DF4  0E00               	movlw	0
 24846  001DF6                     u15520:
 24847  001DF6  6EDF               	movwf	indf2,c
 24848                           
 24849                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 24850  001DF8  EE20 F009          	lfsr	2,9
 24851  001DFC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24852  001DFE  26D9               	addwf	fsr2l,f,c
 24853  001E00  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24854  001E02  22DA               	addwfc	fsr2h,f,c
 24855  001E04  A0DF               	btfss	indf2,0,c
 24856  001E06  D003               	goto	u15530
 24857  001E08  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24858  001E0A  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24859  001E0C  D001               	goto	u15548
 24860  001E0E                     u15530:
 24861  001E0E  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24862  001E10                     u15548:
 24863  001E10  EE20 F00B          	lfsr	2,11
 24864  001E14  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24865  001E16  26D9               	addwf	fsr2l,f,c
 24866  001E18  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24867  001E1A  22DA               	addwfc	fsr2h,f,c
 24868  001E1C  50DF               	movf	indf2,w,c
 24869  001E1E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24870  001E20  0BFE               	andlw	-2
 24871  001E22  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24872  001E24  6EDF               	movwf	indf2,c
 24873                           
 24874                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 24875  001E26  EE20 F009          	lfsr	2,9
 24876  001E2A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24877  001E2C  26D9               	addwf	fsr2l,f,c
 24878  001E2E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24879  001E30  22DA               	addwfc	fsr2h,f,c
 24880  001E32  A6DF               	btfss	indf2,3,c
 24881  001E34  D003               	goto	u15550
 24882  001E36  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24883  001E38  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24884  001E3A  D001               	goto	u15568
 24885  001E3C                     u15550:
 24886  001E3C  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24887  001E3E                     u15568:
 24888  001E3E  EE20 F00B          	lfsr	2,11
 24889  001E42  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24890  001E44  26D9               	addwf	fsr2l,f,c
 24891  001E46  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24892  001E48  22DA               	addwfc	fsr2h,f,c
 24893  001E4A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24894  001E4C  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24895  001E4E  50DF               	movf	indf2,w,c
 24896  001E50  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24897  001E52  0BFB               	andlw	-5
 24898  001E54  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24899  001E56  6EDF               	movwf	indf2,c
 24900                           
 24901                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 24902  001E58  EE20 F009          	lfsr	2,9
 24903  001E5C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24904  001E5E  26D9               	addwf	fsr2l,f,c
 24905  001E60  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24906  001E62  22DA               	addwfc	fsr2h,f,c
 24907  001E64  A8DF               	btfss	indf2,4,c
 24908  001E66  D003               	goto	u15570
 24909  001E68  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24910  001E6A  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24911  001E6C  D001               	goto	u15588
 24912  001E6E                     u15570:
 24913  001E6E  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24914  001E70                     u15588:
 24915  001E70  EE20 F00B          	lfsr	2,11
 24916  001E74  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24917  001E76  26D9               	addwf	fsr2l,f,c
 24918  001E78  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24919  001E7A  22DA               	addwfc	fsr2h,f,c
 24920  001E7C  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24921  001E7E  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24922  001E80  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24923  001E82  50DF               	movf	indf2,w,c
 24924  001E84  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24925  001E86  0BF7               	andlw	-9
 24926  001E88  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24927  001E8A  6EDF               	movwf	indf2,c
 24928                           
 24929                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 24930  001E8C  EE20 F00B          	lfsr	2,11
 24931  001E90  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24932  001E92  26D9               	addwf	fsr2l,f,c
 24933  001E94  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24934  001E96  22DA               	addwfc	fsr2h,f,c
 24935  001E98  A6DF               	btfss	indf2,3,c
 24936  001E9A  D06C               	goto	l1775
 24937                           
 24938                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 24939  001E9C  EE20 F081          	lfsr	2,129
 24940  001EA0  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24941  001EA2  26D9               	addwf	fsr2l,f,c
 24942  001EA4  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24943  001EA6  22DA               	addwfc	fsr2h,f,c
 24944  001EA8  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 24945  001EAE  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 24946                           
 24947                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 24948  001EB4  EE20 F00A          	lfsr	2,10
 24949  001EB8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24950  001EBA  26D9               	addwf	fsr2l,f,c
 24951  001EBC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24952  001EBE  22DA               	addwfc	fsr2h,f,c
 24953  001EC0  50DF               	movf	indf2,w,c
 24954  001EC2  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24955  001EC4  EE20 F001          	lfsr	2,1
 24956  001EC8  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 24957  001ECA  26D9               	addwf	fsr2l,f,c
 24958  001ECC  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 24959  001ECE  22DA               	addwfc	fsr2h,f,c
 24960  001ED0  50DF               	movf	indf2,w,c
 24961  001ED2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24962  001ED4  0BF0               	andlw	-16
 24963  001ED6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24964  001ED8  6EDF               	movwf	indf2,c
 24965                           
 24966                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 24967  001EDA  EE20 F00A          	lfsr	2,10
 24968  001EDE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24969  001EE0  26D9               	addwf	fsr2l,f,c
 24970  001EE2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24971  001EE4  22DA               	addwfc	fsr2h,f,c
 24972  001EE6  50DF               	movf	indf2,w,c
 24973  001EE8  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24974  001EEA  EE20 F001          	lfsr	2,1
 24975  001EEE  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 24976  001EF0  26D9               	addwf	fsr2l,f,c
 24977  001EF2  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 24978  001EF4  22DA               	addwfc	fsr2h,f,c
 24979  001EF6  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 24980  001EF8  50DF               	movf	indf2,w,c
 24981  001EFA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24982  001EFC  0B0F               	andlw	-241
 24983  001EFE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24984  001F00  6EDF               	movwf	indf2,c
 24985                           
 24986                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 24987  001F02  EE20 F00B          	lfsr	2,11
 24988  001F06  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24989  001F08  26D9               	addwf	fsr2l,f,c
 24990  001F0A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24991  001F0C  22DA               	addwfc	fsr2h,f,c
 24992  001F0E  50DF               	movf	indf2,w,c
 24993  001F10  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24994  001F12  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 24995  001F18  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 24996  001F1E  50DF               	movf	indf2,w,c
 24997  001F20  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24998  001F22  0BF0               	andlw	-16
 24999  001F24  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25000  001F26  6EDF               	movwf	indf2,c
 25001                           
 25002                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 25003  001F28  EE20 F00B          	lfsr	2,11
 25004  001F2C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25005  001F2E  26D9               	addwf	fsr2l,f,c
 25006  001F30  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25007  001F32  22DA               	addwfc	fsr2h,f,c
 25008  001F34  50DF               	movf	indf2,w,c
 25009  001F36  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25010  001F38  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25011  001F3E  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25012  001F44  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25013  001F46  50DF               	movf	indf2,w,c
 25014  001F48  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25015  001F4A  0B0F               	andlw	-241
 25016  001F4C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25017  001F4E  6EDF               	movwf	indf2,c
 25018                           
 25019                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 25020  001F50  EE20 F081          	lfsr	2,129
 25021  001F54  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25022  001F56  26D9               	addwf	fsr2l,f,c
 25023  001F58  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25024  001F5A  22DA               	addwfc	fsr2h,f,c
 25025  001F5C  0E02               	movlw	2
 25026  001F5E  26DE               	addwf	postinc2,f,c
 25027  001F60  0E00               	movlw	0
 25028  001F62  22DD               	addwfc	postdec2,f,c
 25029                           
 25030                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 25031  001F64  EE20 F001          	lfsr	2,1
 25032  001F68  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25033  001F6A  26D9               	addwf	fsr2l,f,c
 25034  001F6C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25035  001F6E  22DA               	addwfc	fsr2h,f,c
 25036  001F70  0E02               	movlw	2
 25037  001F72  26DF               	addwf	indf2,f,c
 25038  001F74                     l1775:
 25039                           
 25040                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 25041  001F74  0101               	movlb	1	; () banked
 25042  001F76  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 25043  001F78  EE20 F00C          	lfsr	2,12
 25044  001F7C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25045  001F7E  26D9               	addwf	fsr2l,f,c
 25046  001F80  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25047  001F82  22DA               	addwfc	fsr2h,f,c
 25048  001F84  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 25049                           
 25050                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 25051  001F8A  EE20 F00D          	lfsr	2,13
 25052  001F8E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25053  001F90  26D9               	addwf	fsr2l,f,c
 25054  001F92  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25055  001F94  22DA               	addwfc	fsr2h,f,c
 25056  001F96  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25057  001F9C  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25058                           
 25059                           ; BSR set to: 1
 25060                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 25061  001FA2  EE20 F005          	lfsr	2,5
 25062  001FA6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25063  001FA8  26D9               	addwf	fsr2l,f,c
 25064  001FAA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25065  001FAC  22DA               	addwfc	fsr2h,f,c
 25066  001FAE  EE10 F00F          	lfsr	1,15
 25067  001FB2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25068  001FB4  26E1               	addwf	fsr1l,f,c
 25069  001FB6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25070  001FB8  22E2               	addwfc	fsr1h,f,c
 25071  001FBA  006F FF7B FFE6     	movff	postinc2,postinc1
 25072  001FC0  006F FF77 FFE5     	movff	postdec2,postdec1
 25073                           
 25074                           ; BSR set to: 1
 25075                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 25076  001FC6  EE20 F008          	lfsr	2,8
 25077  001FCA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25078  001FCC  26D9               	addwf	fsr2l,f,c
 25079  001FCE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25080  001FD0  22DA               	addwfc	fsr2h,f,c
 25081  001FD2  50DF               	movf	indf2,w,c
 25082  001FD4  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25083  001FD6  EE20 F011          	lfsr	2,17
 25084  001FDA  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25085  001FDC  26D9               	addwf	fsr2l,f,c
 25086  001FDE  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25087  001FE0  22DA               	addwfc	fsr2h,f,c
 25088  001FE2  50DF               	movf	indf2,w,c
 25089  001FE4  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25090  001FE6  0BF0               	andlw	-16
 25091  001FE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25092  001FEA  6EDF               	movwf	indf2,c
 25093                           
 25094                           ; BSR set to: 1
 25095                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 25096  001FEC  EE20 F007          	lfsr	2,7
 25097  001FF0  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25098  001FF2  26D9               	addwf	fsr2l,f,c
 25099  001FF4  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25100  001FF6  22DA               	addwfc	fsr2h,f,c
 25101  001FF8  50DF               	movf	indf2,w,c
 25102  001FFA  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25103  001FFC  EE20 F011          	lfsr	2,17
 25104  002000  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25105  002002  26D9               	addwf	fsr2l,f,c
 25106  002004  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25107  002006  22DA               	addwfc	fsr2h,f,c
 25108  002008  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25109  00200A  50DF               	movf	indf2,w,c
 25110  00200C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25111  00200E  0B0F               	andlw	-241
 25112  002010  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25113  002012  6EDF               	movwf	indf2,c
 25114                           
 25115                           ; BSR set to: 1
 25116                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 25117  002014  EE20 F081          	lfsr	2,129
 25118  002018  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25119  00201A  26D9               	addwf	fsr2l,f,c
 25120  00201C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25121  00201E  22DA               	addwfc	fsr2h,f,c
 25122  002020  006F FF78  F008    	movff	postinc2,memcpy@d1
 25123  002026  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 25124  00202C  EE20 F00C          	lfsr	2,12
 25125  002030  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25126  002032  26D9               	addwf	fsr2l,f,c
 25127  002034  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25128  002036  22DA               	addwfc	fsr2h,f,c
 25129  002038  006F FF78  F00A    	movff	postinc2,memcpy@s1
 25130  00203E  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 25131  002044  EE20 F00E          	lfsr	2,14
 25132  002048  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25133  00204A  26D9               	addwf	fsr2l,f,c
 25134  00204C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25135  00204E  22DA               	addwfc	fsr2h,f,c
 25136  002050  50DF               	movf	indf2,w,c
 25137  002052  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25138  002054  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25139  002056  6E0C               	movwf	memcpy@n^0,c
 25140  002058  6A0D               	clrf	(memcpy@n+1)^0,c
 25141  00205A  ECE7  F039         	call	_memcpy	;wreg free
 25142                           
 25143                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 25144  00205E  EE20 F00E          	lfsr	2,14
 25145  002062  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25146  002064  26D9               	addwf	fsr2l,f,c
 25147  002066  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25148  002068  22DA               	addwfc	fsr2h,f,c
 25149  00206A  50DF               	movf	indf2,w,c
 25150  00206C  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25151  00206E  EE20 F001          	lfsr	2,1
 25152  002072  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25153  002074  26D9               	addwf	fsr2l,f,c
 25154  002076  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25155  002078  22DA               	addwfc	fsr2h,f,c
 25156  00207A  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25157  00207C  26DF               	addwf	indf2,f,c
 25158                           
 25159                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 25160  00207E  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 25161  002084  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 25162  00208A  ECED  F01D         	call	_nwkTxFrame	;wreg free
 25163  00208E  0012               	return		;funcret
 25164  002090                     __end_of_nwkDataReqSendFrame:
 25165                           	opt callstack 0
 25166                           
 25167 ;; *************** function _nwkTxFrame *****************
 25168 ;; Defined at:
 25169 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 25170 ;; Parameters:    Size  Location     Type
 25171 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 25172 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25173 ;; Auto vars:     Size  Location     Type
 25174 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 25175 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25176 ;; Return value:  Size  Location     Type
 25177 ;;                  1    wreg      void 
 25178 ;; Registers used:
 25179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25180 ;; Tracked objects:
 25181 ;;		On entry : 0/1
 25182 ;;		On exit  : 3F/1
 25183 ;;		Unchanged: 0/0
 25184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25189 ;;Total ram usage:        6 bytes
 25190 ;; Hardware stack levels used:    1
 25191 ;; Hardware stack levels required when called:   10
 25192 ;; This function calls:
 25193 ;;		_nwkRoutePrepareTx
 25194 ;;		_rand
 25195 ;; This function is called by:
 25196 ;;		_nwkDataReqSendFrame
 25197 ;;		_nwkRouteFrame
 25198 ;;		_nwkRouteSendRouteError
 25199 ;;		_nwkRxSendAck
 25200 ;; This function uses a non-reentrant model
 25201 ;;
 25202                           
 25203                           	psect	text155
 25204  003BDA                     __ptext155:
 25205                           	opt callstack 0
 25206  003BDA                     _nwkTxFrame:
 25207                           	opt callstack 15
 25208                           
 25209                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 25210                           
 25211                           ;incstack = 0
 25212  003BDA  0E02               	movlw	2
 25213  003BDC  2424               	addwf	nwkTxFrame@frame^0,w,c
 25214  003BDE  6E28               	movwf	nwkTxFrame@header^0,c
 25215  003BE0  0E00               	movlw	0
 25216  003BE2  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 25217  003BE4  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 25218                           
 25219                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 25220  003BE6  EE20 F086          	lfsr	2,134
 25221  003BEA  5024               	movf	nwkTxFrame@frame^0,w,c
 25222  003BEC  26D9               	addwf	fsr2l,f,c
 25223  003BEE  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25224  003BF0  22DA               	addwfc	fsr2h,f,c
 25225  003BF2  A2DF               	btfss	indf2,1,c
 25226  003BF4  D000               	goto	u14390
 25227  003BF6                     u14390:
 25228                           
 25229                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 25230                           
 25231                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 25232                           
 25233                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 25234  003BF6  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 25235  003BFC  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 25236  003C02  0E12               	movlw	18
 25237  003C04  6EDF               	movwf	indf2,c
 25238                           
 25239                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 25240  003C06  EE20 F083          	lfsr	2,131
 25241  003C0A  5024               	movf	nwkTxFrame@frame^0,w,c
 25242  003C0C  26D9               	addwf	fsr2l,f,c
 25243  003C0E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25244  003C10  22DA               	addwfc	fsr2h,f,c
 25245  003C12  0E00               	movlw	0
 25246  003C14  6EDF               	movwf	indf2,c
 25247                           
 25248                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 25249  003C16  EE20 F086          	lfsr	2,134
 25250  003C1A  5024               	movf	nwkTxFrame@frame^0,w,c
 25251  003C1C  26D9               	addwf	fsr2l,f,c
 25252  003C1E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25253  003C20  22DA               	addwfc	fsr2h,f,c
 25254  003C22  A0DF               	btfss	indf2,0,c
 25255  003C24  D00B               	goto	l14807
 25256                           
 25257                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 25258  003C26  EE20 F003          	lfsr	2,3
 25259  003C2A  5028               	movf	nwkTxFrame@header^0,w,c
 25260  003C2C  26D9               	addwf	fsr2l,f,c
 25261  003C2E  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25262  003C30  22DA               	addwfc	fsr2h,f,c
 25263  003C32  0EFF               	movlw	255
 25264  003C34  6EDE               	movwf	postinc2,c
 25265  003C36  0EFF               	movlw	255
 25266  003C38  6EDD               	movwf	postdec2,c
 25267  003C3A  D00C               	goto	l2293
 25268  003C3C                     l14807:
 25269                           
 25270                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 25271  003C3C  EE20 F003          	lfsr	2,3
 25272  003C40  5028               	movf	nwkTxFrame@header^0,w,c
 25273  003C42  26D9               	addwf	fsr2l,f,c
 25274  003C44  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25275  003C46  22DA               	addwfc	fsr2h,f,c
 25276  003C48  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 25277  003C4E  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 25278  003C54                     l2293:
 25279                           
 25280                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 25281  003C54  EE20 F086          	lfsr	2,134
 25282  003C58  5024               	movf	nwkTxFrame@frame^0,w,c
 25283  003C5A  26D9               	addwf	fsr2l,f,c
 25284  003C5C  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25285  003C5E  22DA               	addwfc	fsr2h,f,c
 25286  003C60  B4DF               	btfsc	indf2,2,c
 25287  003C62  D011               	goto	l14813
 25288  003C64  EE20 F086          	lfsr	2,134
 25289  003C68  5024               	movf	nwkTxFrame@frame^0,w,c
 25290  003C6A  26D9               	addwf	fsr2l,f,c
 25291  003C6C  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25292  003C6E  22DA               	addwfc	fsr2h,f,c
 25293  003C70  B0DF               	btfsc	indf2,0,c
 25294  003C72  D009               	goto	l14813
 25295                           
 25296                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 25297  003C74  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 25298  003C7A  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 25299  003C80  ECAB  F028         	call	_nwkRoutePrepareTx	;wreg free
 25300  003C84  D012               	goto	l14815
 25301  003C86                     l14813:
 25302                           
 25303                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 25304  003C86  EE20 F00D          	lfsr	2,13
 25305  003C8A  5028               	movf	nwkTxFrame@header^0,w,c
 25306  003C8C  26D9               	addwf	fsr2l,f,c
 25307  003C8E  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25308  003C90  22DA               	addwfc	fsr2h,f,c
 25309  003C92  EE10 F005          	lfsr	1,5
 25310  003C96  5028               	movf	nwkTxFrame@header^0,w,c
 25311  003C98  26E1               	addwf	fsr1l,f,c
 25312  003C9A  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25313  003C9C  22E2               	addwfc	fsr1h,f,c
 25314  003C9E  006F FF7B FFE6     	movff	postinc2,postinc1
 25315  003CA4  006F FF77 FFE5     	movff	postdec2,postdec1
 25316  003CAA                     l14815:
 25317                           
 25318                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 25319  003CAA  EE20 F007          	lfsr	2,7
 25320  003CAE  5028               	movf	nwkTxFrame@header^0,w,c
 25321  003CB0  26D9               	addwf	fsr2l,f,c
 25322  003CB2  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25323  003CB4  22DA               	addwfc	fsr2h,f,c
 25324  003CB6  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25325  003CBC  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25326                           
 25327                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 25328  003CC2  0101               	movlb	1	; () banked
 25329  003CC4  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 25330  003CC6  EE20 F002          	lfsr	2,2
 25331  003CCA  5028               	movf	nwkTxFrame@header^0,w,c
 25332  003CCC  26D9               	addwf	fsr2l,f,c
 25333  003CCE  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25334  003CD0  22DA               	addwfc	fsr2h,f,c
 25335  003CD2  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 25336                           
 25337                           ; BSR set to: 1
 25338                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 25339  003CD8  EE20 F005          	lfsr	2,5
 25340  003CDC  5028               	movf	nwkTxFrame@header^0,w,c
 25341  003CDE  26D9               	addwf	fsr2l,f,c
 25342  003CE0  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25343  003CE2  22DA               	addwfc	fsr2h,f,c
 25344  003CE4  28DE               	incf	postinc2,w,c
 25345  003CE6  E124               	bnz	l14825
 25346  003CE8  28DE               	incf	postinc2,w,c
 25347  003CEA  A4D8               	btfss	status,2,c
 25348  003CEC  D021               	goto	l14825
 25349                           
 25350                           ; BSR set to: 1
 25351                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 25352  003CEE  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25353  003CF4  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25354  003CFA  0E41               	movlw	65
 25355  003CFC  6EDE               	movwf	postinc2,c
 25356  003CFE  0E88               	movlw	136
 25357  003D00  6EDD               	movwf	postdec2,c
 25358                           
 25359                           ; BSR set to: 1
 25360                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 25361  003D02  EC24  F028         	call	_rand	;wreg free
 25362  003D06  0E07               	movlw	7
 25363  003D08  161A               	andwf	?_rand^0,f,c
 25364  003D0A  0E00               	movlw	0
 25365  003D0C  161B               	andwf	(?_rand+1)^0,f,c
 25366  003D0E  0E01               	movlw	1
 25367  003D10  261A               	addwf	?_rand^0,f,c
 25368  003D12  0E00               	movlw	0
 25369  003D14  221B               	addwfc	(?_rand+1)^0,f,c
 25370  003D16  EE20 F084          	lfsr	2,132
 25371  003D1A  5024               	movf	nwkTxFrame@frame^0,w,c
 25372  003D1C  26D9               	addwf	fsr2l,f,c
 25373  003D1E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25374  003D20  22DA               	addwfc	fsr2h,f,c
 25375  003D22  0060  F06B  FFDE   	movff	?_rand,postinc2
 25376  003D28  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 25377                           
 25378                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 25379  003D2E  0012               	return	
 25380  003D30                     l14825:
 25381                           
 25382                           ; BSR set to: 1
 25383                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 25384  003D30  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25385  003D36  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25386  003D3C  0E61               	movlw	97
 25387  003D3E  6EDE               	movwf	postinc2,c
 25388  003D40  0E88               	movlw	136
 25389  003D42  6EDD               	movwf	postdec2,c
 25390                           
 25391                           ; BSR set to: 1
 25392                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 25393  003D44  EE20 F084          	lfsr	2,132
 25394  003D48  5024               	movf	nwkTxFrame@frame^0,w,c
 25395  003D4A  26D9               	addwf	fsr2l,f,c
 25396  003D4C  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25397  003D4E  22DA               	addwfc	fsr2h,f,c
 25398  003D50  0E00               	movlw	0
 25399  003D52  6EDE               	movwf	postinc2,c
 25400  003D54  0E00               	movlw	0
 25401  003D56  6EDD               	movwf	postdec2,c
 25402                           
 25403                           ; BSR set to: 1
 25404  003D58  0012               	return		;funcret
 25405  003D5A                     __end_of_nwkTxFrame:
 25406                           	opt callstack 0
 25407                           
 25408 ;; *************** function _rand *****************
 25409 ;; Defined at:
 25410 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 25411 ;; Parameters:    Size  Location     Type
 25412 ;;		None
 25413 ;; Auto vars:     Size  Location     Type
 25414 ;;		None
 25415 ;; Return value:  Size  Location     Type
 25416 ;;                  2   25[COMRAM] int 
 25417 ;; Registers used:
 25418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25419 ;; Tracked objects:
 25420 ;;		On entry : 0/1
 25421 ;;		On exit  : 3F/1
 25422 ;;		Unchanged: 0/0
 25423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25426 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25427 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25428 ;;Total ram usage:       10 bytes
 25429 ;; Hardware stack levels used:    1
 25430 ;; Hardware stack levels required when called:    8
 25431 ;; This function calls:
 25432 ;;		___omul
 25433 ;; This function is called by:
 25434 ;;		_nwkTxFrame
 25435 ;;		_nwkTxBroadcastFrame
 25436 ;; This function uses a non-reentrant model
 25437 ;;
 25438                           
 25439                           	psect	text156
 25440  005048                     __ptext156:
 25441                           	opt callstack 0
 25442  005048                     _rand:
 25443                           	opt callstack 17
 25444                           
 25445                           ; BSR set to: 1
 25446                           ;incstack = 0
 25447  005048  0060  F748  F002   	movff	_seed,___omul@multiplier
 25448  00504E  0060  F74C  F003   	movff	_seed+1,___omul@multiplier+1
 25449  005054  0060  F750  F004   	movff	_seed+2,___omul@multiplier+2
 25450  00505A  0060  F754  F005   	movff	_seed+3,___omul@multiplier+3
 25451  005060  0060  F758  F006   	movff	_seed+4,___omul@multiplier+4
 25452  005066  0060  F75C  F007   	movff	_seed+5,___omul@multiplier+5
 25453  00506C  0060  F760  F008   	movff	_seed+6,___omul@multiplier+6
 25454  005072  0060  F764  F009   	movff	_seed+7,___omul@multiplier+7
 25455  005078  0E2D               	movlw	45
 25456  00507A  6E0A               	movwf	___omul@multiplicand^0,c
 25457  00507C  0E7F               	movlw	127
 25458  00507E  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 25459  005080  0E95               	movlw	149
 25460  005082  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 25461  005084  0E4C               	movlw	76
 25462  005086  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 25463  005088  0E2D               	movlw	45
 25464  00508A  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 25465  00508C  0EF4               	movlw	244
 25466  00508E  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 25467  005090  0E51               	movlw	81
 25468  005092  6E10               	movwf	(___omul@multiplicand+6)^0,c
 25469  005094  0E58               	movlw	88
 25470  005096  6E11               	movwf	(___omul@multiplicand+7)^0,c
 25471  005098  EC95  F035         	call	___omul	;wreg free
 25472  00509C  0060  F008  F01C   	movff	?___omul,??_rand
 25473  0050A2  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 25474  0050A8  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 25475  0050AE  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 25476  0050B4  0060  F018  F020   	movff	?___omul+4,??_rand+4
 25477  0050BA  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 25478  0050C0  0060  F020  F022   	movff	?___omul+6,??_rand+6
 25479  0050C6  0060  F024  F023   	movff	?___omul+7,??_rand+7
 25480  0050CC  0E01               	movlw	1
 25481  0050CE  241C               	addwf	??_rand^0,w,c
 25482  0050D0  0101               	movlb	1	; () banked
 25483  0050D2  6FD2               	movwf	_seed& (0+255),b
 25484  0050D4  0E00               	movlw	0
 25485  0050D6  201D               	addwfc	(??_rand+1)^0,w,c
 25486  0050D8  6FD3               	movwf	(_seed+1)& (0+255),b
 25487  0050DA  0E00               	movlw	0
 25488  0050DC  201E               	addwfc	(??_rand+2)^0,w,c
 25489  0050DE  6FD4               	movwf	(_seed+2)& (0+255),b
 25490  0050E0  0E00               	movlw	0
 25491  0050E2  201F               	addwfc	(??_rand+3)^0,w,c
 25492  0050E4  6FD5               	movwf	(_seed+3)& (0+255),b
 25493  0050E6  0E00               	movlw	0
 25494  0050E8  2020               	addwfc	(??_rand+4)^0,w,c
 25495  0050EA  6FD6               	movwf	(_seed+4)& (0+255),b
 25496  0050EC  0E00               	movlw	0
 25497  0050EE  2021               	addwfc	(??_rand+5)^0,w,c
 25498  0050F0  6FD7               	movwf	(_seed+5)& (0+255),b
 25499  0050F2  0E00               	movlw	0
 25500  0050F4  2022               	addwfc	(??_rand+6)^0,w,c
 25501  0050F6  6FD8               	movwf	(_seed+6)& (0+255),b
 25502  0050F8  0E00               	movlw	0
 25503  0050FA  2023               	addwfc	(??_rand+7)^0,w,c
 25504  0050FC  6FD9               	movwf	(_seed+7)& (0+255),b
 25505                           
 25506                           ; BSR set to: 1
 25507  0050FE  0060  F748  F01C   	movff	_seed,??_rand
 25508  005104  0060  F74C  F01D   	movff	_seed+1,??_rand+1
 25509  00510A  0060  F750  F01E   	movff	_seed+2,??_rand+2
 25510  005110  0060  F754  F01F   	movff	_seed+3,??_rand+3
 25511  005116  0060  F758  F020   	movff	_seed+4,??_rand+4
 25512  00511C  0060  F75C  F021   	movff	_seed+5,??_rand+5
 25513  005122  0060  F760  F022   	movff	_seed+6,??_rand+6
 25514  005128  0060  F764  F023   	movff	_seed+7,??_rand+7
 25515  00512E  0E32               	movlw	50
 25516  005130  D009               	goto	u14270
 25517  005132                     u14275:
 25518  005132  90D8               	bcf	status,0,c
 25519  005134  3223               	rrcf	(??_rand+7)^0,f,c
 25520  005136  3222               	rrcf	(??_rand+6)^0,f,c
 25521  005138  3221               	rrcf	(??_rand+5)^0,f,c
 25522  00513A  3220               	rrcf	(??_rand+4)^0,f,c
 25523  00513C  321F               	rrcf	(??_rand+3)^0,f,c
 25524  00513E  321E               	rrcf	(??_rand+2)^0,f,c
 25525  005140  321D               	rrcf	(??_rand+1)^0,f,c
 25526  005142  321C               	rrcf	??_rand^0,f,c
 25527  005144                     u14270:
 25528  005144  2EE8               	decfsz	wreg,f,c
 25529  005146  D7F5               	goto	u14275
 25530  005148  0060  F070  F01A   	movff	??_rand,?_rand
 25531  00514E  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 25532                           
 25533                           ; BSR set to: 1
 25534  005154  0012               	return		;funcret
 25535  005156                     __end_of_rand:
 25536                           	opt callstack 0
 25537                           
 25538 ;; *************** function ___omul *****************
 25539 ;; Defined at:
 25540 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 25541 ;; Parameters:    Size  Location     Type
 25542 ;;  multiplier      8    1[COMRAM] unsigned long long 
 25543 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 25544 ;; Auto vars:     Size  Location     Type
 25545 ;;  product         8   17[COMRAM] unsigned long long 
 25546 ;; Return value:  Size  Location     Type
 25547 ;;                  8    1[COMRAM] unsigned long long 
 25548 ;; Registers used:
 25549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25550 ;; Tracked objects:
 25551 ;;		On entry : 0/1
 25552 ;;		On exit  : 0/0
 25553 ;;		Unchanged: 0/0
 25554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25555 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25556 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25558 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25559 ;;Total ram usage:       24 bytes
 25560 ;; Hardware stack levels used:    1
 25561 ;; Hardware stack levels required when called:    7
 25562 ;; This function calls:
 25563 ;;		Nothing
 25564 ;; This function is called by:
 25565 ;;		_rand
 25566 ;; This function uses a non-reentrant model
 25567 ;;
 25568                           
 25569                           	psect	text157
 25570  006B2A                     __ptext157:
 25571                           	opt callstack 0
 25572  006B2A                     ___omul:
 25573                           	opt callstack 17
 25574                           
 25575                           ; BSR set to: 1
 25576                           ;incstack = 0
 25577  006B2A  EE20  F012         	lfsr	2,___omul@product
 25578  006B2E  0E07               	movlw	7
 25579  006B30                     u14101:
 25580  006B30  6ADE               	clrf	postinc2,c
 25581  006B32  06E8               	decf	wreg,f,c
 25582  006B34  E2FD               	bc	u14101
 25583  006B36                     l14559:
 25584  006B36  A002               	btfss	___omul@multiplier^0,0,c
 25585  006B38  D010               	goto	l14563
 25586  006B3A  500A               	movf	___omul@multiplicand^0,w,c
 25587  006B3C  2612               	addwf	___omul@product^0,f,c
 25588  006B3E  500B               	movf	(___omul@multiplicand+1)^0,w,c
 25589  006B40  2213               	addwfc	(___omul@product+1)^0,f,c
 25590  006B42  500C               	movf	(___omul@multiplicand+2)^0,w,c
 25591  006B44  2214               	addwfc	(___omul@product+2)^0,f,c
 25592  006B46  500D               	movf	(___omul@multiplicand+3)^0,w,c
 25593  006B48  2215               	addwfc	(___omul@product+3)^0,f,c
 25594  006B4A  500E               	movf	(___omul@multiplicand+4)^0,w,c
 25595  006B4C  2216               	addwfc	(___omul@product+4)^0,f,c
 25596  006B4E  500F               	movf	(___omul@multiplicand+5)^0,w,c
 25597  006B50  2217               	addwfc	(___omul@product+5)^0,f,c
 25598  006B52  5010               	movf	(___omul@multiplicand+6)^0,w,c
 25599  006B54  2218               	addwfc	(___omul@product+6)^0,f,c
 25600  006B56  5011               	movf	(___omul@multiplicand+7)^0,w,c
 25601  006B58  2219               	addwfc	(___omul@product+7)^0,f,c
 25602  006B5A                     l14563:
 25603  006B5A  90D8               	bcf	status,0,c
 25604  006B5C  360A               	rlcf	___omul@multiplicand^0,f,c
 25605  006B5E  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 25606  006B60  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 25607  006B62  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 25608  006B64  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 25609  006B66  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 25610  006B68  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 25611  006B6A  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 25612  006B6C  90D8               	bcf	status,0,c
 25613  006B6E  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 25614  006B70  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 25615  006B72  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 25616  006B74  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 25617  006B76  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 25618  006B78  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 25619  006B7A  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 25620  006B7C  3202               	rrcf	___omul@multiplier^0,f,c
 25621  006B7E  5002               	movf	___omul@multiplier^0,w,c
 25622  006B80  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 25623  006B82  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 25624  006B84  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 25625  006B86  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 25626  006B88  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 25627  006B8A  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 25628  006B8C  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 25629  006B8E  A4D8               	btfss	status,2,c
 25630  006B90  D7D2               	goto	l14559
 25631  006B92  0060  F048  F002   	movff	___omul@product,?___omul
 25632  006B98  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 25633  006B9E  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 25634  006BA4  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 25635  006BAA  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 25636  006BB0  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 25637  006BB6  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 25638  006BBC  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 25639  006BC2  0012               	return		;funcret
 25640  006BC4                     __end_of___omul:
 25641                           	opt callstack 0
 25642                           
 25643 ;; *************** function _nwkRoutePrepareTx *****************
 25644 ;; Defined at:
 25645 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 25648 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25649 ;; Auto vars:     Size  Location     Type
 25650 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 25651 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25652 ;; Return value:  Size  Location     Type
 25653 ;;                  1    wreg      void 
 25654 ;; Registers used:
 25655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25656 ;; Tracked objects:
 25657 ;;		On entry : 0/1
 25658 ;;		On exit  : 0/0
 25659 ;;		Unchanged: 0/0
 25660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25663 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25665 ;;Total ram usage:        6 bytes
 25666 ;; Hardware stack levels used:    1
 25667 ;; Hardware stack levels required when called:    9
 25668 ;; This function calls:
 25669 ;;		_NWK_GroupIsMember
 25670 ;;		_NWK_RouteNextHop
 25671 ;; This function is called by:
 25672 ;;		_nwkTxFrame
 25673 ;; This function uses a non-reentrant model
 25674 ;;
 25675                           
 25676                           	psect	text158
 25677  005156                     __ptext158:
 25678                           	opt callstack 0
 25679  005156                     _nwkRoutePrepareTx:
 25680                           	opt callstack 15
 25681                           
 25682                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 25683                           
 25684                           ;incstack = 0
 25685  005156  0E02               	movlw	2
 25686  005158  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 25687  00515A  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 25688  00515C  0E00               	movlw	0
 25689  00515E  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 25690  005160  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 25691                           
 25692                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 25693  005162  EE20 F00D          	lfsr	2,13
 25694  005166  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25695  005168  26D9               	addwf	fsr2l,f,c
 25696  00516A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25697  00516C  22DA               	addwfc	fsr2h,f,c
 25698  00516E  28DE               	incf	postinc2,w,c
 25699  005170  E10E               	bnz	l14611
 25700  005172  28DE               	incf	postinc2,w,c
 25701  005174  A4D8               	btfss	status,2,c
 25702  005176  D00B               	goto	l14611
 25703                           
 25704                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 25705  005178  EE20 F005          	lfsr	2,5
 25706  00517C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25707  00517E  26D9               	addwf	fsr2l,f,c
 25708  005180  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25709  005182  22DA               	addwfc	fsr2h,f,c
 25710  005184  0EFF               	movlw	255
 25711  005186  6EDE               	movwf	postinc2,c
 25712  005188  0EFF               	movlw	255
 25713  00518A  6EDD               	movwf	postdec2,c
 25714                           
 25715                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 25716  00518C  0012               	return	
 25717  00518E                     l14611:
 25718  00518E  EE20 F009          	lfsr	2,9
 25719  005192  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25720  005194  26D9               	addwf	fsr2l,f,c
 25721  005196  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25722  005198  22DA               	addwfc	fsr2h,f,c
 25723  00519A  A4DF               	btfss	indf2,2,c
 25724  00519C  D013               	goto	l14615
 25725                           
 25726                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 25727  00519E  EE20 F00D          	lfsr	2,13
 25728  0051A2  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25729  0051A4  26D9               	addwf	fsr2l,f,c
 25730  0051A6  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25731  0051A8  22DA               	addwfc	fsr2h,f,c
 25732  0051AA  EE10 F005          	lfsr	1,5
 25733  0051AE  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25734  0051B0  26E1               	addwf	fsr1l,f,c
 25735  0051B2  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25736  0051B4  22E2               	addwfc	fsr1h,f,c
 25737  0051B6  006F FF7B FFE6     	movff	postinc2,postinc1
 25738  0051BC  006F FF77 FFE5     	movff	postdec2,postdec1
 25739                           
 25740                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 25741  0051C2  0012               	return	
 25742  0051C4                     l14615:
 25743  0051C4  EE20 F009          	lfsr	2,9
 25744  0051C8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25745  0051CA  26D9               	addwf	fsr2l,f,c
 25746  0051CC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25747  0051CE  22DA               	addwfc	fsr2h,f,c
 25748  0051D0  A6DF               	btfss	indf2,3,c
 25749  0051D2  D023               	goto	l14621
 25750  0051D4  EE20 F00D          	lfsr	2,13
 25751  0051D8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25752  0051DA  26D9               	addwf	fsr2l,f,c
 25753  0051DC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25754  0051DE  22DA               	addwfc	fsr2h,f,c
 25755  0051E0  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 25756  0051E6  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 25757  0051EC  EC20  F043         	call	_NWK_GroupIsMember	;wreg free
 25758  0051F0  0900               	iorlw	0
 25759  0051F2  B4D8               	btfsc	status,2,c
 25760  0051F4  D012               	goto	l14621
 25761                           
 25762                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 25763  0051F6  EE20 F005          	lfsr	2,5
 25764  0051FA  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25765  0051FC  26D9               	addwf	fsr2l,f,c
 25766  0051FE  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25767  005200  22DA               	addwfc	fsr2h,f,c
 25768  005202  0EFF               	movlw	255
 25769  005204  6EDE               	movwf	postinc2,c
 25770  005206  0EFF               	movlw	255
 25771  005208  6EDD               	movwf	postdec2,c
 25772                           
 25773                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 25774  00520A  EE20 F009          	lfsr	2,9
 25775  00520E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25776  005210  26D9               	addwf	fsr2l,f,c
 25777  005212  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25778  005214  22DA               	addwfc	fsr2h,f,c
 25779  005216  84DF               	bsf	indf2,2,c
 25780                           
 25781                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 25782  005218  0012               	return	
 25783  00521A                     l14621:
 25784                           
 25785                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 25786  00521A  EE20 F00D          	lfsr	2,13
 25787  00521E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25788  005220  26D9               	addwf	fsr2l,f,c
 25789  005222  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25790  005224  22DA               	addwfc	fsr2h,f,c
 25791  005226  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 25792  00522C  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 25793  005232  EE20 F009          	lfsr	2,9
 25794  005236  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25795  005238  26D9               	addwf	fsr2l,f,c
 25796  00523A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25797  00523C  22DA               	addwfc	fsr2h,f,c
 25798  00523E  0E00               	movlw	0
 25799  005240  B6DF               	btfsc	indf2,3,c
 25800  005242  0E01               	movlw	1
 25801  005244  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 25802  005246  ECFD  F03E         	call	_NWK_RouteNextHop	;wreg free
 25803  00524A  EE20 F005          	lfsr	2,5
 25804  00524E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25805  005250  26D9               	addwf	fsr2l,f,c
 25806  005252  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25807  005254  22DA               	addwfc	fsr2h,f,c
 25808  005256  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 25809  00525C  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 25810  005262  0012               	return		;funcret
 25811  005264                     __end_of_nwkRoutePrepareTx:
 25812                           	opt callstack 0
 25813                           
 25814 ;; *************** function _NWK_RouteNextHop *****************
 25815 ;; Defined at:
 25816 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 25817 ;; Parameters:    Size  Location     Type
 25818 ;;  dst             2    7[COMRAM] unsigned short 
 25819 ;;  multicast       1    9[COMRAM] unsigned char 
 25820 ;; Auto vars:     Size  Location     Type
 25821 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 25822 ;;		 -> nwkRouteTable(70), NULL(0), 
 25823 ;; Return value:  Size  Location     Type
 25824 ;;                  2    7[COMRAM] unsigned short 
 25825 ;; Registers used:
 25826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25827 ;; Tracked objects:
 25828 ;;		On entry : 0/1
 25829 ;;		On exit  : 0/0
 25830 ;;		Unchanged: 0/0
 25831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25832 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25835 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25836 ;;Total ram usage:        5 bytes
 25837 ;; Hardware stack levels used:    1
 25838 ;; Hardware stack levels required when called:    8
 25839 ;; This function calls:
 25840 ;;		_NWK_RouteFindEntry
 25841 ;; This function is called by:
 25842 ;;		_nwkRoutePrepareTx
 25843 ;;		_nwkRouteFrame
 25844 ;; This function uses a non-reentrant model
 25845 ;;
 25846                           
 25847                           	psect	text159
 25848  007DFA                     __ptext159:
 25849                           	opt callstack 0
 25850  007DFA                     _NWK_RouteNextHop:
 25851                           	opt callstack 15
 25852                           
 25853                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 25854                           
 25855                           ;incstack = 0
 25856  007DFA  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 25857  007E00  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 25858  007E06  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 25859  007E0C  EC2F  F03B         	call	_NWK_RouteFindEntry	;wreg free
 25860  007E10  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 25861  007E16  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 25862                           
 25863                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 25864  007E1C  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25865  007E1E  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 25866  007E20  B4D8               	btfsc	status,2,c
 25867  007E22  D00D               	goto	l1913
 25868                           
 25869                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 25870  007E24  EE20 F003          	lfsr	2,3
 25871  007E28  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25872  007E2A  26D9               	addwf	fsr2l,f,c
 25873  007E2C  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 25874  007E2E  22DA               	addwfc	fsr2h,f,c
 25875  007E30  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 25876  007E36  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 25877  007E3C  0012               	return	
 25878  007E3E                     l1913:
 25879                           
 25880                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 25881  007E3E  6808               	setf	?_NWK_RouteNextHop^0,c
 25882  007E40  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 25883  007E42  0012               	return		;funcret
 25884  007E44                     __end_of_NWK_RouteNextHop:
 25885                           	opt callstack 0
 25886                           
 25887 ;; *************** function _NWK_RouteFindEntry *****************
 25888 ;; Defined at:
 25889 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 25890 ;; Parameters:    Size  Location     Type
 25891 ;;  dst             2    1[COMRAM] unsigned short 
 25892 ;;  multicast       1    3[COMRAM] unsigned char 
 25893 ;; Auto vars:     Size  Location     Type
 25894 ;;  i               1    6[COMRAM] unsigned char 
 25895 ;; Return value:  Size  Location     Type
 25896 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 25897 ;; Registers used:
 25898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25899 ;; Tracked objects:
 25900 ;;		On entry : 0/1
 25901 ;;		On exit  : 0/0
 25902 ;;		Unchanged: 0/0
 25903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25904 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25908 ;;Total ram usage:        6 bytes
 25909 ;; Hardware stack levels used:    1
 25910 ;; Hardware stack levels required when called:    7
 25911 ;; This function calls:
 25912 ;;		Nothing
 25913 ;; This function is called by:
 25914 ;;		_NWK_RouteNextHop
 25915 ;;		_nwkRouteRemove
 25916 ;;		_nwkRouteFrameReceived
 25917 ;;		_nwkRouteFrameSent
 25918 ;; This function uses a non-reentrant model
 25919 ;;
 25920                           
 25921                           	psect	text160
 25922  00765E                     __ptext160:
 25923                           	opt callstack 0
 25924  00765E                     _NWK_RouteFindEntry:
 25925                           	opt callstack 19
 25926                           
 25927                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 25928                           
 25929                           ;incstack = 0
 25930  00765E  0E00               	movlw	0
 25931  007660  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 25932  007662                     l14331:
 25933                           
 25934                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 25935  007662  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25936  007664  0D07               	mullw	7
 25937  007666  0E85               	movlw	low (_nwkRouteTable+1)
 25938  007668  24F3               	addwf	243,w,c
 25939  00766A  6ED9               	movwf	fsr2l,c
 25940  00766C  0E02               	movlw	high (_nwkRouteTable+1)
 25941  00766E  20F4               	addwfc	prodh,w,c
 25942  007670  6EDA               	movwf	fsr2h,c
 25943  007672  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 25944  007674  18DE               	xorwf	postinc2,w,c
 25945  007676  E11E               	bnz	l14339
 25946  007678  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 25947  00767A  18DE               	xorwf	postinc2,w,c
 25948  00767C  A4D8               	btfss	status,2,c
 25949  00767E  D01A               	goto	l14339
 25950  007680  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25951  007682  0D07               	mullw	7
 25952  007684  0E84               	movlw	low _nwkRouteTable
 25953  007686  24F3               	addwf	243,w,c
 25954  007688  6ED9               	movwf	fsr2l,c
 25955  00768A  0E02               	movlw	high _nwkRouteTable
 25956  00768C  20F4               	addwfc	prodh,w,c
 25957  00768E  6EDA               	movwf	fsr2h,c
 25958  007690  0102               	movlb	2	; () banked
 25959  007692  A2DF               	btfss	indf2,1,c
 25960  007694  D002               	goto	u13820
 25961  007696  0E01               	movlw	1
 25962  007698  D001               	goto	u13826
 25963  00769A                     u13820:
 25964  00769A  0E00               	movlw	0
 25965  00769C                     u13826:
 25966  00769C  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 25967  00769E  A4D8               	btfss	status,2,c
 25968  0076A0  D009               	goto	l14339
 25969                           
 25970                           ; BSR set to: 2
 25971                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 25972  0076A2  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25973  0076A4  0D07               	mullw	7
 25974  0076A6  0E84               	movlw	low _nwkRouteTable
 25975  0076A8  24F3               	addwf	243,w,c
 25976  0076AA  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 25977  0076AC  0E02               	movlw	high _nwkRouteTable
 25978  0076AE  20F4               	addwfc	prodh,w,c
 25979  0076B0  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 25980  0076B2  0012               	return	
 25981  0076B4                     l14339:
 25982                           
 25983                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 25984  0076B4  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 25985  0076B6  0E09               	movlw	9
 25986  0076B8  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 25987  0076BA  D7D3               	goto	l14331
 25988                           
 25989                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 25990  0076BC  0E00               	movlw	0
 25991  0076BE  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 25992  0076C0  0E00               	movlw	0
 25993  0076C2  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 25994  0076C4  0012               	return		;funcret
 25995  0076C6                     __end_of_NWK_RouteFindEntry:
 25996                           	opt callstack 0
 25997                           
 25998 ;; *************** function _NWK_GroupIsMember *****************
 25999 ;; Defined at:
 26000 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 26001 ;; Parameters:    Size  Location     Type
 26002 ;;  group           2    1[COMRAM] unsigned short 
 26003 ;; Auto vars:     Size  Location     Type
 26004 ;;  i               1    5[COMRAM] unsigned char 
 26005 ;; Return value:  Size  Location     Type
 26006 ;;                  1    wreg      _Bool 
 26007 ;; Registers used:
 26008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26009 ;; Tracked objects:
 26010 ;;		On entry : 0/1
 26011 ;;		On exit  : 0/0
 26012 ;;		Unchanged: 0/0
 26013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;Total ram usage:        5 bytes
 26019 ;; Hardware stack levels used:    1
 26020 ;; Hardware stack levels required when called:    7
 26021 ;; This function calls:
 26022 ;;		Nothing
 26023 ;; This function is called by:
 26024 ;;		_nwkRoutePrepareTx
 26025 ;;		_nwkRxHandleReceivedFrame
 26026 ;; This function uses a non-reentrant model
 26027 ;;
 26028                           
 26029                           	psect	text161
 26030  008640                     __ptext161:
 26031                           	opt callstack 0
 26032  008640                     _NWK_GroupIsMember:
 26033                           	opt callstack 19
 26034                           
 26035                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 26036                           
 26037                           ;incstack = 0
 26038  008640  0E00               	movlw	0
 26039  008642  6E06               	movwf	NWK_GroupIsMember@i^0,c
 26040  008644                     l14515:
 26041                           
 26042                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 26043  008644  5006               	movf	NWK_GroupIsMember@i^0,w,c
 26044  008646  0D02               	mullw	2
 26045  008648  0E00               	movlw	low _nwkGroups
 26046  00864A  24F3               	addwf	243,w,c
 26047  00864C  6ED9               	movwf	fsr2l,c
 26048  00864E  0E02               	movlw	high _nwkGroups
 26049  008650  20F4               	addwfc	prodh,w,c
 26050  008652  6EDA               	movwf	fsr2h,c
 26051  008654  5002               	movf	NWK_GroupIsMember@group^0,w,c
 26052  008656  18DE               	xorwf	postinc2,w,c
 26053  008658  E106               	bnz	l14521
 26054  00865A  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 26055  00865C  18DE               	xorwf	postinc2,w,c
 26056  00865E  A4D8               	btfss	status,2,c
 26057  008660  D002               	goto	l14521
 26058                           
 26059                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 26060  008662  0E01               	movlw	1
 26061  008664  0012               	return	
 26062  008666                     l14521:
 26063  008666  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 26064  008668  0E09               	movlw	9
 26065  00866A  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 26066  00866C  D7EB               	goto	l14515
 26067                           
 26068                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 26069  00866E  0E00               	movlw	0
 26070  008670  0012               	return		;funcret
 26071  008672                     __end_of_NWK_GroupIsMember:
 26072                           	opt callstack 0
 26073                           
 26074 ;; *************** function _nwkFrameAlloc *****************
 26075 ;; Defined at:
 26076 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 26077 ;; Parameters:    Size  Location     Type
 26078 ;;		None
 26079 ;; Auto vars:     Size  Location     Type
 26080 ;;  i               1   17[COMRAM] unsigned char 
 26081 ;; Return value:  Size  Location     Type
 26082 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 26083 ;; Registers used:
 26084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26085 ;; Tracked objects:
 26086 ;;		On entry : 0/1
 26087 ;;		On exit  : 0/0
 26088 ;;		Unchanged: 0/0
 26089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26093 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26094 ;;Total ram usage:        5 bytes
 26095 ;; Hardware stack levels used:    1
 26096 ;; Hardware stack levels required when called:    8
 26097 ;; This function calls:
 26098 ;;		_memset
 26099 ;; This function is called by:
 26100 ;;		_nwkDataReqSendFrame
 26101 ;;		_nwkRouteSendRouteError
 26102 ;;		_PHY_DataInd
 26103 ;;		_nwkRxSendAck
 26104 ;;		_nwkTxBroadcastFrame
 26105 ;; This function uses a non-reentrant model
 26106 ;;
 26107                           
 26108                           	psect	text162
 26109  0065DA                     __ptext162:
 26110                           	opt callstack 0
 26111  0065DA                     _nwkFrameAlloc:
 26112                           	opt callstack 17
 26113                           
 26114                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 26115                           
 26116                           ;incstack = 0
 26117  0065DA  0E00               	movlw	0
 26118  0065DC  6E12               	movwf	nwkFrameAlloc@i^0,c
 26119  0065DE                     l14771:
 26120                           
 26121                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 26122  0065DE  5012               	movf	nwkFrameAlloc@i^0,w,c
 26123  0065E0  0D89               	mullw	137
 26124  0065E2  0EBD               	movlw	low _nwkFrameFrames
 26125  0065E4  24F3               	addwf	243,w,c
 26126  0065E6  6ED9               	movwf	fsr2l,c
 26127  0065E8  0E05               	movlw	high _nwkFrameFrames
 26128  0065EA  20F4               	addwfc	prodh,w,c
 26129  0065EC  6EDA               	movwf	fsr2h,c
 26130  0065EE  50DF               	movf	indf2,w,c
 26131  0065F0  A4D8               	btfss	status,2,c
 26132  0065F2  D044               	goto	l14785
 26133                           
 26134                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 26135  0065F4  5012               	movf	nwkFrameAlloc@i^0,w,c
 26136  0065F6  0D89               	mullw	137
 26137  0065F8  0EBD               	movlw	low _nwkFrameFrames
 26138  0065FA  24F3               	addwf	243,w,c
 26139  0065FC  6E02               	movwf	memset@dest^0,c
 26140  0065FE  0E05               	movlw	high _nwkFrameFrames
 26141  006600  20F4               	addwfc	prodh,w,c
 26142  006602  6E03               	movwf	(memset@dest+1)^0,c
 26143  006604  0E00               	movlw	0
 26144  006606  6E05               	movwf	(memset@c+1)^0,c
 26145  006608  0E00               	movlw	0
 26146  00660A  6E04               	movwf	memset@c^0,c
 26147  00660C  0E00               	movlw	0
 26148  00660E  6E07               	movwf	(memset@n+1)^0,c
 26149  006610  0E89               	movlw	137
 26150  006612  6E06               	movwf	memset@n^0,c
 26151  006614  EC2F  F022         	call	_memset	;wreg free
 26152                           
 26153                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 26154  006618  5012               	movf	nwkFrameAlloc@i^0,w,c
 26155  00661A  0D89               	mullw	137
 26156  00661C  0EBE               	movlw	low (_nwkFrameFrames+1)
 26157  00661E  24F3               	addwf	243,w,c
 26158  006620  6ED9               	movwf	fsr2l,c
 26159  006622  0E05               	movlw	high (_nwkFrameFrames+1)
 26160  006624  20F4               	addwfc	prodh,w,c
 26161  006626  6EDA               	movwf	fsr2h,c
 26162  006628  0E10               	movlw	16
 26163  00662A  6EDF               	movwf	indf2,c
 26164                           
 26165                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 26166  00662C  5012               	movf	nwkFrameAlloc@i^0,w,c
 26167  00662E  0D89               	mullw	137
 26168  006630  0EBD               	movlw	low _nwkFrameFrames
 26169  006632  6E10               	movwf	??_nwkFrameAlloc^0,c
 26170  006634  0E05               	movlw	high _nwkFrameFrames
 26171  006636  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 26172  006638  0E12               	movlw	18
 26173  00663A  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26174  00663C  0E00               	movlw	0
 26175  00663E  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26176  006640  50F3               	movf	243,w,c
 26177  006642  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26178  006644  50F4               	movf	244,w,c
 26179  006646  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26180  006648  5012               	movf	nwkFrameAlloc@i^0,w,c
 26181  00664A  0D89               	mullw	137
 26182  00664C  0E3E               	movlw	low (_nwkFrameFrames+129)
 26183  00664E  24F3               	addwf	243,w,c
 26184  006650  6ED9               	movwf	fsr2l,c
 26185  006652  0E06               	movlw	high (_nwkFrameFrames+129)
 26186  006654  20F4               	addwfc	prodh,w,c
 26187  006656  6EDA               	movwf	fsr2h,c
 26188  006658  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 26189  00665E  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 26190                           
 26191                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 26192  006664  0101               	movlb	1	; () banked
 26193  006666  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 26194  006668  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 26195                           
 26196                           ; BSR set to: 1
 26197                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 26198  00666A  5012               	movf	nwkFrameAlloc@i^0,w,c
 26199  00666C  0D89               	mullw	137
 26200  00666E  0EBD               	movlw	low _nwkFrameFrames
 26201  006670  24F3               	addwf	243,w,c
 26202  006672  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26203  006674  0E05               	movlw	high _nwkFrameFrames
 26204  006676  20F4               	addwfc	prodh,w,c
 26205  006678  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26206  00667A  0012               	return	
 26207  00667C                     l14785:
 26208                           
 26209                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 26210  00667C  2A12               	incf	nwkFrameAlloc@i^0,f,c
 26211  00667E  0E04               	movlw	4
 26212  006680  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 26213  006682  D7AD               	goto	l14771
 26214                           
 26215                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 26216  006684  0E00               	movlw	0
 26217  006686  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26218  006688  0E00               	movlw	0
 26219  00668A  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26220  00668C  0012               	return		;funcret
 26221  00668E                     __end_of_nwkFrameAlloc:
 26222                           	opt callstack 0
 26223                           
 26224 ;; *************** function _memset *****************
 26225 ;; Defined at:
 26226 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 26227 ;; Parameters:    Size  Location     Type
 26228 ;;  dest            2    1[COMRAM] PTR void 
 26229 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26230 ;;		 -> appDataInd@data(65), 
 26231 ;;  c               2    3[COMRAM] int 
 26232 ;;  n               2    5[COMRAM] unsigned int 
 26233 ;; Auto vars:     Size  Location     Type
 26234 ;;  s               2   11[COMRAM] PTR unsigned char 
 26235 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26236 ;;		 -> appDataInd@data(65), 
 26237 ;;  k               2    9[COMRAM] unsigned int 
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  2    1[COMRAM] PTR void 
 26240 ;; Registers used:
 26241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26242 ;; Tracked objects:
 26243 ;;		On entry : 0/0
 26244 ;;		On exit  : 0/0
 26245 ;;		Unchanged: 0/0
 26246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26247 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26248 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26250 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26251 ;;Total ram usage:       12 bytes
 26252 ;; Hardware stack levels used:    1
 26253 ;; Hardware stack levels required when called:    7
 26254 ;; This function calls:
 26255 ;;		Nothing
 26256 ;; This function is called by:
 26257 ;;		_appDataInd
 26258 ;;		_cmdSend
 26259 ;;		_cmdBcast
 26260 ;;		_cmdSetTX
 26261 ;;		_processATCommand
 26262 ;;		_nwkFrameAlloc
 26263 ;; This function uses a non-reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text163
 26267  00445E                     __ptext163:
 26268                           	opt callstack 0
 26269  00445E                     _memset:
 26270                           	opt callstack 22
 26271                           
 26272                           ;incstack = 0
 26273  00445E  0060  F008  F00C   	movff	memset@dest,memset@s
 26274  004464  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 26275  00446A  5006               	movf	memset@n^0,w,c
 26276  00446C  1007               	iorwf	(memset@n+1)^0,w,c
 26277  00446E  B4D8               	btfsc	status,2,c
 26278  004470  0012               	return	
 26279  004472  0060  F033  FFD9   	movff	memset@s,fsr2l
 26280  004478  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26281  00447E  0060  F013  FFDF   	movff	memset@c,indf2
 26282  004484  5006               	movf	memset@n^0,w,c
 26283  004486  240C               	addwf	memset@s^0,w,c
 26284  004488  6E08               	movwf	??_memset^0,c
 26285  00448A  5007               	movf	(memset@n+1)^0,w,c
 26286  00448C  200D               	addwfc	(memset@s+1)^0,w,c
 26287  00448E  6E09               	movwf	(??_memset+1)^0,c
 26288  004490  0EFF               	movlw	255
 26289  004492  2408               	addwf	??_memset^0,w,c
 26290  004494  6ED9               	movwf	fsr2l,c
 26291  004496  0EFF               	movlw	255
 26292  004498  2009               	addwfc	(??_memset+1)^0,w,c
 26293  00449A  6EDA               	movwf	fsr2h,c
 26294  00449C  0060  F013  FFDF   	movff	memset@c,indf2
 26295  0044A2  5007               	movf	(memset@n+1)^0,w,c
 26296  0044A4  E104               	bnz	l14577
 26297  0044A6  0E03               	movlw	3
 26298  0044A8  5C06               	subwf	memset@n^0,w,c
 26299  0044AA  A0D8               	btfss	status,0,c
 26300  0044AC  0012               	return	
 26301  0044AE                     l14577:
 26302  0044AE  EE20 F001          	lfsr	2,1
 26303  0044B2  500C               	movf	memset@s^0,w,c
 26304  0044B4  26D9               	addwf	fsr2l,f,c
 26305  0044B6  500D               	movf	(memset@s+1)^0,w,c
 26306  0044B8  22DA               	addwfc	fsr2h,f,c
 26307  0044BA  0060  F013  FFDF   	movff	memset@c,indf2
 26308  0044C0  EE20 F002          	lfsr	2,2
 26309  0044C4  500C               	movf	memset@s^0,w,c
 26310  0044C6  26D9               	addwf	fsr2l,f,c
 26311  0044C8  500D               	movf	(memset@s+1)^0,w,c
 26312  0044CA  22DA               	addwfc	fsr2h,f,c
 26313  0044CC  0060  F013  FFDF   	movff	memset@c,indf2
 26314  0044D2  5006               	movf	memset@n^0,w,c
 26315  0044D4  240C               	addwf	memset@s^0,w,c
 26316  0044D6  6E08               	movwf	??_memset^0,c
 26317  0044D8  5007               	movf	(memset@n+1)^0,w,c
 26318  0044DA  200D               	addwfc	(memset@s+1)^0,w,c
 26319  0044DC  6E09               	movwf	(??_memset+1)^0,c
 26320  0044DE  0EFE               	movlw	254
 26321  0044E0  2408               	addwf	??_memset^0,w,c
 26322  0044E2  6ED9               	movwf	fsr2l,c
 26323  0044E4  0EFF               	movlw	255
 26324  0044E6  2009               	addwfc	(??_memset+1)^0,w,c
 26325  0044E8  6EDA               	movwf	fsr2h,c
 26326  0044EA  0060  F013  FFDF   	movff	memset@c,indf2
 26327  0044F0  5006               	movf	memset@n^0,w,c
 26328  0044F2  240C               	addwf	memset@s^0,w,c
 26329  0044F4  6E08               	movwf	??_memset^0,c
 26330  0044F6  5007               	movf	(memset@n+1)^0,w,c
 26331  0044F8  200D               	addwfc	(memset@s+1)^0,w,c
 26332  0044FA  6E09               	movwf	(??_memset+1)^0,c
 26333  0044FC  0EFD               	movlw	253
 26334  0044FE  2408               	addwf	??_memset^0,w,c
 26335  004500  6ED9               	movwf	fsr2l,c
 26336  004502  0EFF               	movlw	255
 26337  004504  2009               	addwfc	(??_memset+1)^0,w,c
 26338  004506  6EDA               	movwf	fsr2h,c
 26339  004508  0060  F013  FFDF   	movff	memset@c,indf2
 26340  00450E  5007               	movf	(memset@n+1)^0,w,c
 26341  004510  E104               	bnz	l14583
 26342  004512  0E07               	movlw	7
 26343  004514  5C06               	subwf	memset@n^0,w,c
 26344  004516  A0D8               	btfss	status,0,c
 26345  004518  0012               	return	
 26346  00451A                     l14583:
 26347  00451A  EE20 F003          	lfsr	2,3
 26348  00451E  500C               	movf	memset@s^0,w,c
 26349  004520  26D9               	addwf	fsr2l,f,c
 26350  004522  500D               	movf	(memset@s+1)^0,w,c
 26351  004524  22DA               	addwfc	fsr2h,f,c
 26352  004526  0060  F013  FFDF   	movff	memset@c,indf2
 26353  00452C  5006               	movf	memset@n^0,w,c
 26354  00452E  240C               	addwf	memset@s^0,w,c
 26355  004530  6E08               	movwf	??_memset^0,c
 26356  004532  5007               	movf	(memset@n+1)^0,w,c
 26357  004534  200D               	addwfc	(memset@s+1)^0,w,c
 26358  004536  6E09               	movwf	(??_memset+1)^0,c
 26359  004538  0EFC               	movlw	252
 26360  00453A  2408               	addwf	??_memset^0,w,c
 26361  00453C  6ED9               	movwf	fsr2l,c
 26362  00453E  0EFF               	movlw	255
 26363  004540  2009               	addwfc	(??_memset+1)^0,w,c
 26364  004542  6EDA               	movwf	fsr2h,c
 26365  004544  0060  F013  FFDF   	movff	memset@c,indf2
 26366  00454A  5007               	movf	(memset@n+1)^0,w,c
 26367  00454C  E104               	bnz	l14589
 26368  00454E  0E09               	movlw	9
 26369  004550  5C06               	subwf	memset@n^0,w,c
 26370  004552  A0D8               	btfss	status,0,c
 26371  004554  0012               	return	
 26372  004556                     l14589:
 26373  004556  0060  F030  F008   	movff	memset@s,??_memset
 26374  00455C  0060  F034  F009   	movff	memset@s+1,??_memset+1
 26375  004562  1E08               	comf	??_memset^0,f,c
 26376  004564  1E09               	comf	(??_memset+1)^0,f,c
 26377  004566  4A08               	infsnz	??_memset^0,f,c
 26378  004568  2A09               	incf	(??_memset+1)^0,f,c
 26379  00456A  0E03               	movlw	3
 26380  00456C  1408               	andwf	??_memset^0,w,c
 26381  00456E  6E0A               	movwf	memset@k^0,c
 26382  004570  6A0B               	clrf	(memset@k+1)^0,c
 26383  004572  500A               	movf	memset@k^0,w,c
 26384  004574  260C               	addwf	memset@s^0,f,c
 26385  004576  500B               	movf	(memset@k+1)^0,w,c
 26386  004578  220D               	addwfc	(memset@s+1)^0,f,c
 26387  00457A  500A               	movf	memset@k^0,w,c
 26388  00457C  5E06               	subwf	memset@n^0,f,c
 26389  00457E  500B               	movf	(memset@k+1)^0,w,c
 26390  004580  5A07               	subwfb	(memset@n+1)^0,f,c
 26391  004582  0EFC               	movlw	252
 26392  004584  1606               	andwf	memset@n^0,f,c
 26393  004586  0EFF               	movlw	255
 26394  004588  1607               	andwf	(memset@n+1)^0,f,c
 26395  00458A  D00E               	goto	l14597
 26396  00458C                     l14591:
 26397  00458C  0060  F033  FFD9   	movff	memset@s,fsr2l
 26398  004592  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26399  004598  0060  F013  FFDF   	movff	memset@c,indf2
 26400  00459E  0606               	decf	memset@n^0,f,c
 26401  0045A0  A0D8               	btfss	status,0,c
 26402  0045A2  0607               	decf	(memset@n+1)^0,f,c
 26403  0045A4  4A0C               	infsnz	memset@s^0,f,c
 26404  0045A6  2A0D               	incf	(memset@s+1)^0,f,c
 26405  0045A8                     l14597:
 26406  0045A8  5006               	movf	memset@n^0,w,c
 26407  0045AA  1007               	iorwf	(memset@n+1)^0,w,c
 26408  0045AC  B4D8               	btfsc	status,2,c
 26409  0045AE  0012               	return	
 26410  0045B0  D7ED               	goto	l14591
 26411  0045B2                     __end_of_memset:
 26412                           	opt callstack 0
 26413                           
 26414 ;; *************** function _memcpy *****************
 26415 ;; Defined at:
 26416 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 26417 ;; Parameters:    Size  Location     Type
 26418 ;;  d1              2    7[COMRAM] PTR void 
 26419 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26420 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26421 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26422 ;;		 -> tx_buffer(524), 
 26423 ;;  s1              2    9[COMRAM] PTR const void 
 26424 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26425 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 26426 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26427 ;;  n               2   11[COMRAM] unsigned int 
 26428 ;; Auto vars:     Size  Location     Type
 26429 ;;  s               2   16[COMRAM] PTR const unsigned char 
 26430 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26431 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 26432 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26433 ;;  d               2   14[COMRAM] PTR unsigned char 
 26434 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26435 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26436 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26437 ;;		 -> tx_buffer(524), 
 26438 ;;  tmp             1   13[COMRAM] unsigned char 
 26439 ;; Return value:  Size  Location     Type
 26440 ;;                  2    7[COMRAM] PTR void 
 26441 ;; Registers used:
 26442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26443 ;; Tracked objects:
 26444 ;;		On entry : 0/0
 26445 ;;		On exit  : 0/0
 26446 ;;		Unchanged: 0/0
 26447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26448 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26449 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26451 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26452 ;;Total ram usage:       11 bytes
 26453 ;; Hardware stack levels used:    1
 26454 ;; Hardware stack levels required when called:    7
 26455 ;; This function calls:
 26456 ;;		Nothing
 26457 ;; This function is called by:
 26458 ;;		_cmdSend
 26459 ;;		_cmdBcast
 26460 ;;		_cmdSetAES
 26461 ;;		_cmdSetRFCH
 26462 ;;		_cmdSetTX
 26463 ;;		_cmdSetCADRSSI
 26464 ;;		_cmdSetSF
 26465 ;;		_CircularBufferPushBack
 26466 ;;		_nwkDataReqSendFrame
 26467 ;;		_PHY_DataInd
 26468 ;;		_nwkTxBroadcastFrame
 26469 ;;		_CircularBufferPopFront
 26470 ;; This function uses a non-reentrant model
 26471 ;;
 26472                           
 26473                           	psect	text164
 26474  0073CE                     __ptext164:
 26475                           	opt callstack 0
 26476  0073CE                     _memcpy:
 26477                           	opt callstack 19
 26478                           
 26479                           ;incstack = 0
 26480  0073CE  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 26481  0073D4  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 26482  0073DA  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 26483  0073E0  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 26484  0073E6  D023               	goto	l14763
 26485  0073E8                     l14755:
 26486  0073E8  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 26487  0073EE  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 26488  0073F4  0E00               	movlw	low (__mediumconst shr (0+16))
 26489  0073F6  6EF8               	movwf	tblptru,c
 26490  0073F8  0E0F               	movlw	(high __ramtop+-1)
 26491  0073FA  64F7               	cpfsgt	tblptrh,c
 26492  0073FC  D003               	bra	u14357
 26493  0073FE  0008               	tblrd		*
 26494  007400  50F5               	movf	tablat,w,c
 26495  007402  D007               	bra	u14350
 26496  007404                     u14357:
 26497  007404  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26498  00740A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26499  007410  50EF               	movf	indf0,w,c
 26500  007412                     u14350:
 26501  007412  6E0E               	movwf	memcpy@tmp^0,c
 26502  007414  4A11               	infsnz	memcpy@s^0,f,c
 26503  007416  2A12               	incf	(memcpy@s+1)^0,f,c
 26504  007418  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 26505  00741E  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 26506  007424  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 26507  00742A  4A0F               	infsnz	memcpy@d^0,f,c
 26508  00742C  2A10               	incf	(memcpy@d+1)^0,f,c
 26509  00742E                     l14763:
 26510  00742E  060C               	decf	memcpy@n^0,f,c
 26511  007430  A0D8               	btfss	status,0,c
 26512  007432  060D               	decf	(memcpy@n+1)^0,f,c
 26513  007434  280C               	incf	memcpy@n^0,w,c
 26514  007436  E1D8               	bnz	l14755
 26515  007438  280D               	incf	(memcpy@n+1)^0,w,c
 26516  00743A  B4D8               	btfsc	status,2,c
 26517  00743C  0012               	return	
 26518  00743E  D7D4               	goto	l14755
 26519  007440                     __end_of_memcpy:
 26520                           	opt callstack 0
 26521                           
 26522 ;; *************** function _nwkDataReqConfirm *****************
 26523 ;; Defined at:
 26524 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 26525 ;; Parameters:    Size  Location     Type
 26526 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 26527 ;;		 -> NULL(0), tx_buffer(524), 
 26528 ;; Auto vars:     Size  Location     Type
 26529 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 26530 ;;		 -> NULL(0), tx_buffer(524), 
 26531 ;; Return value:  Size  Location     Type
 26532 ;;                  1    wreg      void 
 26533 ;; Registers used:
 26534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26535 ;; Tracked objects:
 26536 ;;		On entry : 0/1
 26537 ;;		On exit  : 0/0
 26538 ;;		Unchanged: 0/0
 26539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26544 ;;Total ram usage:        6 bytes
 26545 ;; Hardware stack levels used:    1
 26546 ;; Hardware stack levels required when called:    9
 26547 ;; This function calls:
 26548 ;;		_appDataConf
 26549 ;; This function is called by:
 26550 ;;		_nwkDataReqTaskHandler
 26551 ;; This function uses a non-reentrant model
 26552 ;;
 26553                           
 26554                           	psect	text165
 26555  005734                     __ptext165:
 26556                           	opt callstack 0
 26557  005734                     _nwkDataReqConfirm:
 26558                           	opt callstack 18
 26559                           
 26560                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 26561                           
 26562                           ;incstack = 0
 26563  005734  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26564  005736  0100               	movlb	0	; () banked
 26565  005738  19E2               	xorwf	_nwkDataReqQueue& (0+255),w,b
 26566  00573A  E111               	bnz	l11605
 26567  00573C  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26568  00573E  19E3               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 26569  005740  A4D8               	btfss	status,2,c
 26570  005742  D00D               	goto	l11605
 26571                           
 26572                           ; BSR set to: 0
 26573                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 26574  005744  0060  F38B  FFD9   	movff	_nwkDataReqQueue,fsr2l
 26575  00574A  0060  F38F  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 26576  005750  006F FF78  F0E2    	movff	postinc2,_nwkDataReqQueue
 26577  005756  006F FF74  F0E3    	movff	postdec2,_nwkDataReqQueue+1
 26578                           
 26579                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 26580  00575C  D03E               	goto	l11613
 26581  00575E                     l11605:
 26582                           
 26583                           ; BSR set to: 0
 26584                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 26585  00575E  0060  F388  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 26586  005764  0060  F38C  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 26587                           
 26588                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26589  00576A  D00C               	goto	l11609
 26590  00576C                     l11607:
 26591                           
 26592                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 26593  00576C  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26594  005772  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26595  005778  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 26596  00577E  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 26597  005784                     l11609:
 26598                           
 26599                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26600  005784  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26601  00578A  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26602  005790  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26603  005792  18DE               	xorwf	postinc2,w,c
 26604  005794  E1EB               	bnz	l11607
 26605  005796  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26606  005798  18DE               	xorwf	postinc2,w,c
 26607  00579A  A4D8               	btfss	status,2,c
 26608  00579C  D7E7               	goto	l11607
 26609                           
 26610                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 26611  00579E  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26612  0057A4  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26613  0057AA  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26614  0057B0  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26615  0057B6  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 26616  0057BC  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 26617  0057C2  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 26618  0057C8  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 26619  0057CE  006F FF7B FFE6     	movff	postinc2,postinc1
 26620  0057D4  006F FF77 FFE5     	movff	postdec2,postdec1
 26621  0057DA                     l11613:
 26622                           
 26623                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 26624  0057DA  0101               	movlb	1	; () banked
 26625  0057DC  0726               	decf	(_nwkIb+38)& (0+255),f,b
 26626  0057DE  A0D8               	btfss	status,0,c
 26627  0057E0  0727               	decf	(_nwkIb+39)& (0+255),f,b
 26628                           
 26629                           ; BSR set to: 1
 26630                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 26631  0057E2  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 26632  0057E8  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 26633  0057EE  EE20 F00F          	lfsr	2,15
 26634  0057F2  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26635  0057F4  26D9               	addwf	fsr2l,f,c
 26636  0057F6  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26637  0057F8  22DA               	addwfc	fsr2h,f,c
 26638  0057FA  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26639  005800  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26640  005806  D801               	call	u10528
 26641  005808  0012               	return	
 26642  00580A                     u10528:
 26643  00580A  0005               	push	
 26644  00580C  6EFA               	movwf	pclath,c
 26645  00580E  500B               	movf	??_nwkDataReqConfirm^0,w,c
 26646  005810  6EFD               	movwf	tosl,c
 26647  005812  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 26648  005814  6EFE               	movwf	tosh,c
 26649  005816  6AFF               	clrf	tosu,c
 26650  005818  50FA               	movf	pclath,w,c
 26651  00581A  0012               	return		;indir
 26652  00581C                     __end_of_nwkDataReqConfirm:
 26653                           	opt callstack 0
 26654                           
 26655 ;; *************** function _appDataConf *****************
 26656 ;; Defined at:
 26657 ;;		line 33 in file "../app/app_src/application.c"
 26658 ;; Parameters:    Size  Location     Type
 26659 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 26660 ;;		 -> NULL(0), tx_buffer(524), 
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;		None
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1    wreg      void 
 26665 ;; Registers used:
 26666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26667 ;; Tracked objects:
 26668 ;;		On entry : 3F/1
 26669 ;;		On exit  : 0/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26676 ;;Total ram usage:        2 bytes
 26677 ;; Hardware stack levels used:    1
 26678 ;; Hardware stack levels required when called:    8
 26679 ;; This function calls:
 26680 ;;		_free_tx_buffer
 26681 ;; This function is called by:
 26682 ;;		_cmdSend
 26683 ;;		_cmdBcast
 26684 ;;		_nwkDataReqConfirm
 26685 ;; This function uses a non-reentrant model
 26686 ;;
 26687                           
 26688                           	psect	text166
 26689  008898                     __ptext166:
 26690                           	opt callstack 0
 26691  008898                     _appDataConf:
 26692                           	opt callstack 18
 26693                           
 26694                           ; BSR set to: 1
 26695                           ;../app/app_src/application.c: 33: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 34: {;../app/app_src/application.c: 35:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 26696                           
 26697                           ;incstack = 0
 26698  008898  EE20 F011          	lfsr	2,17
 26699  00889C  5007               	movf	appDataConf@req^0,w,c
 26700  00889E  26D9               	addwf	fsr2l,f,c
 26701  0088A0  5008               	movf	(appDataConf@req+1)^0,w,c
 26702  0088A2  22DA               	addwfc	fsr2h,f,c
 26703  0088A4  50DF               	movf	indf2,w,c
 26704                           
 26705                           ; BSR set to: 1
 26706                           
 26707                           ;../app/app_src/application.c: 38:  else{
 26708                           
 26709                           ;../app/app_src/application.c: 37:  }
 26710                           
 26711                           ; BSR set to: 1
 26712  0088A6  F000               	nop		;# 
 26713                           
 26714                           ;../app/app_src/application.c: 42:  free_tx_buffer(req);
 26715  0088A8  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 26716  0088AE  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 26717  0088B4  EC63  F03E         	call	_free_tx_buffer	;wreg free
 26718  0088B8  0012               	return		;funcret
 26719  0088BA                     __end_of_appDataConf:
 26720                           	opt callstack 0
 26721                           
 26722 ;; *************** function _free_tx_buffer *****************
 26723 ;; Defined at:
 26724 ;;		line 70 in file "../app/app_src/application.c"
 26725 ;; Parameters:    Size  Location     Type
 26726 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 26727 ;;		 -> NULL(0), tx_buffer(524), 
 26728 ;; Auto vars:     Size  Location     Type
 26729 ;;  buf_id          1    5[COMRAM] unsigned char 
 26730 ;; Return value:  Size  Location     Type
 26731 ;;                  1    wreg      void 
 26732 ;; Registers used:
 26733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26734 ;; Tracked objects:
 26735 ;;		On entry : 0/1
 26736 ;;		On exit  : 0/0
 26737 ;;		Unchanged: 0/0
 26738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26742 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26743 ;;Total ram usage:        5 bytes
 26744 ;; Hardware stack levels used:    1
 26745 ;; Hardware stack levels required when called:    7
 26746 ;; This function calls:
 26747 ;;		Nothing
 26748 ;; This function is called by:
 26749 ;;		_appDataConf
 26750 ;; This function uses a non-reentrant model
 26751 ;;
 26752                           
 26753                           	psect	text167
 26754  007CC6                     __ptext167:
 26755                           	opt callstack 0
 26756  007CC6                     _free_tx_buffer:
 26757                           	opt callstack 18
 26758                           
 26759                           ;../app/app_src/application.c: 71:     uint8_t buf_id = 0;
 26760                           
 26761                           ;incstack = 0
 26762  007CC6  0E00               	movlw	0
 26763  007CC8  6E06               	movwf	free_tx_buffer@buf_id^0,c
 26764                           
 26765                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 26766  007CCA  D020               	goto	l9913
 26767  007CCC                     l9905:
 26768                           
 26769                           ;../app/app_src/application.c: 74:         if(req == &tx_buffer[buf_id].nwkDataReq){
 26770  007CCC  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26771  007CCE  0D83               	mullw	131
 26772  007CD0  0E6A               	movlw	low _tx_buffer
 26773  007CD2  6E04               	movwf	??_free_tx_buffer^0,c
 26774  007CD4  0E08               	movlw	high _tx_buffer
 26775  007CD6  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 26776  007CD8  0E03               	movlw	3
 26777  007CDA  2604               	addwf	??_free_tx_buffer^0,f,c
 26778  007CDC  0E00               	movlw	0
 26779  007CDE  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26780  007CE0  50F3               	movf	243,w,c
 26781  007CE2  2604               	addwf	??_free_tx_buffer^0,f,c
 26782  007CE4  50F4               	movf	244,w,c
 26783  007CE6  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26784  007CE8  5004               	movf	??_free_tx_buffer^0,w,c
 26785  007CEA  1802               	xorwf	free_tx_buffer@req^0,w,c
 26786  007CEC  E10E               	bnz	l9911
 26787  007CEE  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 26788  007CF0  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 26789  007CF2  A4D8               	btfss	status,2,c
 26790  007CF4  D00A               	goto	l9911
 26791                           
 26792                           ;../app/app_src/application.c: 76:             tx_buffer[buf_id].free = 1;
 26793  007CF6  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26794  007CF8  0D83               	mullw	131
 26795  007CFA  0E6A               	movlw	low _tx_buffer
 26796  007CFC  24F3               	addwf	243,w,c
 26797  007CFE  6ED9               	movwf	fsr2l,c
 26798  007D00  0E08               	movlw	high _tx_buffer
 26799  007D02  20F4               	addwfc	prodh,w,c
 26800  007D04  6EDA               	movwf	fsr2h,c
 26801  007D06  84DF               	bsf	indf2,2,c
 26802  007D08  0012               	return	
 26803  007D0A                     l9911:
 26804                           
 26805                           ;../app/app_src/application.c: 79:         buf_id++;
 26806  007D0A  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 26807  007D0C                     l9913:
 26808                           
 26809                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 26810  007D0C  0E03               	movlw	3
 26811  007D0E  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 26812  007D10  D7DD               	goto	l9905
 26813  007D12  0012               	return	
 26814  007D14                     __end_of_free_tx_buffer:
 26815                           	opt callstack 0
 26816                           
 26817 ;; *************** function _SYS_Init *****************
 26818 ;; Defined at:
 26819 ;;		line 58 in file "../sys/sys_src/sys.c"
 26820 ;; Parameters:    Size  Location     Type
 26821 ;;		None
 26822 ;; Auto vars:     Size  Location     Type
 26823 ;;		None
 26824 ;; Return value:  Size  Location     Type
 26825 ;;                  1    wreg      void 
 26826 ;; Registers used:
 26827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26828 ;; Tracked objects:
 26829 ;;		On entry : 3B/3D
 26830 ;;		On exit  : 3F/2
 26831 ;;		Unchanged: 0/0
 26832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26837 ;;Total ram usage:        0 bytes
 26838 ;; Hardware stack levels used:    1
 26839 ;; Hardware stack levels required when called:   15
 26840 ;; This function calls:
 26841 ;;		_NWK_Init
 26842 ;;		_PHY_Init
 26843 ;;		_SYS_TimerInit
 26844 ;; This function is called by:
 26845 ;;		_main
 26846 ;; This function uses a non-reentrant model
 26847 ;;
 26848                           
 26849                           	psect	text168
 26850  008CA2                     __ptext168:
 26851                           	opt callstack 0
 26852  008CA2                     _SYS_Init:
 26853                           	opt callstack 15
 26854                           
 26855                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 26856                           
 26857                           ;incstack = 0
 26858  008CA2  EC88  F046         	call	_SYS_TimerInit	;wreg free
 26859                           
 26860                           ; BSR set to: 0
 26861                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 26862  008CA6  ECAB  F046         	call	_PHY_Init	;wreg free
 26863                           
 26864                           ; BSR set to: 1
 26865                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 26866  008CAA  EC6A  F03D         	call	_NWK_Init	;wreg free
 26867                           
 26868                           ; BSR set to: 2
 26869  008CAE  0012               	return		;funcret
 26870  008CB0                     __end_of_SYS_Init:
 26871                           	opt callstack 0
 26872                           
 26873 ;; *************** function _SYS_TimerInit *****************
 26874 ;; Defined at:
 26875 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 26876 ;; Parameters:    Size  Location     Type
 26877 ;;		None
 26878 ;; Auto vars:     Size  Location     Type
 26879 ;;		None
 26880 ;; Return value:  Size  Location     Type
 26881 ;;                  1    wreg      void 
 26882 ;; Registers used:
 26883 ;;		wreg, status,2, status,0
 26884 ;; Tracked objects:
 26885 ;;		On entry : 3B/3D
 26886 ;;		On exit  : 3F/0
 26887 ;;		Unchanged: 0/0
 26888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26893 ;;Total ram usage:        0 bytes
 26894 ;; Hardware stack levels used:    1
 26895 ;; Hardware stack levels required when called:    7
 26896 ;; This function calls:
 26897 ;;		Nothing
 26898 ;; This function is called by:
 26899 ;;		_SYS_Init
 26900 ;; This function uses a non-reentrant model
 26901 ;;
 26902                           
 26903                           	psect	text169
 26904  008D10                     __ptext169:
 26905                           	opt callstack 0
 26906  008D10                     _SYS_TimerInit:
 26907                           	opt callstack 22
 26908                           
 26909                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 26910                           
 26911                           ; BSR set to: 2
 26912                           ;incstack = 0
 26913  008D10  0E00               	movlw	0
 26914  008D12  0100               	movlb	0	; () banked
 26915  008D14  6FE0               	movwf	_timers& (0+255),b
 26916  008D16  0E00               	movlw	0
 26917  008D18  6FE1               	movwf	(_timers+1)& (0+255),b
 26918                           
 26919                           ; BSR set to: 0
 26920  008D1A  0012               	return		;funcret
 26921  008D1C                     __end_of_SYS_TimerInit:
 26922                           	opt callstack 0
 26923                           
 26924 ;; *************** function _PHY_Init *****************
 26925 ;; Defined at:
 26926 ;;		line 810 in file "../phy/sx1216/phy_src/phy.c"
 26927 ;; Parameters:    Size  Location     Type
 26928 ;;		None
 26929 ;; Auto vars:     Size  Location     Type
 26930 ;;		None
 26931 ;; Return value:  Size  Location     Type
 26932 ;;                  1    wreg      void 
 26933 ;; Registers used:
 26934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26935 ;; Tracked objects:
 26936 ;;		On entry : 3F/0
 26937 ;;		On exit  : 3F/1
 26938 ;;		Unchanged: 0/0
 26939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26944 ;;Total ram usage:        0 bytes
 26945 ;; Hardware stack levels used:    1
 26946 ;; Hardware stack levels required when called:   14
 26947 ;; This function calls:
 26948 ;;		_initRadio
 26949 ;; This function is called by:
 26950 ;;		_SYS_Init
 26951 ;; This function uses a non-reentrant model
 26952 ;;
 26953                           
 26954                           	psect	text170
 26955  008D56                     __ptext170:
 26956                           	opt callstack 0
 26957  008D56                     _PHY_Init:
 26958                           	opt callstack 15
 26959                           
 26960                           ; BSR set to: 0
 26961                           ;../phy/sx1216/phy_src/phy.c: 811:     initRadio();
 26962                           
 26963                           ; BSR set to: 0
 26964                           ;incstack = 0
 26965  008D56  ECD4  F020         	call	_initRadio	;wreg free
 26966                           
 26967                           ; BSR set to: 1
 26968  008D5A  0012               	return		;funcret
 26969  008D5C                     __end_of_PHY_Init:
 26970                           	opt callstack 0
 26971                           
 26972 ;; *************** function _initRadio *****************
 26973 ;; Defined at:
 26974 ;;		line 444 in file "../phy/sx1216/phy_src/phy.c"
 26975 ;; Parameters:    Size  Location     Type
 26976 ;;		None
 26977 ;; Auto vars:     Size  Location     Type
 26978 ;;  BWset           4    0        unsigned long 
 26979 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 26980 ;;  version         1   54[COMRAM] unsigned char 
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  1    wreg      void 
 26983 ;; Registers used:
 26984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26985 ;; Tracked objects:
 26986 ;;		On entry : 0/0
 26987 ;;		On exit  : 3F/1
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26993 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26994 ;;Total ram usage:        7 bytes
 26995 ;; Hardware stack levels used:    1
 26996 ;; Hardware stack levels required when called:   13
 26997 ;; This function calls:
 26998 ;;		_SX1276Read
 26999 ;;		_SX1276Write
 27000 ;;		_computeFRF
 27001 ;;		_enableCrc
 27002 ;;		_explicitHeaderMode
 27003 ;;		_receive
 27004 ;;		_setCodingRate4
 27005 ;;		_setFrequency
 27006 ;;		_setPreambleLength
 27007 ;;		_setSignalBandwidth
 27008 ;;		_setSpreadingFactor
 27009 ;;		_setTxPower
 27010 ;;		_srand
 27011 ;; This function is called by:
 27012 ;;		_cmdSetNaddr
 27013 ;;		_cmdSetRFCH
 27014 ;;		_cmdSetTX
 27015 ;;		_cmdSetCADRSSI
 27016 ;;		_cmdSetSF
 27017 ;;		_radio_engine
 27018 ;;		_PHY_Init
 27019 ;; This function uses a non-reentrant model
 27020 ;;
 27021                           
 27022                           	psect	text171
 27023  0041A8                     __ptext171:
 27024                           	opt callstack 0
 27025  0041A8                     _initRadio:
 27026                           	opt callstack 14
 27027                           
 27028                           ; BSR set to: 1
 27029                           ;incstack = 0
 27030                           ;../phy/sx1216/phy_src/phy.c: 446:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 447
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 448:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 450:     do { LATCbits.LATC5 = 0; } while(0);
 27031  0041A8  9ABC               	bcf	188,5,c	;volatile
 27032                           
 27033                           ;../phy/sx1216/phy_src/phy.c: 451:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27034  0041AA  0E09               	movlw	9
 27035  0041AC  6E34               	movwf	(??_initRadio+1)^0,c
 27036  0041AE  0E1E               	movlw	30
 27037  0041B0  6E33               	movwf	??_initRadio^0,c
 27038  0041B2  0EE4               	movlw	228
 27039  0041B4                     u17407:
 27040  0041B4  2EE8               	decfsz	wreg,f,c
 27041  0041B6  D7FE               	bra	u17407
 27042  0041B8  2E33               	decfsz	??_initRadio^0,f,c
 27043  0041BA  D7FC               	bra	u17407
 27044  0041BC  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27045  0041BE  D7FA               	bra	u17407
 27046  0041C0  D000               	nop2	
 27047  0041C2  8ABC               	bsf	188,5,c	;volatile
 27048                           
 27049                           ;../phy/sx1216/phy_src/phy.c: 453:     computeFRF();
 27050  0041C4  EC28  F01D         	call	_computeFRF	;wreg free
 27051                           
 27052                           ;../phy/sx1216/phy_src/phy.c: 454:     _delay((unsigned long)((500)*(64000000/4000.0)));
 27053  0041C8  0E29               	movlw	41
 27054  0041CA  6E34               	movwf	(??_initRadio+1)^0,c
 27055  0041CC  0E96               	movlw	150
 27056  0041CE  6E33               	movwf	??_initRadio^0,c
 27057  0041D0  0E7F               	movlw	127
 27058  0041D2                     u17417:
 27059  0041D2  2EE8               	decfsz	wreg,f,c
 27060  0041D4  D7FE               	bra	u17417
 27061  0041D6  2E33               	decfsz	??_initRadio^0,f,c
 27062  0041D8  D7FC               	bra	u17417
 27063  0041DA  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27064  0041DC  D7FA               	bra	u17417
 27065  0041DE  F000               	nop	
 27066                           
 27067                           ;../phy/sx1216/phy_src/phy.c: 456:     version = SX1276Read(0x42);
 27068  0041E0  0E42               	movlw	66
 27069  0041E2  ECDA  F045         	call	_SX1276Read
 27070  0041E6  6E37               	movwf	initRadio@version^0,c
 27071                           
 27072                           ; BSR set to: 61
 27073                           ;../phy/sx1216/phy_src/phy.c: 457:     version++;
 27074  0041E8  2A37               	incf	initRadio@version^0,f,c
 27075                           
 27076                           ; BSR set to: 61
 27077                           ;../phy/sx1216/phy_src/phy.c: 458:     SX1276Write(0x01,0x00);
 27078  0041EA  0E00               	movlw	0
 27079  0041EC  6E0F               	movwf	SX1276Write@data^0,c
 27080  0041EE  0E01               	movlw	1
 27081  0041F0  ECF8  F045         	call	_SX1276Write
 27082                           
 27083                           ; BSR set to: 61
 27084                           ;../phy/sx1216/phy_src/phy.c: 459:     SX1276Write(0x01,0x80);
 27085  0041F4  0E80               	movlw	128
 27086  0041F6  6E0F               	movwf	SX1276Write@data^0,c
 27087  0041F8  0E01               	movlw	1
 27088  0041FA  ECF8  F045         	call	_SX1276Write
 27089                           
 27090                           ; BSR set to: 61
 27091                           ;../phy/sx1216/phy_src/phy.c: 461:     setFrequency(fhssList[0]);
 27092  0041FE  0EC9               	movlw	low _fhssList
 27093  004200  6EF6               	movwf	tblptrl,c
 27094  004202                     	if	1	;There is more than 1 active tblptr byte
 27095  004202  0EFC               	movlw	high _fhssList
 27096  004204  6EF7               	movwf	tblptrh,c
 27097  004206                     	endif
 27098  004206                     	if	1	;There are 3 active tblptr bytes
 27099  004206  0E00               	movlw	low (_fhssList shr (0+16))
 27100  004208  6EF8               	movwf	tblptru,c
 27101  00420A                     	endif
 27102  00420A  0009               	tblrd		*+
 27103  00420C  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 27104  004212  0009               	tblrd		*+
 27105  004214  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 27106  00421A  0009               	tblrd		*+
 27107  00421C  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 27108  004222  000A               	tblrd		*-
 27109  004224  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 27110  00422A  EC4E  F025         	call	_setFrequency	;wreg free
 27111                           
 27112                           ; BSR set to: 61
 27113                           ;../phy/sx1216/phy_src/phy.c: 462:     setSpreadingFactor(7);
 27114  00422E  0E07               	movlw	7
 27115  004230  EC32  F029         	call	_setSpreadingFactor
 27116                           
 27117                           ;../phy/sx1216/phy_src/phy.c: 463:     setTxPower(13);
 27118  004234  0E0D               	movlw	13
 27119  004236  EC90  F043         	call	_setTxPower
 27120                           
 27121                           ; BSR set to: 61
 27122                           ;../phy/sx1216/phy_src/phy.c: 464:     setSignalBandwidth(500E3);
 27123  00423A  0E20               	movlw	32
 27124  00423C  6E23               	movwf	setSignalBandwidth@sbw^0,c
 27125  00423E  0EA1               	movlw	161
 27126  004240  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 27127  004242  0E07               	movlw	7
 27128  004244  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 27129  004246  0E00               	movlw	0
 27130  004248  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 27131  00424A  ECAF  F007         	call	_setSignalBandwidth	;wreg free
 27132                           
 27133                           ;../phy/sx1216/phy_src/phy.c: 465:     explicitHeaderMode();
 27134  00424E  EC96  F045         	call	_explicitHeaderMode	;wreg free
 27135                           
 27136                           ; BSR set to: 61
 27137                           ;../phy/sx1216/phy_src/phy.c: 466:     setCodingRate4(4);
 27138  004252  0E04               	movlw	4
 27139  004254  EC82  F042         	call	_setCodingRate4
 27140                           
 27141                           ; BSR set to: 61
 27142                           ;../phy/sx1216/phy_src/phy.c: 467:     setPreambleLength(12);
 27143  004258  0E00               	movlw	0
 27144  00425A  6E12               	movwf	(setPreambleLength@length+1)^0,c
 27145  00425C  0E0C               	movlw	12
 27146  00425E  6E11               	movwf	setPreambleLength@length^0,c
 27147  004260  EC63  F045         	call	_setPreambleLength	;wreg free
 27148                           
 27149                           ; BSR set to: 61
 27150                           ;../phy/sx1216/phy_src/phy.c: 468:     enableCrc();
 27151  004264  ECEF  F045         	call	_enableCrc	;wreg free
 27152                           
 27153                           ; BSR set to: 61
 27154                           ;../phy/sx1216/phy_src/phy.c: 469:     SX1276Write(0x0E, 0x0);
 27155  004268  0E00               	movlw	0
 27156  00426A  6E0F               	movwf	SX1276Write@data^0,c
 27157  00426C  0E0E               	movlw	14
 27158  00426E  ECF8  F045         	call	_SX1276Write
 27159                           
 27160                           ; BSR set to: 61
 27161                           ;../phy/sx1216/phy_src/phy.c: 470:     SX1276Write(0x0F, 0);
 27162  004272  0E00               	movlw	0
 27163  004274  6E0F               	movwf	SX1276Write@data^0,c
 27164  004276  0E0F               	movlw	15
 27165  004278  ECF8  F045         	call	_SX1276Write
 27166                           
 27167                           ; BSR set to: 61
 27168                           ;../phy/sx1216/phy_src/phy.c: 473:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 27169  00427C  0E0C               	movlw	12
 27170  00427E  ECDA  F045         	call	_SX1276Read
 27171  004282  0903               	iorlw	3
 27172  004284  6E0F               	movwf	SX1276Write@data^0,c
 27173  004286  0E0C               	movlw	12
 27174  004288  ECF8  F045         	call	_SX1276Write
 27175                           
 27176                           ; BSR set to: 61
 27177                           ;../phy/sx1216/phy_src/phy.c: 476:     SX1276Write(0x26, 0x04);
 27178  00428C  0E04               	movlw	4
 27179  00428E  6E0F               	movwf	SX1276Write@data^0,c
 27180  004290  0E26               	movlw	38
 27181  004292  ECF8  F045         	call	_SX1276Write
 27182                           
 27183                           ; BSR set to: 61
 27184                           ;../phy/sx1216/phy_src/phy.c: 479:     SX1276Write(0x36,0x02);
 27185  004296  0E02               	movlw	2
 27186  004298  6E0F               	movwf	SX1276Write@data^0,c
 27187  00429A  0E36               	movlw	54
 27188  00429C  ECF8  F045         	call	_SX1276Write
 27189                           
 27190                           ; BSR set to: 61
 27191                           ;../phy/sx1216/phy_src/phy.c: 480:     SX1276Write(0x3A,0x64);
 27192  0042A0  0E64               	movlw	100
 27193  0042A2  6E0F               	movwf	SX1276Write@data^0,c
 27194  0042A4  0E3A               	movlw	58
 27195  0042A6  ECF8  F045         	call	_SX1276Write
 27196                           
 27197                           ; BSR set to: 61
 27198                           ;../phy/sx1216/phy_src/phy.c: 492:     SX1276Write(0x1F,255);
 27199  0042AA  0EFF               	movlw	255
 27200  0042AC  6E0F               	movwf	SX1276Write@data^0,c
 27201  0042AE  0E1F               	movlw	31
 27202  0042B0  ECF8  F045         	call	_SX1276Write
 27203                           
 27204                           ; BSR set to: 61
 27205                           ;../phy/sx1216/phy_src/phy.c: 494:     receive(0);
 27206  0042B4  0E00               	movlw	0
 27207  0042B6  ECED  F040         	call	_receive
 27208                           
 27209                           ; BSR set to: 61
 27210                           ;../phy/sx1216/phy_src/phy.c: 496:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27211  0042BA  0E09               	movlw	9
 27212  0042BC  6E34               	movwf	(??_initRadio+1)^0,c
 27213  0042BE  0E1E               	movlw	30
 27214  0042C0  6E33               	movwf	??_initRadio^0,c
 27215  0042C2  0EE4               	movlw	228
 27216  0042C4                     u17427:
 27217  0042C4  2EE8               	decfsz	wreg,f,c
 27218  0042C6  D7FE               	bra	u17427
 27219  0042C8  2E33               	decfsz	??_initRadio^0,f,c
 27220  0042CA  D7FC               	bra	u17427
 27221  0042CC  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27222  0042CE  D7FA               	bra	u17427
 27223  0042D0  D000               	nop2	
 27224                           
 27225                           ;../phy/sx1216/phy_src/phy.c: 498:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 27226  0042D2  0E2C               	movlw	44
 27227  0042D4  ECDA  F045         	call	_SX1276Read
 27228  0042D8  6E33               	movwf	??_initRadio^0,c
 27229  0042DA  0E2C               	movlw	44
 27230  0042DC  ECDA  F045         	call	_SX1276Read
 27231  0042E0  6E34               	movwf	(??_initRadio+1)^0,c
 27232  0042E2  5034               	movf	(??_initRadio+1)^0,w,c
 27233  0042E4  6E36               	movwf	(??_initRadio+3)^0,c
 27234  0042E6  6A35               	clrf	(??_initRadio+2)^0,c
 27235  0042E8  5033               	movf	??_initRadio^0,w,c
 27236  0042EA  2435               	addwf	(??_initRadio+2)^0,w,c
 27237  0042EC  6E38               	movwf	initRadio@wideRSSI^0,c
 27238  0042EE  0E00               	movlw	0
 27239  0042F0  2036               	addwfc	(??_initRadio+3)^0,w,c
 27240  0042F2  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 27241                           
 27242                           ; BSR set to: 61
 27243                           ;../phy/sx1216/phy_src/phy.c: 500:     srand(wideRSSI);
 27244  0042F4  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 27245  0042FA  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 27246  004300  EC14  F042         	call	_srand	;wreg free
 27247                           
 27248                           ; BSR set to: 1
 27249  004304  0012               	return		;funcret
 27250  004306                     __end_of_initRadio:
 27251                           	opt callstack 0
 27252                           
 27253 ;; *************** function _srand *****************
 27254 ;; Defined at:
 27255 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 27256 ;; Parameters:    Size  Location     Type
 27257 ;;  s               2    1[COMRAM] unsigned int 
 27258 ;; Auto vars:     Size  Location     Type
 27259 ;;		None
 27260 ;; Return value:  Size  Location     Type
 27261 ;;                  1    wreg      void 
 27262 ;; Registers used:
 27263 ;;		wreg, status,2, status,0
 27264 ;; Tracked objects:
 27265 ;;		On entry : 3F/3D
 27266 ;;		On exit  : 3F/1
 27267 ;;		Unchanged: 0/0
 27268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27273 ;;Total ram usage:        6 bytes
 27274 ;; Hardware stack levels used:    1
 27275 ;; Hardware stack levels required when called:    7
 27276 ;; This function calls:
 27277 ;;		Nothing
 27278 ;; This function is called by:
 27279 ;;		_initRadio
 27280 ;; This function uses a non-reentrant model
 27281 ;;
 27282                           
 27283                           	psect	text172
 27284  008428                     __ptext172:
 27285                           	opt callstack 0
 27286  008428                     _srand:
 27287                           	opt callstack 19
 27288                           
 27289                           ; BSR set to: 61
 27290                           
 27291                           ; BSR set to: 1
 27292                           ;incstack = 0
 27293  008428  0EFF               	movlw	255
 27294  00842A  6E04               	movwf	??_srand^0,c
 27295  00842C  0EFF               	movlw	255
 27296  00842E  6E05               	movwf	(??_srand+1)^0,c
 27297  008430  0060  F008  F006   	movff	srand@s,??_srand+2
 27298  008436  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 27299  00843C  5004               	movf	??_srand^0,w,c
 27300  00843E  2606               	addwf	(??_srand+2)^0,f,c
 27301  008440  5005               	movf	(??_srand+1)^0,w,c
 27302  008442  2207               	addwfc	(??_srand+3)^0,f,c
 27303  008444  0060  F018  F1D2   	movff	??_srand+2,_seed
 27304  00844A  0060  F01C  F1D3   	movff	??_srand+3,_seed+1
 27305  008450  0101               	movlb	1	; () banked
 27306  008452  6BD4               	clrf	(_seed+2)& (0+255),b
 27307  008454  6BD5               	clrf	(_seed+3)& (0+255),b
 27308  008456  6BD6               	clrf	(_seed+4)& (0+255),b
 27309  008458  6BD7               	clrf	(_seed+5)& (0+255),b
 27310  00845A  6BD8               	clrf	(_seed+6)& (0+255),b
 27311  00845C  6BD9               	clrf	(_seed+7)& (0+255),b
 27312                           
 27313                           ; BSR set to: 1
 27314  00845E  0012               	return		;funcret
 27315  008460                     __end_of_srand:
 27316                           	opt callstack 0
 27317                           
 27318 ;; *************** function _setTxPower *****************
 27319 ;; Defined at:
 27320 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 27321 ;; Parameters:    Size  Location     Type
 27322 ;;  power           1    wreg     unsigned char 
 27323 ;; Auto vars:     Size  Location     Type
 27324 ;;  power           1   16[COMRAM] unsigned char 
 27325 ;; Return value:  Size  Location     Type
 27326 ;;                  1    wreg      void 
 27327 ;; Registers used:
 27328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27329 ;; Tracked objects:
 27330 ;;		On entry : 0/3D
 27331 ;;		On exit  : 3F/3D
 27332 ;;		Unchanged: 0/0
 27333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27338 ;;Total ram usage:        1 bytes
 27339 ;; Hardware stack levels used:    1
 27340 ;; Hardware stack levels required when called:   11
 27341 ;; This function calls:
 27342 ;;		_SX1276Write
 27343 ;; This function is called by:
 27344 ;;		_initRadio
 27345 ;; This function uses a non-reentrant model
 27346 ;;
 27347                           
 27348                           	psect	text173
 27349  008720                     __ptext173:
 27350                           	opt callstack 0
 27351  008720                     _setTxPower:
 27352                           	opt callstack 15
 27353                           
 27354                           ; BSR set to: 1
 27355                           ;incstack = 0
 27356                           ;setTxPower@power stored from wreg
 27357  008720  6E11               	movwf	setTxPower@power^0,c
 27358                           
 27359                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 27360  008722  0E02               	movlw	2
 27361  008724  6011               	cpfslt	setTxPower@power^0,c
 27362  008726  D002               	goto	l11035
 27363                           
 27364                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 27365  008728  0E02               	movlw	2
 27366  00872A  6E11               	movwf	setTxPower@power^0,c
 27367  00872C                     l11035:
 27368                           
 27369                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 5)
 27370  00872C  0E05               	movlw	5
 27371  00872E  6411               	cpfsgt	setTxPower@power^0,c
 27372  008730  D002               	goto	l11039
 27373                           
 27374                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 5;
 27375  008732  0E05               	movlw	5
 27376  008734  6E11               	movwf	setTxPower@power^0,c
 27377  008736                     l11039:
 27378                           
 27379                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 27380  008736  5011               	movf	setTxPower@power^0,w,c
 27381  008738  0FFE               	addlw	254
 27382  00873A  6E11               	movwf	setTxPower@power^0,c
 27383                           
 27384                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 27385  00873C  5011               	movf	setTxPower@power^0,w,c
 27386  00873E  09F0               	iorlw	240
 27387  008740  6E0F               	movwf	SX1276Write@data^0,c
 27388  008742  0E09               	movlw	9
 27389  008744  ECF8  F045         	call	_SX1276Write
 27390                           
 27391                           ; BSR set to: 61
 27392  008748  0012               	return		;funcret
 27393  00874A                     __end_of_setTxPower:
 27394                           	opt callstack 0
 27395                           
 27396 ;; *************** function _setSpreadingFactor *****************
 27397 ;; Defined at:
 27398 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 27399 ;; Parameters:    Size  Location     Type
 27400 ;;  sf              1    wreg     unsigned char 
 27401 ;; Auto vars:     Size  Location     Type
 27402 ;;  sf              1   42[COMRAM] unsigned char 
 27403 ;; Return value:  Size  Location     Type
 27404 ;;                  1    wreg      void 
 27405 ;; Registers used:
 27406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27407 ;; Tracked objects:
 27408 ;;		On entry : 3F/3D
 27409 ;;		On exit  : 0/0
 27410 ;;		Unchanged: 0/0
 27411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27413 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27415 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27416 ;;Total ram usage:        9 bytes
 27417 ;; Hardware stack levels used:    1
 27418 ;; Hardware stack levels required when called:   12
 27419 ;; This function calls:
 27420 ;;		_SX1276Read
 27421 ;;		_SX1276Write
 27422 ;;		___lldiv
 27423 ;;		_getSignalBandwidth
 27424 ;;		_getSpreadingFactor
 27425 ;; This function is called by:
 27426 ;;		_initRadio
 27427 ;; This function uses a non-reentrant model
 27428 ;;
 27429                           
 27430                           	psect	text174
 27431  005264                     __ptext174:
 27432                           	opt callstack 0
 27433  005264                     _setSpreadingFactor:
 27434                           	opt callstack 14
 27435                           
 27436                           ; BSR set to: 61
 27437                           ;incstack = 0
 27438                           ;setSpreadingFactor@sf stored from wreg
 27439  005264  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27440                           
 27441                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 27442  005266  0E07               	movlw	7
 27443  005268  602B               	cpfslt	setSpreadingFactor@sf^0,c
 27444  00526A  D002               	goto	l15279
 27445                           
 27446                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 27447  00526C  0E07               	movlw	7
 27448  00526E  D004               	goto	L25
 27449  005270                     l15279:
 27450  005270  0E0C               	movlw	12
 27451  005272  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 27452  005274  D002               	goto	l15283
 27453                           
 27454                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 27455  005276  0E0C               	movlw	12
 27456  005278                     L25:
 27457  005278  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27458  00527A                     l15283:
 27459                           
 27460                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 27461  00527A  0EC3               	movlw	195
 27462  00527C  6E0F               	movwf	SX1276Write@data^0,c
 27463  00527E  0E31               	movlw	49
 27464  005280  ECF8  F045         	call	_SX1276Write
 27465                           
 27466                           ; BSR set to: 61
 27467                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 27468  005284  0E0A               	movlw	10
 27469  005286  6E0F               	movwf	SX1276Write@data^0,c
 27470  005288  0E37               	movlw	55
 27471  00528A  ECF8  F045         	call	_SX1276Write
 27472                           
 27473                           ; BSR set to: 61
 27474                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 27475  00528E  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 27476  005294  3A23               	swapf	??_setSpreadingFactor^0,f,c
 27477  005296  0EF0               	movlw	240
 27478  005298  1623               	andwf	??_setSpreadingFactor^0,f,c
 27479  00529A  0EF0               	movlw	240
 27480  00529C  1623               	andwf	??_setSpreadingFactor^0,f,c
 27481  00529E  0E1E               	movlw	30
 27482  0052A0  ECDA  F045         	call	_SX1276Read
 27483  0052A4  0B0F               	andlw	15
 27484  0052A6  1023               	iorwf	??_setSpreadingFactor^0,w,c
 27485  0052A8  6E0F               	movwf	SX1276Write@data^0,c
 27486  0052AA  0E1E               	movlw	30
 27487  0052AC  ECF8  F045         	call	_SX1276Write
 27488                           
 27489                           ; BSR set to: 61
 27490                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27491  0052B0  EC56  F045         	call	_getSpreadingFactor	;wreg free
 27492  0052B4  0E01               	movlw	1
 27493  0052B6  6E23               	movwf	??_setSpreadingFactor^0,c
 27494  0052B8  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 27495  0052BA  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 27496  0052BC  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 27497  0052BE  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27498  0052C0  D005               	goto	u14920
 27499  0052C2                     u14925:
 27500  0052C2  90D8               	bcf	status,0,c
 27501  0052C4  3623               	rlcf	??_setSpreadingFactor^0,f,c
 27502  0052C6  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 27503  0052C8  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 27504  0052CA  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 27505  0052CC                     u14920:
 27506  0052CC  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27507  0052CE  D7F9               	goto	u14925
 27508  0052D0  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 27509  0052D6  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 27510  0052DC  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 27511  0052E2  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 27512  0052E8  EC76  F026         	call	_getSignalBandwidth	;wreg free
 27513  0052EC  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27514  0052F2  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27515  0052F8  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27516  0052FE  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27517  005304  ECDA  F037         	call	___lldiv	;wreg free
 27518  005308  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8634
 27519  00530E  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8634+1
 27520  005314  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8634+2
 27521  00531A  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8634+3
 27522                           
 27523                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27524  005320  0EE8               	movlw	232
 27525  005322  6E16               	movwf	___lldiv@dividend^0,c
 27526  005324  0E03               	movlw	3
 27527  005326  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27528  005328  0E00               	movlw	0
 27529  00532A  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27530  00532C  0E00               	movlw	0
 27531  00532E  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27532  005330  0060  F09C  F01A   	movff	_setSpreadingFactor$8634,___lldiv@divisor
 27533  005336  0060  F0A0  F01B   	movff	_setSpreadingFactor$8634+1,___lldiv@divisor+1
 27534  00533C  0060  F0A4  F01C   	movff	_setSpreadingFactor$8634+2,___lldiv@divisor+2
 27535  005342  0060  F0A8  F01D   	movff	_setSpreadingFactor$8634+3,___lldiv@divisor+3
 27536  005348  ECDA  F037         	call	___lldiv	;wreg free
 27537  00534C  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 27538  005352  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 27539  005358  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 27540  00535E  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 27541  005364  0012               	return		;funcret
 27542  005366                     __end_of_setSpreadingFactor:
 27543                           	opt callstack 0
 27544                           
 27545 ;; *************** function _setSignalBandwidth *****************
 27546 ;; Defined at:
 27547 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 27548 ;; Parameters:    Size  Location     Type
 27549 ;;  sbw             4   34[COMRAM] unsigned long 
 27550 ;; Auto vars:     Size  Location     Type
 27551 ;;  bw              4   46[COMRAM] unsigned long 
 27552 ;; Return value:  Size  Location     Type
 27553 ;;                  1    wreg      void 
 27554 ;; Registers used:
 27555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27556 ;; Tracked objects:
 27557 ;;		On entry : 3F/3D
 27558 ;;		On exit  : 0/0
 27559 ;;		Unchanged: 0/0
 27560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27562 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27564 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27565 ;;Total ram usage:       16 bytes
 27566 ;; Hardware stack levels used:    1
 27567 ;; Hardware stack levels required when called:   12
 27568 ;; This function calls:
 27569 ;;		_SX1276Read
 27570 ;;		_SX1276Write
 27571 ;;		___flge
 27572 ;;		___lldiv
 27573 ;;		___xxtofl
 27574 ;;		_getSignalBandwidth
 27575 ;;		_getSpreadingFactor
 27576 ;; This function is called by:
 27577 ;;		_initRadio
 27578 ;; This function uses a non-reentrant model
 27579 ;;
 27580                           
 27581                           	psect	text175
 27582  000F5E                     __ptext175:
 27583                           	opt callstack 0
 27584  000F5E                     _setSignalBandwidth:
 27585                           	opt callstack 14
 27586                           
 27587                           ; BSR set to: 61
 27588                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 27589                           
 27590                           ;incstack = 0
 27591  000F5E  0E00               	movlw	0
 27592  000F60  6E10               	movwf	___flge@ff1^0,c
 27593  000F62  0EC0               	movlw	192
 27594  000F64  6E11               	movwf	(___flge@ff1+1)^0,c
 27595  000F66  0EF3               	movlw	243
 27596  000F68  6E12               	movwf	(___flge@ff1+2)^0,c
 27597  000F6A  0E45               	movlw	69
 27598  000F6C  6E13               	movwf	(___flge@ff1+3)^0,c
 27599  000F6E  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27600  000F74  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27601  000F7A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27602  000F80  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27603  000F86  0E00               	movlw	0
 27604  000F88  EC22  F020         	call	___xxtofl
 27605  000F8C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27606  000F92  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27607  000F98  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27608  000F9E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27609  000FA4  EC75  F02F         	call	___flge	;wreg free
 27610  000FA8  A0D8               	btfss	status,0,c
 27611  000FAA  D002               	goto	l15297
 27612                           
 27613                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 27614  000FAC  0E00               	movlw	0
 27615  000FAE  D149               	goto	L26
 27616  000FB0                     l15297:
 27617  000FB0  0E00               	movlw	0
 27618  000FB2  6E10               	movwf	___flge@ff1^0,c
 27619  000FB4  0E80               	movlw	128
 27620  000FB6  6E11               	movwf	(___flge@ff1+1)^0,c
 27621  000FB8  0E22               	movlw	34
 27622  000FBA  6E12               	movwf	(___flge@ff1+2)^0,c
 27623  000FBC  0E46               	movlw	70
 27624  000FBE  6E13               	movwf	(___flge@ff1+3)^0,c
 27625  000FC0  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27626  000FC6  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27627  000FCC  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27628  000FD2  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27629  000FD8  0E00               	movlw	0
 27630  000FDA  EC22  F020         	call	___xxtofl
 27631  000FDE  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27632  000FE4  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27633  000FEA  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27634  000FF0  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27635  000FF6  EC75  F02F         	call	___flge	;wreg free
 27636  000FFA  A0D8               	btfss	status,0,c
 27637  000FFC  D002               	goto	l15301
 27638                           
 27639                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 27640  000FFE  0E01               	movlw	1
 27641  001000  D120               	goto	L26
 27642  001002                     l15301:
 27643  001002  0E00               	movlw	0
 27644  001004  6E10               	movwf	___flge@ff1^0,c
 27645  001006  0EC0               	movlw	192
 27646  001008  6E11               	movwf	(___flge@ff1+1)^0,c
 27647  00100A  0E73               	movlw	115
 27648  00100C  6E12               	movwf	(___flge@ff1+2)^0,c
 27649  00100E  0E46               	movlw	70
 27650  001010  6E13               	movwf	(___flge@ff1+3)^0,c
 27651  001012  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27652  001018  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27653  00101E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27654  001024  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27655  00102A  0E00               	movlw	0
 27656  00102C  EC22  F020         	call	___xxtofl
 27657  001030  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27658  001036  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27659  00103C  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27660  001042  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27661  001048  EC75  F02F         	call	___flge	;wreg free
 27662  00104C  A0D8               	btfss	status,0,c
 27663  00104E  D002               	goto	l15305
 27664                           
 27665                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 27666  001050  0E02               	movlw	2
 27667  001052  D0F7               	goto	L26
 27668  001054                     l15305:
 27669  001054  0E00               	movlw	0
 27670  001056  6E10               	movwf	___flge@ff1^0,c
 27671  001058  0E80               	movlw	128
 27672  00105A  6E11               	movwf	(___flge@ff1+1)^0,c
 27673  00105C  0EA2               	movlw	162
 27674  00105E  6E12               	movwf	(___flge@ff1+2)^0,c
 27675  001060  0E46               	movlw	70
 27676  001062  6E13               	movwf	(___flge@ff1+3)^0,c
 27677  001064  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27678  00106A  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27679  001070  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27680  001076  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27681  00107C  0E00               	movlw	0
 27682  00107E  EC22  F020         	call	___xxtofl
 27683  001082  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27684  001088  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27685  00108E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27686  001094  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27687  00109A  EC75  F02F         	call	___flge	;wreg free
 27688  00109E  A0D8               	btfss	status,0,c
 27689  0010A0  D002               	goto	l15309
 27690                           
 27691                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 27692  0010A2  0E03               	movlw	3
 27693  0010A4  D0CE               	goto	L26
 27694  0010A6                     l15309:
 27695  0010A6  0E00               	movlw	0
 27696  0010A8  6E10               	movwf	___flge@ff1^0,c
 27697  0010AA  0E24               	movlw	36
 27698  0010AC  6E11               	movwf	(___flge@ff1+1)^0,c
 27699  0010AE  0EF4               	movlw	244
 27700  0010B0  6E12               	movwf	(___flge@ff1+2)^0,c
 27701  0010B2  0E46               	movlw	70
 27702  0010B4  6E13               	movwf	(___flge@ff1+3)^0,c
 27703  0010B6  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27704  0010BC  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27705  0010C2  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27706  0010C8  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27707  0010CE  0E00               	movlw	0
 27708  0010D0  EC22  F020         	call	___xxtofl
 27709  0010D4  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27710  0010DA  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27711  0010E0  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27712  0010E6  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27713  0010EC  EC75  F02F         	call	___flge	;wreg free
 27714  0010F0  A0D8               	btfss	status,0,c
 27715  0010F2  D002               	goto	l15313
 27716                           
 27717                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 27718  0010F4  0E04               	movlw	4
 27719  0010F6  D0A5               	goto	L26
 27720  0010F8                     l15313:
 27721  0010F8  0E00               	movlw	0
 27722  0010FA  6E10               	movwf	___flge@ff1^0,c
 27723  0010FC  0EE4               	movlw	228
 27724  0010FE  6E11               	movwf	(___flge@ff1+1)^0,c
 27725  001100  0E22               	movlw	34
 27726  001102  6E12               	movwf	(___flge@ff1+2)^0,c
 27727  001104  0E47               	movlw	71
 27728  001106  6E13               	movwf	(___flge@ff1+3)^0,c
 27729  001108  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27730  00110E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27731  001114  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27732  00111A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27733  001120  0E00               	movlw	0
 27734  001122  EC22  F020         	call	___xxtofl
 27735  001126  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27736  00112C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27737  001132  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27738  001138  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27739  00113E  EC75  F02F         	call	___flge	;wreg free
 27740  001142  A0D8               	btfss	status,0,c
 27741  001144  D002               	goto	l15317
 27742                           
 27743                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 27744  001146  0E05               	movlw	5
 27745  001148  D07C               	goto	L26
 27746  00114A                     l15317:
 27747  00114A  0E00               	movlw	0
 27748  00114C  6E10               	movwf	___flge@ff1^0,c
 27749  00114E  0E24               	movlw	36
 27750  001150  6E11               	movwf	(___flge@ff1+1)^0,c
 27751  001152  0E74               	movlw	116
 27752  001154  6E12               	movwf	(___flge@ff1+2)^0,c
 27753  001156  0E47               	movlw	71
 27754  001158  6E13               	movwf	(___flge@ff1+3)^0,c
 27755  00115A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27756  001160  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27757  001166  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27758  00116C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27759  001172  0E00               	movlw	0
 27760  001174  EC22  F020         	call	___xxtofl
 27761  001178  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27762  00117E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27763  001184  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27764  00118A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27765  001190  EC75  F02F         	call	___flge	;wreg free
 27766  001194  A0D8               	btfss	status,0,c
 27767  001196  D002               	goto	l15321
 27768                           
 27769                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 27770  001198  0E06               	movlw	6
 27771  00119A  D053               	goto	L26
 27772  00119C                     l15321:
 27773  00119C  0E00               	movlw	0
 27774  00119E  6E10               	movwf	___flge@ff1^0,c
 27775  0011A0  0E24               	movlw	36
 27776  0011A2  6E11               	movwf	(___flge@ff1+1)^0,c
 27777  0011A4  0EF4               	movlw	244
 27778  0011A6  6E12               	movwf	(___flge@ff1+2)^0,c
 27779  0011A8  0E47               	movlw	71
 27780  0011AA  6E13               	movwf	(___flge@ff1+3)^0,c
 27781  0011AC  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27782  0011B2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27783  0011B8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27784  0011BE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27785  0011C4  0E00               	movlw	0
 27786  0011C6  EC22  F020         	call	___xxtofl
 27787  0011CA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27788  0011D0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27789  0011D6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27790  0011DC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27791  0011E2  EC75  F02F         	call	___flge	;wreg free
 27792  0011E6  A0D8               	btfss	status,0,c
 27793  0011E8  D002               	goto	l15325
 27794                           
 27795                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 27796  0011EA  0E07               	movlw	7
 27797  0011EC  D02A               	goto	L26
 27798  0011EE                     l15325:
 27799  0011EE  0E00               	movlw	0
 27800  0011F0  6E10               	movwf	___flge@ff1^0,c
 27801  0011F2  0E24               	movlw	36
 27802  0011F4  6E11               	movwf	(___flge@ff1+1)^0,c
 27803  0011F6  0E74               	movlw	116
 27804  0011F8  6E12               	movwf	(___flge@ff1+2)^0,c
 27805  0011FA  0E48               	movlw	72
 27806  0011FC  6E13               	movwf	(___flge@ff1+3)^0,c
 27807  0011FE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27808  001204  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27809  00120A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27810  001210  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27811  001216  0E00               	movlw	0
 27812  001218  EC22  F020         	call	___xxtofl
 27813  00121C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27814  001222  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27815  001228  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27816  00122E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27817  001234  EC75  F02F         	call	___flge	;wreg free
 27818  001238  A0D8               	btfss	status,0,c
 27819  00123A  D002               	goto	l15329
 27820                           
 27821                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 27822  00123C  0E08               	movlw	8
 27823  00123E  D001               	goto	L26
 27824  001240                     l15329:
 27825                           
 27826                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 27827  001240  0E09               	movlw	9
 27828  001242                     L26:
 27829  001242  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27830  001244  0E00               	movlw	0
 27831  001246  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27832  001248  0E00               	movlw	0
 27833  00124A  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27834  00124C  0E00               	movlw	0
 27835  00124E  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27836                           
 27837                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 27838  001250  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 27839  001256  3A27               	swapf	??_setSignalBandwidth^0,f,c
 27840  001258  0EF0               	movlw	240
 27841  00125A  1627               	andwf	??_setSignalBandwidth^0,f,c
 27842  00125C  0E1D               	movlw	29
 27843  00125E  ECDA  F045         	call	_SX1276Read
 27844  001262  0B0F               	andlw	15
 27845  001264  1027               	iorwf	??_setSignalBandwidth^0,w,c
 27846  001266  6E0F               	movwf	SX1276Write@data^0,c
 27847  001268  0E1D               	movlw	29
 27848  00126A  ECF8  F045         	call	_SX1276Write
 27849                           
 27850                           ; BSR set to: 61
 27851                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 27852  00126E  EC56  F045         	call	_getSpreadingFactor	;wreg free
 27853  001272  0E01               	movlw	1
 27854  001274  6E27               	movwf	??_setSignalBandwidth^0,c
 27855  001276  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 27856  001278  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 27857  00127A  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 27858  00127C  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27859  00127E  D005               	goto	u15020
 27860  001280                     u15025:
 27861  001280  90D8               	bcf	status,0,c
 27862  001282  3627               	rlcf	??_setSignalBandwidth^0,f,c
 27863  001284  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 27864  001286  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 27865  001288  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 27866  00128A                     u15020:
 27867  00128A  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27868  00128C  D7F9               	goto	u15025
 27869  00128E  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 27870  001294  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 27871  00129A  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 27872  0012A0  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 27873  0012A6  EC76  F026         	call	_getSignalBandwidth	;wreg free
 27874  0012AA  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27875  0012B0  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27876  0012B6  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27877  0012BC  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27878  0012C2  ECDA  F037         	call	___lldiv	;wreg free
 27879  0012C6  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8635
 27880  0012CC  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8635+1
 27881  0012D2  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8635+2
 27882  0012D8  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8635+3
 27883                           
 27884                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 27885  0012DE  0EE8               	movlw	232
 27886  0012E0  6E16               	movwf	___lldiv@dividend^0,c
 27887  0012E2  0E03               	movlw	3
 27888  0012E4  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27889  0012E6  0E00               	movlw	0
 27890  0012E8  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27891  0012EA  0E00               	movlw	0
 27892  0012EC  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27893  0012EE  0060  F0AC  F01A   	movff	_setSignalBandwidth$8635,___lldiv@divisor
 27894  0012F4  0060  F0B0  F01B   	movff	_setSignalBandwidth$8635+1,___lldiv@divisor+1
 27895  0012FA  0060  F0B4  F01C   	movff	_setSignalBandwidth$8635+2,___lldiv@divisor+2
 27896  001300  0060  F0B8  F01D   	movff	_setSignalBandwidth$8635+3,___lldiv@divisor+3
 27897  001306  ECDA  F037         	call	___lldiv	;wreg free
 27898  00130A  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 27899  001310  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 27900  001316  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 27901  00131C  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 27902  001322  0012               	return		;funcret
 27903  001324                     __end_of_setSignalBandwidth:
 27904                           	opt callstack 0
 27905                           
 27906 ;; *************** function _getSpreadingFactor *****************
 27907 ;; Defined at:
 27908 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 27909 ;; Parameters:    Size  Location     Type
 27910 ;;		None
 27911 ;; Auto vars:     Size  Location     Type
 27912 ;;		None
 27913 ;; Return value:  Size  Location     Type
 27914 ;;                  4   14[COMRAM] unsigned long 
 27915 ;; Registers used:
 27916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27917 ;; Tracked objects:
 27918 ;;		On entry : 3F/3D
 27919 ;;		On exit  : 3F/3D
 27920 ;;		Unchanged: 0/0
 27921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27926 ;;Total ram usage:        5 bytes
 27927 ;; Hardware stack levels used:    1
 27928 ;; Hardware stack levels required when called:   11
 27929 ;; This function calls:
 27930 ;;		_SX1276Read
 27931 ;; This function is called by:
 27932 ;;		_setSpreadingFactor
 27933 ;;		_setSignalBandwidth
 27934 ;; This function uses a non-reentrant model
 27935 ;;
 27936                           
 27937                           	psect	text176
 27938  008AAC                     __ptext176:
 27939                           	opt callstack 0
 27940  008AAC                     _getSpreadingFactor:
 27941                           	opt callstack 14
 27942                           
 27943                           ; BSR set to: 61
 27944                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 27945                           
 27946                           ;incstack = 0
 27947  008AAC  0E1E               	movlw	30
 27948  008AAE  ECDA  F045         	call	_SX1276Read
 27949  008AB2  6E13               	movwf	??_getSpreadingFactor^0,c
 27950  008AB4  3A13               	swapf	??_getSpreadingFactor^0,f,c
 27951  008AB6  0E0F               	movlw	15
 27952  008AB8  1613               	andwf	??_getSpreadingFactor^0,f,c
 27953  008ABA  5013               	movf	??_getSpreadingFactor^0,w,c
 27954  008ABC  6E0F               	movwf	?_getSpreadingFactor^0,c
 27955  008ABE  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 27956  008AC0  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 27957  008AC2  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 27958                           
 27959                           ; BSR set to: 61
 27960  008AC4  0012               	return		;funcret
 27961  008AC6                     __end_of_getSpreadingFactor:
 27962                           	opt callstack 0
 27963                           
 27964 ;; *************** function _getSignalBandwidth *****************
 27965 ;; Defined at:
 27966 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 27967 ;; Parameters:    Size  Location     Type
 27968 ;;		None
 27969 ;; Auto vars:     Size  Location     Type
 27970 ;;  bw              1   20[COMRAM] unsigned char 
 27971 ;; Return value:  Size  Location     Type
 27972 ;;                  4   14[COMRAM] unsigned long 
 27973 ;; Registers used:
 27974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27975 ;; Tracked objects:
 27976 ;;		On entry : 3F/3D
 27977 ;;		On exit  : 3F/3D
 27978 ;;		Unchanged: 0/0
 27979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27984 ;;Total ram usage:        7 bytes
 27985 ;; Hardware stack levels used:    1
 27986 ;; Hardware stack levels required when called:   11
 27987 ;; This function calls:
 27988 ;;		_SX1276Read
 27989 ;; This function is called by:
 27990 ;;		_setSpreadingFactor
 27991 ;;		_setSignalBandwidth
 27992 ;; This function uses a non-reentrant model
 27993 ;;
 27994                           
 27995                           	psect	text177
 27996  004CEC                     __ptext177:
 27997                           	opt callstack 0
 27998  004CEC                     _getSignalBandwidth:
 27999                           	opt callstack 14
 28000                           
 28001                           ; BSR set to: 61
 28002                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 28003                           
 28004                           ; BSR set to: 61
 28005                           ;incstack = 0
 28006  004CEC  0E1D               	movlw	29
 28007  004CEE  ECDA  F045         	call	_SX1276Read
 28008  004CF2  6E13               	movwf	??_getSignalBandwidth^0,c
 28009  004CF4  3813               	swapf	??_getSignalBandwidth^0,w,c
 28010  004CF6  0B0F               	andlw	15
 28011  004CF8  6E15               	movwf	getSignalBandwidth@bw^0,c
 28012                           
 28013                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 28014  004CFA  D05A               	goto	l14947
 28015  004CFC                     l14905:
 28016                           
 28017                           ; BSR set to: 61
 28018  004CFC  0E78               	movlw	120
 28019  004CFE  6E0F               	movwf	?_getSignalBandwidth^0,c
 28020  004D00  0E1E               	movlw	30
 28021  004D02  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28022  004D04  0E00               	movlw	0
 28023  004D06  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28024  004D08  0E00               	movlw	0
 28025  004D0A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28026  004D0C  0012               	return	
 28027  004D0E                     l14909:
 28028                           
 28029                           ; BSR set to: 61
 28030  004D0E  0EA0               	movlw	160
 28031  004D10  6E0F               	movwf	?_getSignalBandwidth^0,c
 28032  004D12  0E28               	movlw	40
 28033  004D14  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28034  004D16  0E00               	movlw	0
 28035  004D18  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28036  004D1A  0E00               	movlw	0
 28037  004D1C  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28038  004D1E  0012               	return	
 28039  004D20                     l14913:
 28040                           
 28041                           ; BSR set to: 61
 28042  004D20  0EF0               	movlw	240
 28043  004D22  6E0F               	movwf	?_getSignalBandwidth^0,c
 28044  004D24  0E3C               	movlw	60
 28045  004D26  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28046  004D28  0E00               	movlw	0
 28047  004D2A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28048  004D2C  0E00               	movlw	0
 28049  004D2E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28050  004D30  0012               	return	
 28051  004D32                     l14917:
 28052                           
 28053                           ; BSR set to: 61
 28054  004D32  0E40               	movlw	64
 28055  004D34  6E0F               	movwf	?_getSignalBandwidth^0,c
 28056  004D36  0E51               	movlw	81
 28057  004D38  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28058  004D3A  0E00               	movlw	0
 28059  004D3C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28060  004D3E  0E00               	movlw	0
 28061  004D40  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28062  004D42  0012               	return	
 28063  004D44                     l14921:
 28064                           
 28065                           ; BSR set to: 61
 28066  004D44  0E12               	movlw	18
 28067  004D46  6E0F               	movwf	?_getSignalBandwidth^0,c
 28068  004D48  0E7A               	movlw	122
 28069  004D4A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28070  004D4C  0E00               	movlw	0
 28071  004D4E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28072  004D50  0E00               	movlw	0
 28073  004D52  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28074  004D54  0012               	return	
 28075  004D56                     l14925:
 28076                           
 28077                           ; BSR set to: 61
 28078  004D56  0EE4               	movlw	228
 28079  004D58  6E0F               	movwf	?_getSignalBandwidth^0,c
 28080  004D5A  0EA2               	movlw	162
 28081  004D5C  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28082  004D5E  0E00               	movlw	0
 28083  004D60  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28084  004D62  0E00               	movlw	0
 28085  004D64  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28086  004D66  0012               	return	
 28087  004D68                     l14929:
 28088                           
 28089                           ; BSR set to: 61
 28090  004D68  0E24               	movlw	36
 28091  004D6A  6E0F               	movwf	?_getSignalBandwidth^0,c
 28092  004D6C  0EF4               	movlw	244
 28093  004D6E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28094  004D70  0E00               	movlw	0
 28095  004D72  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28096  004D74  0E00               	movlw	0
 28097  004D76  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28098  004D78  0012               	return	
 28099  004D7A                     l14933:
 28100                           
 28101                           ; BSR set to: 61
 28102  004D7A  0E48               	movlw	72
 28103  004D7C  6E0F               	movwf	?_getSignalBandwidth^0,c
 28104  004D7E  0EE8               	movlw	232
 28105  004D80  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28106  004D82  0E01               	movlw	1
 28107  004D84  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28108  004D86  0E00               	movlw	0
 28109  004D88  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28110  004D8A  0012               	return	
 28111  004D8C                     l14937:
 28112                           
 28113                           ; BSR set to: 61
 28114  004D8C  0E90               	movlw	144
 28115  004D8E  6E0F               	movwf	?_getSignalBandwidth^0,c
 28116  004D90  0ED0               	movlw	208
 28117  004D92  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28118  004D94  0E03               	movlw	3
 28119  004D96  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28120  004D98  0E00               	movlw	0
 28121  004D9A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28122  004D9C  0012               	return	
 28123  004D9E                     l14941:
 28124                           
 28125                           ; BSR set to: 61
 28126  004D9E  0E20               	movlw	32
 28127  004DA0  6E0F               	movwf	?_getSignalBandwidth^0,c
 28128  004DA2  0EA1               	movlw	161
 28129  004DA4  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28130  004DA6  0E07               	movlw	7
 28131  004DA8  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28132  004DAA  0E00               	movlw	0
 28133  004DAC  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28134  004DAE  0012               	return	
 28135  004DB0                     l14947:
 28136                           
 28137                           ; BSR set to: 61
 28138  004DB0  5015               	movf	getSignalBandwidth@bw^0,w,c
 28139  004DB2  6E13               	movwf	??_getSignalBandwidth^0,c
 28140  004DB4  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 28141                           
 28142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28143                           ; Switch size 1, requested type "simple"
 28144                           ; Number of cases is 1, Range of values is 0 to 0
 28145                           ; switch strategies available:
 28146                           ; Name         Instructions Cycles
 28147                           ; simple_byte            4     3 (average)
 28148                           ;	Chosen strategy is simple_byte
 28149  004DB6  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 28150  004DB8  0A00               	xorlw	0	; case 0
 28151  004DBA  A4D8               	btfss	status,2,c
 28152  004DBC  D01F               	goto	l14949
 28153                           
 28154                           ; BSR set to: 61
 28155                           ; Switch size 1, requested type "simple"
 28156                           ; Number of cases is 10, Range of values is 0 to 9
 28157                           ; switch strategies available:
 28158                           ; Name         Instructions Cycles
 28159                           ; simple_byte           31    16 (average)
 28160                           ;	Chosen strategy is simple_byte
 28161  004DBE  5013               	movf	??_getSignalBandwidth^0,w,c
 28162  004DC0  0A00               	xorlw	0	; case 0
 28163  004DC2  B4D8               	btfsc	status,2,c
 28164  004DC4  D79B               	goto	l14905
 28165  004DC6  0A01               	xorlw	1	; case 1
 28166  004DC8  B4D8               	btfsc	status,2,c
 28167  004DCA  D7A1               	goto	l14909
 28168  004DCC  0A03               	xorlw	3	; case 2
 28169  004DCE  B4D8               	btfsc	status,2,c
 28170  004DD0  D7A7               	goto	l14913
 28171  004DD2  0A01               	xorlw	1	; case 3
 28172  004DD4  B4D8               	btfsc	status,2,c
 28173  004DD6  D7AD               	goto	l14917
 28174  004DD8  0A07               	xorlw	7	; case 4
 28175  004DDA  B4D8               	btfsc	status,2,c
 28176  004DDC  D7B3               	goto	l14921
 28177  004DDE  0A01               	xorlw	1	; case 5
 28178  004DE0  B4D8               	btfsc	status,2,c
 28179  004DE2  D7B9               	goto	l14925
 28180  004DE4  0A03               	xorlw	3	; case 6
 28181  004DE6  B4D8               	btfsc	status,2,c
 28182  004DE8  D7BF               	goto	l14929
 28183  004DEA  0A01               	xorlw	1	; case 7
 28184  004DEC  B4D8               	btfsc	status,2,c
 28185  004DEE  D7C5               	goto	l14933
 28186  004DF0  0A0F               	xorlw	15	; case 8
 28187  004DF2  B4D8               	btfsc	status,2,c
 28188  004DF4  D7CB               	goto	l14937
 28189  004DF6  0A01               	xorlw	1	; case 9
 28190  004DF8  B4D8               	btfsc	status,2,c
 28191  004DFA  D7D1               	goto	l14941
 28192  004DFC                     l14949:
 28193                           
 28194                           ; BSR set to: 61
 28195                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 28196  004DFC  0E00               	movlw	0
 28197  004DFE  6E0F               	movwf	?_getSignalBandwidth^0,c
 28198  004E00  0E00               	movlw	0
 28199  004E02  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28200  004E04  0E00               	movlw	0
 28201  004E06  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28202  004E08  0E00               	movlw	0
 28203  004E0A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28204                           
 28205                           ; BSR set to: 61
 28206  004E0C  0012               	return		;funcret
 28207  004E0E                     __end_of_getSignalBandwidth:
 28208                           	opt callstack 0
 28209                           
 28210 ;; *************** function ___xxtofl *****************
 28211 ;; Defined at:
 28212 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;  sign            1    wreg     unsigned char 
 28215 ;;  val             4    1[COMRAM] long 
 28216 ;; Auto vars:     Size  Location     Type
 28217 ;;  sign            1    9[COMRAM] unsigned char 
 28218 ;;  arg             4   11[COMRAM] unsigned long 
 28219 ;;  exp             1   10[COMRAM] unsigned char 
 28220 ;; Return value:  Size  Location     Type
 28221 ;;                  4    1[COMRAM] unsigned char 
 28222 ;; Registers used:
 28223 ;;		wreg, status,2, status,0
 28224 ;; Tracked objects:
 28225 ;;		On entry : 0/1
 28226 ;;		On exit  : 0/0
 28227 ;;		Unchanged: 0/0
 28228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28230 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28232 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28233 ;;Total ram usage:       14 bytes
 28234 ;; Hardware stack levels used:    1
 28235 ;; Hardware stack levels required when called:    7
 28236 ;; This function calls:
 28237 ;;		Nothing
 28238 ;; This function is called by:
 28239 ;;		_setSignalBandwidth
 28240 ;;		_get_lqi
 28241 ;; This function uses a non-reentrant model
 28242 ;;
 28243                           
 28244                           	psect	text178
 28245  004044                     __ptext178:
 28246                           	opt callstack 0
 28247  004044                     ___xxtofl:
 28248                           	opt callstack 18
 28249                           
 28250                           ; BSR set to: 61
 28251                           ;incstack = 0
 28252                           ;___xxtofl@sign stored from wreg
 28253  004044  6E0A               	movwf	___xxtofl@sign^0,c
 28254  004046  500A               	movf	___xxtofl@sign^0,w,c
 28255  004048  A4D8               	btfss	status,2,c
 28256  00404A  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28257  00404C  D022               	goto	l3851
 28258  00404E  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 28259  004054  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 28260  00405A  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 28261  004060  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 28262  004066  1E06               	comf	??___xxtofl^0,f,c
 28263  004068  1E07               	comf	(??___xxtofl+1)^0,f,c
 28264  00406A  1E08               	comf	(??___xxtofl+2)^0,f,c
 28265  00406C  1E09               	comf	(??___xxtofl+3)^0,f,c
 28266  00406E  2A06               	incf	??___xxtofl^0,f,c
 28267  004070  0E00               	movlw	0
 28268  004072  2207               	addwfc	(??___xxtofl+1)^0,f,c
 28269  004074  2208               	addwfc	(??___xxtofl+2)^0,f,c
 28270  004076  2209               	addwfc	(??___xxtofl+3)^0,f,c
 28271  004078  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 28272  00407E  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 28273  004084  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 28274  00408A  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 28275  004090  D00C               	goto	l10609
 28276  004092                     l3851:
 28277  004092  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 28278  004098  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 28279  00409E  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 28280  0040A4  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 28281  0040AA                     l10609:
 28282  0040AA  5002               	movf	___xxtofl@val^0,w,c
 28283  0040AC  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 28284  0040AE  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 28285  0040B0  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 28286  0040B2  A4D8               	btfss	status,2,c
 28287  0040B4  D009               	goto	l10615
 28288  0040B6  0E00               	movlw	0
 28289  0040B8  6E02               	movwf	?___xxtofl^0,c
 28290  0040BA  0E00               	movlw	0
 28291  0040BC  6E03               	movwf	(?___xxtofl+1)^0,c
 28292  0040BE  0E00               	movlw	0
 28293  0040C0  6E04               	movwf	(?___xxtofl+2)^0,c
 28294  0040C2  0E00               	movlw	0
 28295  0040C4  6E05               	movwf	(?___xxtofl+3)^0,c
 28296  0040C6  0012               	return	
 28297  0040C8                     l10615:
 28298  0040C8  0E96               	movlw	150
 28299  0040CA  6E0B               	movwf	___xxtofl@exp^0,c
 28300  0040CC  D006               	goto	l10619
 28301  0040CE                     l10617:
 28302  0040CE  2A0B               	incf	___xxtofl@exp^0,f,c
 28303  0040D0  90D8               	bcf	status,0,c
 28304  0040D2  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28305  0040D4  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28306  0040D6  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28307  0040D8  320C               	rrcf	___xxtofl@arg^0,f,c
 28308  0040DA                     l10619:
 28309  0040DA  0E00               	movlw	0
 28310  0040DC  140C               	andwf	___xxtofl@arg^0,w,c
 28311  0040DE  6E06               	movwf	??___xxtofl^0,c
 28312  0040E0  0E00               	movlw	0
 28313  0040E2  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28314  0040E4  6E07               	movwf	(??___xxtofl+1)^0,c
 28315  0040E6  0E00               	movlw	0
 28316  0040E8  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28317  0040EA  6E08               	movwf	(??___xxtofl+2)^0,c
 28318  0040EC  0EFE               	movlw	254
 28319  0040EE  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28320  0040F0  6E09               	movwf	(??___xxtofl+3)^0,c
 28321  0040F2  5006               	movf	??___xxtofl^0,w,c
 28322  0040F4  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28323  0040F6  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28324  0040F8  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28325  0040FA  B4D8               	btfsc	status,2,c
 28326  0040FC  D00D               	goto	l3858
 28327  0040FE  D7E7               	goto	l10617
 28328  004100                     l10621:
 28329  004100  2A0B               	incf	___xxtofl@exp^0,f,c
 28330  004102  0E01               	movlw	1
 28331  004104  260C               	addwf	___xxtofl@arg^0,f,c
 28332  004106  0E00               	movlw	0
 28333  004108  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 28334  00410A  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 28335  00410C  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 28336  00410E  90D8               	bcf	status,0,c
 28337  004110  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28338  004112  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28339  004114  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28340  004116  320C               	rrcf	___xxtofl@arg^0,f,c
 28341  004118                     l3858:
 28342  004118  0E00               	movlw	0
 28343  00411A  140C               	andwf	___xxtofl@arg^0,w,c
 28344  00411C  6E06               	movwf	??___xxtofl^0,c
 28345  00411E  0E00               	movlw	0
 28346  004120  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28347  004122  6E07               	movwf	(??___xxtofl+1)^0,c
 28348  004124  0E00               	movlw	0
 28349  004126  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28350  004128  6E08               	movwf	(??___xxtofl+2)^0,c
 28351  00412A  0EFF               	movlw	255
 28352  00412C  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28353  00412E  6E09               	movwf	(??___xxtofl+3)^0,c
 28354  004130  5006               	movf	??___xxtofl^0,w,c
 28355  004132  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28356  004134  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28357  004136  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28358  004138  B4D8               	btfsc	status,2,c
 28359  00413A  D007               	goto	l10629
 28360  00413C  D7E1               	goto	l10621
 28361  00413E                     l10627:
 28362  00413E  060B               	decf	___xxtofl@exp^0,f,c
 28363  004140  90D8               	bcf	status,0,c
 28364  004142  360C               	rlcf	___xxtofl@arg^0,f,c
 28365  004144  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 28366  004146  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 28367  004148  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 28368  00414A                     l10629:
 28369  00414A  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 28370  00414C  D003               	goto	u8990
 28371  00414E  0E02               	movlw	2
 28372  004150  600B               	cpfslt	___xxtofl@exp^0,c
 28373  004152  D7F5               	goto	l10627
 28374  004154                     u8990:
 28375  004154  A00B               	btfss	___xxtofl@exp^0,0,c
 28376  004156  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 28377  004158  90D8               	bcf	status,0,c
 28378  00415A  320B               	rrcf	___xxtofl@exp^0,f,c
 28379  00415C  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 28380  004162  6A07               	clrf	(??___xxtofl+1)^0,c
 28381  004164  6A08               	clrf	(??___xxtofl+2)^0,c
 28382  004166  6A09               	clrf	(??___xxtofl+3)^0,c
 28383  004168  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 28384  00416E  6A08               	clrf	(??___xxtofl+2)^0,c
 28385  004170  6A07               	clrf	(??___xxtofl+1)^0,c
 28386  004172  6A06               	clrf	??___xxtofl^0,c
 28387  004174  5006               	movf	??___xxtofl^0,w,c
 28388  004176  120C               	iorwf	___xxtofl@arg^0,f,c
 28389  004178  5007               	movf	(??___xxtofl+1)^0,w,c
 28390  00417A  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 28391  00417C  5008               	movf	(??___xxtofl+2)^0,w,c
 28392  00417E  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 28393  004180  5009               	movf	(??___xxtofl+3)^0,w,c
 28394  004182  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 28395  004184  500A               	movf	___xxtofl@sign^0,w,c
 28396  004186  A4D8               	btfss	status,2,c
 28397  004188  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28398  00418A  D001               	goto	l10645
 28399  00418C  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 28400  00418E                     l10645:
 28401  00418E  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 28402  004194  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 28403  00419A  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 28404  0041A0  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 28405  0041A6  0012               	return		;funcret
 28406  0041A8                     __end_of___xxtofl:
 28407                           	opt callstack 0
 28408                           
 28409 ;; *************** function ___flge *****************
 28410 ;; Defined at:
 28411 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 28412 ;; Parameters:    Size  Location     Type
 28413 ;;  ff1             4   15[COMRAM] unsigned char 
 28414 ;;  ff2             4   19[COMRAM] unsigned char 
 28415 ;; Auto vars:     Size  Location     Type
 28416 ;;		None
 28417 ;; Return value:  Size  Location     Type
 28418 ;;		None               void
 28419 ;; Registers used:
 28420 ;;		wreg, status,2, status,0
 28421 ;; Tracked objects:
 28422 ;;		On entry : 0/3D
 28423 ;;		On exit  : 0/0
 28424 ;;		Unchanged: 0/0
 28425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28426 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28429 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28430 ;;Total ram usage:       12 bytes
 28431 ;; Hardware stack levels used:    1
 28432 ;; Hardware stack levels required when called:    7
 28433 ;; This function calls:
 28434 ;;		Nothing
 28435 ;; This function is called by:
 28436 ;;		_setSignalBandwidth
 28437 ;; This function uses a non-reentrant model
 28438 ;;
 28439                           
 28440                           	psect	text179
 28441  005EEA                     __ptext179:
 28442                           	opt callstack 0
 28443  005EEA                     ___flge:
 28444                           	opt callstack 18
 28445                           
 28446                           ;incstack = 0
 28447  005EEA  0E00               	movlw	0
 28448  005EEC  1410               	andwf	___flge@ff1^0,w,c
 28449  005EEE  6E18               	movwf	??___flge^0,c
 28450  005EF0  0E00               	movlw	0
 28451  005EF2  1411               	andwf	(___flge@ff1+1)^0,w,c
 28452  005EF4  6E19               	movwf	(??___flge+1)^0,c
 28453  005EF6  0E80               	movlw	128
 28454  005EF8  1412               	andwf	(___flge@ff1+2)^0,w,c
 28455  005EFA  6E1A               	movwf	(??___flge+2)^0,c
 28456  005EFC  0E7F               	movlw	127
 28457  005EFE  1413               	andwf	(___flge@ff1+3)^0,w,c
 28458  005F00  6E1B               	movwf	(??___flge+3)^0,c
 28459  005F02  5018               	movf	??___flge^0,w,c
 28460  005F04  1019               	iorwf	(??___flge+1)^0,w,c
 28461  005F06  101A               	iorwf	(??___flge+2)^0,w,c
 28462  005F08  101B               	iorwf	(??___flge+3)^0,w,c
 28463  005F0A  A4D8               	btfss	status,2,c
 28464  005F0C  D008               	goto	l10525
 28465  005F0E  0E00               	movlw	0
 28466  005F10  6E10               	movwf	___flge@ff1^0,c
 28467  005F12  0E00               	movlw	0
 28468  005F14  6E11               	movwf	(___flge@ff1+1)^0,c
 28469  005F16  0E00               	movlw	0
 28470  005F18  6E12               	movwf	(___flge@ff1+2)^0,c
 28471  005F1A  0E00               	movlw	0
 28472  005F1C  6E13               	movwf	(___flge@ff1+3)^0,c
 28473  005F1E                     l10525:
 28474  005F1E  0E00               	movlw	0
 28475  005F20  1414               	andwf	___flge@ff2^0,w,c
 28476  005F22  6E18               	movwf	??___flge^0,c
 28477  005F24  0E00               	movlw	0
 28478  005F26  1415               	andwf	(___flge@ff2+1)^0,w,c
 28479  005F28  6E19               	movwf	(??___flge+1)^0,c
 28480  005F2A  0E80               	movlw	128
 28481  005F2C  1416               	andwf	(___flge@ff2+2)^0,w,c
 28482  005F2E  6E1A               	movwf	(??___flge+2)^0,c
 28483  005F30  0E7F               	movlw	127
 28484  005F32  1417               	andwf	(___flge@ff2+3)^0,w,c
 28485  005F34  6E1B               	movwf	(??___flge+3)^0,c
 28486  005F36  5018               	movf	??___flge^0,w,c
 28487  005F38  1019               	iorwf	(??___flge+1)^0,w,c
 28488  005F3A  101A               	iorwf	(??___flge+2)^0,w,c
 28489  005F3C  101B               	iorwf	(??___flge+3)^0,w,c
 28490  005F3E  A4D8               	btfss	status,2,c
 28491  005F40  D008               	goto	l10529
 28492  005F42  0E00               	movlw	0
 28493  005F44  6E14               	movwf	___flge@ff2^0,c
 28494  005F46  0E00               	movlw	0
 28495  005F48  6E15               	movwf	(___flge@ff2+1)^0,c
 28496  005F4A  0E00               	movlw	0
 28497  005F4C  6E16               	movwf	(___flge@ff2+2)^0,c
 28498  005F4E  0E00               	movlw	0
 28499  005F50  6E17               	movwf	(___flge@ff2+3)^0,c
 28500  005F52                     l10529:
 28501  005F52  AE13               	btfss	(___flge@ff1+3)^0,7,c
 28502  005F54  D009               	goto	l10533
 28503  005F56  6C10               	negf	___flge@ff1^0,c
 28504  005F58  1E11               	comf	(___flge@ff1+1)^0,f,c
 28505  005F5A  B0D8               	btfsc	status,0,c
 28506  005F5C  2A11               	incf	(___flge@ff1+1)^0,f,c
 28507  005F5E  1E12               	comf	(___flge@ff1+2)^0,f,c
 28508  005F60  B0D8               	btfsc	status,0,c
 28509  005F62  2A12               	incf	(___flge@ff1+2)^0,f,c
 28510  005F64  0E80               	movlw	128
 28511  005F66  5613               	subfwb	(___flge@ff1+3)^0,f,c
 28512  005F68                     l10533:
 28513  005F68  AE17               	btfss	(___flge@ff2+3)^0,7,c
 28514  005F6A  D009               	goto	l3461
 28515  005F6C  6C14               	negf	___flge@ff2^0,c
 28516  005F6E  1E15               	comf	(___flge@ff2+1)^0,f,c
 28517  005F70  B0D8               	btfsc	status,0,c
 28518  005F72  2A15               	incf	(___flge@ff2+1)^0,f,c
 28519  005F74  1E16               	comf	(___flge@ff2+2)^0,f,c
 28520  005F76  B0D8               	btfsc	status,0,c
 28521  005F78  2A16               	incf	(___flge@ff2+2)^0,f,c
 28522  005F7A  0E80               	movlw	128
 28523  005F7C  5617               	subfwb	(___flge@ff2+3)^0,f,c
 28524  005F7E                     l3461:
 28525  005F7E  0E00               	movlw	0
 28526  005F80  1A10               	xorwf	___flge@ff1^0,f,c
 28527  005F82  0E00               	movlw	0
 28528  005F84  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 28529  005F86  0E00               	movlw	0
 28530  005F88  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 28531  005F8A  0E80               	movlw	128
 28532  005F8C  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 28533  005F8E  0E00               	movlw	0
 28534  005F90  1A14               	xorwf	___flge@ff2^0,f,c
 28535  005F92  0E00               	movlw	0
 28536  005F94  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 28537  005F96  0E00               	movlw	0
 28538  005F98  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 28539  005F9A  0E80               	movlw	128
 28540  005F9C  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 28541  005F9E  5014               	movf	___flge@ff2^0,w,c
 28542  005FA0  5C10               	subwf	___flge@ff1^0,w,c
 28543  005FA2  5015               	movf	(___flge@ff2+1)^0,w,c
 28544  005FA4  5811               	subwfb	(___flge@ff1+1)^0,w,c
 28545  005FA6  5016               	movf	(___flge@ff2+2)^0,w,c
 28546  005FA8  5812               	subwfb	(___flge@ff1+2)^0,w,c
 28547  005FAA  5017               	movf	(___flge@ff2+3)^0,w,c
 28548  005FAC  5813               	subwfb	(___flge@ff1+3)^0,w,c
 28549  005FAE  B0D8               	btfsc	status,0,c
 28550  005FB0  D002               	goto	l10539
 28551  005FB2  90D8               	bcf	status,0,c
 28552  005FB4  0012               	return	
 28553  005FB6                     l10539:
 28554  005FB6  80D8               	bsf	status,0,c
 28555  005FB8  0012               	return		;funcret
 28556  005FBA                     __end_of___flge:
 28557                           	opt callstack 0
 28558                           
 28559 ;; *************** function _setPreambleLength *****************
 28560 ;; Defined at:
 28561 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 28562 ;; Parameters:    Size  Location     Type
 28563 ;;  length          2   16[COMRAM] unsigned short 
 28564 ;; Auto vars:     Size  Location     Type
 28565 ;;		None
 28566 ;; Return value:  Size  Location     Type
 28567 ;;                  1    wreg      void 
 28568 ;; Registers used:
 28569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28570 ;; Tracked objects:
 28571 ;;		On entry : 3F/3D
 28572 ;;		On exit  : 3F/3D
 28573 ;;		Unchanged: 0/0
 28574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28579 ;;Total ram usage:        2 bytes
 28580 ;; Hardware stack levels used:    1
 28581 ;; Hardware stack levels required when called:   11
 28582 ;; This function calls:
 28583 ;;		_SX1276Write
 28584 ;; This function is called by:
 28585 ;;		_initRadio
 28586 ;; This function uses a non-reentrant model
 28587 ;;
 28588                           
 28589                           	psect	text180
 28590  008AC6                     __ptext180:
 28591                           	opt callstack 0
 28592  008AC6                     _setPreambleLength:
 28593                           	opt callstack 15
 28594                           
 28595                           ; BSR set to: 61
 28596                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 28597                           
 28598                           ;incstack = 0
 28599  008AC6  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 28600  008ACC  0E20               	movlw	32
 28601  008ACE  ECF8  F045         	call	_SX1276Write
 28602                           
 28603                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 28604  008AD2  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 28605  008AD8  0E21               	movlw	33
 28606  008ADA  ECF8  F045         	call	_SX1276Write
 28607                           
 28608                           ; BSR set to: 61
 28609  008ADE  0012               	return		;funcret
 28610  008AE0                     __end_of_setPreambleLength:
 28611                           	opt callstack 0
 28612                           
 28613 ;; *************** function _setFrequency *****************
 28614 ;; Defined at:
 28615 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 28616 ;; Parameters:    Size  Location     Type
 28617 ;;  frequency       4   34[COMRAM] unsigned long 
 28618 ;; Auto vars:     Size  Location     Type
 28619 ;;  num             4   42[COMRAM] unsigned long 
 28620 ;;  num_mod         4   38[COMRAM] unsigned long 
 28621 ;; Return value:  Size  Location     Type
 28622 ;;                  4   34[COMRAM] unsigned long 
 28623 ;; Registers used:
 28624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28625 ;; Tracked objects:
 28626 ;;		On entry : 0/0
 28627 ;;		On exit  : 3F/3D
 28628 ;;		Unchanged: 0/0
 28629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28631 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28633 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28634 ;;Total ram usage:       12 bytes
 28635 ;; Hardware stack levels used:    1
 28636 ;; Hardware stack levels required when called:   11
 28637 ;; This function calls:
 28638 ;;		_SX1276Write
 28639 ;;		___lldiv
 28640 ;;		___llmod
 28641 ;; This function is called by:
 28642 ;;		_initRadio
 28643 ;;		_PHY_SetChannel
 28644 ;; This function uses a non-reentrant model
 28645 ;;
 28646                           
 28647                           	psect	text181
 28648  004A9C                     __ptext181:
 28649                           	opt callstack 0
 28650  004A9C                     _setFrequency:
 28651                           	opt callstack 15
 28652                           
 28653                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 28654                           
 28655                           ; BSR set to: 61
 28656                           ;incstack = 0
 28657  004A9C  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 28658  004AA2  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 28659  004AA8  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 28660  004AAE  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 28661  004AB4  0E09               	movlw	9
 28662  004AB6  6E1A               	movwf	___lldiv@divisor^0,c
 28663  004AB8  0E3D               	movlw	61
 28664  004ABA  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28665  004ABC  0E00               	movlw	0
 28666  004ABE  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28667  004AC0  0E00               	movlw	0
 28668  004AC2  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28669  004AC4  ECDA  F037         	call	___lldiv	;wreg free
 28670  004AC8  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 28671  004ACE  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 28672  004AD4  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 28673  004ADA  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 28674                           
 28675                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 28676  004AE0  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 28677  004AE6  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 28678  004AEC  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 28679  004AF2  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 28680  004AF8  0E09               	movlw	9
 28681  004AFA  6E06               	movwf	___llmod@divisor^0,c
 28682  004AFC  0E3D               	movlw	61
 28683  004AFE  6E07               	movwf	(___llmod@divisor+1)^0,c
 28684  004B00  0E00               	movlw	0
 28685  004B02  6E08               	movwf	(___llmod@divisor+2)^0,c
 28686  004B04  0E00               	movlw	0
 28687  004B06  6E09               	movwf	(___llmod@divisor+3)^0,c
 28688  004B08  EC20  F03A         	call	___llmod	;wreg free
 28689  004B0C  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 28690  004B12  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 28691  004B18  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 28692  004B1E  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 28693                           
 28694                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 28695  004B24  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 28696  004B2A  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 28697  004B30  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 28698  004B36  6A2B               	clrf	setFrequency@num^0,c
 28699                           
 28700                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 28701  004B38  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 28702  004B3E  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 28703  004B44  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 28704  004B4A  6A27               	clrf	setFrequency@num_mod^0,c
 28705                           
 28706                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 28707  004B4C  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 28708  004B52  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 28709  004B58  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 28710  004B5E  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 28711  004B64  0E09               	movlw	9
 28712  004B66  6E1A               	movwf	___lldiv@divisor^0,c
 28713  004B68  0E3D               	movlw	61
 28714  004B6A  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28715  004B6C  0E00               	movlw	0
 28716  004B6E  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28717  004B70  0E00               	movlw	0
 28718  004B72  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28719  004B74  ECDA  F037         	call	___lldiv	;wreg free
 28720  004B78  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 28721  004B7E  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 28722  004B84  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 28723  004B8A  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 28724                           
 28725                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 28726  004B90  5027               	movf	setFrequency@num_mod^0,w,c
 28727  004B92  262B               	addwf	setFrequency@num^0,f,c
 28728  004B94  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 28729  004B96  222C               	addwfc	(setFrequency@num+1)^0,f,c
 28730  004B98  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 28731  004B9A  222D               	addwfc	(setFrequency@num+2)^0,f,c
 28732  004B9C  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 28733  004B9E  222E               	addwfc	(setFrequency@num+3)^0,f,c
 28734                           
 28735                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 28736  004BA0  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 28737  004BA6  0E06               	movlw	6
 28738  004BA8  ECF8  F045         	call	_SX1276Write
 28739                           
 28740                           ; BSR set to: 61
 28741                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 28742  004BAC  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 28743  004BB2  0E07               	movlw	7
 28744  004BB4  ECF8  F045         	call	_SX1276Write
 28745                           
 28746                           ; BSR set to: 61
 28747                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 28748  004BB8  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 28749  004BBE  0E08               	movlw	8
 28750  004BC0  ECF8  F045         	call	_SX1276Write
 28751                           
 28752                           ; BSR set to: 61
 28753  004BC4  0012               	return		;funcret
 28754  004BC6                     __end_of_setFrequency:
 28755                           	opt callstack 0
 28756                           
 28757 ;; *************** function _setCodingRate4 *****************
 28758 ;; Defined at:
 28759 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 28760 ;; Parameters:    Size  Location     Type
 28761 ;;  denominator     1    wreg     unsigned char 
 28762 ;; Auto vars:     Size  Location     Type
 28763 ;;  denominator     1   18[COMRAM] unsigned char 
 28764 ;;  cr              1   17[COMRAM] unsigned char 
 28765 ;; Return value:  Size  Location     Type
 28766 ;;                  1    wreg      void 
 28767 ;; Registers used:
 28768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28769 ;; Tracked objects:
 28770 ;;		On entry : 3F/3D
 28771 ;;		On exit  : 3F/3D
 28772 ;;		Unchanged: 0/0
 28773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28777 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28778 ;;Total ram usage:        3 bytes
 28779 ;; Hardware stack levels used:    1
 28780 ;; Hardware stack levels required when called:   11
 28781 ;; This function calls:
 28782 ;;		_SX1276Read
 28783 ;;		_SX1276Write
 28784 ;; This function is called by:
 28785 ;;		_initRadio
 28786 ;; This function uses a non-reentrant model
 28787 ;;
 28788                           
 28789                           	psect	text182
 28790  008504                     __ptext182:
 28791                           	opt callstack 0
 28792  008504                     _setCodingRate4:
 28793                           	opt callstack 15
 28794                           
 28795                           ; BSR set to: 61
 28796                           ;incstack = 0
 28797                           ;setCodingRate4@denominator stored from wreg
 28798  008504  6E13               	movwf	setCodingRate4@denominator^0,c
 28799                           
 28800                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 28801  008506  0E05               	movlw	5
 28802  008508  6013               	cpfslt	setCodingRate4@denominator^0,c
 28803  00850A  D002               	goto	l15341
 28804                           
 28805                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 28806  00850C  0E05               	movlw	5
 28807  00850E  D004               	goto	L27
 28808  008510                     l15341:
 28809  008510  0E08               	movlw	8
 28810  008512  6413               	cpfsgt	setCodingRate4@denominator^0,c
 28811  008514  D002               	goto	l15345
 28812                           
 28813                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 28814  008516  0E08               	movlw	8
 28815  008518                     L27:
 28816  008518  6E13               	movwf	setCodingRate4@denominator^0,c
 28817  00851A                     l15345:
 28818                           
 28819                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 28820  00851A  5013               	movf	setCodingRate4@denominator^0,w,c
 28821  00851C  0FFC               	addlw	252
 28822  00851E  6E12               	movwf	setCodingRate4@cr^0,c
 28823                           
 28824                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 28825  008520  90D8               	bcf	status,0,c
 28826  008522  3412               	rlcf	setCodingRate4@cr^0,w,c
 28827  008524  6E11               	movwf	??_setCodingRate4^0,c
 28828  008526  0E1D               	movlw	29
 28829  008528  ECDA  F045         	call	_SX1276Read
 28830  00852C  0BF1               	andlw	241
 28831  00852E  1011               	iorwf	??_setCodingRate4^0,w,c
 28832  008530  6E0F               	movwf	SX1276Write@data^0,c
 28833  008532  0E1D               	movlw	29
 28834  008534  ECF8  F045         	call	_SX1276Write
 28835                           
 28836                           ; BSR set to: 61
 28837  008538  0012               	return		;funcret
 28838  00853A                     __end_of_setCodingRate4:
 28839                           	opt callstack 0
 28840                           
 28841 ;; *************** function _receive *****************
 28842 ;; Defined at:
 28843 ;;		line 402 in file "../phy/sx1216/phy_src/phy.c"
 28844 ;; Parameters:    Size  Location     Type
 28845 ;;  size            1    wreg     unsigned char 
 28846 ;; Auto vars:     Size  Location     Type
 28847 ;;  size            1   16[COMRAM] unsigned char 
 28848 ;; Return value:  Size  Location     Type
 28849 ;;                  1    wreg      void 
 28850 ;; Registers used:
 28851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28852 ;; Tracked objects:
 28853 ;;		On entry : 0/3D
 28854 ;;		On exit  : 3F/3D
 28855 ;;		Unchanged: 0/0
 28856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28861 ;;Total ram usage:        1 bytes
 28862 ;; Hardware stack levels used:    1
 28863 ;; Hardware stack levels required when called:   12
 28864 ;; This function calls:
 28865 ;;		_SX1276Write
 28866 ;;		_explicitHeaderMode
 28867 ;;		_implicitHeaderMode
 28868 ;; This function is called by:
 28869 ;;		_initRadio
 28870 ;;		_DIO0_Receive_ISR
 28871 ;;		_radio_engine
 28872 ;;		_PHY_SetRxState
 28873 ;; This function uses a non-reentrant model
 28874 ;;
 28875                           
 28876                           	psect	text183
 28877  0081DA                     __ptext183:
 28878                           	opt callstack 0
 28879  0081DA                     _receive:
 28880                           	opt callstack 14
 28881                           
 28882                           ; BSR set to: 61
 28883                           ;incstack = 0
 28884                           ;receive@size stored from wreg
 28885  0081DA  6E11               	movwf	receive@size^0,c
 28886                           
 28887                           ;../phy/sx1216/phy_src/phy.c: 402: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 403: {;../phy/sx1216/phy_src/phy.c: 404:   if (size > 0) {
 28888  0081DC  5011               	movf	receive@size^0,w,c
 28889  0081DE  B4D8               	btfsc	status,2,c
 28890  0081E0  D009               	goto	l15355
 28891                           
 28892                           ;../phy/sx1216/phy_src/phy.c: 405:     implicitHeaderMode();
 28893  0081E2  EC8A  F045         	call	_implicitHeaderMode	;wreg free
 28894                           
 28895                           ;../phy/sx1216/phy_src/phy.c: 407:     SX1276Write(0x22, size & 0xff);
 28896  0081E6  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 28897  0081EC  0E22               	movlw	34
 28898  0081EE  ECF8  F045         	call	_SX1276Write
 28899                           
 28900                           ;../phy/sx1216/phy_src/phy.c: 408:   } else {
 28901  0081F2  D002               	goto	l2571
 28902  0081F4                     l15355:
 28903                           
 28904                           ;../phy/sx1216/phy_src/phy.c: 409:     explicitHeaderMode();
 28905  0081F4  EC96  F045         	call	_explicitHeaderMode	;wreg free
 28906  0081F8                     l2571:
 28907                           
 28908                           ; BSR set to: 61
 28909                           ;../phy/sx1216/phy_src/phy.c: 412:   SX1276Write(0x0D, 0);
 28910  0081F8  0E00               	movlw	0
 28911  0081FA  6E0F               	movwf	SX1276Write@data^0,c
 28912  0081FC  0E0D               	movlw	13
 28913  0081FE  ECF8  F045         	call	_SX1276Write
 28914                           
 28915                           ;../phy/sx1216/phy_src/phy.c: 413:   SX1276Write(0x12, 0xFF);
 28916  008202  0EFF               	movlw	255
 28917  008204  6E0F               	movwf	SX1276Write@data^0,c
 28918  008206  0E12               	movlw	18
 28919  008208  ECF8  F045         	call	_SX1276Write
 28920                           
 28921                           ;../phy/sx1216/phy_src/phy.c: 414:   SX1276Write(0x01,0x80 | 0x05);
 28922  00820C  0E85               	movlw	133
 28923  00820E  6E0F               	movwf	SX1276Write@data^0,c
 28924  008210  0E01               	movlw	1
 28925  008212  ECF8  F045         	call	_SX1276Write
 28926                           
 28927                           ; BSR set to: 61
 28928  008216  0012               	return		;funcret
 28929  008218                     __end_of_receive:
 28930                           	opt callstack 0
 28931                           
 28932 ;; *************** function _implicitHeaderMode *****************
 28933 ;; Defined at:
 28934 ;;		line 388 in file "../phy/sx1216/phy_src/phy.c"
 28935 ;; Parameters:    Size  Location     Type
 28936 ;;		None
 28937 ;; Auto vars:     Size  Location     Type
 28938 ;;		None
 28939 ;; Return value:  Size  Location     Type
 28940 ;;                  1    wreg      void 
 28941 ;; Registers used:
 28942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28943 ;; Tracked objects:
 28944 ;;		On entry : 0/3D
 28945 ;;		On exit  : 3F/3D
 28946 ;;		Unchanged: 0/0
 28947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28952 ;;Total ram usage:        0 bytes
 28953 ;; Hardware stack levels used:    1
 28954 ;; Hardware stack levels required when called:   11
 28955 ;; This function calls:
 28956 ;;		_SX1276Read
 28957 ;;		_SX1276Write
 28958 ;; This function is called by:
 28959 ;;		_receive
 28960 ;; This function uses a non-reentrant model
 28961 ;;
 28962                           
 28963                           	psect	text184
 28964  008B14                     __ptext184:
 28965                           	opt callstack 0
 28966  008B14                     _implicitHeaderMode:
 28967                           	opt callstack 14
 28968                           
 28969                           ;../phy/sx1216/phy_src/phy.c: 390:   _implicitHeaderMode = 1;
 28970                           
 28971                           ; BSR set to: 61
 28972                           ;incstack = 0
 28973  008B14  0E01               	movlw	1
 28974  008B16  0101               	movlb	1	; () banked
 28975  008B18  6F6C               	movwf	__implicitHeaderMode& (0+255),b
 28976                           
 28977                           ; BSR set to: 1
 28978                           ;../phy/sx1216/phy_src/phy.c: 392:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 28979  008B1A  0E1D               	movlw	29
 28980  008B1C  ECDA  F045         	call	_SX1276Read
 28981  008B20  0901               	iorlw	1
 28982  008B22  6E0F               	movwf	SX1276Write@data^0,c
 28983  008B24  0E1D               	movlw	29
 28984  008B26  ECF8  F045         	call	_SX1276Write
 28985                           
 28986                           ; BSR set to: 61
 28987  008B2A  0012               	return		;funcret
 28988  008B2C                     __end_of_implicitHeaderMode:
 28989                           	opt callstack 0
 28990                           
 28991 ;; *************** function _explicitHeaderMode *****************
 28992 ;; Defined at:
 28993 ;;		line 374 in file "../phy/sx1216/phy_src/phy.c"
 28994 ;; Parameters:    Size  Location     Type
 28995 ;;		None
 28996 ;; Auto vars:     Size  Location     Type
 28997 ;;		None
 28998 ;; Return value:  Size  Location     Type
 28999 ;;                  1    wreg      void 
 29000 ;; Registers used:
 29001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29002 ;; Tracked objects:
 29003 ;;		On entry : 0/3D
 29004 ;;		On exit  : 3F/3D
 29005 ;;		Unchanged: 0/0
 29006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29011 ;;Total ram usage:        0 bytes
 29012 ;; Hardware stack levels used:    1
 29013 ;; Hardware stack levels required when called:   11
 29014 ;; This function calls:
 29015 ;;		_SX1276Read
 29016 ;;		_SX1276Write
 29017 ;; This function is called by:
 29018 ;;		_receive
 29019 ;;		_initRadio
 29020 ;;		_PHY_DataReq
 29021 ;; This function uses a non-reentrant model
 29022 ;;
 29023                           
 29024                           	psect	text185
 29025  008B2C                     __ptext185:
 29026                           	opt callstack 0
 29027  008B2C                     _explicitHeaderMode:
 29028                           	opt callstack 14
 29029                           
 29030                           ;../phy/sx1216/phy_src/phy.c: 376:   _implicitHeaderMode = 0;
 29031                           
 29032                           ; BSR set to: 61
 29033                           ;incstack = 0
 29034  008B2C  0E00               	movlw	0
 29035  008B2E  0101               	movlb	1	; () banked
 29036  008B30  6F6C               	movwf	__implicitHeaderMode& (0+255),b
 29037                           
 29038                           ; BSR set to: 1
 29039                           ;../phy/sx1216/phy_src/phy.c: 378:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 29040  008B32  0E1D               	movlw	29
 29041  008B34  ECDA  F045         	call	_SX1276Read
 29042  008B38  0BFE               	andlw	254
 29043  008B3A  6E0F               	movwf	SX1276Write@data^0,c
 29044  008B3C  0E1D               	movlw	29
 29045  008B3E  ECF8  F045         	call	_SX1276Write
 29046                           
 29047                           ; BSR set to: 61
 29048  008B42  0012               	return		;funcret
 29049  008B44                     __end_of_explicitHeaderMode:
 29050                           	opt callstack 0
 29051                           
 29052 ;; *************** function _enableCrc *****************
 29053 ;; Defined at:
 29054 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 29055 ;; Parameters:    Size  Location     Type
 29056 ;;		None
 29057 ;; Auto vars:     Size  Location     Type
 29058 ;;		None
 29059 ;; Return value:  Size  Location     Type
 29060 ;;                  1    wreg      void 
 29061 ;; Registers used:
 29062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29063 ;; Tracked objects:
 29064 ;;		On entry : 3F/3D
 29065 ;;		On exit  : 3F/3D
 29066 ;;		Unchanged: 0/0
 29067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29072 ;;Total ram usage:        0 bytes
 29073 ;; Hardware stack levels used:    1
 29074 ;; Hardware stack levels required when called:   11
 29075 ;; This function calls:
 29076 ;;		_SX1276Read
 29077 ;;		_SX1276Write
 29078 ;; This function is called by:
 29079 ;;		_initRadio
 29080 ;; This function uses a non-reentrant model
 29081 ;;
 29082                           
 29083                           	psect	text186
 29084  008BDE                     __ptext186:
 29085                           	opt callstack 0
 29086  008BDE                     _enableCrc:
 29087                           	opt callstack 15
 29088                           
 29089                           ; BSR set to: 61
 29090                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 29091                           
 29092                           ; BSR set to: 61
 29093                           ;incstack = 0
 29094  008BDE  0E1E               	movlw	30
 29095  008BE0  ECDA  F045         	call	_SX1276Read
 29096  008BE4  0904               	iorlw	4
 29097  008BE6  6E0F               	movwf	SX1276Write@data^0,c
 29098  008BE8  0E1E               	movlw	30
 29099  008BEA  ECF8  F045         	call	_SX1276Write
 29100                           
 29101                           ; BSR set to: 61
 29102  008BEE  0012               	return		;funcret
 29103  008BF0                     __end_of_enableCrc:
 29104                           	opt callstack 0
 29105                           
 29106 ;; *************** function _SX1276Write *****************
 29107 ;; Defined at:
 29108 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 29109 ;; Parameters:    Size  Location     Type
 29110 ;;  addr            1    wreg     unsigned char 
 29111 ;;  data            1   14[COMRAM] unsigned char 
 29112 ;; Auto vars:     Size  Location     Type
 29113 ;;  addr            1   15[COMRAM] unsigned char 
 29114 ;; Return value:  Size  Location     Type
 29115 ;;                  1    wreg      void 
 29116 ;; Registers used:
 29117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29118 ;; Tracked objects:
 29119 ;;		On entry : 0/0
 29120 ;;		On exit  : 3F/3D
 29121 ;;		Unchanged: 0/0
 29122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29127 ;;Total ram usage:        2 bytes
 29128 ;; Hardware stack levels used:    1
 29129 ;; Hardware stack levels required when called:   10
 29130 ;; This function calls:
 29131 ;;		_SX1276WriteBuffer
 29132 ;; This function is called by:
 29133 ;;		_idle
 29134 ;;		_setTxPower
 29135 ;;		_setFrequency
 29136 ;;		_setSpreadingFactor
 29137 ;;		_setSignalBandwidth
 29138 ;;		_setCodingRate4
 29139 ;;		_setPreambleLength
 29140 ;;		_setSyncWord
 29141 ;;		_enableCrc
 29142 ;;		_explicitHeaderMode
 29143 ;;		_implicitHeaderMode
 29144 ;;		_receive
 29145 ;;		_initRadio
 29146 ;;		_cad
 29147 ;;		_start_radio_cad
 29148 ;;		_DIO0_Receive_ISR
 29149 ;;		_PHY_DataReq
 29150 ;; This function uses a non-reentrant model
 29151 ;;
 29152                           
 29153                           	psect	text187
 29154  008BF0                     __ptext187:
 29155                           	opt callstack 0
 29156  008BF0                     _SX1276Write:
 29157                           	opt callstack 15
 29158                           
 29159                           ; BSR set to: 61
 29160                           ;incstack = 0
 29161                           ;SX1276Write@addr stored from wreg
 29162  008BF0  6E10               	movwf	SX1276Write@addr^0,c
 29163                           
 29164                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 29165  008BF2  0E0F               	movlw	low SX1276Write@data
 29166  008BF4  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 29167  008BF6  0E01               	movlw	1
 29168  008BF8  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 29169  008BFA  5010               	movf	SX1276Write@addr^0,w,c
 29170  008BFC  EC06  F044         	call	_SX1276WriteBuffer
 29171                           
 29172                           ; BSR set to: 61
 29173  008C00  0012               	return		;funcret
 29174  008C02                     __end_of_SX1276Write:
 29175                           	opt callstack 0
 29176                           
 29177 ;; *************** function _SX1276WriteBuffer *****************
 29178 ;; Defined at:
 29179 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 29180 ;; Parameters:    Size  Location     Type
 29181 ;;  addr            1    wreg     unsigned char 
 29182 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 29183 ;;		 -> SX1276Write@data(1), 
 29184 ;;  size            1    9[COMRAM] unsigned char 
 29185 ;; Auto vars:     Size  Location     Type
 29186 ;;  addr            1   10[COMRAM] unsigned char 
 29187 ;;  i               1    0        unsigned char 
 29188 ;; Return value:  Size  Location     Type
 29189 ;;                  1    wreg      void 
 29190 ;; Registers used:
 29191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29192 ;; Tracked objects:
 29193 ;;		On entry : 0/0
 29194 ;;		On exit  : 3F/3D
 29195 ;;		Unchanged: 0/0
 29196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29200 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29201 ;;Total ram usage:        3 bytes
 29202 ;; Hardware stack levels used:    1
 29203 ;; Hardware stack levels required when called:    9
 29204 ;; This function calls:
 29205 ;;		_SPI1_ExchangeByte
 29206 ;;		_SPI1_WriteBlock
 29207 ;; This function is called by:
 29208 ;;		_SX1276Write
 29209 ;; This function uses a non-reentrant model
 29210 ;;
 29211                           
 29212                           	psect	text188
 29213  00880C                     __ptext188:
 29214                           	opt callstack 0
 29215  00880C                     _SX1276WriteBuffer:
 29216                           	opt callstack 15
 29217                           
 29218                           ; BSR set to: 61
 29219                           ;incstack = 0
 29220                           ;SX1276WriteBuffer@addr stored from wreg
 29221  00880C  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 29222                           
 29223                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 29224  00880E  9CBC               	bcf	188,6,c	;volatile
 29225                           
 29226                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 29227  008810  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 29228  008812  0980               	iorlw	128
 29229  008814  EC70  F045         	call	_SPI1_ExchangeByte
 29230                           
 29231                           ; BSR set to: 61
 29232                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 29233  008818  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 29234  00881E  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 29235  008820  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 29236  008826  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 29237  008828  EC9D  F042         	call	_SPI1_WriteBlock	;wreg free
 29238                           
 29239                           ; BSR set to: 61
 29240  00882C  8CBC               	bsf	188,6,c	;volatile
 29241                           
 29242                           ; BSR set to: 61
 29243  00882E  0012               	return		;funcret
 29244  008830                     __end_of_SX1276WriteBuffer:
 29245                           	opt callstack 0
 29246                           
 29247 ;; *************** function _SPI1_WriteBlock *****************
 29248 ;; Defined at:
 29249 ;;		line 121 in file "mcc_generated_files/spi1.c"
 29250 ;; Parameters:    Size  Location     Type
 29251 ;;  block           2    2[COMRAM] PTR void 
 29252 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29253 ;;  blockSize       2    4[COMRAM] unsigned int 
 29254 ;; Auto vars:     Size  Location     Type
 29255 ;;  data            2    6[COMRAM] PTR unsigned char 
 29256 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29257 ;; Return value:  Size  Location     Type
 29258 ;;                  1    wreg      void 
 29259 ;; Registers used:
 29260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29261 ;; Tracked objects:
 29262 ;;		On entry : 3F/3D
 29263 ;;		On exit  : 3F/3D
 29264 ;;		Unchanged: 0/0
 29265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29269 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29270 ;;Total ram usage:        6 bytes
 29271 ;; Hardware stack levels used:    1
 29272 ;; Hardware stack levels required when called:    8
 29273 ;; This function calls:
 29274 ;;		_SPI1_ExchangeByte
 29275 ;; This function is called by:
 29276 ;;		_SX1276WriteBuffer
 29277 ;;		_PHY_DataReq
 29278 ;; This function uses a non-reentrant model
 29279 ;;
 29280                           
 29281                           	psect	text189
 29282  00853A                     __ptext189:
 29283                           	opt callstack 0
 29284  00853A                     _SPI1_WriteBlock:
 29285                           	opt callstack 15
 29286                           
 29287                           ; BSR set to: 61
 29288                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 29289                           
 29290                           ; BSR set to: 61
 29291                           ;incstack = 0
 29292  00853A  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 29293  008540  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 29294                           
 29295                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29296  008546  D00B               	goto	l9481
 29297  008548                     l9477:
 29298                           
 29299                           ; BSR set to: 61
 29300                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 29301  008548  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 29302  00854E  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 29303  008554  50DF               	movf	indf2,w,c
 29304  008556  EC70  F045         	call	_SPI1_ExchangeByte
 29305                           
 29306                           ; BSR set to: 61
 29307  00855A  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 29308  00855C  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 29309  00855E                     l9481:
 29310                           
 29311                           ; BSR set to: 61
 29312                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29313  00855E  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 29314  008560  A0D8               	btfss	status,0,c
 29315  008562  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 29316  008564  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 29317  008566  E1F0               	bnz	l9477
 29318  008568  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 29319  00856A  B4D8               	btfsc	status,2,c
 29320  00856C  0012               	return	
 29321  00856E  D7EC               	goto	l9477
 29322  008570                     __end_of_SPI1_WriteBlock:
 29323                           	opt callstack 0
 29324                           
 29325 ;; *************** function _SX1276Read *****************
 29326 ;; Defined at:
 29327 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 29328 ;; Parameters:    Size  Location     Type
 29329 ;;  addr            1    wreg     unsigned char 
 29330 ;; Auto vars:     Size  Location     Type
 29331 ;;  addr            1   12[COMRAM] unsigned char 
 29332 ;;  data            1   13[COMRAM] unsigned char 
 29333 ;; Return value:  Size  Location     Type
 29334 ;;                  1    wreg      unsigned char 
 29335 ;; Registers used:
 29336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29337 ;; Tracked objects:
 29338 ;;		On entry : 0/39
 29339 ;;		On exit  : 3F/3D
 29340 ;;		Unchanged: 0/0
 29341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29346 ;;Total ram usage:        2 bytes
 29347 ;; Hardware stack levels used:    1
 29348 ;; Hardware stack levels required when called:   10
 29349 ;; This function calls:
 29350 ;;		_SX1276ReadBuffer
 29351 ;; This function is called by:
 29352 ;;		_setSpreadingFactor
 29353 ;;		_setSignalBandwidth
 29354 ;;		_getSpreadingFactor
 29355 ;;		_getSignalBandwidth
 29356 ;;		_setCodingRate4
 29357 ;;		_enableCrc
 29358 ;;		_explicitHeaderMode
 29359 ;;		_implicitHeaderMode
 29360 ;;		_initRadio
 29361 ;;		_cad
 29362 ;;		_DIO0_Receive_ISR
 29363 ;;		_radio_engine
 29364 ;; This function uses a non-reentrant model
 29365 ;;
 29366                           
 29367                           	psect	text190
 29368  008BB4                     __ptext190:
 29369                           	opt callstack 0
 29370  008BB4                     _SX1276Read:
 29371                           	opt callstack 14
 29372                           
 29373                           ; BSR set to: 61
 29374                           ;incstack = 0
 29375                           ;SX1276Read@addr stored from wreg
 29376  008BB4  6E0D               	movwf	SX1276Read@addr^0,c
 29377                           
 29378                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 29379  008BB6  0E0E               	movlw	low SX1276Read@data
 29380  008BB8  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 29381  008BBA  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 29382  008BBC  0E01               	movlw	1
 29383  008BBE  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 29384  008BC0  500D               	movf	SX1276Read@addr^0,w,c
 29385  008BC2  ECCD  F043         	call	_SX1276ReadBuffer
 29386                           
 29387                           ; BSR set to: 61
 29388                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 29389  008BC6  500E               	movf	SX1276Read@data^0,w,c
 29390                           
 29391                           ; BSR set to: 61
 29392  008BC8  0012               	return		;funcret
 29393  008BCA                     __end_of_SX1276Read:
 29394                           	opt callstack 0
 29395                           
 29396 ;; *************** function _SX1276ReadBuffer *****************
 29397 ;; Defined at:
 29398 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 29399 ;; Parameters:    Size  Location     Type
 29400 ;;  addr            1    wreg     unsigned char 
 29401 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 29402 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29403 ;;  size            1   10[COMRAM] unsigned char 
 29404 ;; Auto vars:     Size  Location     Type
 29405 ;;  addr            1   11[COMRAM] unsigned char 
 29406 ;;  i               1    0        unsigned char 
 29407 ;; Return value:  Size  Location     Type
 29408 ;;                  1    wreg      void 
 29409 ;; Registers used:
 29410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29411 ;; Tracked objects:
 29412 ;;		On entry : 0/3D
 29413 ;;		On exit  : 3F/3D
 29414 ;;		Unchanged: 0/0
 29415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29416 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29420 ;;Total ram usage:        4 bytes
 29421 ;; Hardware stack levels used:    1
 29422 ;; Hardware stack levels required when called:    9
 29423 ;; This function calls:
 29424 ;;		_SPI1_ExchangeByte
 29425 ;;		_SPI1_ReadBlock
 29426 ;; This function is called by:
 29427 ;;		_SX1276Read
 29428 ;;		_DIO0_Receive_ISR
 29429 ;; This function uses a non-reentrant model
 29430 ;;
 29431                           
 29432                           	psect	text191
 29433  00879A                     __ptext191:
 29434                           	opt callstack 0
 29435  00879A                     _SX1276ReadBuffer:
 29436                           	opt callstack 14
 29437                           
 29438                           ; BSR set to: 61
 29439                           ;incstack = 0
 29440                           ;SX1276ReadBuffer@addr stored from wreg
 29441  00879A  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 29442                           
 29443                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 29444  00879C  9CBC               	bcf	188,6,c	;volatile
 29445                           
 29446                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 29447  00879E  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 29448  0087A0  0B7F               	andlw	127
 29449  0087A2  EC70  F045         	call	_SPI1_ExchangeByte
 29450                           
 29451                           ; BSR set to: 61
 29452                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 29453  0087A6  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 29454  0087AC  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 29455  0087B2  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 29456  0087B8  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 29457  0087BA  EC30  F042         	call	_SPI1_ReadBlock	;wreg free
 29458                           
 29459                           ; BSR set to: 61
 29460  0087BE  8CBC               	bsf	188,6,c	;volatile
 29461                           
 29462                           ; BSR set to: 61
 29463  0087C0  0012               	return		;funcret
 29464  0087C2                     __end_of_SX1276ReadBuffer:
 29465                           	opt callstack 0
 29466                           
 29467 ;; *************** function _SPI1_ReadBlock *****************
 29468 ;; Defined at:
 29469 ;;		line 130 in file "mcc_generated_files/spi1.c"
 29470 ;; Parameters:    Size  Location     Type
 29471 ;;  block           2    2[COMRAM] PTR void 
 29472 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29473 ;;  blockSize       2    4[COMRAM] unsigned int 
 29474 ;; Auto vars:     Size  Location     Type
 29475 ;;  data            2    6[COMRAM] PTR unsigned char 
 29476 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29477 ;; Return value:  Size  Location     Type
 29478 ;;                  1    wreg      void 
 29479 ;; Registers used:
 29480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29481 ;; Tracked objects:
 29482 ;;		On entry : 3F/3D
 29483 ;;		On exit  : 3F/3D
 29484 ;;		Unchanged: 0/0
 29485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29490 ;;Total ram usage:        6 bytes
 29491 ;; Hardware stack levels used:    1
 29492 ;; Hardware stack levels required when called:    8
 29493 ;; This function calls:
 29494 ;;		_SPI1_ExchangeByte
 29495 ;; This function is called by:
 29496 ;;		_SX1276ReadBuffer
 29497 ;; This function uses a non-reentrant model
 29498 ;;
 29499                           
 29500                           	psect	text192
 29501  008460                     __ptext192:
 29502                           	opt callstack 0
 29503  008460                     _SPI1_ReadBlock:
 29504                           	opt callstack 14
 29505                           
 29506                           ; BSR set to: 61
 29507                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 29508                           
 29509                           ; BSR set to: 61
 29510                           ;incstack = 0
 29511  008460  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 29512  008466  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 29513                           
 29514                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29515  00846C  D00C               	goto	l14323
 29516  00846E                     l14319:
 29517                           
 29518                           ; BSR set to: 61
 29519                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 29520  00846E  0E00               	movlw	0
 29521  008470  EC70  F045         	call	_SPI1_ExchangeByte
 29522  008474  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 29523  00847A  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 29524  008480  6EDF               	movwf	indf2,c
 29525                           
 29526                           ; BSR set to: 61
 29527  008482  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 29528  008484  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 29529  008486                     l14323:
 29530                           
 29531                           ; BSR set to: 61
 29532                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29533  008486  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 29534  008488  A0D8               	btfss	status,0,c
 29535  00848A  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 29536  00848C  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 29537  00848E  E1EF               	bnz	l14319
 29538  008490  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 29539  008492  B4D8               	btfsc	status,2,c
 29540  008494  0012               	return	
 29541  008496  D7EB               	goto	l14319
 29542  008498                     __end_of_SPI1_ReadBlock:
 29543                           	opt callstack 0
 29544                           
 29545 ;; *************** function _SPI1_ExchangeByte *****************
 29546 ;; Defined at:
 29547 ;;		line 100 in file "mcc_generated_files/spi1.c"
 29548 ;; Parameters:    Size  Location     Type
 29549 ;;  data            1    wreg     unsigned char 
 29550 ;; Auto vars:     Size  Location     Type
 29551 ;;  data            1    1[COMRAM] unsigned char 
 29552 ;; Return value:  Size  Location     Type
 29553 ;;                  1    wreg      unsigned char 
 29554 ;; Registers used:
 29555 ;;		wreg, status,2
 29556 ;; Tracked objects:
 29557 ;;		On entry : 0/3D
 29558 ;;		On exit  : 3F/3D
 29559 ;;		Unchanged: 0/0
 29560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29565 ;;Total ram usage:        1 bytes
 29566 ;; Hardware stack levels used:    1
 29567 ;; Hardware stack levels required when called:    7
 29568 ;; This function calls:
 29569 ;;		Nothing
 29570 ;; This function is called by:
 29571 ;;		_SPI1_WriteBlock
 29572 ;;		_SPI1_ReadBlock
 29573 ;;		_SX1276ReadBuffer
 29574 ;;		_SX1276WriteBuffer
 29575 ;;		_PHY_DataReq
 29576 ;; This function uses a non-reentrant model
 29577 ;;
 29578                           
 29579                           	psect	text193
 29580  008AE0                     __ptext193:
 29581                           	opt callstack 0
 29582  008AE0                     _SPI1_ExchangeByte:
 29583                           	opt callstack 15
 29584                           
 29585                           ; BSR set to: 61
 29586                           ;incstack = 0
 29587                           ;SPI1_ExchangeByte@data stored from wreg
 29588  008AE0  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 29589                           
 29590                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 29591  008AE2  0E01               	movlw	1
 29592  008AE4  013D               	movlb	61	; () banked
 29593  008AE6  6F12               	movwf	18,b	;volatile
 29594                           
 29595                           ; BSR set to: 61
 29596                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 29597  008AE8  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 29598  008AEE                     l1040:
 29599  008AEE  0139               	movlb	57	; () banked
 29600  008AF0  A9A2               	btfss	162,4,b	;volatile
 29601  008AF2  D7FD               	goto	l1040
 29602                           
 29603                           ; BSR set to: 57
 29604                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 29605  008AF4  013D               	movlb	61	; () banked
 29606  008AF6  5110               	movf	16,w,b	;volatile
 29607                           
 29608                           ; BSR set to: 61
 29609  008AF8  0012               	return		;funcret
 29610  008AFA                     __end_of_SPI1_ExchangeByte:
 29611                           	opt callstack 0
 29612                           
 29613 ;; *************** function _computeFRF *****************
 29614 ;; Defined at:
 29615 ;;		line 705 in file "../phy/sx1216/phy_src/phy.c"
 29616 ;; Parameters:    Size  Location     Type
 29617 ;;		None
 29618 ;; Auto vars:     Size  Location     Type
 29619 ;;  num             4   42[COMRAM] unsigned long 
 29620 ;;  num_mod         4   38[COMRAM] unsigned long 
 29621 ;;  frequency       4   34[COMRAM] unsigned long 
 29622 ;;  i               1   46[COMRAM] unsigned char 
 29623 ;; Return value:  Size  Location     Type
 29624 ;;                  1    wreg      void 
 29625 ;; Registers used:
 29626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29627 ;; Tracked objects:
 29628 ;;		On entry : 0/0
 29629 ;;		On exit  : 0/0
 29630 ;;		Unchanged: 0/0
 29631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29633 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29635 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29636 ;;Total ram usage:       13 bytes
 29637 ;; Hardware stack levels used:    1
 29638 ;; Hardware stack levels required when called:    8
 29639 ;; This function calls:
 29640 ;;		___lldiv
 29641 ;;		___llmod
 29642 ;; This function is called by:
 29643 ;;		_initRadio
 29644 ;; This function uses a non-reentrant model
 29645 ;;
 29646                           
 29647                           	psect	text194
 29648  003A50                     __ptext194:
 29649                           	opt callstack 0
 29650  003A50                     _computeFRF:
 29651                           	opt callstack 18
 29652                           
 29653                           ;../phy/sx1216/phy_src/phy.c: 707:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 29654                           
 29655                           ; BSR set to: 61
 29656                           ;incstack = 0
 29657  003A50  0E00               	movlw	0
 29658  003A52  6E2F               	movwf	computeFRF@i^0,c
 29659  003A54                     l11149:
 29660                           
 29661                           ;../phy/sx1216/phy_src/phy.c: 708:     {;../phy/sx1216/phy_src/phy.c: 709:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 710:         frequency = fhssL
      +                          ist[i];
 29662  003A54  502F               	movf	computeFRF@i^0,w,c
 29663  003A56  0D04               	mullw	4
 29664  003A58  0EC9               	movlw	low _fhssList
 29665  003A5A  24F3               	addwf	243,w,c
 29666  003A5C  6EF6               	movwf	tblptrl,c
 29667  003A5E  0EFC               	movlw	high _fhssList
 29668  003A60  20F4               	addwfc	244,w,c
 29669  003A62  6EF7               	movwf	tblptrh,c
 29670  003A64                     	if	1	;There are 3 active tblptr bytes
 29671  003A64  6AF8               	clrf	tblptru,c
 29672  003A66  0E00               	movlw	low (__mediumconst shr (0+16))
 29673  003A68  22F8               	addwfc	tblptru,f,c
 29674  003A6A                     	endif
 29675  003A6A  0009               	tblrd		*+
 29676  003A6C  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 29677  003A72  0009               	tblrd		*+
 29678  003A74  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 29679  003A7A  0009               	tblrd		*+
 29680  003A7C  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 29681  003A82  000A               	tblrd		*-
 29682  003A84  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 29683                           
 29684                           ;../phy/sx1216/phy_src/phy.c: 717:         num = frequency / 15625;
 29685  003A8A  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 29686  003A90  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 29687  003A96  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 29688  003A9C  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 29689  003AA2  0E09               	movlw	9
 29690  003AA4  6E1A               	movwf	___lldiv@divisor^0,c
 29691  003AA6  0E3D               	movlw	61
 29692  003AA8  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29693  003AAA  0E00               	movlw	0
 29694  003AAC  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29695  003AAE  0E00               	movlw	0
 29696  003AB0  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29697  003AB2  ECDA  F037         	call	___lldiv	;wreg free
 29698  003AB6  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 29699  003ABC  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 29700  003AC2  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 29701  003AC8  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 29702                           
 29703                           ;../phy/sx1216/phy_src/phy.c: 718:         num_mod = frequency % 15625;
 29704  003ACE  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 29705  003AD4  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 29706  003ADA  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 29707  003AE0  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 29708  003AE6  0E09               	movlw	9
 29709  003AE8  6E06               	movwf	___llmod@divisor^0,c
 29710  003AEA  0E3D               	movlw	61
 29711  003AEC  6E07               	movwf	(___llmod@divisor+1)^0,c
 29712  003AEE  0E00               	movlw	0
 29713  003AF0  6E08               	movwf	(___llmod@divisor+2)^0,c
 29714  003AF2  0E00               	movlw	0
 29715  003AF4  6E09               	movwf	(___llmod@divisor+3)^0,c
 29716  003AF6  EC20  F03A         	call	___llmod	;wreg free
 29717  003AFA  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 29718  003B00  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 29719  003B06  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 29720  003B0C  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 29721                           
 29722                           ;../phy/sx1216/phy_src/phy.c: 722:         num <<= 8;
 29723  003B12  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 29724  003B18  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 29725  003B1E  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 29726  003B24  6A2B               	clrf	computeFRF@num^0,c
 29727                           
 29728                           ;../phy/sx1216/phy_src/phy.c: 723:         num_mod <<= 8;
 29729  003B26  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 29730  003B2C  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 29731  003B32  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 29732  003B38  6A27               	clrf	computeFRF@num_mod^0,c
 29733                           
 29734                           ;../phy/sx1216/phy_src/phy.c: 727:         num_mod = num_mod / 15625;
 29735  003B3A  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 29736  003B40  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 29737  003B46  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 29738  003B4C  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 29739  003B52  0E09               	movlw	9
 29740  003B54  6E1A               	movwf	___lldiv@divisor^0,c
 29741  003B56  0E3D               	movlw	61
 29742  003B58  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29743  003B5A  0E00               	movlw	0
 29744  003B5C  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29745  003B5E  0E00               	movlw	0
 29746  003B60  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29747  003B62  ECDA  F037         	call	___lldiv	;wreg free
 29748  003B66  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 29749  003B6C  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 29750  003B72  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 29751  003B78  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 29752                           
 29753                           ;../phy/sx1216/phy_src/phy.c: 728:         num += num_mod;
 29754  003B7E  5027               	movf	computeFRF@num_mod^0,w,c
 29755  003B80  262B               	addwf	computeFRF@num^0,f,c
 29756  003B82  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 29757  003B84  222C               	addwfc	(computeFRF@num+1)^0,f,c
 29758  003B86  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 29759  003B88  222D               	addwfc	(computeFRF@num+2)^0,f,c
 29760  003B8A  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 29761  003B8C  222E               	addwfc	(computeFRF@num+3)^0,f,c
 29762                           
 29763                           ;../phy/sx1216/phy_src/phy.c: 730:         fhssReg[i][0] = (num >> 16);
 29764  003B8E  502F               	movf	computeFRF@i^0,w,c
 29765  003B90  0D03               	mullw	3
 29766  003B92  0E00               	movlw	low _fhssReg
 29767  003B94  24F3               	addwf	243,w,c
 29768  003B96  6ED9               	movwf	fsr2l,c
 29769  003B98  0E05               	movlw	high _fhssReg
 29770  003B9A  20F4               	addwfc	prodh,w,c
 29771  003B9C  6EDA               	movwf	fsr2h,c
 29772  003B9E  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 29773                           
 29774                           ;../phy/sx1216/phy_src/phy.c: 731:         fhssReg[i][1] = (num >> 8);
 29775  003BA4  502F               	movf	computeFRF@i^0,w,c
 29776  003BA6  0D03               	mullw	3
 29777  003BA8  0E01               	movlw	low (_fhssReg+1)
 29778  003BAA  24F3               	addwf	243,w,c
 29779  003BAC  6ED9               	movwf	fsr2l,c
 29780  003BAE  0E05               	movlw	high (_fhssReg+1)
 29781  003BB0  20F4               	addwfc	prodh,w,c
 29782  003BB2  6EDA               	movwf	fsr2h,c
 29783  003BB4  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 29784                           
 29785                           ;../phy/sx1216/phy_src/phy.c: 732:         fhssReg[i][2] = (num);
 29786  003BBA  502F               	movf	computeFRF@i^0,w,c
 29787  003BBC  0D03               	mullw	3
 29788  003BBE  0E02               	movlw	low (_fhssReg+2)
 29789  003BC0  24F3               	addwf	243,w,c
 29790  003BC2  6ED9               	movwf	fsr2l,c
 29791  003BC4  0E05               	movlw	high (_fhssReg+2)
 29792  003BC6  20F4               	addwfc	prodh,w,c
 29793  003BC8  6EDA               	movwf	fsr2h,c
 29794  003BCA  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 29795                           
 29796                           ;../phy/sx1216/phy_src/phy.c: 733:     }
 29797  003BD0  2A2F               	incf	computeFRF@i^0,f,c
 29798  003BD2  0E3E               	movlw	62
 29799  003BD4  642F               	cpfsgt	computeFRF@i^0,c
 29800  003BD6  D73E               	goto	l11149
 29801  003BD8  0012               	return	
 29802  003BDA                     __end_of_computeFRF:
 29803                           	opt callstack 0
 29804                           
 29805 ;; *************** function ___llmod *****************
 29806 ;; Defined at:
 29807 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 29808 ;; Parameters:    Size  Location     Type
 29809 ;;  dividend        4    1[COMRAM] unsigned long 
 29810 ;;  divisor         4    5[COMRAM] unsigned long 
 29811 ;; Auto vars:     Size  Location     Type
 29812 ;;  counter         1    9[COMRAM] unsigned char 
 29813 ;; Return value:  Size  Location     Type
 29814 ;;                  4    1[COMRAM] unsigned long 
 29815 ;; Registers used:
 29816 ;;		wreg, status,2, status,0
 29817 ;; Tracked objects:
 29818 ;;		On entry : 0/0
 29819 ;;		On exit  : 0/0
 29820 ;;		Unchanged: 0/0
 29821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29822 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29825 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29826 ;;Total ram usage:        9 bytes
 29827 ;; Hardware stack levels used:    1
 29828 ;; Hardware stack levels required when called:    7
 29829 ;; This function calls:
 29830 ;;		Nothing
 29831 ;; This function is called by:
 29832 ;;		_setFrequency
 29833 ;;		_computeFRF
 29834 ;; This function uses a non-reentrant model
 29835 ;;
 29836                           
 29837                           	psect	text195
 29838  007440                     __ptext195:
 29839                           	opt callstack 0
 29840  007440                     ___llmod:
 29841                           	opt callstack 18
 29842                           
 29843                           ;incstack = 0
 29844  007440  5006               	movf	___llmod@divisor^0,w,c
 29845  007442  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 29846  007444  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 29847  007446  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 29848  007448  B4D8               	btfsc	status,2,c
 29849  00744A  D024               	goto	l3616
 29850  00744C  0E01               	movlw	1
 29851  00744E  6E0A               	movwf	___llmod@counter^0,c
 29852  007450  D006               	goto	l10593
 29853  007452                     l10591:
 29854  007452  90D8               	bcf	status,0,c
 29855  007454  3606               	rlcf	___llmod@divisor^0,f,c
 29856  007456  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 29857  007458  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 29858  00745A  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 29859  00745C  2A0A               	incf	___llmod@counter^0,f,c
 29860  00745E                     l10593:
 29861  00745E  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 29862  007460  D7F8               	goto	l10591
 29863  007462                     u8910:
 29864  007462  5006               	movf	___llmod@divisor^0,w,c
 29865  007464  5C02               	subwf	___llmod@dividend^0,w,c
 29866  007466  5007               	movf	(___llmod@divisor+1)^0,w,c
 29867  007468  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 29868  00746A  5008               	movf	(___llmod@divisor+2)^0,w,c
 29869  00746C  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 29870  00746E  5009               	movf	(___llmod@divisor+3)^0,w,c
 29871  007470  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 29872  007472  A0D8               	btfss	status,0,c
 29873  007474  D008               	goto	l10599
 29874  007476  5006               	movf	___llmod@divisor^0,w,c
 29875  007478  5E02               	subwf	___llmod@dividend^0,f,c
 29876  00747A  5007               	movf	(___llmod@divisor+1)^0,w,c
 29877  00747C  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 29878  00747E  5008               	movf	(___llmod@divisor+2)^0,w,c
 29879  007480  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 29880  007482  5009               	movf	(___llmod@divisor+3)^0,w,c
 29881  007484  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 29882  007486                     l10599:
 29883  007486  90D8               	bcf	status,0,c
 29884  007488  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 29885  00748A  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 29886  00748C  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 29887  00748E  3206               	rrcf	___llmod@divisor^0,f,c
 29888  007490  2E0A               	decfsz	___llmod@counter^0,f,c
 29889  007492  D7E7               	goto	u8910
 29890  007494                     l3616:
 29891  007494  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 29892  00749A  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 29893  0074A0  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 29894  0074A6  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 29895  0074AC  0012               	return		;funcret
 29896  0074AE                     __end_of___llmod:
 29897                           	opt callstack 0
 29898                           
 29899 ;; *************** function ___lldiv *****************
 29900 ;; Defined at:
 29901 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 29902 ;; Parameters:    Size  Location     Type
 29903 ;;  dividend        4   21[COMRAM] unsigned long 
 29904 ;;  divisor         4   25[COMRAM] unsigned long 
 29905 ;; Auto vars:     Size  Location     Type
 29906 ;;  quotient        4   29[COMRAM] unsigned long 
 29907 ;;  counter         1   33[COMRAM] unsigned char 
 29908 ;; Return value:  Size  Location     Type
 29909 ;;                  4   21[COMRAM] unsigned long 
 29910 ;; Registers used:
 29911 ;;		wreg, status,2, status,0
 29912 ;; Tracked objects:
 29913 ;;		On entry : 0/3D
 29914 ;;		On exit  : 0/0
 29915 ;;		Unchanged: 0/0
 29916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29917 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29918 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29920 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29921 ;;Total ram usage:       13 bytes
 29922 ;; Hardware stack levels used:    1
 29923 ;; Hardware stack levels required when called:    7
 29924 ;; This function calls:
 29925 ;;		Nothing
 29926 ;; This function is called by:
 29927 ;;		_setFrequency
 29928 ;;		_setSpreadingFactor
 29929 ;;		_setSignalBandwidth
 29930 ;;		_computeFRF
 29931 ;; This function uses a non-reentrant model
 29932 ;;
 29933                           
 29934                           	psect	text196
 29935  006FB4                     __ptext196:
 29936                           	opt callstack 0
 29937  006FB4                     ___lldiv:
 29938                           	opt callstack 18
 29939                           
 29940                           ;incstack = 0
 29941  006FB4  0E00               	movlw	0
 29942  006FB6  6E1E               	movwf	___lldiv@quotient^0,c
 29943  006FB8  0E00               	movlw	0
 29944  006FBA  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 29945  006FBC  0E00               	movlw	0
 29946  006FBE  6E20               	movwf	(___lldiv@quotient+2)^0,c
 29947  006FC0  0E00               	movlw	0
 29948  006FC2  6E21               	movwf	(___lldiv@quotient+3)^0,c
 29949  006FC4  501A               	movf	___lldiv@divisor^0,w,c
 29950  006FC6  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 29951  006FC8  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 29952  006FCA  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 29953  006FCC  B4D8               	btfsc	status,2,c
 29954  006FCE  D02A               	goto	l3223
 29955  006FD0  0E01               	movlw	1
 29956  006FD2  6E22               	movwf	___lldiv@counter^0,c
 29957  006FD4  D006               	goto	l10175
 29958  006FD6                     l10173:
 29959  006FD6  90D8               	bcf	status,0,c
 29960  006FD8  361A               	rlcf	___lldiv@divisor^0,f,c
 29961  006FDA  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 29962  006FDC  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 29963  006FDE  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 29964  006FE0  2A22               	incf	___lldiv@counter^0,f,c
 29965  006FE2                     l10175:
 29966  006FE2  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 29967  006FE4  D7F8               	goto	l10173
 29968  006FE6                     u8190:
 29969  006FE6  90D8               	bcf	status,0,c
 29970  006FE8  361E               	rlcf	___lldiv@quotient^0,f,c
 29971  006FEA  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 29972  006FEC  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 29973  006FEE  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 29974  006FF0  501A               	movf	___lldiv@divisor^0,w,c
 29975  006FF2  5C16               	subwf	___lldiv@dividend^0,w,c
 29976  006FF4  501B               	movf	(___lldiv@divisor+1)^0,w,c
 29977  006FF6  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 29978  006FF8  501C               	movf	(___lldiv@divisor+2)^0,w,c
 29979  006FFA  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 29980  006FFC  501D               	movf	(___lldiv@divisor+3)^0,w,c
 29981  006FFE  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 29982  007000  A0D8               	btfss	status,0,c
 29983  007002  D009               	goto	l10185
 29984  007004  501A               	movf	___lldiv@divisor^0,w,c
 29985  007006  5E16               	subwf	___lldiv@dividend^0,f,c
 29986  007008  501B               	movf	(___lldiv@divisor+1)^0,w,c
 29987  00700A  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 29988  00700C  501C               	movf	(___lldiv@divisor+2)^0,w,c
 29989  00700E  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 29990  007010  501D               	movf	(___lldiv@divisor+3)^0,w,c
 29991  007012  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 29992  007014  801E               	bsf	___lldiv@quotient^0,0,c
 29993  007016                     l10185:
 29994  007016  90D8               	bcf	status,0,c
 29995  007018  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 29996  00701A  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 29997  00701C  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 29998  00701E  321A               	rrcf	___lldiv@divisor^0,f,c
 29999  007020  2E22               	decfsz	___lldiv@counter^0,f,c
 30000  007022  D7E1               	goto	u8190
 30001  007024                     l3223:
 30002  007024  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 30003  00702A  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 30004  007030  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 30005  007036  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 30006  00703C  0012               	return		;funcret
 30007  00703E                     __end_of___lldiv:
 30008                           	opt callstack 0
 30009                           
 30010 ;; *************** function _NWK_Init *****************
 30011 ;; Defined at:
 30012 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 30013 ;; Parameters:    Size  Location     Type
 30014 ;;		None
 30015 ;; Auto vars:     Size  Location     Type
 30016 ;;  i               1    5[COMRAM] unsigned char 
 30017 ;; Return value:  Size  Location     Type
 30018 ;;                  1    wreg      void 
 30019 ;; Registers used:
 30020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30021 ;; Tracked objects:
 30022 ;;		On entry : 3F/1
 30023 ;;		On exit  : 3F/2
 30024 ;;		Unchanged: 0/0
 30025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30030 ;;Total ram usage:        1 bytes
 30031 ;; Hardware stack levels used:    1
 30032 ;; Hardware stack levels required when called:    9
 30033 ;; This function calls:
 30034 ;;		_nwkDataReqInit
 30035 ;;		_nwkFrameInit
 30036 ;;		_nwkGroupInit
 30037 ;;		_nwkRouteInit
 30038 ;;		_nwkRxInit
 30039 ;;		_nwkTxInit
 30040 ;; This function is called by:
 30041 ;;		_SYS_Init
 30042 ;; This function uses a non-reentrant model
 30043 ;;
 30044                           
 30045                           	psect	text197
 30046  007AD4                     __ptext197:
 30047                           	opt callstack 0
 30048  007AD4                     _NWK_Init:
 30049                           	opt callstack 20
 30050                           
 30051                           ; BSR set to: 1
 30052                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 30053                           
 30054                           ;incstack = 0
 30055  007AD4  0E00               	movlw	0
 30056  007AD6  6F04               	movwf	(_nwkIb+4)& (0+255),b
 30057                           
 30058                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 30059  007AD8  0E00               	movlw	0
 30060  007ADA  6F05               	movwf	(_nwkIb+5)& (0+255),b
 30061                           
 30062                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 30063  007ADC  0E00               	movlw	0
 30064  007ADE  6F01               	movwf	(_nwkIb+1)& (0+255),b
 30065  007AE0  0E00               	movlw	0
 30066  007AE2  6F00               	movwf	_nwkIb& (0+255),b
 30067                           
 30068                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 30069  007AE4  0E00               	movlw	0
 30070  007AE6  6F27               	movwf	(_nwkIb+39)& (0+255),b
 30071  007AE8  0E00               	movlw	0
 30072  007AEA  6F26               	movwf	(_nwkIb+38)& (0+255),b
 30073                           
 30074                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 30075  007AEC  0E00               	movlw	0
 30076  007AEE  6E06               	movwf	NWK_Init@i^0,c
 30077  007AF0                     l16667:
 30078                           
 30079                           ; BSR set to: 1
 30080                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 30081  007AF0  5006               	movf	NWK_Init@i^0,w,c
 30082  007AF2  0D02               	mullw	2
 30083  007AF4  0E06               	movlw	low (_nwkIb+6)
 30084  007AF6  24F3               	addwf	243,w,c
 30085  007AF8  6ED9               	movwf	fsr2l,c
 30086  007AFA  0E01               	movlw	high (_nwkIb+6)
 30087  007AFC  20F4               	addwfc	prodh,w,c
 30088  007AFE  6EDA               	movwf	fsr2h,c
 30089  007B00  0E00               	movlw	0
 30090  007B02  6EDE               	movwf	postinc2,c
 30091  007B04  0E00               	movlw	0
 30092  007B06  6EDD               	movwf	postdec2,c
 30093                           
 30094                           ; BSR set to: 1
 30095  007B08  2A06               	incf	NWK_Init@i^0,f,c
 30096                           
 30097                           ; BSR set to: 1
 30098  007B0A  0E0F               	movlw	15
 30099  007B0C  6406               	cpfsgt	NWK_Init@i^0,c
 30100  007B0E  D7F0               	goto	l16667
 30101                           
 30102                           ; BSR set to: 1
 30103                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 30104  007B10  ECF0  F03F         	call	_nwkTxInit	;wreg free
 30105                           
 30106                           ; BSR set to: 1
 30107                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 30108  007B14  ECD7  F03E         	call	_nwkRxInit	;wreg free
 30109                           
 30110                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 30111  007B18  EC5D  F044         	call	_nwkFrameInit	;wreg free
 30112                           
 30113                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 30114  007B1C  EC8E  F046         	call	_nwkDataReqInit	;wreg free
 30115                           
 30116                           ; BSR set to: 0
 30117                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 30118  007B20  EC8A  F03E         	call	_nwkRouteInit	;wreg free
 30119                           
 30120                           ; BSR set to: 2
 30121                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 30122  007B24  ECE1  F043         	call	_nwkGroupInit	;wreg free
 30123                           
 30124                           ; BSR set to: 2
 30125  007B28  0012               	return		;funcret
 30126  007B2A                     __end_of_NWK_Init:
 30127                           	opt callstack 0
 30128                           
 30129 ;; *************** function _nwkTxInit *****************
 30130 ;; Defined at:
 30131 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 30132 ;; Parameters:    Size  Location     Type
 30133 ;;		None
 30134 ;; Auto vars:     Size  Location     Type
 30135 ;;		None
 30136 ;; Return value:  Size  Location     Type
 30137 ;;                  1    wreg      void 
 30138 ;; Registers used:
 30139 ;;		wreg, status,2, status,0
 30140 ;; Tracked objects:
 30141 ;;		On entry : 3F/1
 30142 ;;		On exit  : 3F/1
 30143 ;;		Unchanged: 0/0
 30144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30149 ;;Total ram usage:        0 bytes
 30150 ;; Hardware stack levels used:    1
 30151 ;; Hardware stack levels required when called:    7
 30152 ;; This function calls:
 30153 ;;		Nothing
 30154 ;; This function is called by:
 30155 ;;		_NWK_Init
 30156 ;; This function uses a non-reentrant model
 30157 ;;
 30158                           
 30159                           	psect	text198
 30160  007FE0                     __ptext198:
 30161                           	opt callstack 0
 30162  007FE0                     _nwkTxInit:
 30163                           	opt callstack 21
 30164                           
 30165                           ; BSR set to: 1
 30166                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 30167                           
 30168                           ; BSR set to: 2
 30169                           ;incstack = 0
 30170  007FE0  0E00               	movlw	0
 30171  007FE2  6F5B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 30172  007FE4  0E00               	movlw	0
 30173  007FE6  6F5C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 30174                           
 30175                           ; BSR set to: 1
 30176                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 30177  007FE8  0EC8               	movlw	200
 30178  007FEA  6FA8               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 30179  007FEC  0E00               	movlw	0
 30180  007FEE  6FA9               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 30181  007FF0  0E00               	movlw	0
 30182  007FF2  6FAA               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 30183  007FF4  0E00               	movlw	0
 30184  007FF6  6FAB               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 30185                           
 30186                           ; BSR set to: 1
 30187                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30188  007FF8  0E00               	movlw	0
 30189  007FFA  6FAC               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 30190                           
 30191                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 30192  007FFC  0E84               	movlw	low _nwkTxAckWaitTimerHandler
 30193  007FFE  6FAD               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 30194  008000  0E6D               	movlw	high _nwkTxAckWaitTimerHandler
 30195  008002  6FAE               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 30196                           
 30197                           ; BSR set to: 1
 30198                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 30199  008004  0E14               	movlw	20
 30200  008006  6F9B               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 30201  008008  0E00               	movlw	0
 30202  00800A  6F9C               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 30203  00800C  0E00               	movlw	0
 30204  00800E  6F9D               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 30205  008010  0E00               	movlw	0
 30206  008012  6F9E               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 30207                           
 30208                           ; BSR set to: 1
 30209                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30210  008014  0E00               	movlw	0
 30211  008016  6F9F               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 30212                           
 30213                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 30214  008018  0E14               	movlw	low _nwkTxDelayTimerHandler
 30215  00801A  6FA0               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 30216  00801C  0E6E               	movlw	high _nwkTxDelayTimerHandler
 30217  00801E  6FA1               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 30218                           
 30219                           ; BSR set to: 1
 30220  008020  0012               	return		;funcret
 30221  008022                     __end_of_nwkTxInit:
 30222                           	opt callstack 0
 30223                           
 30224 ;; *************** function _nwkRxInit *****************
 30225 ;; Defined at:
 30226 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 30227 ;; Parameters:    Size  Location     Type
 30228 ;;		None
 30229 ;; Auto vars:     Size  Location     Type
 30230 ;;  i               1    4[COMRAM] unsigned char 
 30231 ;; Return value:  Size  Location     Type
 30232 ;;                  1    wreg      void 
 30233 ;; Registers used:
 30234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30235 ;; Tracked objects:
 30236 ;;		On entry : 3F/1
 30237 ;;		On exit  : 0/0
 30238 ;;		Unchanged: 0/0
 30239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30244 ;;Total ram usage:        1 bytes
 30245 ;; Hardware stack levels used:    1
 30246 ;; Hardware stack levels required when called:    8
 30247 ;; This function calls:
 30248 ;;		_NWK_OpenEndpoint
 30249 ;; This function is called by:
 30250 ;;		_NWK_Init
 30251 ;; This function uses a non-reentrant model
 30252 ;;
 30253                           
 30254                           	psect	text199
 30255  007DAE                     __ptext199:
 30256                           	opt callstack 0
 30257  007DAE                     _nwkRxInit:
 30258                           	opt callstack 20
 30259                           
 30260                           ; BSR set to: 1
 30261                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 30262                           
 30263                           ; BSR set to: 1
 30264                           ;incstack = 0
 30265  007DAE  0E00               	movlw	0
 30266  007DB0  6E05               	movwf	nwkRxInit@i^0,c
 30267  007DB2                     l16259:
 30268                           
 30269                           ; BSR set to: 1
 30270                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 30271  007DB2  5005               	movf	nwkRxInit@i^0,w,c
 30272  007DB4  0D05               	mullw	5
 30273  007DB6  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 30274  007DB8  24F3               	addwf	243,w,c
 30275  007DBA  6ED9               	movwf	fsr2l,c
 30276  007DBC  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 30277  007DBE  20F4               	addwfc	prodh,w,c
 30278  007DC0  6EDA               	movwf	fsr2h,c
 30279  007DC2  0E00               	movlw	0
 30280  007DC4  6EDF               	movwf	indf2,c
 30281                           
 30282                           ; BSR set to: 1
 30283  007DC6  2A05               	incf	nwkRxInit@i^0,f,c
 30284                           
 30285                           ; BSR set to: 1
 30286  007DC8  0E09               	movlw	9
 30287  007DCA  6405               	cpfsgt	nwkRxInit@i^0,c
 30288  007DCC  D7F2               	goto	l16259
 30289                           
 30290                           ; BSR set to: 1
 30291                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 30292  007DCE  0E88               	movlw	136
 30293  007DD0  6FB5               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 30294  007DD2  0E13               	movlw	19
 30295  007DD4  6FB6               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 30296  007DD6  0E00               	movlw	0
 30297  007DD8  6FB7               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 30298  007DDA  0E00               	movlw	0
 30299  007DDC  6FB8               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 30300                           
 30301                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 30302  007DDE  0E00               	movlw	0
 30303  007DE0  6FB9               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 30304                           
 30305                           ; BSR set to: 1
 30306                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 30307  007DE2  0E7E               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 30308  007DE4  6FBA               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 30309  007DE6  0E7B               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 30310  007DE8  6FBB               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 30311                           
 30312                           ; BSR set to: 1
 30313                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 30314  007DEA  0E1A               	movlw	low _nwkRxServiceDataInd
 30315  007DEC  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 30316  007DEE  0E75               	movlw	high _nwkRxServiceDataInd
 30317  007DF0  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 30318  007DF2  0E00               	movlw	0
 30319  007DF4  ECB1  F044         	call	_NWK_OpenEndpoint
 30320  007DF8  0012               	return		;funcret
 30321  007DFA                     __end_of_nwkRxInit:
 30322                           	opt callstack 0
 30323                           
 30324 ;; *************** function _NWK_OpenEndpoint *****************
 30325 ;; Defined at:
 30326 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 30327 ;; Parameters:    Size  Location     Type
 30328 ;;  id              1    wreg     unsigned char 
 30329 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 30330 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 30331 ;; Auto vars:     Size  Location     Type
 30332 ;;  id              1    3[COMRAM] unsigned char 
 30333 ;; Return value:  Size  Location     Type
 30334 ;;                  1    wreg      void 
 30335 ;; Registers used:
 30336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30337 ;; Tracked objects:
 30338 ;;		On entry : 3/3D
 30339 ;;		On exit  : 0/0
 30340 ;;		Unchanged: 0/0
 30341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30346 ;;Total ram usage:        3 bytes
 30347 ;; Hardware stack levels used:    1
 30348 ;; Hardware stack levels required when called:    7
 30349 ;; This function calls:
 30350 ;;		Nothing
 30351 ;; This function is called by:
 30352 ;;		_bootLoadApplication
 30353 ;;		_nwkRxInit
 30354 ;; This function uses a non-reentrant model
 30355 ;;
 30356                           
 30357                           	psect	text200
 30358  008962                     __ptext200:
 30359                           	opt callstack 0
 30360  008962                     _NWK_OpenEndpoint:
 30361                           	opt callstack 22
 30362                           
 30363                           ;incstack = 0
 30364                           ;NWK_OpenEndpoint@id stored from wreg
 30365  008962  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 30366                           
 30367                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 30368  008964  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 30369  008966  0D02               	mullw	2
 30370  008968  0E06               	movlw	low (_nwkIb+6)
 30371  00896A  24F3               	addwf	243,w,c
 30372  00896C  6ED9               	movwf	fsr2l,c
 30373  00896E  0E01               	movlw	high (_nwkIb+6)
 30374  008970  20F4               	addwfc	prodh,w,c
 30375  008972  6EDA               	movwf	fsr2h,c
 30376  008974  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 30377  00897A  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 30378  008980  0012               	return		;funcret
 30379  008982                     __end_of_NWK_OpenEndpoint:
 30380                           	opt callstack 0
 30381                           
 30382 ;; *************** function _nwkRouteInit *****************
 30383 ;; Defined at:
 30384 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 30385 ;; Parameters:    Size  Location     Type
 30386 ;;		None
 30387 ;; Auto vars:     Size  Location     Type
 30388 ;;  i               1    1[COMRAM] unsigned char 
 30389 ;; Return value:  Size  Location     Type
 30390 ;;                  1    wreg      void 
 30391 ;; Registers used:
 30392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30393 ;; Tracked objects:
 30394 ;;		On entry : 3F/0
 30395 ;;		On exit  : 3F/2
 30396 ;;		Unchanged: 0/0
 30397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30402 ;;Total ram usage:        1 bytes
 30403 ;; Hardware stack levels used:    1
 30404 ;; Hardware stack levels required when called:    7
 30405 ;; This function calls:
 30406 ;;		Nothing
 30407 ;; This function is called by:
 30408 ;;		_NWK_Init
 30409 ;; This function uses a non-reentrant model
 30410 ;;
 30411                           
 30412                           	psect	text201
 30413  007D14                     __ptext201:
 30414                           	opt callstack 0
 30415  007D14                     _nwkRouteInit:
 30416                           	opt callstack 21
 30417                           
 30418                           ; BSR set to: 0
 30419                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 30420                           
 30421                           ;incstack = 0
 30422  007D14  0E00               	movlw	0
 30423  007D16  6E02               	movwf	nwkRouteInit@i^0,c
 30424  007D18                     l12385:
 30425                           
 30426                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 30427  007D18  5002               	movf	nwkRouteInit@i^0,w,c
 30428  007D1A  0D07               	mullw	7
 30429  007D1C  0E85               	movlw	low (_nwkRouteTable+1)
 30430  007D1E  24F3               	addwf	243,w,c
 30431  007D20  6ED9               	movwf	fsr2l,c
 30432  007D22  0E02               	movlw	high (_nwkRouteTable+1)
 30433  007D24  20F4               	addwfc	prodh,w,c
 30434  007D26  6EDA               	movwf	fsr2h,c
 30435  007D28  0EFF               	movlw	255
 30436  007D2A  6EDE               	movwf	postinc2,c
 30437  007D2C  0EFF               	movlw	255
 30438  007D2E  6EDD               	movwf	postdec2,c
 30439                           
 30440                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 30441  007D30  5002               	movf	nwkRouteInit@i^0,w,c
 30442  007D32  0D07               	mullw	7
 30443  007D34  0E84               	movlw	low _nwkRouteTable
 30444  007D36  24F3               	addwf	243,w,c
 30445  007D38  6ED9               	movwf	fsr2l,c
 30446  007D3A  0E02               	movlw	high _nwkRouteTable
 30447  007D3C  20F4               	addwfc	prodh,w,c
 30448  007D3E  6EDA               	movwf	fsr2h,c
 30449  007D40  0102               	movlb	2	; () banked
 30450  007D42  90DF               	bcf	indf2,0,c
 30451                           
 30452                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 30453  007D44  5002               	movf	nwkRouteInit@i^0,w,c
 30454  007D46  0D07               	mullw	7
 30455  007D48  0E89               	movlw	low (_nwkRouteTable+5)
 30456  007D4A  24F3               	addwf	243,w,c
 30457  007D4C  6ED9               	movwf	fsr2l,c
 30458  007D4E  0E02               	movlw	high (_nwkRouteTable+5)
 30459  007D50  20F4               	addwfc	prodh,w,c
 30460  007D52  6EDA               	movwf	fsr2h,c
 30461  007D54  0E00               	movlw	0
 30462  007D56  6EDF               	movwf	indf2,c
 30463                           
 30464                           ; BSR set to: 2
 30465                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 30466  007D58  2A02               	incf	nwkRouteInit@i^0,f,c
 30467                           
 30468                           ; BSR set to: 2
 30469  007D5A  0E09               	movlw	9
 30470  007D5C  6402               	cpfsgt	nwkRouteInit@i^0,c
 30471  007D5E  D7DC               	goto	l12385
 30472  007D60  0012               	return	
 30473  007D62                     __end_of_nwkRouteInit:
 30474                           	opt callstack 0
 30475                           
 30476 ;; *************** function _nwkGroupInit *****************
 30477 ;; Defined at:
 30478 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 30479 ;; Parameters:    Size  Location     Type
 30480 ;;		None
 30481 ;; Auto vars:     Size  Location     Type
 30482 ;;  i               1    1[COMRAM] unsigned char 
 30483 ;; Return value:  Size  Location     Type
 30484 ;;                  1    wreg      void 
 30485 ;; Registers used:
 30486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30487 ;; Tracked objects:
 30488 ;;		On entry : 3F/2
 30489 ;;		On exit  : 3F/2
 30490 ;;		Unchanged: 3F/0
 30491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30496 ;;Total ram usage:        1 bytes
 30497 ;; Hardware stack levels used:    1
 30498 ;; Hardware stack levels required when called:    7
 30499 ;; This function calls:
 30500 ;;		Nothing
 30501 ;; This function is called by:
 30502 ;;		_NWK_Init
 30503 ;; This function uses a non-reentrant model
 30504 ;;
 30505                           
 30506                           	psect	text202
 30507  0087C2                     __ptext202:
 30508                           	opt callstack 0
 30509  0087C2                     _nwkGroupInit:
 30510                           	opt callstack 21
 30511                           
 30512                           ; BSR set to: 2
 30513                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 30514                           
 30515                           ; BSR set to: 2
 30516                           ;incstack = 0
 30517  0087C2  0E00               	movlw	0
 30518  0087C4  6E02               	movwf	nwkGroupInit@i^0,c
 30519  0087C6                     l12397:
 30520                           
 30521                           ; BSR set to: 2
 30522                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 30523  0087C6  5002               	movf	nwkGroupInit@i^0,w,c
 30524  0087C8  0D02               	mullw	2
 30525  0087CA  0E00               	movlw	low _nwkGroups
 30526  0087CC  24F3               	addwf	243,w,c
 30527  0087CE  6ED9               	movwf	fsr2l,c
 30528  0087D0  0E02               	movlw	high _nwkGroups
 30529  0087D2  20F4               	addwfc	prodh,w,c
 30530  0087D4  6EDA               	movwf	fsr2h,c
 30531  0087D6  0EFF               	movlw	255
 30532  0087D8  6EDE               	movwf	postinc2,c
 30533  0087DA  0EFF               	movlw	255
 30534  0087DC  6EDD               	movwf	postdec2,c
 30535                           
 30536                           ; BSR set to: 2
 30537  0087DE  2A02               	incf	nwkGroupInit@i^0,f,c
 30538                           
 30539                           ; BSR set to: 2
 30540  0087E0  0E09               	movlw	9
 30541  0087E2  6402               	cpfsgt	nwkGroupInit@i^0,c
 30542  0087E4  D7F0               	goto	l12397
 30543  0087E6  0012               	return	
 30544  0087E8                     __end_of_nwkGroupInit:
 30545                           	opt callstack 0
 30546                           
 30547 ;; *************** function _nwkFrameInit *****************
 30548 ;; Defined at:
 30549 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;		None
 30552 ;; Auto vars:     Size  Location     Type
 30553 ;;  i               1    1[COMRAM] unsigned char 
 30554 ;; Return value:  Size  Location     Type
 30555 ;;                  1    wreg      void 
 30556 ;; Registers used:
 30557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30558 ;; Tracked objects:
 30559 ;;		On entry : 0/1
 30560 ;;		On exit  : 0/0
 30561 ;;		Unchanged: 0/0
 30562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30567 ;;Total ram usage:        1 bytes
 30568 ;; Hardware stack levels used:    1
 30569 ;; Hardware stack levels required when called:    7
 30570 ;; This function calls:
 30571 ;;		Nothing
 30572 ;; This function is called by:
 30573 ;;		_NWK_Init
 30574 ;; This function uses a non-reentrant model
 30575 ;;
 30576                           
 30577                           	psect	text203
 30578  0088BA                     __ptext203:
 30579                           	opt callstack 0
 30580  0088BA                     _nwkFrameInit:
 30581                           	opt callstack 21
 30582                           
 30583                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 30584                           
 30585                           ; BSR set to: 2
 30586                           ;incstack = 0
 30587  0088BA  0E00               	movlw	0
 30588  0088BC  6E02               	movwf	nwkFrameInit@i^0,c
 30589  0088BE                     l12371:
 30590                           
 30591                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 30592  0088BE  5002               	movf	nwkFrameInit@i^0,w,c
 30593  0088C0  0D89               	mullw	137
 30594  0088C2  0EBD               	movlw	low _nwkFrameFrames
 30595  0088C4  24F3               	addwf	243,w,c
 30596  0088C6  6ED9               	movwf	fsr2l,c
 30597  0088C8  0E05               	movlw	high _nwkFrameFrames
 30598  0088CA  20F4               	addwfc	prodh,w,c
 30599  0088CC  6EDA               	movwf	fsr2h,c
 30600  0088CE  0E00               	movlw	0
 30601  0088D0  6EDF               	movwf	indf2,c
 30602  0088D2  2A02               	incf	nwkFrameInit@i^0,f,c
 30603  0088D4  0E04               	movlw	4
 30604  0088D6  6402               	cpfsgt	nwkFrameInit@i^0,c
 30605  0088D8  D7F2               	goto	l12371
 30606  0088DA  0012               	return	
 30607  0088DC                     __end_of_nwkFrameInit:
 30608                           	opt callstack 0
 30609                           
 30610 ;; *************** function _nwkDataReqInit *****************
 30611 ;; Defined at:
 30612 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 30613 ;; Parameters:    Size  Location     Type
 30614 ;;		None
 30615 ;; Auto vars:     Size  Location     Type
 30616 ;;		None
 30617 ;; Return value:  Size  Location     Type
 30618 ;;                  1    wreg      void 
 30619 ;; Registers used:
 30620 ;;		wreg, status,2, status,0
 30621 ;; Tracked objects:
 30622 ;;		On entry : 0/1
 30623 ;;		On exit  : 3F/0
 30624 ;;		Unchanged: 0/0
 30625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30630 ;;Total ram usage:        0 bytes
 30631 ;; Hardware stack levels used:    1
 30632 ;; Hardware stack levels required when called:    7
 30633 ;; This function calls:
 30634 ;;		Nothing
 30635 ;; This function is called by:
 30636 ;;		_NWK_Init
 30637 ;; This function uses a non-reentrant model
 30638 ;;
 30639                           
 30640                           	psect	text204
 30641  008D1C                     __ptext204:
 30642                           	opt callstack 0
 30643  008D1C                     _nwkDataReqInit:
 30644                           	opt callstack 21
 30645                           
 30646                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 30647                           
 30648                           ;incstack = 0
 30649  008D1C  0E00               	movlw	0
 30650  008D1E  0100               	movlb	0	; () banked
 30651  008D20  6FE2               	movwf	_nwkDataReqQueue& (0+255),b
 30652  008D22  0E00               	movlw	0
 30653  008D24  6FE3               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 30654                           
 30655                           ; BSR set to: 0
 30656  008D26  0012               	return		;funcret
 30657  008D28                     __end_of_nwkDataReqInit:
 30658                           	opt callstack 0
 30659                           
 30660 ;; *************** function _SYSTEM_Initialize *****************
 30661 ;; Defined at:
 30662 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30663 ;; Parameters:    Size  Location     Type
 30664 ;;		None
 30665 ;; Auto vars:     Size  Location     Type
 30666 ;;		None
 30667 ;; Return value:  Size  Location     Type
 30668 ;;                  1    wreg      void 
 30669 ;; Registers used:
 30670 ;;		wreg, status,2, status,0, cstack
 30671 ;; Tracked objects:
 30672 ;;		On entry : 0/0
 30673 ;;		On exit  : 3F/3D
 30674 ;;		Unchanged: 0/0
 30675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30680 ;;Total ram usage:        0 bytes
 30681 ;; Hardware stack levels used:    1
 30682 ;; Hardware stack levels required when called:    9
 30683 ;; This function calls:
 30684 ;;		_CRC_Initialize
 30685 ;;		_INTERRUPT_Initialize
 30686 ;;		_OSCILLATOR_Initialize
 30687 ;;		_PIN_MANAGER_Initialize
 30688 ;;		_PMD_Initialize
 30689 ;;		_SPI1_Initialize
 30690 ;;		_TMR0_Initialize
 30691 ;;		_UART1_Initialize
 30692 ;; This function is called by:
 30693 ;;		_main
 30694 ;; This function uses a non-reentrant model
 30695 ;;
 30696                           
 30697                           	psect	text205
 30698  0088DC                     __ptext205:
 30699                           	opt callstack 0
 30700  0088DC                     _SYSTEM_Initialize:
 30701                           	opt callstack 21
 30702                           
 30703                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30704                           
 30705                           ; BSR set to: 0
 30706                           ;incstack = 0
 30707  0088DC  EC51  F040         	call	_INTERRUPT_Initialize	;wreg free
 30708                           
 30709                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30710  0088E0  EC7F  F044         	call	_PMD_Initialize	;wreg free
 30711                           
 30712                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30713  0088E4  EC1F  F038         	call	_PIN_MANAGER_Initialize	;wreg free
 30714                           
 30715                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30716  0088E8  ECA2  F045         	call	_OSCILLATOR_Initialize	;wreg free
 30717                           
 30718                           ; BSR set to: 57
 30719                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 30720  0088EC  ECF9  F03A         	call	_CRC_Initialize	;wreg free
 30721                           
 30722                           ; BSR set to: 1
 30723                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 30724  0088F0  EC0C  F041         	call	_TMR0_Initialize	;wreg free
 30725                           
 30726                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 30727  0088F4  EC4D  F034         	call	_UART1_Initialize	;wreg free
 30728                           
 30729                           ; BSR set to: 57
 30730                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 30731  0088F8  EC7D  F045         	call	_SPI1_Initialize	;wreg free
 30732                           
 30733                           ; BSR set to: 61
 30734  0088FC  0012               	return		;funcret
 30735  0088FE                     __end_of_SYSTEM_Initialize:
 30736                           	opt callstack 0
 30737                           
 30738 ;; *************** function _UART1_Initialize *****************
 30739 ;; Defined at:
 30740 ;;		line 95 in file "mcc_generated_files/uart1.c"
 30741 ;; Parameters:    Size  Location     Type
 30742 ;;		None
 30743 ;; Auto vars:     Size  Location     Type
 30744 ;;		None
 30745 ;; Return value:  Size  Location     Type
 30746 ;;                  1    wreg      void 
 30747 ;; Registers used:
 30748 ;;		wreg, status,2, status,0, cstack
 30749 ;; Tracked objects:
 30750 ;;		On entry : 3B/39
 30751 ;;		On exit  : 3F/39
 30752 ;;		Unchanged: 0/0
 30753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30758 ;;Total ram usage:        0 bytes
 30759 ;; Hardware stack levels used:    1
 30760 ;; Hardware stack levels required when called:    8
 30761 ;; This function calls:
 30762 ;;		_UART1_SetErrorHandler
 30763 ;;		_UART1_SetFramingErrorHandler
 30764 ;;		_UART1_SetOverrunErrorHandler
 30765 ;;		_UART1_SetRxInterruptHandler
 30766 ;;		_UART1_SetTxInterruptHandler
 30767 ;; This function is called by:
 30768 ;;		_SYSTEM_Initialize
 30769 ;; This function uses a non-reentrant model
 30770 ;;
 30771                           
 30772                           	psect	text206
 30773  00689A                     __ptext206:
 30774                           	opt callstack 0
 30775  00689A                     _UART1_Initialize:
 30776                           	opt callstack 21
 30777                           
 30778                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 30779                           
 30780                           ; BSR set to: 61
 30781                           ;incstack = 0
 30782  00689A  0139               	movlb	57	; () banked
 30783  00689C  9793               	bcf	147,3,b	;volatile
 30784                           
 30785                           ; BSR set to: 57
 30786                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30787  00689E  0EC4               	movlw	low _UART1_Receive_ISR
 30788  0068A0  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 30789  0068A2  0E6B               	movlw	high _UART1_Receive_ISR
 30790  0068A4  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 30791  0068A6  EC5F  F046         	call	_UART1_SetRxInterruptHandler	;wreg free
 30792                           
 30793                           ; BSR set to: 57
 30794                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 30795  0068AA  9993               	bcf	147,4,b	;volatile
 30796                           
 30797                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 30798  0068AC  0EB6               	movlw	low _UART1_Transmit_ISR
 30799  0068AE  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 30800  0068B0  0E83               	movlw	high _UART1_Transmit_ISR
 30801  0068B2  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 30802  0068B4  EC58  F046         	call	_UART1_SetTxInterruptHandler	;wreg free
 30803                           
 30804                           ; BSR set to: 57
 30805                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 30806  0068B8  0E00               	movlw	0
 30807  0068BA  013D               	movlb	61	; () banked
 30808  0068BC  6FEC               	movwf	236,b	;volatile
 30809                           
 30810                           ; BSR set to: 61
 30811                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 30812  0068BE  0E00               	movlw	0
 30813  0068C0  6FED               	movwf	237,b	;volatile
 30814                           
 30815                           ; BSR set to: 61
 30816                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 30817  0068C2  0E00               	movlw	0
 30818  0068C4  6FEE               	movwf	238,b	;volatile
 30819                           
 30820                           ; BSR set to: 61
 30821                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 30822  0068C6  0E00               	movlw	0
 30823  0068C8  6FEF               	movwf	239,b	;volatile
 30824                           
 30825                           ; BSR set to: 61
 30826                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 30827  0068CA  0E00               	movlw	0
 30828  0068CC  6FF0               	movwf	240,b	;volatile
 30829                           
 30830                           ; BSR set to: 61
 30831                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 30832  0068CE  0E00               	movlw	0
 30833  0068D0  6FF1               	movwf	241,b	;volatile
 30834                           
 30835                           ; BSR set to: 61
 30836                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 30837  0068D2  0EB3               	movlw	179
 30838  0068D4  6FF2               	movwf	242,b	;volatile
 30839                           
 30840                           ; BSR set to: 61
 30841                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 30842  0068D6  0E00               	movlw	0
 30843  0068D8  6FF3               	movwf	243,b	;volatile
 30844                           
 30845                           ; BSR set to: 61
 30846                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 30847  0068DA  0E82               	movlw	130
 30848  0068DC  6FF4               	movwf	244,b	;volatile
 30849                           
 30850                           ; BSR set to: 61
 30851                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 30852  0068DE  0E40               	movlw	64
 30853  0068E0  6FF5               	movwf	245,b	;volatile
 30854                           
 30855                           ; BSR set to: 61
 30856                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 30857  0068E2  0E03               	movlw	3
 30858  0068E4  6FF6               	movwf	246,b	;volatile
 30859                           
 30860                           ; BSR set to: 61
 30861                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 30862  0068E6  0E00               	movlw	0
 30863  0068E8  6FF7               	movwf	247,b	;volatile
 30864                           
 30865                           ; BSR set to: 61
 30866                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 30867  0068EA  0E00               	movlw	0
 30868  0068EC  6FF8               	movwf	248,b	;volatile
 30869                           
 30870                           ; BSR set to: 61
 30871                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 30872  0068EE  0E00               	movlw	0
 30873  0068F0  6FF9               	movwf	249,b	;volatile
 30874                           
 30875                           ; BSR set to: 61
 30876                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 30877  0068F2  0E00               	movlw	0
 30878  0068F4  6FFA               	movwf	250,b	;volatile
 30879                           
 30880                           ; BSR set to: 61
 30881                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 30882  0068F6  0E7C               	movlw	low _UART1_DefaultFramingErrorHandler
 30883  0068F8  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 30884  0068FA  0E8D               	movlw	high _UART1_DefaultFramingErrorHandler
 30885  0068FC  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 30886  0068FE  EC6D  F046         	call	_UART1_SetFramingErrorHandler	;wreg free
 30887                           
 30888                           ; BSR set to: 61
 30889                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 30890  006902  0E7A               	movlw	low _UART1_DefaultOverrunErrorHandler
 30891  006904  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 30892  006906  0E8D               	movlw	high _UART1_DefaultOverrunErrorHandler
 30893  006908  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 30894  00690A  EC66  F046         	call	_UART1_SetOverrunErrorHandler	;wreg free
 30895                           
 30896                           ; BSR set to: 61
 30897                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 30898  00690E  0E5C               	movlw	low _UART1_DefaultErrorHandler
 30899  006910  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 30900  006912  0E8D               	movlw	high _UART1_DefaultErrorHandler
 30901  006914  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 30902  006916  EC74  F046         	call	_UART1_SetErrorHandler	;wreg free
 30903                           
 30904                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 30905  00691A  0E00               	movlw	0
 30906  00691C  0101               	movlb	1	; () banked
 30907  00691E  6F62               	movwf	_uart1RxLastError& (0+255),b	;volatile
 30908                           
 30909                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 30910  006920  0E00               	movlw	0
 30911  006922  0100               	movlb	0	; () banked
 30912  006924  6FE9               	movwf	_uart1TxHead& (0+255),b	;volatile
 30913                           
 30914                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 30915  006926  0E00               	movlw	0
 30916  006928  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 30917                           
 30918                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 30919  00692A  0E40               	movlw	64
 30920  00692C  0101               	movlb	1	; () banked
 30921  00692E  6FED               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 30922                           
 30923                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 30924  006930  0E00               	movlw	0
 30925  006932  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 30926                           
 30927                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 30928  006934  0E00               	movlw	0
 30929  006936  0100               	movlb	0	; () banked
 30930  006938  6FE7               	movwf	_uart1RxTail& (0+255),b	;volatile
 30931                           
 30932                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 30933  00693A  0E00               	movlw	0
 30934  00693C  6FE6               	movwf	_uart1RxCount& (0+255),b	;volatile
 30935                           
 30936                           ; BSR set to: 0
 30937                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 30938  00693E  0139               	movlb	57	; () banked
 30939  006940  8793               	bsf	147,3,b	;volatile
 30940                           
 30941                           ; BSR set to: 57
 30942  006942  0012               	return		;funcret
 30943  006944                     __end_of_UART1_Initialize:
 30944                           	opt callstack 0
 30945                           
 30946 ;; *************** function _UART1_SetTxInterruptHandler *****************
 30947 ;; Defined at:
 30948 ;;		line 352 in file "mcc_generated_files/uart1.c"
 30949 ;; Parameters:    Size  Location     Type
 30950 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 30951 ;;		 -> UART1_Transmit_ISR(1), 
 30952 ;; Auto vars:     Size  Location     Type
 30953 ;;		None
 30954 ;; Return value:  Size  Location     Type
 30955 ;;                  1    wreg      void 
 30956 ;; Registers used:
 30957 ;;		wreg, status,2, status,0
 30958 ;; Tracked objects:
 30959 ;;		On entry : 3F/39
 30960 ;;		On exit  : 3F/39
 30961 ;;		Unchanged: 3E/0
 30962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30967 ;;Total ram usage:        2 bytes
 30968 ;; Hardware stack levels used:    1
 30969 ;; Hardware stack levels required when called:    7
 30970 ;; This function calls:
 30971 ;;		Nothing
 30972 ;; This function is called by:
 30973 ;;		_UART1_Initialize
 30974 ;; This function uses a non-reentrant model
 30975 ;;
 30976                           
 30977                           	psect	text207
 30978  008CB0                     __ptext207:
 30979                           	opt callstack 0
 30980  008CB0                     _UART1_SetTxInterruptHandler:
 30981                           	opt callstack 21
 30982                           
 30983                           ; BSR set to: 57
 30984                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 30985                           
 30986                           ; BSR set to: 57
 30987                           ;incstack = 0
 30988  008CB0  0060  F008  F1E9   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 30989  008CB6  0060  F00C  F1EA   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 30990                           
 30991                           ; BSR set to: 57
 30992  008CBC  0012               	return		;funcret
 30993  008CBE                     __end_of_UART1_SetTxInterruptHandler:
 30994                           	opt callstack 0
 30995                           
 30996 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30997 ;; Defined at:
 30998 ;;		line 348 in file "mcc_generated_files/uart1.c"
 30999 ;; Parameters:    Size  Location     Type
 31000 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31001 ;;		 -> UART1_Receive_ISR(1), 
 31002 ;; Auto vars:     Size  Location     Type
 31003 ;;		None
 31004 ;; Return value:  Size  Location     Type
 31005 ;;                  1    wreg      void 
 31006 ;; Registers used:
 31007 ;;		wreg, status,2, status,0
 31008 ;; Tracked objects:
 31009 ;;		On entry : 3F/39
 31010 ;;		On exit  : 3F/39
 31011 ;;		Unchanged: 3E/0
 31012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31017 ;;Total ram usage:        2 bytes
 31018 ;; Hardware stack levels used:    1
 31019 ;; Hardware stack levels required when called:    7
 31020 ;; This function calls:
 31021 ;;		Nothing
 31022 ;; This function is called by:
 31023 ;;		_UART1_Initialize
 31024 ;; This function uses a non-reentrant model
 31025 ;;
 31026                           
 31027                           	psect	text208
 31028  008CBE                     __ptext208:
 31029                           	opt callstack 0
 31030  008CBE                     _UART1_SetRxInterruptHandler:
 31031                           	opt callstack 21
 31032                           
 31033                           ; BSR set to: 57
 31034                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 31035                           
 31036                           ; BSR set to: 57
 31037                           ;incstack = 0
 31038  008CBE  0060  F008  F1EB   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 31039  008CC4  0060  F00C  F1EC   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 31040                           
 31041                           ; BSR set to: 57
 31042  008CCA  0012               	return		;funcret
 31043  008CCC                     __end_of_UART1_SetRxInterruptHandler:
 31044                           	opt callstack 0
 31045                           
 31046 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 31047 ;; Defined at:
 31048 ;;		line 338 in file "mcc_generated_files/uart1.c"
 31049 ;; Parameters:    Size  Location     Type
 31050 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31051 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 31052 ;; Auto vars:     Size  Location     Type
 31053 ;;		None
 31054 ;; Return value:  Size  Location     Type
 31055 ;;                  1    wreg      void 
 31056 ;; Registers used:
 31057 ;;		wreg, status,2, status,0
 31058 ;; Tracked objects:
 31059 ;;		On entry : 3F/3D
 31060 ;;		On exit  : 3F/3D
 31061 ;;		Unchanged: 3E/0
 31062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31067 ;;Total ram usage:        2 bytes
 31068 ;; Hardware stack levels used:    1
 31069 ;; Hardware stack levels required when called:    7
 31070 ;; This function calls:
 31071 ;;		Nothing
 31072 ;; This function is called by:
 31073 ;;		_UART1_Initialize
 31074 ;; This function uses a non-reentrant model
 31075 ;;
 31076                           
 31077                           	psect	text209
 31078  008CCC                     __ptext209:
 31079                           	opt callstack 0
 31080  008CCC                     _UART1_SetOverrunErrorHandler:
 31081                           	opt callstack 21
 31082                           
 31083                           ; BSR set to: 61
 31084                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 31085                           
 31086                           ; BSR set to: 57
 31087                           ;incstack = 0
 31088  008CCC  0060  F008  F1E1   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 31089  008CD2  0060  F00C  F1E2   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 31090                           
 31091                           ; BSR set to: 61
 31092  008CD8  0012               	return		;funcret
 31093  008CDA                     __end_of_UART1_SetOverrunErrorHandler:
 31094                           	opt callstack 0
 31095                           
 31096 ;; *************** function _UART1_SetFramingErrorHandler *****************
 31097 ;; Defined at:
 31098 ;;		line 334 in file "mcc_generated_files/uart1.c"
 31099 ;; Parameters:    Size  Location     Type
 31100 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31101 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 31102 ;; Auto vars:     Size  Location     Type
 31103 ;;		None
 31104 ;; Return value:  Size  Location     Type
 31105 ;;                  1    wreg      void 
 31106 ;; Registers used:
 31107 ;;		wreg, status,2, status,0
 31108 ;; Tracked objects:
 31109 ;;		On entry : 3F/3D
 31110 ;;		On exit  : 3F/3D
 31111 ;;		Unchanged: 3E/0
 31112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31117 ;;Total ram usage:        2 bytes
 31118 ;; Hardware stack levels used:    1
 31119 ;; Hardware stack levels required when called:    7
 31120 ;; This function calls:
 31121 ;;		Nothing
 31122 ;; This function is called by:
 31123 ;;		_UART1_Initialize
 31124 ;; This function uses a non-reentrant model
 31125 ;;
 31126                           
 31127                           	psect	text210
 31128  008CDA                     __ptext210:
 31129                           	opt callstack 0
 31130  008CDA                     _UART1_SetFramingErrorHandler:
 31131                           	opt callstack 21
 31132                           
 31133                           ; BSR set to: 61
 31134                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 31135                           
 31136                           ; BSR set to: 61
 31137                           ;incstack = 0
 31138  008CDA  0060  F008  F1E3   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 31139  008CE0  0060  F00C  F1E4   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 31140                           
 31141                           ; BSR set to: 61
 31142  008CE6  0012               	return		;funcret
 31143  008CE8                     __end_of_UART1_SetFramingErrorHandler:
 31144                           	opt callstack 0
 31145                           
 31146 ;; *************** function _UART1_SetErrorHandler *****************
 31147 ;; Defined at:
 31148 ;;		line 342 in file "mcc_generated_files/uart1.c"
 31149 ;; Parameters:    Size  Location     Type
 31150 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31151 ;;		 -> UART1_DefaultErrorHandler(1), 
 31152 ;; Auto vars:     Size  Location     Type
 31153 ;;		None
 31154 ;; Return value:  Size  Location     Type
 31155 ;;                  1    wreg      void 
 31156 ;; Registers used:
 31157 ;;		wreg, status,2, status,0
 31158 ;; Tracked objects:
 31159 ;;		On entry : 3F/3D
 31160 ;;		On exit  : 3F/3D
 31161 ;;		Unchanged: 3E/0
 31162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31167 ;;Total ram usage:        2 bytes
 31168 ;; Hardware stack levels used:    1
 31169 ;; Hardware stack levels required when called:    7
 31170 ;; This function calls:
 31171 ;;		Nothing
 31172 ;; This function is called by:
 31173 ;;		_UART1_Initialize
 31174 ;; This function uses a non-reentrant model
 31175 ;;
 31176                           
 31177                           	psect	text211
 31178  008CE8                     __ptext211:
 31179                           	opt callstack 0
 31180  008CE8                     _UART1_SetErrorHandler:
 31181                           	opt callstack 21
 31182                           
 31183                           ; BSR set to: 61
 31184                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 31185                           
 31186                           ; BSR set to: 61
 31187                           ;incstack = 0
 31188  008CE8  0060  F008  F1DF   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 31189  008CEE  0060  F00C  F1E0   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 31190                           
 31191                           ; BSR set to: 61
 31192  008CF4  0012               	return		;funcret
 31193  008CF6                     __end_of_UART1_SetErrorHandler:
 31194                           	opt callstack 0
 31195                           
 31196 ;; *************** function _TMR0_Initialize *****************
 31197 ;; Defined at:
 31198 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 31199 ;; Parameters:    Size  Location     Type
 31200 ;;		None
 31201 ;; Auto vars:     Size  Location     Type
 31202 ;;		None
 31203 ;; Return value:  Size  Location     Type
 31204 ;;                  1    wreg      void 
 31205 ;; Registers used:
 31206 ;;		wreg, status,2, status,0, cstack
 31207 ;; Tracked objects:
 31208 ;;		On entry : 3F/1
 31209 ;;		On exit  : 3B/39
 31210 ;;		Unchanged: 0/0
 31211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31216 ;;Total ram usage:        2 bytes
 31217 ;; Hardware stack levels used:    1
 31218 ;; Hardware stack levels required when called:    8
 31219 ;; This function calls:
 31220 ;;		_TMR0_SetInterruptHandler
 31221 ;; This function is called by:
 31222 ;;		_SYSTEM_Initialize
 31223 ;; This function uses a non-reentrant model
 31224 ;;
 31225                           
 31226                           	psect	text212
 31227  008218                     __ptext212:
 31228                           	opt callstack 0
 31229  008218                     _TMR0_Initialize:
 31230                           	opt callstack 21
 31231                           
 31232                           ; BSR set to: 1
 31233                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 31234                           
 31235                           ; BSR set to: 61
 31236                           ;incstack = 0
 31237  008218  0E40               	movlw	64
 31238  00821A  6EB9               	movwf	185,c	;volatile
 31239                           
 31240                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 31241  00821C  0EC1               	movlw	193
 31242  00821E  6EB7               	movwf	183,c	;volatile
 31243                           
 31244                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 31245  008220  0E80               	movlw	128
 31246  008222  6EB6               	movwf	182,c	;volatile
 31247                           
 31248                           ; BSR set to: 1
 31249                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 31250  008224  50B6               	movf	182,w,c	;volatile
 31251  008226  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 31252  00822C  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 31253  00822E  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 31254  008234  6A04               	clrf	??_TMR0_Initialize^0,c
 31255  008236  1004               	iorwf	??_TMR0_Initialize^0,w,c
 31256  008238  6FE7               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 31257  00823A  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 31258  00823C  6FE8               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 31259                           
 31260                           ; BSR set to: 1
 31261                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 31262  00823E  0139               	movlb	57	; () banked
 31263  008240  9FA3               	bcf	163,7,b	;volatile
 31264                           
 31265                           ; BSR set to: 57
 31266                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 31267  008242  8F93               	bsf	147,7,b	;volatile
 31268                           
 31269                           ; BSR set to: 57
 31270                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 31271  008244  0E74               	movlw	low _TMR0_DefaultInterruptHandler
 31272  008246  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 31273  008248  0E8D               	movlw	high _TMR0_DefaultInterruptHandler
 31274  00824A  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 31275  00824C  EC7B  F046         	call	_TMR0_SetInterruptHandler	;wreg free
 31276                           
 31277                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 31278  008250  0E90               	movlw	144
 31279  008252  6EB8               	movwf	184,c	;volatile
 31280  008254  0012               	return		;funcret
 31281  008256                     __end_of_TMR0_Initialize:
 31282                           	opt callstack 0
 31283                           
 31284 ;; *************** function _TMR0_SetInterruptHandler *****************
 31285 ;; Defined at:
 31286 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 31287 ;; Parameters:    Size  Location     Type
 31288 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31289 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 31290 ;; Auto vars:     Size  Location     Type
 31291 ;;		None
 31292 ;; Return value:  Size  Location     Type
 31293 ;;                  1    wreg      void 
 31294 ;; Registers used:
 31295 ;;		wreg, status,2, status,0
 31296 ;; Tracked objects:
 31297 ;;		On entry : 3B/3D
 31298 ;;		On exit  : 3B/39
 31299 ;;		Unchanged: 3A/0
 31300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31305 ;;Total ram usage:        2 bytes
 31306 ;; Hardware stack levels used:    1
 31307 ;; Hardware stack levels required when called:    7
 31308 ;; This function calls:
 31309 ;;		Nothing
 31310 ;; This function is called by:
 31311 ;;		_TMR0_Initialize
 31312 ;;		_main
 31313 ;; This function uses a non-reentrant model
 31314 ;;
 31315                           
 31316                           	psect	text213
 31317  008CF6                     __ptext213:
 31318                           	opt callstack 0
 31319  008CF6                     _TMR0_SetInterruptHandler:
 31320                           	opt callstack 23
 31321                           
 31322                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 31323                           
 31324                           ;incstack = 0
 31325  008CF6  0060  F008  F1E5   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 31326  008CFC  0060  F00C  F1E6   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 31327  008D02  0012               	return		;funcret
 31328  008D04                     __end_of_TMR0_SetInterruptHandler:
 31329                           	opt callstack 0
 31330                           
 31331 ;; *************** function _SPI1_Initialize *****************
 31332 ;; Defined at:
 31333 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31334 ;; Parameters:    Size  Location     Type
 31335 ;;		None
 31336 ;; Auto vars:     Size  Location     Type
 31337 ;;		None
 31338 ;; Return value:  Size  Location     Type
 31339 ;;                  1    wreg      void 
 31340 ;; Registers used:
 31341 ;;		wreg, status,2
 31342 ;; Tracked objects:
 31343 ;;		On entry : 3F/39
 31344 ;;		On exit  : 3F/3D
 31345 ;;		Unchanged: 0/0
 31346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31351 ;;Total ram usage:        0 bytes
 31352 ;; Hardware stack levels used:    1
 31353 ;; Hardware stack levels required when called:    7
 31354 ;; This function calls:
 31355 ;;		Nothing
 31356 ;; This function is called by:
 31357 ;;		_SYSTEM_Initialize
 31358 ;; This function uses a non-reentrant model
 31359 ;;
 31360                           
 31361                           	psect	text214
 31362  008AFA                     __ptext214:
 31363                           	opt callstack 0
 31364  008AFA                     _SPI1_Initialize:
 31365                           	opt callstack 22
 31366                           
 31367                           ; BSR set to: 57
 31368                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 31369                           
 31370                           ;incstack = 0
 31371  008AFA  0E82               	movlw	130
 31372  008AFC  013D               	movlb	61	; () banked
 31373  008AFE  6F14               	movwf	20,b	;volatile
 31374                           
 31375                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 31376  008B00  0EC0               	movlw	192
 31377  008B02  6F15               	movwf	21,b	;volatile
 31378                           
 31379                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 31380  008B04  0E03               	movlw	3
 31381  008B06  6F16               	movwf	22,b	;volatile
 31382                           
 31383                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 31384  008B08  0E01               	movlw	1
 31385  008B0A  6F1C               	movwf	28,b	;volatile
 31386                           
 31387                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 31388  008B0C  0E03               	movlw	3
 31389  008B0E  6F19               	movwf	25,b	;volatile
 31390                           
 31391                           ; BSR set to: 61
 31392                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 31393  008B10  94C3               	bcf	195,2,c	;volatile
 31394                           
 31395                           ; BSR set to: 61
 31396  008B12  0012               	return		;funcret
 31397  008B14                     __end_of_SPI1_Initialize:
 31398                           	opt callstack 0
 31399                           
 31400 ;; *************** function _PMD_Initialize *****************
 31401 ;; Defined at:
 31402 ;;		line 76 in file "mcc_generated_files/mcc.c"
 31403 ;; Parameters:    Size  Location     Type
 31404 ;;		None
 31405 ;; Auto vars:     Size  Location     Type
 31406 ;;		None
 31407 ;; Return value:  Size  Location     Type
 31408 ;;                  1    wreg      void 
 31409 ;; Registers used:
 31410 ;;		wreg, status,2
 31411 ;; Tracked objects:
 31412 ;;		On entry : 3F/39
 31413 ;;		On exit  : 3F/39
 31414 ;;		Unchanged: 0/0
 31415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31420 ;;Total ram usage:        0 bytes
 31421 ;; Hardware stack levels used:    1
 31422 ;; Hardware stack levels required when called:    7
 31423 ;; This function calls:
 31424 ;;		Nothing
 31425 ;; This function is called by:
 31426 ;;		_SYSTEM_Initialize
 31427 ;; This function uses a non-reentrant model
 31428 ;;
 31429                           
 31430                           	psect	text215
 31431  0088FE                     __ptext215:
 31432                           	opt callstack 0
 31433  0088FE                     _PMD_Initialize:
 31434                           	opt callstack 22
 31435                           
 31436                           ; BSR set to: 57
 31437                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 31438                           
 31439                           ; BSR set to: 61
 31440                           ;incstack = 0
 31441  0088FE  0E00               	movlw	0
 31442  008900  6FC0               	movwf	192,b	;volatile
 31443                           
 31444                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 31445  008902  0E00               	movlw	0
 31446  008904  6FC1               	movwf	193,b	;volatile
 31447                           
 31448                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 31449  008906  0E00               	movlw	0
 31450  008908  6FC2               	movwf	194,b	;volatile
 31451                           
 31452                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 31453  00890A  0E00               	movlw	0
 31454  00890C  6FC3               	movwf	195,b	;volatile
 31455                           
 31456                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 31457  00890E  0E00               	movlw	0
 31458  008910  6FC4               	movwf	196,b	;volatile
 31459                           
 31460                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 31461  008912  0E00               	movlw	0
 31462  008914  6FC5               	movwf	197,b	;volatile
 31463                           
 31464                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 31465  008916  0E00               	movlw	0
 31466  008918  6FC6               	movwf	198,b	;volatile
 31467                           
 31468                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 31469  00891A  0E00               	movlw	0
 31470  00891C  6FC7               	movwf	199,b	;volatile
 31471                           
 31472                           ; BSR set to: 57
 31473  00891E  0012               	return		;funcret
 31474  008920                     __end_of_PMD_Initialize:
 31475                           	opt callstack 0
 31476                           
 31477 ;; *************** function _PIN_MANAGER_Initialize *****************
 31478 ;; Defined at:
 31479 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 31480 ;; Parameters:    Size  Location     Type
 31481 ;;		None
 31482 ;; Auto vars:     Size  Location     Type
 31483 ;;		None
 31484 ;; Return value:  Size  Location     Type
 31485 ;;                  1    wreg      void 
 31486 ;; Registers used:
 31487 ;;		wreg, status,2
 31488 ;; Tracked objects:
 31489 ;;		On entry : 3F/39
 31490 ;;		On exit  : 3F/3A
 31491 ;;		Unchanged: 0/0
 31492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31497 ;;Total ram usage:        0 bytes
 31498 ;; Hardware stack levels used:    1
 31499 ;; Hardware stack levels required when called:    7
 31500 ;; This function calls:
 31501 ;;		Nothing
 31502 ;; This function is called by:
 31503 ;;		_SYSTEM_Initialize
 31504 ;; This function uses a non-reentrant model
 31505 ;;
 31506                           
 31507                           	psect	text216
 31508  00703E                     __ptext216:
 31509                           	opt callstack 0
 31510  00703E                     _PIN_MANAGER_Initialize:
 31511                           	opt callstack 22
 31512                           
 31513                           ; BSR set to: 57
 31514                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 31515                           
 31516                           ; BSR set to: 57
 31517                           ;incstack = 0
 31518  00703E  0E08               	movlw	8
 31519  007040  6EBA               	movwf	186,c	;volatile
 31520                           
 31521                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 31522  007042  0E00               	movlw	0
 31523  007044  6EBB               	movwf	187,c	;volatile
 31524                           
 31525                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 31526  007046  0E40               	movlw	64
 31527  007048  6EBC               	movwf	188,c	;volatile
 31528                           
 31529                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 31530  00704A  0EF7               	movlw	247
 31531  00704C  6EC2               	movwf	194,c	;volatile
 31532                           
 31533                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 31534  00704E  0EFE               	movlw	254
 31535  007050  6EC3               	movwf	195,c	;volatile
 31536                           
 31537                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 31538  007052  0E1C               	movlw	28
 31539  007054  6EC4               	movwf	196,c	;volatile
 31540                           
 31541                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 31542  007056  0E29               	movlw	41
 31543  007058  013A               	movlb	58	; () banked
 31544  00705A  6F60               	movwf	96,b	;volatile
 31545                           
 31546                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 31547  00705C  0ECD               	movlw	205
 31548  00705E  6F50               	movwf	80,b	;volatile
 31549                           
 31550                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 31551  007060  0EF2               	movlw	242
 31552  007062  6F40               	movwf	64,b	;volatile
 31553                           
 31554                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 31555  007064  0E00               	movlw	0
 31556  007066  6F81               	movwf	129,b	;volatile
 31557                           
 31558                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 31559  007068  0E00               	movlw	0
 31560  00706A  6F51               	movwf	81,b	;volatile
 31561                           
 31562                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 31563  00706C  0E00               	movlw	0
 31564  00706E  6F41               	movwf	65,b	;volatile
 31565                           
 31566                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 31567  007070  0E08               	movlw	8
 31568  007072  6F61               	movwf	97,b	;volatile
 31569                           
 31570                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 31571  007074  0E00               	movlw	0
 31572  007076  6F5A               	movwf	90,b	;volatile
 31573                           
 31574                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 31575  007078  0E00               	movlw	0
 31576  00707A  6F5B               	movwf	91,b	;volatile
 31577                           
 31578                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 31579  00707C  0E00               	movlw	0
 31580  00707E  6F6A               	movwf	106,b	;volatile
 31581                           
 31582                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 31583  007080  0E00               	movlw	0
 31584  007082  6F6B               	movwf	107,b	;volatile
 31585                           
 31586                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 31587  007084  0E00               	movlw	0
 31588  007086  6F42               	movwf	66,b	;volatile
 31589                           
 31590                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 31591  007088  0E06               	movlw	6
 31592  00708A  6F52               	movwf	82,b	;volatile
 31593                           
 31594                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 31595  00708C  0E18               	movlw	24
 31596  00708E  6F62               	movwf	98,b	;volatile
 31597                           
 31598                           ; BSR set to: 58
 31599                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 31600  007090  6943               	setf	67,b	;volatile
 31601                           
 31602                           ; BSR set to: 58
 31603                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 31604  007092  6953               	setf	83,b	;volatile
 31605                           
 31606                           ; BSR set to: 58
 31607                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 31608  007094  6963               	setf	99,b	;volatile
 31609                           
 31610                           ; BSR set to: 58
 31611                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 31612  007096  6944               	setf	68,b	;volatile
 31613                           
 31614                           ; BSR set to: 58
 31615                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 31616  007098  6954               	setf	84,b	;volatile
 31617                           
 31618                           ; BSR set to: 58
 31619                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 31620  00709A  6964               	setf	100,b	;volatile
 31621                           
 31622                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 31623  00709C  0E08               	movlw	8
 31624  00709E  6F84               	movwf	132,b	;volatile
 31625                           
 31626                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 31627  0070A0  0E13               	movlw	19
 31628  0070A2  6F10               	movwf	16,b	;volatile
 31629                           
 31630                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 31631  0070A4  0E17               	movlw	23
 31632  0070A6  6FDE               	movwf	222,b	;volatile
 31633                           
 31634                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 31635  0070A8  0E05               	movlw	5
 31636  0070AA  6FE0               	movwf	224,b	;volatile
 31637                           
 31638                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 31639  0070AC  0E1F               	movlw	31
 31640  0070AE  6F08               	movwf	8,b	;volatile
 31641                           
 31642                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 31643  0070B0  0E14               	movlw	20
 31644  0070B2  6F11               	movwf	17,b	;volatile
 31645                           
 31646                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 31647  0070B4  0E12               	movlw	18
 31648  0070B6  6FE5               	movwf	229,b	;volatile
 31649                           
 31650                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 31651  0070B8  0E1F               	movlw	31
 31652  0070BA  6FE6               	movwf	230,b	;volatile
 31653                           
 31654                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 31655  0070BC  0E1E               	movlw	30
 31656  0070BE  6F17               	movwf	23,b	;volatile
 31657                           
 31658                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 31659  0070C0  0E09               	movlw	9
 31660  0070C2  6FDF               	movwf	223,b	;volatile
 31661                           
 31662                           ; BSR set to: 58
 31663  0070C4  0012               	return		;funcret
 31664  0070C6                     __end_of_PIN_MANAGER_Initialize:
 31665                           	opt callstack 0
 31666                           
 31667 ;; *************** function _OSCILLATOR_Initialize *****************
 31668 ;; Defined at:
 31669 ;;		line 62 in file "mcc_generated_files/mcc.c"
 31670 ;; Parameters:    Size  Location     Type
 31671 ;;		None
 31672 ;; Auto vars:     Size  Location     Type
 31673 ;;		None
 31674 ;; Return value:  Size  Location     Type
 31675 ;;                  1    wreg      void 
 31676 ;; Registers used:
 31677 ;;		wreg, status,2
 31678 ;; Tracked objects:
 31679 ;;		On entry : 3F/3A
 31680 ;;		On exit  : 3F/39
 31681 ;;		Unchanged: 0/0
 31682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31687 ;;Total ram usage:        0 bytes
 31688 ;; Hardware stack levels used:    1
 31689 ;; Hardware stack levels required when called:    7
 31690 ;; This function calls:
 31691 ;;		Nothing
 31692 ;; This function is called by:
 31693 ;;		_SYSTEM_Initialize
 31694 ;; This function uses a non-reentrant model
 31695 ;;
 31696                           
 31697                           	psect	text217
 31698  008B44                     __ptext217:
 31699                           	opt callstack 0
 31700  008B44                     _OSCILLATOR_Initialize:
 31701                           	opt callstack 22
 31702                           
 31703                           ; BSR set to: 58
 31704                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 31705                           
 31706                           ; BSR set to: 58
 31707                           ;incstack = 0
 31708  008B44  0E60               	movlw	96
 31709  008B46  0139               	movlb	57	; () banked
 31710  008B48  6FD9               	movwf	217,b	;volatile
 31711                           
 31712                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 31713  008B4A  0E00               	movlw	0
 31714  008B4C  6FDB               	movwf	219,b	;volatile
 31715                           
 31716                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 31717  008B4E  0E00               	movlw	0
 31718  008B50  6FDD               	movwf	221,b	;volatile
 31719                           
 31720                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 31721  008B52  0E08               	movlw	8
 31722  008B54  6FDF               	movwf	223,b	;volatile
 31723                           
 31724                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 31725  008B56  0E00               	movlw	0
 31726  008B58  6FDE               	movwf	222,b	;volatile
 31727                           
 31728                           ; BSR set to: 57
 31729  008B5A  0012               	return		;funcret
 31730  008B5C                     __end_of_OSCILLATOR_Initialize:
 31731                           	opt callstack 0
 31732                           
 31733 ;; *************** function _INTERRUPT_Initialize *****************
 31734 ;; Defined at:
 31735 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31736 ;; Parameters:    Size  Location     Type
 31737 ;;		None
 31738 ;; Auto vars:     Size  Location     Type
 31739 ;;  state           1    1[COMRAM] _Bool 
 31740 ;; Return value:  Size  Location     Type
 31741 ;;                  1    wreg      void 
 31742 ;; Registers used:
 31743 ;;		wreg, status,2
 31744 ;; Tracked objects:
 31745 ;;		On entry : 0/0
 31746 ;;		On exit  : 3F/39
 31747 ;;		Unchanged: 0/0
 31748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31753 ;;Total ram usage:        1 bytes
 31754 ;; Hardware stack levels used:    1
 31755 ;; Hardware stack levels required when called:    7
 31756 ;; This function calls:
 31757 ;;		Nothing
 31758 ;; This function is called by:
 31759 ;;		_SYSTEM_Initialize
 31760 ;; This function uses a non-reentrant model
 31761 ;;
 31762                           
 31763                           	psect	text218
 31764  0080A2                     __ptext218:
 31765                           	opt callstack 0
 31766  0080A2                     _INTERRUPT_Initialize:
 31767                           	opt callstack 22
 31768                           
 31769                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31770                           
 31771                           ; BSR set to: 57
 31772                           ;incstack = 0
 31773  0080A2  8AD2               	bsf	210,5,c	;volatile
 31774                           
 31775                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31776  0080A4  0E00               	movlw	0
 31777  0080A6  BED2               	btfsc	16338,7,c	;volatile
 31778  0080A8  0E01               	movlw	1
 31779  0080AA  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 31780                           
 31781                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31782  0080AC  9ED2               	bcf	16338,7,c	;volatile
 31783                           
 31784                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31785  0080AE  0E55               	movlw	85
 31786  0080B0  6ED4               	movwf	212,c	;volatile
 31787                           
 31788                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31789  0080B2  0EAA               	movlw	170
 31790  0080B4  6ED4               	movwf	212,c	;volatile
 31791                           
 31792                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31793  0080B6  90D4               	bcf	212,0,c	;volatile
 31794                           
 31795                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 31796  0080B8  0E00               	movlw	0
 31797  0080BA  6ED7               	movwf	215,c	;volatile
 31798                           
 31799                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 31800  0080BC  0E00               	movlw	0
 31801  0080BE  6ED6               	movwf	214,c	;volatile
 31802                           
 31803                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 31804  0080C0  0E08               	movlw	8
 31805  0080C2  6ED5               	movwf	213,c	;volatile
 31806                           
 31807                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31808  0080C4  0E55               	movlw	85
 31809  0080C6  6ED4               	movwf	212,c	;volatile
 31810                           
 31811                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31812  0080C8  0EAA               	movlw	170
 31813  0080CA  6ED4               	movwf	212,c	;volatile
 31814                           
 31815                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31816  0080CC  80D4               	bsf	212,0,c	;volatile
 31817                           
 31818                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31819  0080CE  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 31820  0080D0  D002               	bra	u5885
 31821  0080D2  9ED2               	bcf	16338,7,c	;volatile
 31822  0080D4  D001               	bra	u5886
 31823  0080D6                     u5885:
 31824  0080D6  8ED2               	bsf	16338,7,c	;volatile
 31825  0080D8                     u5886:
 31826                           
 31827                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 31828  0080D8  0139               	movlb	57	; () banked
 31829  0080DA  8983               	bsf	131,4,b	;volatile
 31830                           
 31831                           ; BSR set to: 57
 31832                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 31833  0080DC  8783               	bsf	131,3,b	;volatile
 31834                           
 31835                           ; BSR set to: 57
 31836                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 31837  0080DE  9F83               	bcf	131,7,b	;volatile
 31838                           
 31839                           ; BSR set to: 57
 31840  0080E0  0012               	return		;funcret
 31841  0080E2                     __end_of_INTERRUPT_Initialize:
 31842                           	opt callstack 0
 31843                           
 31844 ;; *************** function _CRC_Initialize *****************
 31845 ;; Defined at:
 31846 ;;		line 76 in file "mcc_generated_files/crc.c"
 31847 ;; Parameters:    Size  Location     Type
 31848 ;;		None
 31849 ;; Auto vars:     Size  Location     Type
 31850 ;;  seed            2    4[COMRAM] unsigned short 
 31851 ;;  poly            2    2[COMRAM] unsigned short 
 31852 ;; Return value:  Size  Location     Type
 31853 ;;                  1    wreg      void 
 31854 ;; Registers used:
 31855 ;;		wreg, status,2, status,0
 31856 ;; Tracked objects:
 31857 ;;		On entry : 3F/39
 31858 ;;		On exit  : 3F/1
 31859 ;;		Unchanged: 0/0
 31860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31862 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31864 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31865 ;;Total ram usage:        5 bytes
 31866 ;; Hardware stack levels used:    1
 31867 ;; Hardware stack levels required when called:    7
 31868 ;; This function calls:
 31869 ;;		Nothing
 31870 ;; This function is called by:
 31871 ;;		_SYSTEM_Initialize
 31872 ;; This function uses a non-reentrant model
 31873 ;;
 31874                           
 31875                           	psect	text219
 31876  0075F2                     __ptext219:
 31877                           	opt callstack 0
 31878  0075F2                     _CRC_Initialize:
 31879                           	opt callstack 22
 31880                           
 31881                           ; BSR set to: 57
 31882                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 31883                           
 31884                           ; BSR set to: 57
 31885                           ;incstack = 0
 31886  0075F2  0E80               	movlw	128
 31887  0075F4  6F68               	movwf	104,b	;volatile
 31888                           
 31889                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 31890  0075F6  0E7F               	movlw	127
 31891  0075F8  6F69               	movwf	105,b	;volatile
 31892                           
 31893                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 31894  0075FA  0E00               	movlw	0
 31895  0075FC  6F62               	movwf	98,b	;volatile
 31896                           
 31897                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 31898  0075FE  0E00               	movlw	0
 31899  007600  6F63               	movwf	99,b	;volatile
 31900                           
 31901                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 31902  007602  0E00               	movlw	0
 31903  007604  6F7C               	movwf	124,b	;volatile
 31904                           
 31905                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 31906  007606  0E00               	movlw	0
 31907  007608  6F78               	movwf	120,b	;volatile
 31908                           
 31909                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 31910  00760A  0E00               	movlw	0
 31911  00760C  6F77               	movwf	119,b	;volatile
 31912                           
 31913                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 31914  00760E  0E00               	movlw	0
 31915  007610  6F76               	movwf	118,b	;volatile
 31916                           
 31917                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 31918  007612  0E3F               	movlw	63
 31919  007614  6F7B               	movwf	123,b	;volatile
 31920                           
 31921                           ; BSR set to: 57
 31922                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 31923  007616  697A               	setf	122,b	;volatile
 31924                           
 31925                           ; BSR set to: 57
 31926                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 31927  007618  6979               	setf	121,b	;volatile
 31928                           
 31929                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 31930  00761A  0E00               	movlw	0
 31931  00761C  6F7D               	movwf	125,b	;volatile
 31932                           
 31933                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 31934  00761E  0E80               	movlw	128
 31935  007620  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 31936  007622  0E05               	movlw	5
 31937  007624  6E03               	movwf	CRC_Initialize@poly^0,c
 31938                           
 31939                           ; BSR set to: 57
 31940                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 31941  007626  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 31942                           
 31943                           ; BSR set to: 57
 31944                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 31945  00762C  0E05               	movlw	5
 31946  00762E  6F66               	movwf	102,b	;volatile
 31947                           
 31948                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 31949  007630  0E00               	movlw	0
 31950  007632  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 31951  007634  0E00               	movlw	0
 31952  007636  6E05               	movwf	CRC_Initialize@seed^0,c
 31953                           
 31954                           ; BSR set to: 57
 31955                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 31956  007638  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 31957                           
 31958                           ; BSR set to: 57
 31959                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 31960  00763E  0E00               	movlw	0
 31961  007640  6F62               	movwf	98,b	;volatile
 31962                           
 31963                           ; BSR set to: 57
 31964                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 31965  007642  3969               	swapf	105,w,b	;volatile
 31966  007644  0B0F               	andlw	15
 31967  007646  6E02               	movwf	??_CRC_Initialize^0,c
 31968  007648  2802               	incf	??_CRC_Initialize^0,w,c
 31969  00764A  0101               	movlb	1	; () banked
 31970  00764C  6FDA               	movwf	_crcObj& (0+255),b
 31971                           
 31972                           ; BSR set to: 1
 31973                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 31974  00764E  0139               	movlb	57	; () banked
 31975  007650  5169               	movf	105,w,b	;volatile
 31976  007652  0B0F               	andlw	15
 31977  007654  6E02               	movwf	??_CRC_Initialize^0,c
 31978  007656  2802               	incf	??_CRC_Initialize^0,w,c
 31979  007658  0101               	movlb	1	; () banked
 31980  00765A  6FDB               	movwf	(_crcObj+1)& (0+255),b
 31981                           
 31982                           ; BSR set to: 1
 31983  00765C  0012               	return		;funcret
 31984  00765E                     __end_of_CRC_Initialize:
 31985                           	opt callstack 0
 31986                           
 31987 ;; *************** function _TMR0_ISR *****************
 31988 ;; Defined at:
 31989 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 31990 ;; Parameters:    Size  Location     Type
 31991 ;;		None
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;		None
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      void 
 31996 ;; Registers used:
 31997 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31998 ;; Tracked objects:
 31999 ;;		On entry : 0/0
 32000 ;;		On exit  : 0/0
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32007 ;;Total ram usage:        1 bytes
 32008 ;; Hardware stack levels used:    1
 32009 ;; Hardware stack levels required when called:    6
 32010 ;; This function calls:
 32011 ;;		_TMR0_CallBack
 32012 ;; This function is called by:
 32013 ;;		Interrupt level 1
 32014 ;; This function uses a non-reentrant model
 32015 ;;
 32016                           
 32017                           	psect	text220
 32018  008920                     __ptext220:
 32019                           	opt callstack 0
 32020  008920                     _TMR0_ISR:
 32021                           	opt callstack 9
 32022                           
 32023                           ; BSR set to: 1
 32024                           ;incstack = 0
 32025  008920  006F FF60  F001    	movff	status,??_TMR0_ISR
 32026                           
 32027                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 32028  008926  0139               	movlb	57	; () banked
 32029  008928  9FA3               	bcf	163,7,b	;volatile
 32030                           
 32031                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 32032  00892A  0060  F7A3  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 32033                           
 32034                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 32035  008930  0060  F79F  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 32036                           
 32037                           ; BSR set to: 57
 32038                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 32039  008936  ECC1  F044         	call	_TMR0_CallBack	;wreg free
 32040  00893A  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 32041  008940  0011               	retfie		f
 32042  008942                     __end_of_TMR0_ISR:
 32043                           	opt callstack 0
 32044                           
 32045 ;; *************** function _TMR0_CallBack *****************
 32046 ;; Defined at:
 32047 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 32048 ;; Parameters:    Size  Location     Type
 32049 ;;		None
 32050 ;; Auto vars:     Size  Location     Type
 32051 ;;		None
 32052 ;; Return value:  Size  Location     Type
 32053 ;;                  1    wreg      void 
 32054 ;; Registers used:
 32055 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32056 ;; Tracked objects:
 32057 ;;		On entry : 3F/39
 32058 ;;		On exit  : 0/0
 32059 ;;		Unchanged: 0/0
 32060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32065 ;;Total ram usage:        0 bytes
 32066 ;; Hardware stack levels used:    1
 32067 ;; Hardware stack levels required when called:    5
 32068 ;; This function calls:
 32069 ;;		Absolute function
 32070 ;;		_TMR0_DefaultInterruptHandler
 32071 ;;		_Timer0Handler
 32072 ;; This function is called by:
 32073 ;;		_TMR0_ISR
 32074 ;; This function uses a non-reentrant model
 32075 ;;
 32076                           
 32077                           	psect	text221
 32078  008982                     __ptext221:
 32079                           	opt callstack 0
 32080  008982                     _TMR0_CallBack:
 32081                           	opt callstack 9
 32082                           
 32083                           ; BSR set to: 57
 32084                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 32085                           
 32086                           ;incstack = 0
 32087  008982  0101               	movlb	1	; () banked
 32088  008984  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32089  008986  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32090  008988  B4D8               	btfsc	status,2,c
 32091  00898A  0012               	return	
 32092                           
 32093                           ; BSR set to: 1
 32094                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 32095  00898C  D801               	call	i1u1264_28
 32096  00898E  0012               	return	
 32097  008990                     i1u1264_28:
 32098  008990  0005               	push	
 32099  008992  6EFA               	movwf	pclath,c
 32100  008994  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32101  008996  6EFD               	movwf	tosl,c
 32102  008998  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32103  00899A  6EFE               	movwf	tosh,c
 32104  00899C  6AFF               	clrf	tosu,c
 32105  00899E  50FA               	movf	pclath,w,c
 32106  0089A0  0012               	return		;indir
 32107  0089A2                     __end_of_TMR0_CallBack:
 32108                           	opt callstack 0
 32109                           
 32110 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 32111 ;; Defined at:
 32112 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 32113 ;; Parameters:    Size  Location     Type
 32114 ;;		None
 32115 ;; Auto vars:     Size  Location     Type
 32116 ;;		None
 32117 ;; Return value:  Size  Location     Type
 32118 ;;                  1    wreg      void 
 32119 ;; Registers used:
 32120 ;;		None
 32121 ;; Tracked objects:
 32122 ;;		On entry : 3F/1
 32123 ;;		On exit  : 3F/1
 32124 ;;		Unchanged: 3F/0
 32125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32130 ;;Total ram usage:        0 bytes
 32131 ;; Hardware stack levels used:    1
 32132 ;; Hardware stack levels required when called:    4
 32133 ;; This function calls:
 32134 ;;		Nothing
 32135 ;; This function is called by:
 32136 ;;		_TMR0_Initialize
 32137 ;;		_TMR0_CallBack
 32138 ;; This function uses a non-reentrant model
 32139 ;;
 32140                           
 32141                           	psect	text222
 32142  008D74                     __ptext222:
 32143                           	opt callstack 0
 32144  008D74                     _TMR0_DefaultInterruptHandler:
 32145                           	opt callstack 9
 32146                           
 32147                           ; BSR set to: 1
 32148                           
 32149                           ;incstack = 0
 32150  008D74  0012               	return		;funcret
 32151  008D76                     __end_of_TMR0_DefaultInterruptHandler:
 32152                           	opt callstack 0
 32153                           
 32154 ;; *************** function _Timer0Handler *****************
 32155 ;; Defined at:
 32156 ;;		line 7 in file "../hal/hal_src/Timers.c"
 32157 ;; Parameters:    Size  Location     Type
 32158 ;;		None
 32159 ;; Auto vars:     Size  Location     Type
 32160 ;;		None
 32161 ;; Return value:  Size  Location     Type
 32162 ;;                  1    wreg      void 
 32163 ;; Registers used:
 32164 ;;		wreg, status,2, status,0
 32165 ;; Tracked objects:
 32166 ;;		On entry : 3F/1
 32167 ;;		On exit  : 3F/0
 32168 ;;		Unchanged: 0/0
 32169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32174 ;;Total ram usage:        0 bytes
 32175 ;; Hardware stack levels used:    1
 32176 ;; Hardware stack levels required when called:    4
 32177 ;; This function calls:
 32178 ;;		Nothing
 32179 ;; This function is called by:
 32180 ;;		_main
 32181 ;;		_TMR0_CallBack
 32182 ;; This function uses a non-reentrant model
 32183 ;;
 32184                           
 32185                           	psect	text223
 32186  007C24                     __ptext223:
 32187                           	opt callstack 0
 32188  007C24                     _Timer0Handler:
 32189                           	opt callstack 9
 32190                           
 32191                           ; BSR set to: 1
 32192                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 32193                           
 32194                           ; BSR set to: 1
 32195                           ;incstack = 0
 32196  007C24  0100               	movlb	0	; () banked
 32197  007C26  51F3               	movf	_txTimeOut& (0+255),w,b	;volatile
 32198  007C28  11F4               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 32199  007C2A  B4D8               	btfsc	status,2,c
 32200  007C2C  D003               	goto	i1l12995
 32201                           
 32202                           ; BSR set to: 0
 32203                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 32204  007C2E  07F3               	decf	_txTimeOut& (0+255),f,b	;volatile
 32205  007C30  A0D8               	btfss	status,0,c
 32206  007C32  07F4               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 32207  007C34                     i1l12995:
 32208                           
 32209                           ; BSR set to: 0
 32210                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 32211  007C34  51FD               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 32212  007C36  11FE               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 32213  007C38  B4D8               	btfsc	status,2,c
 32214  007C3A  D003               	goto	i1l12999
 32215                           
 32216                           ; BSR set to: 0
 32217                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 32218  007C3C  07FD               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 32219  007C3E  A0D8               	btfss	status,0,c
 32220  007C40  07FE               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 32221  007C42                     i1l12999:
 32222                           
 32223                           ; BSR set to: 0
 32224                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 32225  007C42  51F5               	movf	_cadTimeOut& (0+255),w,b	;volatile
 32226  007C44  11F6               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 32227  007C46  B4D8               	btfsc	status,2,c
 32228  007C48  D003               	goto	i1l13003
 32229                           
 32230                           ; BSR set to: 0
 32231                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 32232  007C4A  07F5               	decf	_cadTimeOut& (0+255),f,b	;volatile
 32233  007C4C  A0D8               	btfss	status,0,c
 32234  007C4E  07F6               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 32235  007C50                     i1l13003:
 32236                           
 32237                           ; BSR set to: 0
 32238                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 32239  007C50  51F7               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 32240  007C52  11F8               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 32241  007C54  B4D8               	btfsc	status,2,c
 32242  007C56  D003               	goto	i1l13007
 32243                           
 32244                           ; BSR set to: 0
 32245                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 32246  007C58  07F7               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 32247  007C5A  A0D8               	btfss	status,0,c
 32248  007C5C  07F8               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 32249  007C5E                     i1l13007:
 32250                           
 32251                           ; BSR set to: 0
 32252                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 32253  007C5E  0101               	movlb	1	; () banked
 32254  007C60  51DD               	movf	_ledtimer& (0+255),w,b	;volatile
 32255  007C62  11DE               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 32256  007C64  B4D8               	btfsc	status,2,c
 32257  007C66  D003               	goto	i1l996
 32258                           
 32259                           ; BSR set to: 1
 32260                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 32261  007C68  07DD               	decf	_ledtimer& (0+255),f,b	;volatile
 32262  007C6A  A0D8               	btfss	status,0,c
 32263  007C6C  07DE               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 32264  007C6E                     i1l996:
 32265                           
 32266                           ; BSR set to: 1
 32267                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 32268  007C6E  0100               	movlb	0	; () banked
 32269  007C70  4BE4               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 32270  007C72  2BE5               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 32271                           
 32272                           ; BSR set to: 0
 32273  007C74  0012               	return		;funcret
 32274  007C76                     __end_of_Timer0Handler:
 32275                           	opt callstack 0
 32276                           
 32277 ;; *************** function _Default_ISR *****************
 32278 ;; Defined at:
 32279 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 32280 ;; Parameters:    Size  Location     Type
 32281 ;;		None
 32282 ;; Auto vars:     Size  Location     Type
 32283 ;;		None
 32284 ;; Return value:  Size  Location     Type
 32285 ;;                  1    wreg      void 
 32286 ;; Registers used:
 32287 ;;		None
 32288 ;; Tracked objects:
 32289 ;;		On entry : 0/0
 32290 ;;		On exit  : 0/0
 32291 ;;		Unchanged: 0/0
 32292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32297 ;;Total ram usage:        0 bytes
 32298 ;; Hardware stack levels used:    1
 32299 ;; This function calls:
 32300 ;;		Nothing
 32301 ;; This function is called by:
 32302 ;;		Interrupt level 2
 32303 ;; This function uses a non-reentrant model
 32304 ;;
 32305                           
 32306                           	psect	text224
 32307  008D78                     __ptext224:
 32308                           	opt callstack 0
 32309  008D78                     _Default_ISR:
 32310                           	opt callstack 12
 32311                           
 32312                           ; BSR set to: 0
 32313                           ;incstack = 0
 32314  008D78  0011               	retfie		f
 32315  008D7A                     __end_of_Default_ISR:
 32316                           	opt callstack 0
 32317                           
 32318 ;; *************** function _UART1_tx_vect_isr *****************
 32319 ;; Defined at:
 32320 ;;		line 247 in file "mcc_generated_files/uart1.c"
 32321 ;; Parameters:    Size  Location     Type
 32322 ;;		None
 32323 ;; Auto vars:     Size  Location     Type
 32324 ;;		None
 32325 ;; Return value:  Size  Location     Type
 32326 ;;                  1    wreg      void 
 32327 ;; Registers used:
 32328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32329 ;; Tracked objects:
 32330 ;;		On entry : 0/0
 32331 ;;		On exit  : 0/0
 32332 ;;		Unchanged: 0/0
 32333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32338 ;;Total ram usage:        0 bytes
 32339 ;; Hardware stack levels used:    1
 32340 ;; Hardware stack levels required when called:    1
 32341 ;; This function calls:
 32342 ;;		Absolute function
 32343 ;;		_UART1_Transmit_ISR
 32344 ;; This function is called by:
 32345 ;;		Interrupt level 2
 32346 ;; This function uses a non-reentrant model
 32347 ;;
 32348                           
 32349                           	psect	text225
 32350  0089A4                     __ptext225:
 32351                           	opt callstack 0
 32352  0089A4                     _UART1_tx_vect_isr:
 32353                           	opt callstack 11
 32354                           
 32355                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 32356                           
 32357                           ;incstack = 0
 32358  0089A4  0101               	movlb	1	; () banked
 32359  0089A6  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32360  0089A8  11EA               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32361  0089AA  B4D8               	btfsc	status,2,c
 32362  0089AC  0011               	retfie		f
 32363                           
 32364                           ; BSR set to: 1
 32365                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 32366  0089AE  D801               	call	i2u1274_48
 32367  0089B0  0011               	retfie		f
 32368  0089B2                     i2u1274_48:
 32369  0089B2  0005               	push	
 32370  0089B4  6EFA               	movwf	pclath,c
 32371  0089B6  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32372  0089B8  6EFD               	movwf	tosl,c
 32373  0089BA  51EA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32374  0089BC  6EFE               	movwf	tosh,c
 32375  0089BE  6AFF               	clrf	tosu,c
 32376  0089C0  50FA               	movf	pclath,w,c
 32377  0089C2  0012               	return		;indir
 32378  0089C4                     __end_of_UART1_tx_vect_isr:
 32379                           	opt callstack 0
 32380                           
 32381 ;; *************** function _UART1_Transmit_ISR *****************
 32382 ;; Defined at:
 32383 ;;		line 265 in file "mcc_generated_files/uart1.c"
 32384 ;; Parameters:    Size  Location     Type
 32385 ;;		None
 32386 ;; Auto vars:     Size  Location     Type
 32387 ;;		None
 32388 ;; Return value:  Size  Location     Type
 32389 ;;                  1    wreg      void 
 32390 ;; Registers used:
 32391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32392 ;; Tracked objects:
 32393 ;;		On entry : 3F/1
 32394 ;;		On exit  : 7/1
 32395 ;;		Unchanged: 0/0
 32396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32401 ;;Total ram usage:        0 bytes
 32402 ;; Hardware stack levels used:    1
 32403 ;; This function calls:
 32404 ;;		Nothing
 32405 ;; This function is called by:
 32406 ;;		_UART1_Initialize
 32407 ;;		_UART1_tx_vect_isr
 32408 ;; This function uses a non-reentrant model
 32409 ;;
 32410                           
 32411                           	psect	text226
 32412  0083B6                     __ptext226:
 32413                           	opt callstack 0
 32414  0083B6                     _UART1_Transmit_ISR:
 32415                           	opt callstack 11
 32416                           
 32417                           ; BSR set to: 1
 32418                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 32419                           
 32420                           ;incstack = 0
 32421  0083B6  0E40               	movlw	64
 32422  0083B8  61ED               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 32423  0083BA  D014               	goto	i2l13403
 32424                           
 32425                           ; BSR set to: 1
 32426                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 32427  0083BC  0E00               	movlw	low _uart1TxBuffer
 32428  0083BE  0100               	movlb	0	; () banked
 32429  0083C0  25E8               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 32430  0083C2  6ED9               	movwf	fsr2l,c
 32431  0083C4  6ADA               	clrf	fsr2h,c
 32432  0083C6  0E03               	movlw	high _uart1TxBuffer
 32433  0083C8  22DA               	addwfc	fsr2h,f,c
 32434  0083CA  50DF               	movf	indf2,w,c
 32435  0083CC  013D               	movlb	61	; () banked
 32436  0083CE  6FEA               	movwf	234,b	;volatile
 32437                           
 32438                           ; BSR set to: 61
 32439  0083D0  0100               	movlb	0	; () banked
 32440  0083D2  2BE8               	incf	_uart1TxTail& (0+255),f,b	;volatile
 32441                           
 32442                           ; BSR set to: 0
 32443                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 32444  0083D4  0E3F               	movlw	63
 32445  0083D6  65E8               	cpfsgt	_uart1TxTail& (0+255),b
 32446  0083D8  D002               	goto	i2l13401
 32447                           
 32448                           ; BSR set to: 0
 32449                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 32450  0083DA  0E00               	movlw	0
 32451  0083DC  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 32452  0083DE                     i2l13401:
 32453                           
 32454                           ; BSR set to: 0
 32455                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 32456  0083DE  0101               	movlb	1	; () banked
 32457  0083E0  2BED               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 32458                           
 32459                           ;mcc_generated_files/uart1.c: 279:     }
 32460  0083E2  0012               	return	
 32461  0083E4                     i2l13403:
 32462                           
 32463                           ; BSR set to: 1
 32464                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 32465  0083E4  0E01               	movlw	1
 32466  0083E6  0100               	movlb	0	; () banked
 32467  0083E8  6FF1               	movwf	_tx_done& (0+255),b	;volatile
 32468                           
 32469                           ; BSR set to: 0
 32470                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 32471  0083EA  0139               	movlb	57	; () banked
 32472  0083EC  9993               	bcf	147,4,b	;volatile
 32473  0083EE  0012               	return		;funcret
 32474  0083F0                     __end_of_UART1_Transmit_ISR:
 32475                           	opt callstack 0
 32476                           
 32477 ;; *************** function _UART1_rx_vect_isr *****************
 32478 ;; Defined at:
 32479 ;;		line 255 in file "mcc_generated_files/uart1.c"
 32480 ;; Parameters:    Size  Location     Type
 32481 ;;		None
 32482 ;; Auto vars:     Size  Location     Type
 32483 ;;		None
 32484 ;; Return value:  Size  Location     Type
 32485 ;;                  1    wreg      void 
 32486 ;; Registers used:
 32487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32488 ;; Tracked objects:
 32489 ;;		On entry : 0/0
 32490 ;;		On exit  : 0/0
 32491 ;;		Unchanged: 0/0
 32492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32497 ;;Total ram usage:        0 bytes
 32498 ;; Hardware stack levels used:    1
 32499 ;; Hardware stack levels required when called:    3
 32500 ;; This function calls:
 32501 ;;		Absolute function
 32502 ;;		_UART1_Receive_ISR
 32503 ;; This function is called by:
 32504 ;;		Interrupt level 2
 32505 ;; This function uses a non-reentrant model
 32506 ;;
 32507                           
 32508                           	psect	text227
 32509  0089C4                     __ptext227:
 32510                           	opt callstack 0
 32511  0089C4                     _UART1_rx_vect_isr:
 32512                           	opt callstack 9
 32513                           
 32514                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 32515                           
 32516                           ;incstack = 0
 32517  0089C4  0101               	movlb	1	; () banked
 32518  0089C6  51EB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32519  0089C8  11EC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32520  0089CA  B4D8               	btfsc	status,2,c
 32521  0089CC  0011               	retfie		f
 32522                           
 32523                           ; BSR set to: 1
 32524                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 32525  0089CE  D801               	call	i2u1276_48
 32526  0089D0  0011               	retfie		f
 32527  0089D2                     i2u1276_48:
 32528  0089D2  0005               	push	
 32529  0089D4  6EFA               	movwf	pclath,c
 32530  0089D6  51EB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32531  0089D8  6EFD               	movwf	tosl,c
 32532  0089DA  51EC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32533  0089DC  6EFE               	movwf	tosh,c
 32534  0089DE  6AFF               	clrf	tosu,c
 32535  0089E0  50FA               	movf	pclath,w,c
 32536  0089E2  0012               	return		;indir
 32537  0089E4                     __end_of_UART1_rx_vect_isr:
 32538                           	opt callstack 0
 32539                           
 32540 ;; *************** function _UART1_Receive_ISR *****************
 32541 ;; Defined at:
 32542 ;;		line 292 in file "mcc_generated_files/uart1.c"
 32543 ;; Parameters:    Size  Location     Type
 32544 ;;		None
 32545 ;; Auto vars:     Size  Location     Type
 32546 ;;		None
 32547 ;; Return value:  Size  Location     Type
 32548 ;;                  1    wreg      void 
 32549 ;; Registers used:
 32550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32551 ;; Tracked objects:
 32552 ;;		On entry : 3F/1
 32553 ;;		On exit  : 0/0
 32554 ;;		Unchanged: 0/0
 32555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32560 ;;Total ram usage:        0 bytes
 32561 ;; Hardware stack levels used:    1
 32562 ;; Hardware stack levels required when called:    2
 32563 ;; This function calls:
 32564 ;;		Absolute function
 32565 ;;		_UART1_DefaultErrorHandler
 32566 ;;		_UART1_DefaultFramingErrorHandler
 32567 ;;		_UART1_DefaultOverrunErrorHandler
 32568 ;;		_UART1_RxDataHandler
 32569 ;; This function is called by:
 32570 ;;		_UART1_Initialize
 32571 ;;		_UART1_rx_vect_isr
 32572 ;; This function uses a non-reentrant model
 32573 ;;
 32574                           
 32575                           	psect	text228
 32576  006BC4                     __ptext228:
 32577                           	opt callstack 0
 32578  006BC4                     _UART1_Receive_ISR:
 32579                           	opt callstack 9
 32580                           
 32581                           ; BSR set to: 1
 32582                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 32583                           
 32584                           ;incstack = 0
 32585  006BC4  0E28               	movlw	low _uart1RxStatusBuffer
 32586  006BC6  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32587  006BC8  6ED9               	movwf	fsr2l,c
 32588  006BCA  6ADA               	clrf	fsr2h,c
 32589  006BCC  0E01               	movlw	high _uart1RxStatusBuffer
 32590  006BCE  22DA               	addwfc	fsr2h,f,c
 32591  006BD0  0E00               	movlw	0
 32592  006BD2  6EDF               	movwf	indf2,c
 32593                           
 32594                           ; BSR set to: 1
 32595                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 32596  006BD4  013D               	movlb	61	; () banked
 32597  006BD6  A7F9               	btfss	249,3,b	;volatile
 32598  006BD8  D013               	goto	i2u1268_49
 32599                           
 32600                           ; BSR set to: 61
 32601                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 32602  006BDA  0E28               	movlw	low _uart1RxStatusBuffer
 32603  006BDC  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32604  006BDE  6ED9               	movwf	fsr2l,c
 32605  006BE0  6ADA               	clrf	fsr2h,c
 32606  006BE2  0E01               	movlw	high _uart1RxStatusBuffer
 32607  006BE4  22DA               	addwfc	fsr2h,f,c
 32608  006BE6  0101               	movlb	1	; () banked
 32609  006BE8  82DF               	bsf	indf2,1,c
 32610                           
 32611                           ; BSR set to: 1
 32612                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 32613  006BEA  D801               	call	i2u1268_48
 32614  006BEC  D009               	goto	i2u1268_49
 32615  006BEE                     i2u1268_48:
 32616  006BEE  0005               	push	
 32617  006BF0  6EFA               	movwf	pclath,c
 32618  006BF2  51E3               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 32619  006BF4  6EFD               	movwf	tosl,c
 32620  006BF6  51E4               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 32621  006BF8  6EFE               	movwf	tosh,c
 32622  006BFA  6AFF               	clrf	tosu,c
 32623  006BFC  50FA               	movf	pclath,w,c
 32624  006BFE  0012               	return		;indir
 32625  006C00                     i2u1268_49:
 32626                           
 32627                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 32628  006C00  013D               	movlb	61	; () banked
 32629  006C02  A3F9               	btfss	249,1,b	;volatile
 32630  006C04  D013               	goto	i2u1270_49
 32631                           
 32632                           ; BSR set to: 61
 32633                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 32634  006C06  0E28               	movlw	low _uart1RxStatusBuffer
 32635  006C08  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32636  006C0A  6ED9               	movwf	fsr2l,c
 32637  006C0C  6ADA               	clrf	fsr2h,c
 32638  006C0E  0E01               	movlw	high _uart1RxStatusBuffer
 32639  006C10  22DA               	addwfc	fsr2h,f,c
 32640  006C12  0101               	movlb	1	; () banked
 32641  006C14  84DF               	bsf	indf2,2,c
 32642                           
 32643                           ; BSR set to: 1
 32644                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 32645  006C16  D801               	call	i2u1270_48
 32646  006C18  D009               	goto	i2u1270_49
 32647  006C1A                     i2u1270_48:
 32648  006C1A  0005               	push	
 32649  006C1C  6EFA               	movwf	pclath,c
 32650  006C1E  51E1               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 32651  006C20  6EFD               	movwf	tosl,c
 32652  006C22  51E2               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 32653  006C24  6EFE               	movwf	tosh,c
 32654  006C26  6AFF               	clrf	tosu,c
 32655  006C28  50FA               	movf	pclath,w,c
 32656  006C2A  0012               	return		;indir
 32657  006C2C                     i2u1270_49:
 32658                           
 32659                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 32660  006C2C  0E28               	movlw	low _uart1RxStatusBuffer
 32661  006C2E  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32662  006C30  6ED9               	movwf	fsr2l,c
 32663  006C32  6ADA               	clrf	fsr2h,c
 32664  006C34  0E01               	movlw	high _uart1RxStatusBuffer
 32665  006C36  22DA               	addwfc	fsr2h,f,c
 32666  006C38  50DF               	movf	indf2,w,c
 32667  006C3A  B4D8               	btfsc	status,2,c
 32668  006C3C  D00C               	goto	i2l13425
 32669                           
 32670                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 32671  006C3E  D801               	call	i2u1272_48
 32672  006C40  0012               	return	
 32673  006C42                     i2u1272_48:
 32674  006C42  0005               	push	
 32675  006C44  6EFA               	movwf	pclath,c
 32676  006C46  0101               	movlb	1	; () banked
 32677  006C48  51DF               	movf	_UART1_ErrorHandler& (0+255),w,b
 32678  006C4A  6EFD               	movwf	tosl,c
 32679  006C4C  51E0               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 32680  006C4E  6EFE               	movwf	tosh,c
 32681  006C50  6AFF               	clrf	tosu,c
 32682  006C52  50FA               	movf	pclath,w,c
 32683  006C54  0012               	return		;indir
 32684  006C56                     i2l13425:
 32685                           
 32686                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 32687  006C56  EC18  F044         	call	_UART1_RxDataHandler	;wreg free
 32688  006C5A  0012               	return		;funcret
 32689  006C5C                     __end_of_UART1_Receive_ISR:
 32690                           	opt callstack 0
 32691                           
 32692 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 32693 ;; Defined at:
 32694 ;;		line 328 in file "mcc_generated_files/uart1.c"
 32695 ;; Parameters:    Size  Location     Type
 32696 ;;		None
 32697 ;; Auto vars:     Size  Location     Type
 32698 ;;		None
 32699 ;; Return value:  Size  Location     Type
 32700 ;;                  1    wreg      void 
 32701 ;; Registers used:
 32702 ;;		None
 32703 ;; Tracked objects:
 32704 ;;		On entry : 3F/1
 32705 ;;		On exit  : 3F/1
 32706 ;;		Unchanged: 3F/0
 32707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32712 ;;Total ram usage:        0 bytes
 32713 ;; Hardware stack levels used:    1
 32714 ;; This function calls:
 32715 ;;		Nothing
 32716 ;; This function is called by:
 32717 ;;		_UART1_Initialize
 32718 ;;		_UART1_Receive_ISR
 32719 ;; This function uses a non-reentrant model
 32720 ;;
 32721                           
 32722                           	psect	text229
 32723  008D7A                     __ptext229:
 32724                           	opt callstack 0
 32725  008D7A                     _UART1_DefaultOverrunErrorHandler:
 32726                           	opt callstack 10
 32727                           
 32728                           ; BSR set to: 1
 32729                           
 32730                           ;incstack = 0
 32731  008D7A  0012               	return		;funcret
 32732  008D7C                     __end_of_UART1_DefaultOverrunErrorHandler:
 32733                           	opt callstack 0
 32734                           
 32735 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 32736 ;; Defined at:
 32737 ;;		line 326 in file "mcc_generated_files/uart1.c"
 32738 ;; Parameters:    Size  Location     Type
 32739 ;;		None
 32740 ;; Auto vars:     Size  Location     Type
 32741 ;;		None
 32742 ;; Return value:  Size  Location     Type
 32743 ;;                  1    wreg      void 
 32744 ;; Registers used:
 32745 ;;		None
 32746 ;; Tracked objects:
 32747 ;;		On entry : 3F/1
 32748 ;;		On exit  : 3F/1
 32749 ;;		Unchanged: 3F/0
 32750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32755 ;;Total ram usage:        0 bytes
 32756 ;; Hardware stack levels used:    1
 32757 ;; This function calls:
 32758 ;;		Nothing
 32759 ;; This function is called by:
 32760 ;;		_UART1_Initialize
 32761 ;;		_UART1_Receive_ISR
 32762 ;; This function uses a non-reentrant model
 32763 ;;
 32764                           
 32765                           	psect	text230
 32766  008D7C                     __ptext230:
 32767                           	opt callstack 0
 32768  008D7C                     _UART1_DefaultFramingErrorHandler:
 32769                           	opt callstack 10
 32770                           
 32771                           ; BSR set to: 1
 32772                           
 32773                           ; BSR set to: 1
 32774                           ;incstack = 0
 32775  008D7C  0012               	return		;funcret
 32776  008D7E                     __end_of_UART1_DefaultFramingErrorHandler:
 32777                           	opt callstack 0
 32778                           
 32779 ;; *************** function _UART1_DefaultErrorHandler *****************
 32780 ;; Defined at:
 32781 ;;		line 330 in file "mcc_generated_files/uart1.c"
 32782 ;; Parameters:    Size  Location     Type
 32783 ;;		None
 32784 ;; Auto vars:     Size  Location     Type
 32785 ;;		None
 32786 ;; Return value:  Size  Location     Type
 32787 ;;                  1    wreg      void 
 32788 ;; Registers used:
 32789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32790 ;; Tracked objects:
 32791 ;;		On entry : 3F/1
 32792 ;;		On exit  : 3F/0
 32793 ;;		Unchanged: 0/0
 32794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32799 ;;Total ram usage:        0 bytes
 32800 ;; Hardware stack levels used:    1
 32801 ;; Hardware stack levels required when called:    1
 32802 ;; This function calls:
 32803 ;;		_UART1_RxDataHandler
 32804 ;; This function is called by:
 32805 ;;		_UART1_Initialize
 32806 ;;		_UART1_Receive_ISR
 32807 ;; This function uses a non-reentrant model
 32808 ;;
 32809                           
 32810                           	psect	text231
 32811  008D5C                     __ptext231:
 32812                           	opt callstack 0
 32813  008D5C                     _UART1_DefaultErrorHandler:
 32814                           	opt callstack 9
 32815                           
 32816                           ; BSR set to: 1
 32817                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 32818                           
 32819                           ; BSR set to: 1
 32820                           ;incstack = 0
 32821  008D5C  EC18  F044         	call	_UART1_RxDataHandler	;wreg free
 32822                           
 32823                           ; BSR set to: 0
 32824  008D60  0012               	return		;funcret
 32825  008D62                     __end_of_UART1_DefaultErrorHandler:
 32826                           	opt callstack 0
 32827                           
 32828 ;; *************** function _UART1_RxDataHandler *****************
 32829 ;; Defined at:
 32830 ;;		line 316 in file "mcc_generated_files/uart1.c"
 32831 ;; Parameters:    Size  Location     Type
 32832 ;;		None
 32833 ;; Auto vars:     Size  Location     Type
 32834 ;;		None
 32835 ;; Return value:  Size  Location     Type
 32836 ;;                  1    wreg      void 
 32837 ;; Registers used:
 32838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32839 ;; Tracked objects:
 32840 ;;		On entry : 0/3D
 32841 ;;		On exit  : 3F/0
 32842 ;;		Unchanged: 0/0
 32843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32848 ;;Total ram usage:        0 bytes
 32849 ;; Hardware stack levels used:    1
 32850 ;; This function calls:
 32851 ;;		Nothing
 32852 ;; This function is called by:
 32853 ;;		_UART1_Receive_ISR
 32854 ;;		_UART1_DefaultErrorHandler
 32855 ;; This function uses a non-reentrant model
 32856 ;;
 32857                           
 32858                           	psect	text232
 32859  008830                     __ptext232:
 32860                           	opt callstack 0
 32861  008830                     _UART1_RxDataHandler:
 32862                           	opt callstack 10
 32863                           
 32864                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 32865                           
 32866                           ; BSR set to: 0
 32867                           ;incstack = 0
 32868  008830  0E38               	movlw	low _uart1RxBuffer
 32869  008832  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32870  008834  6ED9               	movwf	fsr2l,c
 32871  008836  6ADA               	clrf	fsr2h,c
 32872  008838  0E01               	movlw	high _uart1RxBuffer
 32873  00883A  22DA               	addwfc	fsr2h,f,c
 32874  00883C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32875  008842  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 32876                           
 32877                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32878  008844  0E0F               	movlw	15
 32879  008846  645E               	cpfsgt	_uart1RxHead^0,c
 32880  008848  D002               	goto	i2l12335
 32881                           
 32882                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 32883  00884A  0E00               	movlw	0
 32884  00884C  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 32885  00884E                     i2l12335:
 32886                           
 32887                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 32888  00884E  0100               	movlb	0	; () banked
 32889  008850  2BE6               	incf	_uart1RxCount& (0+255),f,b	;volatile
 32890                           
 32891                           ; BSR set to: 0
 32892  008852  0012               	return		;funcret
 32893  008854                     __end_of_UART1_RxDataHandler:
 32894                           	opt callstack 0
 32895                           
 32896                           ;
 32897                           ; Interrupt Vector Table @ 0x8
 32898                           ;
 32899                           
 32900                           	psect	ivt0x8
 32901  000008                     __pivt0x8:
 32902                           	opt callstack 0
 32903  000008                     ivt0x8_base:
 32904                           	opt callstack 0
 32905                           
 32906                           ; Vector 0 : SWINT
 32907  000008  235E               	dw	_Default_ISR shr (0+2)
 32908                           
 32909                           ; Vector 1 : HLVD
 32910  00000A  235E               	dw	_Default_ISR shr (0+2)
 32911                           
 32912                           ; Vector 2 : OSF
 32913  00000C  235E               	dw	_Default_ISR shr (0+2)
 32914                           
 32915                           ; Vector 3 : CSW
 32916  00000E  235E               	dw	_Default_ISR shr (0+2)
 32917                           
 32918                           ; Vector 4 : NVM
 32919  000010  235E               	dw	_Default_ISR shr (0+2)
 32920                           
 32921                           ; Vector 5 : SCAN
 32922  000012  235E               	dw	_Default_ISR shr (0+2)
 32923                           
 32924                           ; Vector 6 : CRC
 32925  000014  235E               	dw	_Default_ISR shr (0+2)
 32926                           
 32927                           ; Vector 7 : IOC
 32928  000016  235E               	dw	_Default_ISR shr (0+2)
 32929                           
 32930                           ; Vector 8 : INT0
 32931  000018  235E               	dw	_Default_ISR shr (0+2)
 32932                           
 32933                           ; Vector 9 : ZCD
 32934  00001A  235E               	dw	_Default_ISR shr (0+2)
 32935                           
 32936                           ; Vector 10 : AD
 32937  00001C  235E               	dw	_Default_ISR shr (0+2)
 32938                           
 32939                           ; Vector 11 : ADT
 32940  00001E  235E               	dw	_Default_ISR shr (0+2)
 32941                           
 32942                           ; Vector 12 : CMP1
 32943  000020  235E               	dw	_Default_ISR shr (0+2)
 32944                           
 32945                           ; Vector 13 : SMT1
 32946  000022  235E               	dw	_Default_ISR shr (0+2)
 32947                           
 32948                           ; Vector 14 : SMT1PRA
 32949  000024  235E               	dw	_Default_ISR shr (0+2)
 32950                           
 32951                           ; Vector 15 : SMT1PRW
 32952  000026  235E               	dw	_Default_ISR shr (0+2)
 32953                           
 32954                           ; Vector 16 : DMA1SCNT
 32955  000028  235E               	dw	_Default_ISR shr (0+2)
 32956                           
 32957                           ; Vector 17 : DMA1DCNT
 32958  00002A  235E               	dw	_Default_ISR shr (0+2)
 32959                           
 32960                           ; Vector 18 : DMA1OR
 32961  00002C  235E               	dw	_Default_ISR shr (0+2)
 32962                           
 32963                           ; Vector 19 : DMA1A
 32964  00002E  235E               	dw	_Default_ISR shr (0+2)
 32965                           
 32966                           ; Vector 20 : SPI1RX
 32967  000030  235E               	dw	_Default_ISR shr (0+2)
 32968                           
 32969                           ; Vector 21 : SPI1TX
 32970  000032  235E               	dw	_Default_ISR shr (0+2)
 32971                           
 32972                           ; Vector 22 : SPI1
 32973  000034  235E               	dw	_Default_ISR shr (0+2)
 32974                           
 32975                           ; Vector 23 : I2C1RX
 32976  000036  235E               	dw	_Default_ISR shr (0+2)
 32977                           
 32978                           ; Vector 24 : I2C1TX
 32979  000038  235E               	dw	_Default_ISR shr (0+2)
 32980                           
 32981                           ; Vector 25 : I2C1
 32982  00003A  235E               	dw	_Default_ISR shr (0+2)
 32983                           
 32984                           ; Vector 26 : I2C1E
 32985  00003C  235E               	dw	_Default_ISR shr (0+2)
 32986                           
 32987                           ; Vector 27 : U1RX
 32988  00003E  2271               	dw	_UART1_rx_vect_isr shr (0+2)
 32989                           
 32990                           ; Vector 28 : U1TX
 32991  000040  2269               	dw	_UART1_tx_vect_isr shr (0+2)
 32992                           
 32993                           ; Vector 29 : U1E
 32994  000042  235E               	dw	_Default_ISR shr (0+2)
 32995                           
 32996                           ; Vector 30 : U1
 32997  000044  235E               	dw	_Default_ISR shr (0+2)
 32998                           
 32999                           ; Vector 31 : TMR0
 33000  000046  2248               	dw	_TMR0_ISR shr (0+2)
 33001                           
 33002                           ; Vector 32 : TMR1
 33003  000048  235E               	dw	_Default_ISR shr (0+2)
 33004                           
 33005                           ; Vector 33 : TMR1G
 33006  00004A  235E               	dw	_Default_ISR shr (0+2)
 33007                           
 33008                           ; Vector 34 : TMR2
 33009  00004C  235E               	dw	_Default_ISR shr (0+2)
 33010                           
 33011                           ; Vector 35 : CCP1
 33012  00004E  235E               	dw	_Default_ISR shr (0+2)
 33013                           
 33014                           ; Vector 36 : Undefined
 33015  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33016                           
 33017                           ; Vector 37 : NCO1
 33018  000052  235E               	dw	_Default_ISR shr (0+2)
 33019                           
 33020                           ; Vector 38 : CWG1
 33021  000054  235E               	dw	_Default_ISR shr (0+2)
 33022                           
 33023                           ; Vector 39 : CLC1
 33024  000056  235E               	dw	_Default_ISR shr (0+2)
 33025                           
 33026                           ; Vector 40 : INT1
 33027  000058  235E               	dw	_Default_ISR shr (0+2)
 33028                           
 33029                           ; Vector 41 : CMP2
 33030  00005A  235E               	dw	_Default_ISR shr (0+2)
 33031                           
 33032                           ; Vector 42 : DMA2SCNT
 33033  00005C  235E               	dw	_Default_ISR shr (0+2)
 33034                           
 33035                           ; Vector 43 : DMA2DCNT
 33036  00005E  235E               	dw	_Default_ISR shr (0+2)
 33037                           
 33038                           ; Vector 44 : DMA2OR
 33039  000060  235E               	dw	_Default_ISR shr (0+2)
 33040                           
 33041                           ; Vector 45 : DMA2A
 33042  000062  235E               	dw	_Default_ISR shr (0+2)
 33043                           
 33044                           ; Vector 46 : I2C2RX
 33045  000064  235E               	dw	_Default_ISR shr (0+2)
 33046                           
 33047                           ; Vector 47 : I2C2TX
 33048  000066  235E               	dw	_Default_ISR shr (0+2)
 33049                           
 33050                           ; Vector 48 : I2C2
 33051  000068  235E               	dw	_Default_ISR shr (0+2)
 33052                           
 33053                           ; Vector 49 : I2C2E
 33054  00006A  235E               	dw	_Default_ISR shr (0+2)
 33055                           
 33056                           ; Vector 50 : U2RX
 33057  00006C  235E               	dw	_Default_ISR shr (0+2)
 33058                           
 33059                           ; Vector 51 : U2TX
 33060  00006E  235E               	dw	_Default_ISR shr (0+2)
 33061                           
 33062                           ; Vector 52 : U2E
 33063  000070  235E               	dw	_Default_ISR shr (0+2)
 33064                           
 33065                           ; Vector 53 : U2
 33066  000072  235E               	dw	_Default_ISR shr (0+2)
 33067                           
 33068                           ; Vector 54 : TMR3
 33069  000074  235E               	dw	_Default_ISR shr (0+2)
 33070                           
 33071                           ; Vector 55 : TMR3G
 33072  000076  235E               	dw	_Default_ISR shr (0+2)
 33073                           
 33074                           ; Vector 56 : TMR4
 33075  000078  235E               	dw	_Default_ISR shr (0+2)
 33076                           
 33077                           ; Vector 57 : CCP2
 33078  00007A  235E               	dw	_Default_ISR shr (0+2)
 33079                           
 33080                           ; Vector 58 : Undefined
 33081  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33082                           
 33083                           ; Vector 59 : CWG2
 33084  00007E  235E               	dw	_Default_ISR shr (0+2)
 33085                           
 33086                           ; Vector 60 : CLC2
 33087  000080  235E               	dw	_Default_ISR shr (0+2)
 33088                           
 33089                           ; Vector 61 : INT2
 33090  000082  235E               	dw	_Default_ISR shr (0+2)
 33091                           
 33092                           ; Vector 62 : Undefined
 33093  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33094                           
 33095                           ; Vector 63 : Undefined
 33096  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33097                           
 33098                           ; Vector 64 : Undefined
 33099  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33100                           
 33101                           ; Vector 65 : Undefined
 33102  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33103                           
 33104                           ; Vector 66 : Undefined
 33105  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33106                           
 33107                           ; Vector 67 : Undefined
 33108  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33109                           
 33110                           ; Vector 68 : Undefined
 33111  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33112                           
 33113                           ; Vector 69 : Undefined
 33114  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33115                           
 33116                           ; Vector 70 : TMR5
 33117  000094  235E               	dw	_Default_ISR shr (0+2)
 33118                           
 33119                           ; Vector 71 : TMR5G
 33120  000096  235E               	dw	_Default_ISR shr (0+2)
 33121                           
 33122                           ; Vector 72 : TMR6
 33123  000098  235E               	dw	_Default_ISR shr (0+2)
 33124                           
 33125                           ; Vector 73 : CCP3
 33126  00009A  235E               	dw	_Default_ISR shr (0+2)
 33127                           
 33128                           ; Vector 74 : CWG3
 33129  00009C  235E               	dw	_Default_ISR shr (0+2)
 33130                           
 33131                           ; Vector 75 : CLC3
 33132  00009E  235E               	dw	_Default_ISR shr (0+2)
 33133                           
 33134                           ; Vector 76 : Undefined
 33135  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33136                           
 33137                           ; Vector 77 : Undefined
 33138  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33139                           
 33140                           ; Vector 78 : Undefined
 33141  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33142                           
 33143                           ; Vector 79 : Undefined
 33144  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33145                           
 33146                           ; Vector 80 : CCP4
 33147  0000A8  235E               	dw	_Default_ISR shr (0+2)
 33148                           
 33149                           ; Vector 81 : CLC4
 33150  0000AA  235E               	dw	_Default_ISR shr (0+2)
 33151  0000AC                     ivt0x8_undefint:
 33152                           	opt callstack 0
 33153  0000AC  00FF               	reset	
 33154                           
 33155                           	psect	text233
 33156  000000                     __ptext233:
 33157                           	opt callstack 0
 33158                           
 33159                           	psect	rparam
 33160  0000                     tosu	equ	0x3FFF
 33161                           tosh	equ	0x3FFE
 33162                           tosl	equ	0x3FFD
 33163                           stkptr	equ	0x3FFC
 33164                           pclatu	equ	0x3FFB
 33165                           pclath	equ	0x3FFA
 33166                           pcl	equ	0x3FF9
 33167                           tblptru	equ	0x3FF8
 33168                           tblptrh	equ	0x3FF7
 33169                           tblptrl	equ	0x3FF6
 33170                           tablat	equ	0x3FF5
 33171                           prodh	equ	0x3FF4
 33172                           prodl	equ	0x3FF3
 33173                           indf0	equ	0x3FEF
 33174                           postinc0	equ	0x3FEE
 33175                           postdec0	equ	0x3FED
 33176                           preinc0	equ	0x3FEC
 33177                           plusw0	equ	0x3FEB
 33178                           fsr0h	equ	0x3FEA
 33179                           fsr0l	equ	0x3FE9
 33180                           wreg	equ	0x3FE8
 33181                           indf1	equ	0x3FE7
 33182                           postinc1	equ	0x3FE6
 33183                           postdec1	equ	0x3FE5
 33184                           preinc1	equ	0x3FE4
 33185                           plusw1	equ	0x3FE3
 33186                           fsr1h	equ	0x3FE2
 33187                           fsr1l	equ	0x3FE1
 33188                           bsr	equ	0x3FE0
 33189                           indf2	equ	0x3FDF
 33190                           postinc2	equ	0x3FDE
 33191                           postdec2	equ	0x3FDD
 33192                           preinc2	equ	0x3FDC
 33193                           plusw2	equ	0x3FDB
 33194                           fsr2h	equ	0x3FDA
 33195                           fsr2l	equ	0x3FD9
 33196                           status	equ	0x3FD8


Data Sizes:
    Strings     552
    Constant    270
    Data        30
    BSS         2193
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    122     159
    BANK1           256      4     256
    BANK2           256      0     212
    BANK3           256      0     242
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    S4569$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S84$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2743$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7756_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), appDataInd@data(BANK0[65]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), appDataInd@data(BANK0[65]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), appDataInd@data(BANK0[65]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    nwkFrame@nwkFramePayloadSize@frame_7056...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_7056.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6632...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6632.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5548...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5548.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5326...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5326.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4601PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4569SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4569SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4470...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4470.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3915...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3915.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3491...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3491.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkFrame@nwkFramePayloadSize@frame_3045...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3045.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2743NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame_2841...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2841.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    nwkFrame@nwkFramePayloadSize@frame_1621...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1621.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    S891$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    S173NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S115NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S115NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    S84$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S83NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _CircularBufferPushBack->_memcpy
    _executeATCommand->_printf
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxSendAck->_nwkTxFrame
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxIndicateFrame->_appDataInd
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _NWK_TaskHandler->_nwkRxTaskHandler

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2272252
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1846899
                                             73 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0    9491
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9423
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    6724
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1832353
                                             68 BANK0      5     3      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   42647
                                             22 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                      2     0      2   42647
                                             22 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  161116
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  156613
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  158080
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   55496
                                             22 BANK0      2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  158032
                                             22 BANK0      7     5      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    4921
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  156582
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5600
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2    9654
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2316
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4     891
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4     891
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   62670
                                             22 BANK0      8     6      2
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   75313
                                             22 BANK0     46    44      2
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   72956
                                             22 BANK0     16    14      2
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7160
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4883
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     422
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   42642
                                             22 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   42543
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   48505
                                             22 BANK0      2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   65562
                                             22 BANK0      7     5      2
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12668
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     492
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     622
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     288
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     332
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  6     6      0   36485
                                             47 COMRAM     6     6      0
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0      88
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   17013
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    7368
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    5962
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    3556
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1514
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  302563
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    8904
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2787
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2954
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    2026
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  161789
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  161789
                                             74 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   18062
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0    9798
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       4     0      4    1270
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     773
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   38925
                                             67 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                            _receive
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    5837
                                             66 COMRAM     1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             56 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             40 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    8524
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  131870
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   23080
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    2031
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     840
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   16593
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    4899
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   94577
                                              0 BANK1      4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18523
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9171
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    5012
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1828
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     908
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     234
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    2513
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     424
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   59575
                                            117 BANK0      5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    8122
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   51055
                                             91 BANK0     26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     197
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    3575
                                             22 BANK0      5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1    1076
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     684
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    2298
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    2067
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                          69    68      1   45789
                                             22 BANK0     69    68      1
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                               9     3      6   42543
                                             84 COMRAM     9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   37446
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    38      4   36841
                                             69 COMRAM     8     4      4
                                              0 BANK0     22    22      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    9037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    8141
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _stoa                                                20    17      3    3900
                                             12 COMRAM    20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    9009
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    6645
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1254
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    2329
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1773
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2727
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1332
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   15156
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    8361
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     447
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   14213
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   13498
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    4165
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     512
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     512
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2614
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1766
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1223
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     338
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    4840
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   85243
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   84575
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   84575
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     111
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    4990
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   10033
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   13374
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1127
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1161
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1212
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1784
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5033
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    7346
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    6159
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   17013
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6026
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6026
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6026
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    4899
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2     864
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     446
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1127
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1028
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     329
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2398
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     515
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1586
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     668
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     321
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (17) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (18) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _memset
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                     _isdigit
                     _stoa
                       _fputc
                         _putch
                           _UART1_Write
                       _strlen
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                       _toupper
                         _islower
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     4B9      37       29.5%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F2      11       94.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E0      32        0.0%
DATA                 0      0     999       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 09 20:23:36 2020

                         cmdSetNaddr@tempaddr 007C                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 8AE0                                    _RSSITarget 00F9  
                              _setCodingRate4 8504                            _commandByteCounter 00F0  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0033                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 004D  
              __end_of_nwkRouteNormalizeRanks 83B6                                _SYS_TimerStart 8772  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 000E                                           l206 7718  
                                         l329 6A62                                           l338 58D2  
                                         l355 8D64                                           l348 6870  
                                         l606 7172                                           l379 67C2  
                                         _GIE 01FE97                      __end_of_DIO0_Receive_ISR 6CF2  
                                         _SNR 0167                            _CircularBufferSize 78AA  
                        __end_of_cmdSetParity 6F2A                                           _cad 62E6  
                                         _abs 819C                                           _pad 6524  
                                ?_loadMACAddr 0001                             _NWK_GroupIsMember 8640  
                          nwkRouteFrame@frame 0033                               nwkRxSendAck@ack 002E  
                     __size_of_PMD_Initialize 0022                           ??_SPI1_ExchangeByte 0002  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                   get_lqi@rssi 0043  
                    nwkDataReqSendFrame@frame 002F                                  ___flmul@aexp 001D  
                                ___flmul@bexp 0022                          _FirmwareVersionMajor FDD4  
                    _DATAEE_ReadByte_Platform 5556                            _UART1_Transmit_ISR 83B6  
                        _FirmwareVersionMinor FDD3                                  ___flmul@sign 001C  
                                ___flmul@temp 0027                                  ___flmul@prod 0023  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                              ?_queueLedEvent 001C                              _SX1276ReadBuffer 879A  
                       __end_of_SYS_TimerInit 8D1C                         queueLedEvent@LEDState 001E  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_get_timer0base 0002  
                                ___fltol@exp1 0042                                          ?_cad 0001  
                                        l1040 8AEE                                          ?_abs 0014  
                             nwkTxFrame@frame 0024                                          l1180 8050  
                                        l2126 1A14                                          l3112 2CEA  
                                        l1600 5E4E                                          l2313 6DD8  
                                        l3114 2CF6                                          l3053 6560  
                                        l3223 7024                                          l3127 235C  
                                        l3064 2112                                          l4032 7C16  
                                        l2184 605E                                          l3129 2368  
                                        l4017 5B88                                          l3066 211E  
                                        l1395 7F70                                          l2293 3C54  
                                        l3093 461E                                          l2615 86F2  
                                        l1591 7ABE                                          l1592 7AA6  
                                        l1913 7E3E                                          l2641 4BF0  
                                        l2571 81F8                                          l4084 0D62  
                                        l3461 5F7E                                          l1933 37A4  
                                        l4077 0D2C                                          l4078 0D5A  
                                        l1775 1F74                                          l3616 7494  
                                        l3634 5A88                                          l3810 13A4  
                             PHY_DataReq@size 0013                                          l3644 64F2  
                                        l3820 15D0                                          l3741 1C4C  
                                        l3725 1B7A                                          l3902 4036  
                                        l3750 1CB4                                          l3726 1B58  
                                        ?_pad 0014                                          l3751 1CB0  
                                        l3851 4092                                          l3827 166A  
                                        l3819 15D4                                          l3871 81CC  
                                        l3858 4118                                          l9481 855E  
                        nwkDataReqConfirm@req 0009                                          l9477 8548  
                                        l9911 7D0A                          _SYS_TimerTaskHandler 4F2E  
                                        l9905 7CCC                                          l9913 7D0C  
                                        STR_1 FE8D                                          STR_2 FF66  
                                        STR_3 FFDF                                          STR_4 FECC  
                                        STR_5 FECC                                          STR_6 FED0  
                                        STR_7 FFDF                                          STR_8 FECC  
                                        STR_9 FECC                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                  __end_of_explicitHeaderMode 8B44                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u8300 1B2C  
                                        u8310 1B3C                                          u9030 70F0  
                                        u8320 1B3E                                          u9050 713A  
                                        u8500 1CAA                                          u9037 70E2  
                                        u8190 6FE6                                          u8350 1B82  
                                        u9057 712C                                          u5885 80D6  
                                        u5886 80D8                                          u8710 15CA  
                                        u9095 805E                                          u8560 1D16  
                                        u8480 1C94                                          u9096 8060  
                                        u8910 7462                                          u8750 1636  
                                        u8670 13B0                                          u8830 6160  
                                        u8760 1654                                          u8840 6198  
                                        u9720 4E78                                          u9810 783C  
                                        u8845 618E                                          u9727 4E6A  
                                        u8880 61EE                                          u9760 4EE4  
                                        u9770 4F0E                                          u9765 4EDE  
                                        u8990 4154                                          u9790 77DC  
                                        u9767 4ED0                                          u9777 4F00  
                           ?_PHY_SetShortAddr 0002                                          _RSSI 0169  
                  _nwkRouteFrameReceived$4119 0012                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUE 003A81                           _CircularBufferSpace 8498  
                            PHY_DataInd@frame 0017                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001              __end_of_nwkTxAckWaitTimerHandler 6E14  
                                        abs@a 0014                                          _cmdI 8D4A  
                         ??_NWK_GroupIsMember 0004                                          _dbuf 0175  
                                        _idle 8D04                                          _atoi 3ED4  
                                        _main 874A                                          _dtoa 2090  
                         nwkRouteFrame@header 0035                              ?_NWK_TaskHandler 0001  
                                        _rand 5048                                          _seed 01D2  
                                        _prec 00DC                                          _nout 0159  
                                        pad@i 001B                                          pad@p 0018  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 001D                                          fsr2l 003FD9  
                                        _stoa 45B2                            ??_PHY_SetShortAddr 0004  
                                        _utoa 2CCE                                          _xtoa 2340  
                     __size_of_SPI1_ReadBlock 0038                      nwkRxRejectDuplicate@diff 001A  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                                NWK_DataReq@req 0002  
                   __end_of_SPI1_ExchangeByte 8AFA                 ??_UART1_SetTxInterruptHandler 0004  
  nwkRxDuplicateRejectionTimerHandler@restart 0014                        CircularBufferSpace@ctx 000A  
                      __end_of_setCodingRate4 853A                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 89C4                                  ___param_bank 000000  
                        __end_of_DIA_ReadByte 8876                    ??_nwkRxHandleReceivedFrame 002B  
                           nwkFrameFree@frame 0002                    __size_of_UART1_is_rx_ready 000E  
                        ??_CircularBufferSize 0004                                   ?_UART1_Read 0001  
                            _SYS_TimerStarted 7F14                       ??_nwkRxHandleIndication 00D7  
                          ?_UART1_rx_vect_isr 0001                                         ??_cad 0011  
                                       ??_abs 0016                                         ??_pad 001A  
                   __size_of_DATAEE_WriteByte 0040                        __end_of_SYS_TimerStart 879A  
                     __end_of_TMR0_Initialize 8256                __end_of_nwkTxDelayTimerHandler 6EA0  
              ??_TMR0_DefaultInterruptHandler 0001                          __size_of_cmdGetRxCnt 0002  
                        ?_CircularBufferSpace 000A                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                              nwkTxFrame@header 0028  
               __end_of_OSCILLATOR_Initialize 8B5C                          __size_of_cmdBootLoad 003A  
                    ??_nwkRouteSendRouteError 002F                                         l10201 1A42  
                                       l11011 83F8                                         l10205 1A46  
                                       l10303 1BC0                                         l11015 83FC  
                                       l11007 83F4                                  ?_SX1276Write 000F  
                                       l10305 1BC4                                         l10313 1BD6  
                                       l10225 1A8A                                         l11025 8404  
                                       l11201 4E4E                                         l11035 872C  
                                       l10331 1C70                                         l10323 1C3C  
                                       l10403 1350                                         l11019 8400  
                                       l10163 792C                                         l10173 6FD6  
                                       l10341 1C86                                         l10237 1AAE  
                                       l10229 1A8E                                         l10421 1390  
                                       l10405 1354                                         l10175 6FE2  
                                       l11039 8736                                         l10503 1646  
                                       l10431 13C2                                         l10423 1394  
                                       l10407 1364                                         l10159 7918  
                                       l11223 77F4                                         l11215 7794  
                                       l10185 7016                                         l10281 1B6A  
                                       l11225 77FC                                         l11217 779C  
                                       l10347 1C90                                         l10267 1B08  
                                       l10515 168A                                         l11149 3A54  
                                       l10533 5F68                                         l10525 5F1E  
                                       l10621 4100                                         l10381 1D3A  
                                       l10615 40C8                                         l10375 1D30  
                                       l10367 1D0A                                         l10295 1B9E  
                                       l10279 1B66                                         l11431 732A  
                                       l10529 5F52                                         l10617 40CE  
                                       l10609 40AA                                         l10473 157C  
                                       l11433 7338                                         l10539 5FB6  
                                       l10627 413E                                         l10619 40DA  
                                       l10379 1D38                                         l11363 7710  
                                       l11355 76D2                                         l11523 5B80  
                                       l11515 5B2E                                         l11507 5AE0  
                                       l10645 418E                                         l10629 414A  
                                       l11613 57DA                                         l11605 575E  
                                       l14013 493E                                         l14005 4902  
                                       l14101 2288                                         l10565 61C4  
                                       l10549 6172                                         l11189 6A9C  
                                       l10591 7452                                         l11607 576C  
                                       l14023 5A02                                         l10479 159A  
                                       l10583 6204                                         l10575 61DC  
                                       l11551 7AB2                                         l11383 786E  
                                       l11391 7886                                         l10655 7104  
                                       l11199 4E40                                         l10593 745E  
                                       l11609 5784                                         l14009 4918  
                                       l14121 22F0                                         l14025 5A16  
                                       l15001 3720                                         l10577 61E8  
                                       l10569 61D4                                         l11385 7876  
                                       l12371 88BE                                         l14035 5A72  
                                       l14051 64DC                                         l14043 6480  
                                       l10499 1628                                         l12283 5ED4  
                                       l12267 5E46                                         l11387 787E  
                                       l14301 3FC8                                         l14125 230A  
                                       l14045 6494                                         l15005 3736  
                                       l10599 7486                                         l14063 7FD6  
                                       l14151 465A                                         l14231 23E2  
                                       l14223 23C0                                         l10759 8380  
                                       l12279 5EB2                                         l12385 7D18  
                                       l14073 20F6                                         l14161 469E  
                                       l14137 45D6                                         l14217 2380  
                                       l15033 3890                                         l15113 2AA8  
                                       l14323 8486                                         l14331 7662  
                                       l14091 214C                                         l14155 4678  
                                       l14147 463E                                         l14403 075A  
                                       l15027 3838                                         l12707 611E  
                                       l16003 7D74                                         l12397 87C6  
                                       l15301 1002                                         l14165 46BA  
                                       l14245 2478                                         l14253 2510  
                                       l14405 077E                                         l15213 311E  
                                       l15133 2B9C                                         l15141 2BC6  
                                       l12709 614E                                         l14319 846E  
                                       l14087 213C                                         l14183 2D42  
                                       l14407 078A                                         l14503 6F7E  
                                       l15135 2BC2                                         l12655 6090  
                                       l12639 7EC0                                         l15321 119C  
                                       l15313 10F8                                         l15305 1054  
                                       l14521 8666                                         l14169 46D6  
                                       l14193 2E6E                                         l14425 089A  
                                       l15129 2B98                                         l15153 2C30  
                                       l12913 7190                                         l12665 60AC  
                                       l16025 331E                                         l14515 8644  
                                       l14339 76B4                                         l14611 518E  
                                       l14291 3F4E                                         l14275 3EE6  
                                       l14435 08FC                                         l14371 069C  
                                       l14363 0688                                         l15251 323E  
                                       l15243 321C                                         l15235 3200  
                                       l15227 31E4                                         l15067 49E8  
                                       l12675 60C8                                         l15411 0D08  
                                       l16051 33EA                                         l16027 3322  
                                       l16035 333A                                         l15341 8510  
                                       l15325 11EE                                         l15317 114A  
                                       l15309 10A6                                         l14621 521A  
                                       l14293 3F56                                         l14285 3F3C  
                                       l14277 3EEA                                         l13901 65BC  
                                       l14269 258A                                         l14445 09A8  
                                       l14365 068A                                         l15157 2C4E  
                                       l16301 351A                                         l12685 60E4  
                                       l16045 33BE                                         l16029 3328  
                                       l16037 3382                                         l14615 51C4  
                                       l14295 3F5C                                         l14383 06A8  
                                       l14375 06A0                                         l14367 0698  
                                       l16303 352A                                         l12695 6100  
                                       l16071 349E                                         l15345 851A  
                                       l15329 1240                                         l14297 3F8A  
                                       l13841 7F92                                         l14465 0AD6  
                                       l14553 7740                                         l14721 39FC  
                                       l14705 3932                                         l16313 3576  
                                       l16401 6D92                                         l12961 55F2  
                                       l12937 55A0                                         l15425 0D48  
                                       l15417 0D1C                                         l16137 585A  
                                       l15355 81F4                                         l15283 527A  
                                       l14563 6B5A                                         l13843 7F96  
                                       l13827 7F5A                                         l14459 0A94  
                                       l14387 06B2                                         l14379 06A4  
                                       l14475 0AF6                                         l14555 7764  
                                       l15267 3292                                         l15259 3270  
                                       l14723 3A0A                                         l15443 0E02  
                                       l15435 0DCA                                         l16075 34C6  
                                       l16059 340E                                         l14813 3C86  
                                       l13853 759E                                         l14469 0AE0  
                                       l14389 06F8                                         l14629 7A4C  
                                       l14645 63DA                                         l14709 3972  
                                       l15613 6952                                         l15621 69D2  
                                       l16325 35E6                                         l16341 36A8  
                                       l12973 561A                                         l12949 55C8  
                                       l16501 00E2                                         l15279 5270  
                                       l14591 458C                                         l14583 451A  
                                       l14559 6B36                                         l14815 3CAA  
                                       l14807 3C3C                                         l13951 435A  
                                       l13863 7C84                                         l14719 39E4  
                                       l15711 187E                                         l16335 362E  
                                       l16327 35E6                                         l15463 0EF6  
                                       l15391 0C6C                                         l15367 0BB0  
                                       l14921 4D44                                         l14913 4D20  
                                       l14905 4CFC                                         l15297 0FB0  
                                       l14577 44AE                                         l14825 3D30  
                                       l16353 725E                                         l13945 4332  
                                       l13873 8168                                         l13865 7C88  
                                       l14497 6F5E                                         l14657 6440  
                                       l15721 1912                                         l15713 18E8  
                                       l16273 669A                                         l16329 35F8  
                                       l16433 4BC8                                         l16417 6E22  
                                       l16425 6E64                                         l12889 825A  
                                       l15377 0C12                                         l16193 6F18  
                                       l16185 6EC8                                         l16601 04AA  
                                       l16521 01A8                                         l16513 0150  
                                       l16505 0104                                         l16259 7DB2  
                                       l14755 73E8                                         l14763 742E  
                                       l14771 65DE                                         l16371 72C8  
                                       l13891 6558                                         l14739 7204  
                                       l14683 7F34                                         l15731 1954  
                                       l16283 66E2                                         l16275 66AC  
                                       l15619 69BA                                         l15643 56F2  
                                       l16339 3668                                         l16451 4BFE  
                                       l16443 4BE2                                         l15475 0F2C  
                                       l15459 0EC0                                         l15395 0C74  
                                       l14941 4D9E                                         l14933 4D7A  
                                       l14925 4D56                                         l14917 4D32  
                                       l14909 4D0E                                         l14597 45A8  
                                       l14589 4556                                         l13957 4380  
                                       l13973 4406                                         l13877 8184  
                                       l13893 656A                                         l14853 6296  
                                       l14677 7F22                                         l14685 7F4C  
                                       l15725 1928                                         l16277 66BE  
                                       l16285 6716                                         l15629 565E  
                                       l15805 6326                                         l16453 4C06  
                                       l16701 4F5C                                         l15493 5BFA  
                                       l15477 0F44                                         l15389 0C3A  
                                       l15469 0F12                                         l16189 6EF0  
                                       l16613 051A                                         l16605 04CC  
                                       l16541 0270                                         l16533 0222  
                                       l16525 01D6                                         l16517 017C  
                                       l16509 012E                                         ?_cmdI 0001  
                                       l16367 7282                                         l16359 7270  
                                       l15655 5DC0                                         l13959 4394  
                                       l13887 6546                                         l14847 6262  
                                       l14839 6232                                         l15719 1902  
                                       l16279 66D0                                         l16295 34E8  
                                       l16439 4BD6                                         l16383 7B86  
                                       l15487 5BBC                                         l15495 5C2C  
                                       l14937 4D8C                                         l14929 4D68  
                                       l14785 667C                                         l15585 1D98  
                                       l16369 72B0                                         l13977 442C  
                                       l13969 43F0                                         l13993 488C  
                                       l13897 6586                                         l15745 19EA  
                                       l15673 16F4                                         l15833 6378  
                                       l16473 4C68                                         l16465 4C46  
                                       l16449 4BFA                                         l16617 0544  
                                       l16609 04F8                                         l16561 032E  
                                       l16553 02E0                                         l16545 029C  
                                       l16537 0244                                         l16529 0200  
                                       l16633 05CA                                         l15569 54C0  
                                       l14947 4DB0                                         l14883 752E  
                                       l14699 38F4                                         l15739 19A6  
                                       l15683 174E                                         l16483 4CA6  
                                       l15923 2F3E                                         l16651 7B3C  
                                       l14949 4DFC                                         l13997 48A6  
                                       l13989 4868                                         l15765 6030  
                                       l15757 5FE8                                         l15693 1790  
                                       l16469 4C4E                                         l16389 7BB2  
                                       l16709 4FBE                                         l16629 059E  
                                       l16581 03EE                                         l16573 03A6  
                                       l16565 0350                                         l16557 0302  
                                       l16549 02BE                                         l16637 05E0  
                                       l16741 3DB8                                         l16733 3D96  
                                       l16725 3D6C                                         l13999 48BA  
                                       l14887 753A                                         l15775 6076  
                                       l15863 6CEA                                         l16487 4CAE  
                                       l16911 27FA                                         l16815 260C  
                                       l16751 3DF0                                         l16743 3DCC  
                                       l16735 3D9E                                         l14897 7546  
                                       l15769 604C                                         l15689 1774  
                                       l16841 26A8                                         l15929 2F5E  
                                       l15881 28F4                                         l16593 045E  
                                       l16585 0410                                         l16577 03CC  
                                       l16569 037A                                         l16497 00B4  
                                       l16667 7AF0                                         l16851 26DA  
                                       l16827 2636                                         l16771 3E3E  
                                       l16763 3E22                       __end_of_SYS_TaskHandler 8C94  
                                       l16861 270C                                         l15973 6D72  
                                       l16597 0488                                         l16589 0432  
                                       l16781 3E5E                                         l16749 3DE8  
                                       l15799 6308                                         l16871 2746  
                                       l15887 2914                                         l16881 2774  
                                       l16891 27A2                                         l16787 3E70  
                                       l16795 3E96                                         l16955 8768  
                                       l16897 27AC                                 ___fltol@sign1 0041  
                                       ?_idle 0001                               __end_of___aodiv 445E  
                                       ?_atoi 0009                               __end_of___fladd 1D5E  
                   __end_of_NWK_GroupIsMember 8672                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 4970  
                                       ?_rand 001A                                         STR_10 FED0  
                                       STR_11 FE46                                         STR_20 FFD4  
                                       STR_12 FFDF                                         STR_21 FFD7  
                                       STR_13 FFD7                                         STR_30 FFD7  
                                       STR_14 FECC                                         STR_22 FF66  
                                       STR_23 FECC                                         STR_15 FE73  
                                       STR_31 FE34                                         STR_40 FECC  
                                       STR_24 FECC                                         STR_16 FFDF  
                                       STR_32 FE22                                         STR_41 FFD7  
                                       STR_17 FFD7                                         STR_25 FFDF  
                                       STR_33 FE9A                                 __CFG_WDTE$OFF 000000  
                                       STR_26 FECC                                         STR_34 FFDF  
                                       STR_18 FFDC                                         STR_50 FFC6  
                                       STR_42 FE80                                         STR_35 FECC  
                                       STR_27 FECC                                         STR_43 FFDF  
                                       STR_51 FFC6                                         STR_19 FFF5  
                                       STR_36 FFD7                                         STR_28 FFD7  
                                       STR_52 FECC                                         STR_44 FECC  
                                       STR_60 FEB4                                         STR_61 FFD7  
                                       STR_53 FFD7                                         STR_45 FFD7  
                                       STR_37 FE65                                         STR_29 FE0D  
                                       STR_54 FFDF                                         STR_38 FFDF  
                                       STR_46 FFEB                                         STR_70 FFE1  
                                       STR_62 FF61                                         STR_39 FECC  
                                       STR_63 FF61                                         STR_71 FFE1  
                                       STR_47 FFEB                                         STR_55 FFFD  
                                       STR_48 FFC0                                         STR_80 FF92  
                                       STR_56 FF39                                         STR_64 FF30  
                                       STR_72 FED8                                         STR_57 FFDF  
                                       STR_81 FF92                                         STR_73 FED8  
                                       STR_49 FFC0                                         STR_65 FF30  
                                       STR_58 FECC                                         STR_66 FFA7  
                                       STR_82 FF76                                         STR_74 FF51  
                                       STR_90 FEF7                                         STR_59 FFD7  
                                       STR_83 FF76                                         STR_75 FF51  
                                       STR_91 FEF7                                         STR_67 FFA7  
                                       STR_68 FFE6                                         STR_76 FF68  
                                       STR_84 FF15                                         STR_92 FEE3  
                                       STR_85 FF15                                         STR_77 FF68  
                                       STR_93 FEE3                                         STR_69 FFE6  
                                       STR_94 FF99                                         STR_78 FF0B  
                                       STR_86 FEA7                                         STR_87 FEA7  
                                       STR_95 FF99                                         STR_79 FF0B  
                                       STR_96 FF7D                                         STR_88 FE56  
                             __end_of___flmul 16A8                                         STR_97 FF7D  
                                       STR_89 FE56                                         STR_98 FF1E  
                                       STR_99 FF1E                            _implicitHeaderMode 8B14  
                             __end_of___fltol 621E                                         ?_stoa 000D  
                       nwkDataReqConfirm@prev 000D                               __end_of___lldiv 703E  
                                       ?_utoa 001F                                         u12100 719C  
                                       u10350 7A98                                         u13010 8638  
                                       u12130 559C                               __end_of___lodiv 5ABA  
                                       u10355 7A92                                         u13020 863A  
                                       u11324 5E9A                                         u11325 5E94  
                                       ?_xtoa 001F                                         u10528 580A  
                             __end_of___llmod 74AE                                         u13130 48BE  
                                       u13210 6498                                         _U1P1H 003DED  
                                       u13051 4360                                         _U1P2H 003DEF  
                                       u14101 6B30                                         u13070 4398  
                                       u13310 2136                                         u11710 8C82  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u13240 7FD2                                         u13320 2296  
                                       u14040 6FAA                                         _U1P2L 003DEE  
                                       u13401 45BC                                         u13161 59E2  
                                       u13250 20C8                                         _U1P3L 003DF0  
                                       u15020 128A                                         u13340 22B8  
                                       u13260 20CA                                         u13180 5A1A  
                                       u13500 2CE0                                         u15100 0BDE  
                                       u13341 22B6                                         u13350 22C6  
                                       u14230 63D6                                         u13360 22CC  
                                       u13600 2414                                         u14320 397A  
                                       u15200 0CBE                                         u15120 0C0E  
                                       u15025 1280                                         u12810 7596  
                                       u13290 2108                                         u13450 466E  
                                       u13530 2E98                                         u13610 2416  
                                       u13531 2E96                                         u15107 0BD0  
                                       u13380 22DA                                         u13540 2EA6  
                                       u13700 2550                                         u14500 752A  
                                       u16020 6304                                         u15220 0CCE  
                                       u14350 7412                                         u14270 5144  
                                       u12830 75DE                                         u13550 2EAC  
                                       u13710 2556                                         u13630 244E  
                                       u15310 0DF0                                         u15230 0D04  
                                       u15150 0C68                                         u15070 0B7E  
                                       u12840 7CB2                                         u13480 46EA  
                                       u13640 2450                                         u14600 37F8  
                                       u14520 371E                                         u15320 0DF2  
                                       u16120 28E2                               __end_of___lomod 6524  
                                       u12930 81AA                                         u13570 2352  
                                       u14610 37FE                                         u15090 0BAE  
                                       u16210 3364                                         u14275 5132  
                                       u13820 769A                                         u13740 3F38  
                                       u12940 85D0                                         u13660 24DC  
                                       u15180 0CAA                                         u14357 7404  
                                       u15237 0CF6                                         u15157 0C5A  
                                       u15077 0B70                                         u14390 3BF6  
                                       u15510 1DF4                                         u12950 85D2  
                                       u12870 859C                                         u13670 2520  
                                       u13590 23DE                                         u13910 07C6  
                                       u14470 628A                                         u16070 6392  
                                       u16150 2F2C                                         u16310 685E  
                                       u12847 7CA4                                         u14711 2AEE  
                                       u15520 1DF6                                         u13760 3FFE  
                                       u12960 8604                                         u12880 859E  
                                       u13920 07C8                                         u14480 62A6  
                                       u15280 0DA8                                         u13665 24CA  
                                       u15097 0BA0                                         u16217 3356  
                                       u13826 769C                                         u15530 1E0E  
                                       u13770 4000                                         u12970 8606  
                                       u13690 2542                                         u13930 07D6  
                                       u14570 37AE                                         u15610 69DA  
                                       u14650 49D6                                         u15290 0DAA  
                                       u17130 3D7C                                         u13691 2540  
                                       u15187 0C9C                                         u12980 7BFE  
                                       u14580 37B0                                         u17300 26F6  
                                       u15380 0E9A                                         u16180 6D58  
                                       u15550 1E3C                                         u12990 7C00  
                                       u13950 0812                                         u14590 37D8  
                                       u14734 2B3E                                         u15470 5C5E  
                                       u15390 0EEE                                         u14735 2B3A  
                                       u14920 52CC                                         u16600 4BDC  
                                       u17080 5022                                         u17320 2730  
                                       u15480 5C64                                         u16360 67B0  
                                       u15570 1E6E                                         u15730 1726  
                                       u16290 58BC                                         u15548 1E10  
                                       u14860 323A                                         u14764 2BAE  
                                       u15900 1986                                         u15820 1836  
                                       u15740 173C                                         u17068 4FE6  
                                       u17340 2760                                         u14925 52C2  
                                       u14765 2BAA                                         u15741 173A  
                                       u17069 4FF8                                         u15477 5C50  
                                       u15397 0EE0                                         u13990 09E4  
                                       u14870 326C                                         u14774 2C14  
                                       u15830 1838                                __CFG_DEBUG$OFF 000000  
                                       u17407 41B4                                         u14695 53D2  
                                       u14775 2C10                                         u15568 1E3E  
                                       u15680 5D8A                                         u14880 328E  
                                       u14696 53D4                                         u15920 19C2  
                                       u15840 1898                                         u17280 26C4  
                                       u17417 41D2                                         u15930 19D8  
                                       u15850 189A                                         u17427 42C4  
                                       u15588 1E70                                         u16468 3656  
                                       u16660 4C86                                         u16840 034A  
                                       u14898 32D0                                         u16850 036C  
                                       u17397 8330                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                   computeFRF@i 002F  
                                       _U1TXB 003DEA                           ??_UART1_rx_vect_isr 0001  
                                       i1l996 7C6E                             ?_NWK_OpenEndpoint 0002  
                                       _OSCEN 0039DD                               __end_of_cmdAddr 8A02  
                                vfpfcnvrt@fmt 0048                                 strtoul@endptr 0036  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 006E  
                                       _TMR0L 003FB6                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                 _Default_ISR 8D78                               __end_of_cmdRecv 8D6C  
                             __end_of_cmdSend 2A9C                     ??_CRC_CalculatedResultGet 000B  
           __size_of_TMR0_SetInterruptHandler 000E                           ___lmul@multiplicand 0006  
                   ?_TMR0_SetInterruptHandler 0002                            ??_NWK_OpenEndpoint 0004  
                            __end_of_TMR0_ISR 8942                             _UART1_tx_vect_isr 89A4  
                             __end_of_get_lqi 6B2A                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                    __end_of_NWK_RouteNextHop 7E44                        cmdSetCADRSSI@atCommand 0076  
                             _DATAEE_ReadByte 8A3E                           ?_implicitHeaderMode 0001  
                        __size_of_cmdSetNaddr 007C                              __end_of_PHY_Init 8D5C  
               nwkRouteSendRouteError@command 002F                         __end_of_Timer0Handler 7C76  
                                       _flags 00DE                          __size_of_cmdSendSink 0002  
                   __size_of_CRC_ReverseValue 0058                                         _errno 0155  
                                       _fputc 7586                               __end_of_isalpha 860C  
                                       _fputs 815E                               __end_of_isdigit 8640  
                       ?_SYS_TimerTaskHandler 0001                                         _nwkIb 0100  
                            __end_of_NWK_Init 7B2A                            __CFG_MCLRE$EXTMCLR 000000  
                          ?_UART1_tx_vect_isr 0001                               __end_of_receive 8218  
                                       _srand 8428                                         atoi@n 0016  
                                       pad@fp 0014                                         atoi@s 0009  
                                       _width 00DA                                         _putch 8D32  
                                       dtoa@d 0021                                         dtoa@i 0041  
                                       dtoa@n 0039                                         dtoa@p 0033  
                                       dtoa@s 0037                                         dtoa@w 0035  
                             __end_of_islower 85A4                               __end_of_isspace 7FE0  
                        __size_of_appDataConf 0022                               __end_of_isupper 85D8  
                                       pclath 003FFA                                         tablat 003FF5  
                            _nwkTxTaskHandler 34DE                             nwkRxSendAck@frame 002A  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 0018                                         stoa@l 001F  
                                       stoa@p 001D                                         stoa@s 000F  
                                       stoa@w 001A                           nwkDataReqTxConf@req 0008  
                                       utoa@d 0021                                         utoa@i 003D  
                                       utoa@n 0035                                         utoa@p 0031  
                                       utoa@w 0033                   nwkTxConvertPhyStatus@status 0004  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 8CCC  
                 _UART1_SetRxInterruptHandler 8CBE                  __size_of_nwkRxServiceDataInd 006C  
                                       xtoa@c 0044                                         xtoa@d 0021  
                                       xtoa@i 0042                                         xtoa@n 003A  
                                       xtoa@p 0036                                         xtoa@w 0038  
                                       xtoa@x 0029               nwkTxAckWaitTimerHandler@restart 0016  
                             __end_of_strcspn 784A                               __end_of_strncmp 4F2E  
                             __end_of_toupper 7C24                              ___lodiv@dividend 0002  
    __end_of_UART1_DefaultFramingErrorHandler 8D7E     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 8D7C                               __end_of_strtoul 7E8A  
                     SX1276WriteBuffer@buffer 0009                           ??_UART1_tx_vect_isr 0001  
                            __end_of_SYS_Init 8CB0                     __end_of_UART1_rx_vect_isr 89E4  
                    __size_of_SPI1_Initialize 001A                    __size_of_setPreambleLength 001A  
                              nwkFrameAlloc@i 0012                                  _toupper$7868 000E  
                           nwkTxConfirm@frame 0002                               ?_setCodingRate4 0001  
                             __initialization 5C6E                    __end_of_NWK_RouteFindEntry 76C6  
                        ??_implicitHeaderMode 0011                                  __end_of_cmdI 8D50  
                                __end_of_idle 8D10                                  __end_of_atoi 4044  
                                __end_of_main 8772                                  __end_of_dtoa 2340  
                                __end_of_rand 5156                             nwkFrameNext@frame 0002  
                 SYS_TimerTaskHandler@elapsed 001E                                  __end_of_stoa 46F8  
                                __end_of_utoa 2EE2                                  __end_of_xtoa 25C0  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                             ?_SYS_TimerStart 0010                           __size_of_SX1276Read 0016  
                       ??_CircularBufferSpace 000C                               cmdSend@destaddr 007A  
                  __end_of_NWK_RouteFreeEntry 8504                              _need_radio_reset 016A  
                            ??_CRC_Initialize 0002                                  ?_UART1_Write 0001  
                              _free_tx_buffer 7CC6                                        ??_cmdI 005E  
                           cmdSetSF@atCommand 0076                                        ??_idle 0011  
                                      ??_atoi 000B                                        ??_main 005E  
                                      ??_dtoa 0029                                        ??_rand 001C  
                              __CFG_PR1WAY$ON 000000                                        ??_stoa 0010  
                                      ??_utoa 0029                                        ??_xtoa 002A  
                               __activetblptr 000003                   __size_of_getSignalBandwidth 0122  
                 __size_of_setSignalBandwidth 03C6          __size_of_UART1_SetTxInterruptHandler 000E  
                         executeATCommand@cmd 00A4                     __end_of_UART1_tx_vect_isr 89C4  
                              __CFG_MVECEN$ON 000000                    __end_of_nwkRxIndicateFrame 32E2  
                             ??_queueLedEvent 001E                           computeFRF@frequency 0023  
                            ___lodiv@quotient 0012                      __end_of_executeATCommand 0640  
                         CRC_ReverseValue@crc 0002                              _UART1_Initialize 689A  
                    ??_CircularBufferPushBack 0016                                _nwkDataReqInit 8D1C  
                       queueLedEvent@duration 001C                  DIO0_Receive_ISR@packetLength 0044  
                         NWK_RouteNextHop@dst 0008                             ??_start_radio_cad 0011  
                         _bootLoadApplication 25C0                  __end_of_nwkRxRejectDuplicate 2CCE  
                __size_of_nwkDataReqSendFrame 0332                                        ?_fputc 0004  
                            ___llmod@dividend 0002                                        STR_100 FFFA  
                                      STR_101 FFFA                                        STR_102 FFB4  
                                      STR_110 FF27                                        ?_fputs 000D  
                                      STR_111 FF27                                        STR_103 FFB4  
                                      STR_112 FFCC                                        STR_120 FFA0  
                                      STR_104 FF84                                        STR_105 FF84  
                                      STR_121 FFA0                                        STR_113 FFCC  
                                      STR_130 FECC                                        STR_122 FFBA  
                                      STR_114 FF8B                                        STR_106 FF59  
                                      STR_115 FF8B                                        STR_123 FFBA  
                                      STR_107 FF59                                        STR_131 FEC0  
                                      STR_124 FFAE                                        STR_116 FF6F  
                                      STR_108 FF49                                        STR_132 FDF3  
                                      STR_117 FF6F                                        STR_125 FFAE  
                                      STR_109 FF49                                        STR_133 FDD7  
                                      STR_118 FFF0                                        STR_134 FF41  
                                      STR_126 FF01                                        STR_127 FF01  
                                      STR_119 FFF0                                        STR_135 FFD2  
                                      STR_128 FEED                                        STR_129 FEED  
                             cmdSend@tempaddr 007F                                        ?_srand 0002  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _T0CON0 003FB8                                        _T0CON1 003FB9  
                       __end_of_nwkFrameAlloc 668E                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                              _processATCommand 3D5A  
                                      _U1CON0 003DF2                      nwkRxHandleIndication@ack 00D9  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                         __size_of_UART1_Read 0046                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _RB0PPS 003A08                            __CFG_PWRTS$PWRT_64 000000  
                                      _RC0PPS 003A10                                        _RC1PPS 003A11  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                              __CFG_WDTCCS$SC 000000                                  loadMACAddr@i 0006  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLE 003A84  
                                      _TABLAT 003FF5                             ?_nwkDataReqTxConf 0004  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 006A  
                            __end_of_cmdBcast 30E2                                        _NVMDAT 0039E3  
                            __end_of_cmdGetSF 8B9E                              __end_of_cmdGetTX 8B88  
                       _UART1_SetErrorHandler 8CE8                              __end_of_cmdNaddr 8B72  
                              placeTimer@prev 000C                                  ?_setSyncWord 0001  
                            __end_of___xxtofl 41A8                              __end_of_cmdSetSF 67EC  
                            __end_of_cmdSetTX 58FC                            ??_nwkDataReqTxConf 0006  
                            __end_of_cmdReset 8D66                            PHY_DataConf@status 0005  
                            set_parity@parity 0004                    __size_of_SPI1_ExchangeByte 001A  
                              __CFG_XINST$OFF 000000                                  ___strtoxl@cp 0031  
                                vfprintf@cfmt 0053                                 ?_radio_engine 0001  
                                ?_PHY_DataInd 0013                                  ?_PHY_DataReq 0011  
                        ?_bootLoadApplication 0001                                        ___flge 5EEA  
                            __end_of_get_rssi 86F6                              __end_of_fhssList FDC5  
                                      ___lmul 7908                                        ___omul 6B2A  
                                   ??___aodiv 0012                                     ??___fladd 0031  
                                   ??___aomod 0012                                        ___wmul 8672  
                                      _cmdMac 7D62                                __CFG_STVREN$ON 000000  
                                   ??___flmul 0018                                     ??___fltol 003D  
                                      _crcObj 01DA                                     ??___lldiv 001E  
                                   ??___lodiv 0012                                     ??___llmod 000A  
                      __end_of_free_tx_buffer 7D14                                     ??___lomod 0012  
                       __size_of_cmdSetParity 008A                                     ??_cmdAddr 005E  
                                      _memcpy 73CE                              ?_TMR0_Initialize 0001  
                    __end_of_nwkRxTaskHandler 673E                                        _memset 445E  
                                   ??_cmdRecv 0002                                     ??_cmdSend 0078  
                            ___strtoxl@endptr 0012                                        clear_0 5CDC  
                                      clear_1 5CEE                                        clear_2 5CFA  
                                      clear_3 5D06                                        clear_4 5D12  
                                      clear_5 5D1E                                        clear_6 5D2A  
                            setCodingRate4@cr 0012                     CircularBufferPushBack@ctx 0013  
                   CircularBufferPushBack@val 0015                 DATAEE_ReadByte_Platform@copy1 000A  
               DATAEE_ReadByte_Platform@copy2 0009                 DATAEE_ReadByte_Platform@copy3 0008  
                                      _timers 00E0                                        _printf 8876  
                                      pad@buf 0016             __size_of_nwkTxAckWaitTimerHandler 0090  
                  __size_of_NWK_GroupIsMember 0032               __size_of_nwkRouteSendRouteError 00E0  
                            ?_SYS_TaskHandler 0001                                        dtoa@fp 001F  
                                      _strchr 70C6                     ?_nwkTxAckWaitTimerHandler 0012  
                     __end_of_DATAEE_ReadByte 8A5C                                     ??_get_lqi 0043  
                            ___strtoxl@prev_a 001B                              __end_of_sendInfo 79C4  
                                      _strlen 7C76                                        _strtok 5ABA  
                                      _strspn 778A                                        _strtol 80E2  
                                      _strstr 5B96                                 cmdSetAES@byte 00A0  
              __size_of_nwkTxConvertPhyStatus 0038                                 cmdSetAES@temp 009C  
               __end_of_nwkTxConvertPhyStatus 8428                                        fputc@c 0004  
                              _PMD_Initialize 88FE                                        fputs@c 0011  
                                      fputs@i 0012                                  __packetIndex 016B  
                                      fputs@s 000D                                     ??_isalpha 0004  
                                   ??_isdigit 0004                        __end_of_nwkDataReqInit 8D28  
              __size_of_nwkRouteFrameReceived 01E2                                     ??_receive 0011  
                     _setSpreadingFactor$8634 0027                 __end_of_nwkRouteFrameReceived 38B0  
                                   ??_islower 0004                                  __mediumconst FCC8  
                                   ??_isspace 0004                                        tblptrh 003FF7  
                                   ??_isupper 0004                                        tblptrl 003FF6  
                                      tblptru 003FF8                   __end_ofNWK_LinearizeLqi@val FDCE  
                                      srand@s 0002                        ??_SYS_TimerTaskHandler 0019  
                                ?_NWK_DataReq 0002                                        stoa@cp 001C  
                                      stoa@fp 000D                          __size_of_loadMACAddr 003C  
                       __end_of_TMR0_CallBack 89A2                              __end_of_vfprintf 778A  
                                      utoa@fp 001F                          processATCommand@data 00AC  
 UART1_SetTxInterruptHandler@InterruptHandler 0002   UART1_SetRxInterruptHandler@InterruptHandler 0002  
    TMR0_SetInterruptHandler@InterruptHandler 0002          __end_of_UART1_SetOverrunErrorHandler 8CDA  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler 8CCC  
                               _curent_parity 0171                     _UART1_DefaultErrorHandler 8D5C  
                                      xtoa@fp 001F                                     ??_strcspn 000C  
                                   ??_strncmp 0008                                     ??_toupper 000A  
                                   ??_strtoul 003A                 __size_of_INTERRUPT_Initialize 0040  
                __size_of_UART1_RxDataHandler 0024                                    ___flge@ff1 0010  
                                  ___flge@ff2 0014                                 cmdSetRFCH@cmd 0076  
                     ??_nwkRouteErrorReceived 000E                                  ___xxtofl@arg 000C  
                                ___xxtofl@exp 000B                             _SYSTEM_Initialize 88DC  
                                ___xxtofl@val 0002                                 cmdSetSF@CHstr 007A  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                        cmdGetRxCnt@atCommand 0002                       __end_of__initialization 5D3E  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0035  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 8460  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 76C6  
                          _getSpreadingFactor 8AAC                                    _cadCounter 00ED  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 5264  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                                  ___fltol@f1 0039                               _PHY_TaskHandler 8D50  
                                _cmdSetParity 6EA0                      ??_queue_serial_led_event 0022  
                     SYS_TimerTaskHandler@cnt 001D                                ??_radio_engine 004B  
                          ??_nwkTxAckReceived 0009              __end_of_nwkRxHandleReceivedFrame 1A16  
                       ??_bootLoadApplication 0030                            __size_of_cmdGetCAD 0016  
                                  _cadTimeOut 00F5                                __pcstackCOMRAM 0001  
                          CRC_Initialize@seed 0005                            __size_of_cmdGetTTL 0002  
                          __size_of___strtoxl 042E                            CRC_Initialize@poly 0003  
                    __end_of_SX1276ReadBuffer 87C2                                 cmdSetTX@CHstr 007D  
                __size_of_nwkFrameCommandInit 0040                        __size_of_cmdGetCADRSSI 001A  
                               cmdSetAddr@cmd 0076                                  __pidataBANK0 8D44  
                                __pidataBANK1 8C32                                  __pidataBANK2 8D28  
                          nwkTxConfirm@status 0004                           ??_SYSTEM_Initialize 0007  
                         ?_get_free_tx_buffer 0002                           ?_getSpreadingFactor 000F  
                                 placeTimer@t 000E                                     ?_TMR0_ISR 0001  
                          __size_of_cmdSetAES 01FC                           ?_setSpreadingFactor 0001  
              nwkRxHandleReceivedFrame@header 0031                            __size_of_cmdSetTTL 0002  
                            _DATAEE_WriteByte 8022                                ivt0x8_undefint 00AC  
                             ?_free_tx_buffer 0002                             PHY_SetPanId@panId 0002  
                          __size_of_cmdRstCAD 0014                                     ?_PHY_Init 0001  
                               __end_of_fputc 75F2                                 cmdSetBaud@ptr 003D  
                               __end_of_fputs 819C                             ??_SPI1_Initialize 0002  
                    nwkRxIndicateFrame@header 00C7                nwkRxHandleReceivedFrame@member 002E  
                               __end_of_srand 8460                                 __end_of_putch 8D3C  
                       SX1276WriteBuffer@addr 000B                    ??_DATAEE_ReadByte_Platform 0008  
                                   ?_NWK_Init 0001                                   receive@size 0011  
        __size_ofnwkFrame@nwkFramePayloadSize 002A                         SX1276WriteBuffer@size 000A  
                      __end_of_PMD_Initialize 8920                         SPI1_ExchangeByte@data 0002  
                               cmdSend@buf_id 0085                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FDCE                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 0082                    __size_of_UART1_tx_vect_isr 0020  
                           ?_DIO0_Receive_ISR 0001                 __end_of_nwkDataReqTaskHandler 72D2  
                            ??_get_timer0base 0004                          __size_of_SX1276Write 0012  
                             ?_nwkDataReqInit 0001                                 cmdSetNaddr@p1 007A  
                               cmdSetNaddr@p2 0078                                  crc16_app@len 0015  
                                crc16_app@ptr 001B                                     ?_SYS_Init 0001  
                              _nwkFrameFrames 05BD                     _UART1_FramingErrorHandler 01E3  
                                  _cmdGetRFCH 8A5C                            ??_DIO0_Receive_ISR 0044  
             __size_of_CircularBufferPushBack 00F4                         __end_of_set_uart_baud 6154  
                                  _cmdGetMode 8C6A                                  _DIA_ReadByte 8854  
                        ??_get_free_tx_buffer 0003                          ??_getSpreadingFactor 0013  
                            _CRC_ReverseValue 7A7C                                  ??_SX1276Read 000D  
                        ??_setSpreadingFactor 0023                                       ??_fputc 0008  
                   __end_of_SYSTEM_Initialize 88FE                                       ??_fputs 0011  
                    __end_of_SYS_TimerStarted 7F58                               __CFG_IVT1WAY$ON 000000  
                                     ??_srand 0004                                       ??_putch 0003  
                                  _cmdSetRFCH 69EC                                 ?_setFrequency 0023  
                      __end_of_SPI1_ReadBlock 8498                                    __pbssBANK0 00DA  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                                    __pbssBANK4 0400  
                                  __pbssBANK5 0500                                    _cmdSetAddr 6CF2  
                                  _cmdSetBaud 74AE                 ?_UART1_SetOverrunErrorHandler 0002  
                      ?_UART1_SetErrorHandler 0002                                    _cmdSetSink 8C5C  
                       __end_of_nwkRouteFrame 5E1A                        _nwkRouteSendRouteError 58FC  
                                  _appDataInd 71CE                            __size_of_initRadio 015E  
                                  crc16_app@i 001D                  __size_of_nwkTxBroadcastFrame 0144  
                                  _atStateVar 00EF                   nwkTxBroadcastFrame@newFrame 0027  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                          CRC_ReverseValue@mask 0007  
                             setTxPower@power 0011                       setPreambleLength@length 0011  
                                     ?___flge 0010              __end_of_TMR0_SetInterruptHandler 8D04  
                                     ?___lmul 0002                            _explicitHeaderMode 8B2C  
                                     ?___omul 0002                                  ??_UART1_Read 0002  
                    __size_of_print_hop_table 000E                                       ?___wmul 0002  
                             _nwkDataReqQueue 00E2                                       ?_cmdMac 0001  
                                  ??_TMR0_ISR 0001                               __CFG_PPS1WAY$ON 000000  
                          NWK_OpenEndpoint@id 0004                          _nwkRxRejectDuplicate 2A9C  
                           _nwkDataReqConfirm 5734                       __size_of_set_timer0base 0020  
                                  ??_PHY_Init 003A                     __size_of_PHY_SetShortAddr 0002  
                         nwkTxAckReceived@ind 0008                                       ?_memcpy 0008  
                                     ?_memset 0002                __size_of_nwkRxHandleIndication 00CE  
                         ___omul@multiplicand 000A                                ___lmul@product 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 8BCA  
                           _SX1276WriteBuffer 880C                 __end_of_nwkRxHandleIndication 6088  
                    __end_of_nwkTxTaskHandler 36CE                            ?_nwkDataReqConfirm 0009  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                                     ?_printf 0055                               ?_PMD_Initialize 0001  
                                     _CRCDATH 003961                                       _CRCDATL 003960  
                           _UART1_Receive_ISR 6BC4                                       _CRCCON0 003968  
                                     _CRCCON1 003969                            __size_of_nwkRxInit 004C  
                         _nwkRxServiceDataInd 751A                            __size_of_nwkTxInit 0042  
                                     ?_strchr 0002                           ?_explicitHeaderMode 0001  
                                     ?_strlen 0002                                       ?_strtok 000F  
                                     ?_strtol 0034                                       ?_strspn 0008  
                                     ?_strstr 000D                                       _CRCXORH 003967  
                                     _CRCXORL 003966                              ?_DATAEE_ReadByte 0002  
                           __end_of_crc16_app 71CE                                 ?_nwkFrameFree 0002  
                          ?_SX1276WriteBuffer 0009                                 ?_nwkFrameInit 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                               ?_nwkFrameNext 0002                                     ?_cmdBcast 0076  
                                     i1l13003 7C50                                       i1l13007 7C5E  
                                   ?_cmdGetSF 0001                                     ?_cmdGetTX 0001  
                           _CRC_8BitDataWrite 8C12                                       i1l12995 7C34  
                                     i1l12999 7C42                                       i2l12335 884E  
                                     i2l13401 83DE                                       i2l13403 83E4  
                                     i2l13425 6C56                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 0044                                     ?_cmdNaddr 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0002                                     ?_cmdSetSF 0076  
                                   ?_cmdSetTX 0076                                 computeFRF@num 002B  
                                   ?_cmdReset 0001                                 appDataInd@ind 0076  
                                  ??_SYS_Init 003A                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 000B                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 04F0                                       _TBLPTRH 003FF7  
                                     _TBLPTRL 003FF6                            ?_CRC_8BitDataWrite 0001  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                    print_hop_table@atCommand 0076                                       _SPI1RXB 003D10  
                                     _NVMADRH 0039E1                                       _NVMADRL 0039E0  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _NVMCON2 0039E6                             __end_of_cmdGetCAD 8BB4  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                 _cmdGetCADRSSI 8A78  
                           __end_of_cmdGetTTL 8D6E                             __end_of___strtoxl 0F5E  
          __size_of_DATAEE_WriteByte_Platform 0044                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000B                        __size_of_cmdSetCADRSSI 00AE  
                                  cmdBcast@p1 007A                                ??_setFrequency 0027  
                  ?_DATAEE_WriteByte_Platform 0006                             __end_of_cmdSetAES 34DE  
                         ??_UART1_Receive_ISR 0001                                     ?_get_rssi 0001  
                             placeTimer@timer 0002                       __end_of_PHY_TaskHandler 8D56  
                            ___lomod@dividend 0002                             __end_of_cmdSetTTL 8D68  
                       nwkTxAckReceived@frame 000D                             __end_of_cmdRstCAD 8BDE  
                             ?_SPI1_ReadBlock 0003                               crc16_app@result 0019  
                          ??_NWK_RouteNextHop 000B                                    _computeFRF 3A50  
                          __end_of_UART1_Read 7ED0                                     NWK_Init@i 0006  
                               ?_nwkGroupInit 0001                           ??_CRC_8BitDataWrite 0002  
                     __size_of_nwkRouteRemove 003C                          DATAEE_WriteByte@bAdd 0002  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 0076  
                        ??_explicitHeaderMode 0011                                       _TXPower 00EA  
                   __size_of_NWK_OpenEndpoint 0020                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 8BF0                                    _dwellTimer 0165  
                                   ?_sendInfo 0001                                    _packetRSSI 0168  
                                     __Hparam 0000                              ??_SYS_TimerStart 0012  
             __size_of_queue_serial_led_event 0054                          __size_of_setSyncWord 0010  
                                     __Lparam 0000                      __end_of_UART1_Initialize 6944  
                      _CircularBufferPushBack 5462                     __end_of_nwkDataReqConfirm 581C  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ??_cmdGetRxCnt 0004                                    cmdSetAES@i 00A3  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 1D5E                                 ??_cmdBootLoad 0076  
                             __size_of___flge 00D0                         ?_nwkRxRejectDuplicate 0012  
                                     ___aodiv 4306                                       ___fladd 1A16  
                                     ___aomod 483C                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 00EE  
                   __end_of_SX1276WriteBuffer 8830                                    cmdSetSF@p1 0078  
                             __size_of___lmul 005E                                    cmdSetSF@p2 007D  
                             __size_of___omul 009A                                       ___flmul 1324  
                                     ___fltol 6154                   __size_of_CircularBufferSize 005E  
                                     ___lldiv 6FB4                               __size_of___wmul 002E  
                                     ___lodiv 59DC                                       ___llmod 7440  
                             __size_of_cmdMac 004C                        __size_of_SYS_TimerInit 000C  
                                     ___lomod 6466                                    cmdSetTX@p1 007A  
                                  cmdSetTX@p2 0078                         nwkRxIndicateFrame@ind 00C9  
                   __end_of_UART1_Receive_ISR 6C5C                                     ?_vfprintf 004E  
                                  cmdSend@cmd 0076                                       cad@temp 0014  
                        __size_of_PHY_DataInd 012C                      __end_of_processATCommand 3ED4  
                        __size_of_PHY_DataReq 005C                                       _cmdAddr 89E4  
                           cmdSetCADRSSI@temp 007F                                       _aes_key 0224  
                                     _cmdRecv 8D6A                                    _current_sf 00EC  
                             _start_radio_cad 8C22                                       _cmdSend 2832  
                                     _channel 00EB                                       __pcinit 5C6E  
                             __size_of_memcpy 0072                               __size_of_memset 0154  
                                     __ramtop 1000                     __end_of_CRC_8BitDataWrite 8C22  
                 __size_of_UART1_Transmit_ISR 003A                       __size_of_PHY_SetChannel 003E  
                              ??_nwkFrameFree 0004                                       __ptext0 874A  
                                     __ptext1 3D5A                                       __ptext2 7B2A  
                                     __ptext3 82CE                                       __ptext4 8498  
                                     __ptext5 78AA                                       __ptext6 5462  
                                     __ptext7 00B2                                       __ptext8 8C40  
                                     __ptext9 8C4E                                ??_nwkFrameInit 0002  
                              ??_nwkFrameNext 0004                               __size_of_printf 0022  
                                     _get_lqi 6A8C                      SPI1_WriteBlock@blockSize 0005  
                                     _fhssReg 0500                             __end_of_initRadio 4306  
                                     cmdMac@i 0077                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strchr 0084                               __size_of_strlen 0050  
                                  ??_cmdBcast 0078                               __size_of_strtok 00DC  
                             __size_of_strspn 0060                               __size_of_strtol 003E  
                             __size_of_strstr 00D8                                    ??_cmdGetSF 005E  
                                  ??_cmdGetTX 005E                         _OSCILLATOR_Initialize 8B44  
                               ?_nwkRouteInit 0001                                 ??_cmdSetNaddr 005E  
                                __size_of_cad 00C0                                  __size_of_abs 003E  
                                  ??_cmdNaddr 005E                                    _placeTimer 38B0  
                                __size_of_pad 00B6                                       _isalpha 85D8  
                                     _isdigit 860C                                 ??_cmdSendSink 0004  
                                  ??_cmdSetSF 005E                                    ??___xxtofl 0006  
                          _NWK_RouteFindEntry 765E                                       _net_key 0214  
                                  ??_cmdSetTX 005E                                       _receive 81DA  
                                  ??_cmdReset 0002                      nwkFrameCommandInit@frame 0002  
        ??strspn@nwkFrame@nwkFramePayloadSize 0004           ?strspn@nwkFrame@nwkFramePayloadSize 0002  
                             _radio_state_var 0164                                       _islower 8570  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 7F9C  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 85A4                                ?_cmdGetCADRSSI 0001  
                           ?_executeATCommand 00A4                                 ??_appDataConf 0009  
           __size_of_nwkRxHandleReceivedFrame 036E                          __end_of_radio_engine 4CEC  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 0148                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 84CE                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 00F1                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00A6                                       _strcspn 77EA  
                                     _strncmp 4E0E                                       _toupper 7BD2  
                                  ??_get_rssi 0002                           SYS_TimerStart@timer 0010  
                        end_of_initialization 5D3E                           ?_NWK_RouteFindEntry 0002  
                                     _strtoul 7E44                                   ?_cmdSetRFCH 0076  
                                   _SCANHADRH 00397A                                     _SCANHADRL 003979  
                                   _SCANHADRU 00397B                           __implicitHeaderMode 016C  
                              ??_nwkGroupInit 0002                          __size_of_NWK_DataReq 0080  
           __end_of_DATAEE_WriteByte_Platform 7F14                                   ?_cmdSetAddr 0076  
                                   _SCANLADRH 003977                                     _SCANLADRL 003976  
                                 ?_cmdSetBaud 003A                                     _SCANLADRU 003978  
        nwkRxDuplicateRejectionTimerHandler@i 0015                                   ?_cmdSetSink 0001  
                           queueLedEvent@temp 001F                                ___omul@product 0012  
                       ??_nwkRxServiceDataInd 0077                                       memcpy@d 000F  
                                     memcpy@n 000C                                       memcpy@s 0011  
                                     fputc@fp 0006                                   ?_appDataInd 0076  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 8CBE                   _UART1_SetTxInterruptHandler 8CB0  
                                     fputs@fp 000F                                     i1u1264_28 8990  
                 CRC_CalculatedResultGet@mask 000E                           ?_NWK_RouteFreeEntry 0002  
                           __end_of_nwkRxInit 7DFA                            _nwkRxIndicateFrame 30E2  
                 nwkTxDelayTimerHandler@frame 0017                             __end_of_nwkTxInit 8022  
                                  _setTxPower 8720                                     i2u1270_48 6C1A  
                                   i2u1270_49 6C2C                                     i2u1272_48 6C42  
                                   i2u1274_48 89B2                         NWK_RouteNewEntry@iter 0007  
                         nwkRxSendAck@command 002C                                     i2u1268_48 6BEE  
                                   i2u1276_48 89D2                   nwkTxDelayTimerHandler@timer 0012  
                                   i2u1268_49 6C00                                    ??_sendInfo 005E  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                             ___lldiv@divisor 001A                               ___lldiv@counter 0022  
                 __end_of_CircularBufferSpace 84CE                                ??_PHY_DataConf 0005  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                             __end_of_vfpfcnvrt 0B30  
                                  _nwkTxFrame 3BDA                                    _set_parity 784A  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 00BB  
                 __size_of_implicitHeaderMode 0018                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                               _cmdSetCADRSSI 67EC                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                       nwkDataReqTxConf@frame 0004                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 0052                                    ??_vfprintf 0053  
                   __size_of_nwkDataReqTxConf 00A8                                       strchr@c 0004  
                           UART1_Write@txData 0002                           _UART1_RxDataHandler 8830  
                                     strchr@s 0002                         __CFG_WDTCPS$WDTCPS_31 000000  
                  __end_of_getSignalBandwidth 4E0E                                       strlen@a 0004  
                           initRadio@wideRSSI 0038                    __end_of_setSignalBandwidth 1324  
                                     strlen@s 0002                         nwkTxTaskHandler@frame 0016  
                    ?_CRC_CalculatedResultGet 0009                             ?_nwkRxTaskHandler 0001  
                  nwkRxHandleIndication@frame 00D5                                       strspn@c 000A  
                                     strspn@i 000D                                       strtok@p 0157  
                                     strtok@s 000F                                       strtol@s 0034  
                                     strspn@s 0008                                       strstr@h 000D  
                    _TMR0_SetInterruptHandler 8CF6                                       strstr@n 000F  
                                   _PORTBbits 003FCB                          ??_NWK_RouteFreeEntry 0004  
                         __end_of_cmdGetRxCnt 8D70                                ??_nwkRouteInit 0002  
                           ??_print_hop_table 005E                           __end_of_cmdBootLoad 8342  
                          ??_nwkRxTaskHandler 01FC                                    _test_timer 01FA  
                                 ___fladd@grs 0038                        _queue_serial_led_event 7B2A  
                              cmdSetRFCH@temp 007F                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 8308                          ??_nwkRxIndicateFrame 00BD  
                         _nwkFrameCommandInit 8062                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 8D10  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 8062  
                         __end_of_cmdSetNaddr 73CE                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 8D6A  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                                   ___flmul@grs 001E  
                     _nwkRxIndicateFrame$5152 00C1                       _nwkRxIndicateFrame$5153 00C2  
                     _nwkRxIndicateFrame$5154 00C3                       _nwkRxIndicateFrame$5155 00C4  
                     _nwkRxIndicateFrame$5156 00C5                       _nwkRxIndicateFrame$5157 00C6  
                         __end_of_appDataConf 88BA                __size_of_nwkRouteErrorReceived 005C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 8AFA  
               __end_of_nwkRouteErrorReceived 7A7C                              ??_free_tx_buffer 0004  
                           _nwkTxAckWaitTimer 01A2                             get_rssi@temp_rssi 0003  
                    ??_nwkTxDelayTimerHandler 0014                       __end_of_start_radio_cad 8C32  
                      ??_nwkRxRejectDuplicate 0014                    __size_of_nwkDataReqConfirm 00E8  
                        _timer0ReloadVal16bit 01E7                                ?_cmdSetCADRSSI 0076  
                         __size_of_cmdGetRFCH 001C                         CircularBufferSize@ctx 0002  
                        ?_nwkFrameCommandInit 0002                      __end_of_CRC_ReverseValue 7AD4  
                         __size_of_cmdGetMode 000E                    __size_of_SX1276WriteBuffer 0024  
                           ?_SX1276ReadBuffer 0009                                _set_timer0base 8942  
                __end_of_INTERRUPT_Initialize 80E2                       queue_serial_led_event@i 0022  
                     nwkRouteRemove@multicast 000A                              _PHY_SetShortAddr 8D72  
                              __end_of___flge 5FBA                    __size_of_UART1_Receive_ISR 0098  
                        __end_of_setFrequency 4BC6                                __end_of___lmul 7966  
                              __end_of___omul 6BC4                                   vfpfcnvrt@ap 0049  
                                 vfpfcnvrt@cp 0069                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 86A0  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 7DAE  
                          ??_SX1276ReadBuffer 000C                        __size_of_nwkFrameAlloc 00B4  
                         __size_of_cmdSetRFCH 00A0               CircularBufferPushBack@write_pos 001A  
                           __size_of_TMR0_ISR 0022                    __size_of_CRC_8BitDataWrite 0010  
                         __size_of_cmdSetAddr 0092                           __size_of_cmdSetBaud 006C  
                           __size_of_PHY_Init 0006                                __end_of_memcpy 7440  
                      ?_OSCILLATOR_Initialize 0001                           __size_of_cmdSetSink 000E  
                              __end_of_memset 45B2                     __size_of_nwkTxAckReceived 00C0  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 0082  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0056  
                           ??_NWK_TaskHandler 005E                                __end_of_printf 8898  
                         _nwkTxBroadcastFrame 46F8                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 005E                                   ?_placeTimer 0002  
                              __end_of_strchr 714A                                __end_of_strlen 7CC6  
                              __end_of_strtok 5B96                                __end_of_strspn 77EA  
                              __end_of_strtol 8120                                __end_of_strstr 5C6E  
                         start_initialization 5C6E                               ___lodiv@divisor 000A  
                             ___lodiv@counter 001A                      __size_of_TMR0_Initialize 003E  
                       _nwkTxConvertPhyStatus 83F0               __size_of_PIN_MANAGER_Initialize 0088  
                           cmdSetAES@key_type 009F                                ??_NWK_SetPanId 0006  
                                 __end_of_cad 63A6                                   __end_of_abs 81DA  
                               nwkFrameInit@i 0002                                   __end_of_pad 65DA  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0004  
                              ?_SYS_TimerInit 0001                         _nwkRouteFrameReceived 36CE  
                     __size_of_CRC_Initialize 006C                       ?_nwkRouteSendRouteError 002A  
                    __size_of_SYS_TaskHandler 000E                             __size_of_SYS_Init 000E  
                       ??_UART1_RxDataHandler 0001                                 _Timer0Handler 7C24  
                                 putch@txData 0003                                    ivt0x8_base 0008  
               __size_of_SYS_TimerTaskHandler 011A                       NWK_RouteFreeEntry@entry 0002  
                           ?_SYS_TimerStarted 0002                                _nwkRouteRemove 8292  
                               _uart1RxBuffer 0138                                  _msgIDCounter 00F2  
                 __end_of_bootLoadApplication 2832                            ??_SYS_TimerStarted 0004  
                           ___omul@multiplier 0002                                 _uart1TxBuffer 0300  
                            _NWK_OpenEndpoint 8962                               ___llmod@divisor 0006  
                        __end_of_nwkFrameFree 8AAC                          __end_of_nwkFrameInit 88DC  
                   __size_of_DIO0_Receive_ISR 0096                                   ?_setTxPower 0001  
                        __end_of_nwkFrameNext 6FB4                          ?_nwkTxBroadcastFrame 0024  
                             ___llmod@counter 000A                           DATAEE_ReadByte@bAdd 0002  
                              cmdSetNaddr@cmd 0076                        nwkRouteFrameSent@frame 0008  
                               crc16_app@dptr 0013                        nwkRouteFrameSent@entry 000C  
                               crc16_app@seed 0017                              __CFG_LPBOREN$OFF 000000  
                           _nwkRouteFrameSent 5648                        __end_of_set_timer0base 8962  
                                 ___strtoxl@a 002D                                   ___strtoxl@c 0033  
                                 ___strtoxl@s 0010                         ??_nwkFrameCommandInit 0004  
                             NWK_SetAddr@addr 0004                                   vfprintf@fmt 0050  
                                 ?_nwkTxFrame 0024                             nwkRouteRemove@dst 0008  
                                 ?_set_parity 0001               __end_of_CRC_CalculatedResultGet 5EEA  
                                    ??___flge 0018                 nwkTxDelayTimerHandler@restart 0016  
                            ??_PMD_Initialize 0002               __size_of_nwkRouteNormalizeRanks 003A  
                                    ??___lmul 000A                                      ??___omul 0012  
                                 _cmdGetRxCnt 8D6E                                      ??___wmul 0006  
             CRC_CalculatedResultGet@xorValue 0009                                      ??_cmdMac 0076  
                          ?_nwkRouteFrameSent 0008                                   _cmdBootLoad 8308  
                    _nwkTxAckWaitTimerHandler 6D84                               ___strtoxl@limit 0027  
                      __size_of_TMR0_CallBack 0020                             NWK_SetPanId@panId 0004  
                                cmdSetAES@cmd 0076                                   __pdataBANK0 00F9  
                                 __pdataBANK1 01EE                                   __pdataBANK2 02CA  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 8120                          __end_of_nwkGroupInit 87E8  
                                  memset@dest 0002                                      ??_printf 005B  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 0173                                      ??_strchr 0006  
                       __size_of_radio_engine 0126                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                     ___fladd@a 002D  
                                   ___fladd@b 0029                                  cmdSetRFCH@p1 0078  
                                cmdSetRFCH@p2 007D                         PHY_SetChannel@channel 002F  
                              _symbolDuration 014E                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 7352  
                                   ___flmul@a 0014                                     ___flmul@b 0010  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 8D68                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01DF                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01FC                                  cmdSetSF@temp 007F  
              __end_of_nwkRouteSendRouteError 59DC                       nwkRoutePrepareTx@header 0011  
                        setSpreadingFactor@sf 002B                              ___aodiv@dividend 0002  
                           __size_of_cmdBcast 0200                             __size_of_cmdGetSF 0016  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                           __size_of_cmdGetTX 0016                     bootLoadApplication@buf_id 0032  
                                cmdSetAddr@p1 007A                                  cmdSetAddr@p2 0078  
                       _nwkDataReqTaskHandler 7250                           cmdSetBaud@atCommand 003A  
                                   _crc16_app 714A                             __size_of_cmdNaddr 0016  
                        __end_of_PHY_DataConf 837C                                _PHY_SetRxState 8D3C  
                        __end_of_nwkRxSendAck 5462                                   _appDataConf 8898  
                        __end_of_nwkTxConfirm 880C                                  cmdSetTTL@cmd 0002  
                           __size_of___xxtofl 0164                             __size_of_cmdSetSF 00AE  
                           __size_of_cmdSetTX 00E0                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 8B14                      _UART1_RxInterruptHandler 01EB  
                           __size_of_cmdReset 0004                        __end_of_nwkRouteRemove 82CE  
               nwkRxHandleReceivedFrame@frame 0029                   __size_of_get_free_tx_buffer 0062  
                     nwkRxIndicateFrame@frame 00BB                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 0102  
                                cmdSetTX@temp 007C                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 8292             __size_of_DATAEE_ReadByte_Platform 00F2  
                     CRC_ReverseValue@reverse 0005                               _SPI1_WriteBlock 853A  
                                   _atCommand 0234                     ?_DATAEE_ReadByte_Platform 0006  
                                _currentAddr0 00FC                                  _currentAddr1 00FB  
                               _nwkFrameAlloc 65DA                                     _cmdGetCAD 8B9E  
                               setSyncWord@sw 0011                             _nwkRoutePrepareTx 5156  
                         _nwkTxPhyActiveFrame 015B                                  _currentNetID 00FA  
                                   _cmdGetTTL 8D6C                                     ___strtoxl 0B30  
                                _currentMsgID 0170                             __size_of_get_rssi 002A  
                       ??_nwkTxBroadcastFrame 0026                       ?_CircularBufferPushBack 0013  
                                   _cmdSetAES 32E2                  ?_UART1_SetRxInterruptHandler 0002  
             nwkRouteSendRouteError@multicast 002E                                     _cmdSetTTL 8D66  
                       _TMR0_InterruptHandler 01E5                            ?_nwkRoutePrepareTx 000D  
                   __end_of_nwkRouteFrameSent 5734                                     _atoi$7702 0011  
                                   _atoi$7703 0015                                     _atoi$7704 0013  
                                   _cmdRstCAD 8BCA                                     __pnvBANK1 01DF  
                        __end_of_nwkRouteInit 7D62                               ??_cmdSetCADRSSI 005E  
                              _ATTimeoutTimer 00FD                           __size_of_placeTimer 01A0  
                      _PIN_MANAGER_Initialize 703E                                     _dtoa$7199 0031  
                            ?_start_radio_cad 0001                               ?_set_timer0base 0002  
             __size_of_nwkTxDelayTimerHandler 008C                             ?_UART1_Initialize 0001  
                   __size_of_NWK_RouteNextHop 004A          __end_of_UART1_SetFramingErrorHandler 8CE8  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler 8CDA  
                           __size_of_sendInfo 005E                                  _radio_engine 4BC6  
                        __end_of_PHY_SetPanId 8D72                                 __pmediumconst FCC8  
                                   _enableCrc 8BDE                                      ?___aodiv 0002  
                                    ?___fladd 0029                                      ?___aomod 0002  
                         UART1_Read@readValue 0002                           ??_nwkRoutePrepareTx 000F  
                                   __ptext100 6944                                     __ptext101 79C4  
                               nwkGroupInit@i 0002                                     __ptext110 36CE  
                                   __ptext102 8D04                              ___aodiv@quotient 0014  
                                   __ptext111 621E                                     __ptext103 668E  
                                   __ptext200 8962                                     __ptext120 7A20  
                                   __ptext112 5FBA                                     __ptext104 16A8  
                                   __ptext201 7D14                                     __ptext121 8292  
                                   __ptext113 5366                                     __ptext105 46F8  
                                   __ptext210 8CDA                                     __ptext202 87C2  
                                   __ptext130 85D8                                     __ptext122 84CE  
                                   __ptext114 30E2                                     __ptext106 2A9C  
                                   __ptext211 8CE8                                     __ptext203 88BA  
                                   __ptext131 2CCE                                     __ptext123 8876  
                                   __ptext115 86F6                                     __ptext107 8772  
                                   __ptext220 8920                                     __ptext212 8218  
                                   __ptext204 8D1C                                     __ptext140 8D32  
                                   __ptext132 6466                                     __ptext124 7728  
                                   __ptext116 71CE                                     __ptext108 38B0  
                                   __ptext221 8982                                     __ptext213 8CF6  
                                   __ptext205 88DC                                     __ptext141 7F58  
                                   __ptext133 59DC                                     __ptext125 0640  
                                   __ptext117 751A                                     __ptext109 7F14  
                                   __ptext230 8D7C                                     __ptext222 8D74  
                                   __ptext214 8AFA                                     __ptext206 689A  
                                   __ptext150 58FC                                     __ptext142 819C  
                                   __ptext134 45B2                                     __ptext126 2340  
                                   __ptext118 63A6                                     __ptext231 8D5C  
                                   __ptext223 7C24                                     __ptext215 88FE  
                                   __ptext207 8CB0                                     __ptext151 8062  
                                   __ptext143 483C                                     __ptext135 2090  
                                   __ptext127 7BD2                                     __ptext119 6F2A  
                                   __ptext232 8830                                     __ptext224 8D78  
                                   __ptext216 703E                                     __ptext208 8CBE  
                                   __ptext160 765E                                     __ptext152 8A92  
                                   __ptext144 4306                                     __ptext136 6524  
                                   __ptext128 8570                                     __ptext233 0000  
                                   __ptext225 89A4                                     __ptext217 8B44  
                                   __ptext209 8CCC                                     __ptext161 8640  
                                   __ptext153 7250                                     __ptext145 3ED4  
                                   __ptext137 7C76                                     __ptext129 85A4  
                                   __ptext226 83B6                                     __ptext218 80A2  
                                   __ptext170 8D56                                     __ptext162 65DA  
                                   __ptext154 1D5E                                     __ptext146 7F9C  
                                   __ptext138 815E                                     __ptext227 89C4  
                                   __ptext219 75F2                                     __ptext171 41A8  
                                   __ptext163 445E                                     __ptext155 3BDA  
                                   __ptext147 860C                                     __ptext139 7586  
                                   __ptext228 6BC4                                     __ptext180 8AC6  
                                   __ptext172 8428                                     __ptext164 73CE  
                                   __ptext156 5048                                     __ptext148 8672  
                                   __ptext229 8D7A                                     __ptext181 4A9C  
                                   __ptext173 8720                                     __ptext165 5734  
                                   __ptext157 6B2A                                     __ptext149 5D44  
                                   __ptext190 8BB4                                     __ptext182 8504  
                                   __ptext174 5264                                     __ptext166 8898  
                                   __ptext158 5156                                     __ptext191 879A  
                                   __ptext183 81DA                                     __ptext175 0F5E  
                                   __ptext167 7CC6                                     __ptext159 7DFA  
                                   __ptext192 8460                                     __ptext184 8B14  
                                   __ptext176 8AAC                                     __ptext168 8CA2  
                                   __ptext193 8AE0                                     __ptext185 8B2C  
                                   __ptext177 4CEC                                     __ptext169 8D10  
                                   __ptext194 3A50                                     __ptext186 8BDE  
                                   __ptext178 4044                                     __ptext195 7440  
                                   __ptext187 8BF0                                     __ptext179 5EEA  
                                   __ptext196 6FB4                                     __ptext188 880C  
                                   __ptext197 7AD4                                     __ptext189 853A  
                      __end_of_PHY_SetChannel 815E                                     __ptext198 7FE0  
                      __size_of_set_uart_baud 00CC                                     __ptext199 7DAE  
                                    ?___flmul 0010                                      ?___fltol 0039  
                                    ?___lldiv 0016                                      ?___lodiv 0002  
                                    ?___llmod 0002                                      ?___lomod 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 6944  
                                    ?_cmdAddr 0001                         NWK_RouteNextHop@entry 000B  
                                    ?_cmdRecv 0001                                      ?_cmdSend 0076  
                            _uart1RxLastError 0162                             ?_processATCommand 0001  
                               ??_UART1_Write 0002                             __size_of_vfprintf 0062  
                                    ?_get_lqi 0001                        __size_of_nwkRouteFrame 00D6  
                          ??_processATCommand 00A9                               ___lomod@divisor 000A  
                      __CFG_BBSIZE$BBSIZE_512 000000                         _nwkRxHandleIndication 5FBA  
                                   _fhssdebug 0166                               ___lomod@counter 0012  
    __end_of_UART1_DefaultOverrunErrorHandler 8D7C     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 8D7A                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 002A  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 8D44  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 005E                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 8C02  
                                ??_cmdGetMode 005E                        _nwkRouteNormalizeRanks 837C  
                                   _initRadio 41A8                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0083  
                                   cmdSend@p2 0081                           __size_of_nwkTxFrame 0180  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 8982  
                   __end_of_nwkRoutePrepareTx 5264                                __size_of_fputc 006C  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005E  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005E                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 80A2                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F7                __end_of_CircularBufferPushBack 5556  
                                ??_cmdSetSink 005E                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 005E                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 002C  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                           free_tx_buffer@req 0002                                ___wmul@product 0006  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0018                                    ?_cmdSetAES 0076  
                                    _SCANCON0 00397C                                      _EUIDbyte 01BC  
                                  ?_cmdSetTTL 0002                                   _ledTimerVar 015D  
                           ??_SYS_TaskHandler 005E                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                              appDataInd@data 0077                            cmdSetAddr@tempaddr 007C  
                         __CFG_BORV$VBOR_2P45 000000                                   _ledStateVar 0163  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                             _NWK_RouteNewEntry 621E  
                                   _sinkAddr0 016F                                     _sinkAddr1 016E  
               ??_UART1_SetRxInterruptHandler 0004                         __size_of_setFrequency 012A  
                   __size_of_executeATCommand 058E                    ??_TMR0_SetInterruptHandler 0004  
                                    _PIR0bits 0039A0                                     _nwkGroups 0200  
                  __end_of_CircularBufferSize 7908                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                               ??_PHY_DataInd 0014                                     _nwkRxInit 7DAE  
                               ??_PHY_DataReq 0014                               _print_hop_table 8C4E  
                                   _nwkTxInit 7FE0                           ___strtoxl@is_signed 0016  
                          ?_NWK_RouteNewEntry 0002                       _eeprom_write_flags_enum 0174  
                              _ATVersionMajor FDD6                          __end_of_NWK_SetPanId 8A20  
                                  ?_enableCrc 0001                                _ATVersionMinor FDD5  
                     _setSignalBandwidth$8635 002B                            __end_of_cmdGetRFCH 8A78  
                                    _TMR0_ISR 8920                     _DATAEE_WriteByte_Platform 7ED0  
                             ?_PHY_SetChannel 0001                    __end_of_UART1_Transmit_ISR 83F0  
                          __end_of_cmdGetMode 8C78                                      _PHY_Init 8D56  
               ?_UART1_SetFramingErrorHandler 0002                              initRadio@version 0037  
                                   _vfpfcnvrt 0640                                      _NWK_Init 7AD4  
                                 cmdBcast@cmd 0076                                     _txTimeOut 00F3  
                          SPI1_ReadBlock@data 0007                       ?_queue_serial_led_event 0001  
                                   _xtoa$7227 0032                                     _xtoa$7228 0034  
                          NWK_GroupIsMember@i 0006                            __end_of_cmdSetRFCH 6A8C  
                        free_tx_buffer@buf_id 0006                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 63A6  
                          __end_of_cmdSetAddr 6D84                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 751A             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 8C6A                        nwkDataReqSendFrame@req 002A  
                                   _tx_buffer 086A                            __end_of_appDataInd 7250  
                        setSignalBandwidth@bw 002F                                   _loadMACAddr 8256  
                             ?_PHY_SetRxState 0001                        ?_nwkDataReqTaskHandler 0001  
                     __end_of_SPI1_WriteBlock 8570                               ??_Timer0Handler 0001  
                      _nwkTxDelayTimerHandler 6E14                                      _SYS_Init 8CA2  
                         __end_of_UART1_Write 7F9C                         DATAEE_WriteByte@bData 0004  
                               ??_NWK_DataReq 0004                   __end_of_nwkRxServiceDataInd 7586  
                                  ?_initRadio 0001                                  _isspace$7729 0008  
                              _CRC_Initialize 75F2                                ?_TMR0_CallBack 0001  
                                 strtoul@base 0038                                 _set_uart_baud 6088  
                                  vfpfcnvrt@c 0068                              ?_SPI1_Initialize 0001  
                          _getSignalBandwidth 4CEC                            _setSignalBandwidth 0F5E  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 0002  
                       __size_of_nwkFrameFree 001A                                     copy_data0 5C82  
                                   copy_data1 5CA4                                     copy_data2 5CC6  
                       __size_of_nwkFrameInit 0022                         ?_INTERRUPT_Initialize 0001  
                            get_rssi@rssi_reg 0002                         __size_of_nwkFrameNext 008A  
                 nwkDataReqSendFrame@mcHeader 002D              __size_of_CRC_CalculatedResultGet 00D0  
                    __end_of_PHY_SetShortAddr 8D74                                  ??_computeFRF 0023  
               nwkRxRejectDuplicate@freeEntry 001B                             ?_DATAEE_WriteByte 0002  
                                _setFrequency 4A9C                     __size_of_nwkRxTaskHandler 00B0  
                               ??_NWK_SetAddr 0006                        _uart1TxBufferRemaining 01ED  
                              ___strtoxl$7890 001F                                ___strtoxl$7891 0025  
                              ___strtoxl$7892 0021                                ___strtoxl$7893 0023  
                _nwkRxDuplicateRejectionTable 03C0                  _nwkRxDuplicateRejectionTimer 01AF  
                   __end_of_NWK_RouteNewEntry 62E6                                 _nwkRouteFrame 5D44  
                          ??_DATAEE_WriteByte 0005                                   _ledtasksbuf 01C8  
                            _DIO0_Receive_ISR 6C5C                                 _nwkRouteTable 0284  
                         ?_getSignalBandwidth 000F                           ?_setSignalBandwidth 0023  
                  __size_of_nwkRouteFrameSent 00EC                                 ?_cmdSetParity 0076  
                                _uart1RxCount 00E6                    __end_of_implicitHeaderMode 8B2C  
                                    __Hrparam 0000                        __end_of_ATVersionMajor FDD7  
                      __end_of_ATVersionMinor FDD6                             computeFRF@num_mod 0027  
                                   memcpy@tmp 000E                                    ?_nwkRxInit 0001  
                                  vfprintf@ap 0052                                      __Lrparam 0000  
                                  vfprintf@fp 004E                                    ?_nwkTxInit 0001  
                             _NWK_TaskHandler 8C94                         __size_of_nwkGroupInit 0026  
                          __CFG_BOREN$SBORDIS 000000                                ___strtoxl@base 0014  
                             _nwkRxAckControl 0161                                   cmdSetAES@p1 00A1  
                                 cmdSetAES@p2 009A                           __end_of_setSyncWord 8C12  
                              ___strtoxl@sign 002B                                ___strtoxl@skip 002C  
                          cmdSetCADRSSI@CHstr 007A                       ??_OSCILLATOR_Initialize 0002  
                           ?_CRC_ReverseValue 0002                       __size_of_setCodingRate4 0036  
                           appDataInd@dataptr 00B8                __end_of_queue_serial_led_event 7B7E  
                            __size_of___aodiv 0158                              __size_of___fladd 0348  
                nwkRouteErrorReceived@command 000F                              __size_of___aomod 0134  
                 __size_of_NWK_RouteFindEntry 0068                              __size_of___flmul 0384  
                            __size_of___fltol 00CA                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 008A                              __size_of___lodiv 00DE  
                            __size_of___llmod 006E                      processATCommand@data_828 00AB  
                            __size_of___lomod 00BE                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 01FE  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 001E  
                          ??_CRC_ReverseValue 0004   __end_of_nwkRxDuplicateRejectionTimerHandler 7BD2  
__size_of_nwkRxDuplicateRejectionTimerHandler 0054         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 7B7E  
                      nwkRoutePrepareTx@frame 000D                               ___aodiv@divisor 000A  
                                 _SX1276Write 8BF0                           __end_of_PHY_DataInd 4A9C  
                      ?_nwkRxHandleIndication 00D5                           __end_of_PHY_DataReq 7A20  
                            __size_of_cmdRecv 0002                              __size_of_cmdSend 026A  
                 __end_of_nwkDataReqSendFrame 2090                           NWK_LinearizeLqi@val FDC5  
                             ___aodiv@counter 0012                                   cmdSetTX@cmd 0076  
                     __size_of_SYS_TimerStart 0028                          ??_getSignalBandwidth 0013  
                 __size_of_NWK_RouteFreeEntry 0036                      __end_of_NWK_OpenEndpoint 8982  
                        ??_setSignalBandwidth 0027                            __end_of_computeFRF 3BDA  
                       __size_of_PHY_DataConf 003A                         __size_of_nwkRxSendAck 00FC  
                       __size_of_nwkTxConfirm 0024                      _nwkRxHandleReceivedFrame 16A8  
                                    _cmdBcast 2EE2                                  _nwkFrameFree 8A92  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 88BA  
                                    _cmdGetSF 8B88                                  ??_placeTimer 0004  
                                    _cmdGetTX 8B72                                  _nwkFrameNext 6F2A  
                            __size_of_get_lqi 009E                                   _currentMode 016D  
                                    _cmdNaddr 8B5C                                      ___xxtofl 4044  
                                    _cmdSetSF 673E                        __end_of_CRC_Initialize 765E  
                                    _cmdSetTX 581C                                      _cmdReset 8D62  
                           _set_hop_table_ttl 8C40                              __size_of_isalpha 0034  
                            __size_of_isdigit 0034                                      __pivt0x8 0008  
                            __size_of_receive 003E                   nwkRouteSendRouteError@frame 0031  
                                 ??_crc16_app 0019                              __size_of_islower 0034  
                              ?_set_uart_baud 0001                              __size_of_isspace 0044  
                               ?_DIA_ReadByte 0002                               ??_nwkFrameAlloc 0010  
                   __size_of_SX1276ReadBuffer 0028                                      __ptext10 581C  
                                    __ptext11 8D66                                      __ptext20 74AE  
                                    __ptext12 8C5C                                      __ptext21 5ABA  
                                    __ptext13 673E                                      __ptext30 7908  
                                    __ptext22 778A                                      __ptext14 69EC  
                                    __ptext31 8BCA                                      __ptext23 77EA  
                                    __ptext15 6EA0                                      __ptext40 8B88  
                                    __ptext32 8D62                                      __ptext24 6CF2  
                                    __ptext16 7352                                      __ptext41 8D6E  
                                    __ptext33 8D6A                                      __ptext25 32E2  
                                    __ptext17 8C02                                      __ptext50 70C6  
                                    __ptext42 8A5C                                      __ptext34 8B5C  
                                    __ptext26 8D68                                      __ptext18 67EC  
                                    __ptext51 76C6                                      __ptext43 8C6A  
                                    __ptext35 7D62                                      __ptext27 2832  
                                    __ptext19 80E2                                      __ptext60 8854  
                                    __ptext52 72D2                                      __ptext44 8A78  
                                    __ptext36 8D4A                                      __ptext28 7E44  
                                    __ptext61 714A                                      __ptext53 89E4  
                                    __ptext45 8B9E                                      __ptext37 7966  
                                    __ptext29 0B30                                      __ptext70 8D72  
                                    __ptext62 5E1A                                      __ptext54 8C78  
                                    __ptext46 8308                                      __ptext38 8B72  
                                    __ptext71 7ED0                                      __ptext63 7A7C  
                                    __ptext55 7E8A                                      __ptext47 2EE2  
                                    __ptext39 8D6C                                      __ptext80 87E8  
                                    __ptext72 5556                                      __ptext64 8C12  
                                    __ptext56 25C0                                      __ptext48 5B96  
                                    __ptext81 8D50                                      __ptext73 8022  
                                    __ptext65 8D3C                                      __ptext57 6088  
                                    __ptext49 4E0E                                      __ptext90 86CC  
                                    __ptext82 4BC6                                      __ptext74 8A3E  
                                    __ptext66 8120                                      __ptext58 784A  
                                    __ptext91 6A8C                                      __ptext83 62E6  
                                    __ptext75 8C86                                      __ptext67 8A02  
                                    __ptext59 8256                                      __ptext92 6154  
                                    __ptext84 8C22                                      __ptext76 4F2E  
                                    __ptext68 8D70                                      __ptext93 1324  
                                    __ptext85 8942                                      __ptext77 6D84  
                                    __ptext69 8A20                                      __ptext94 1A16  
                                    __ptext86 86A0                                      __ptext78 7B7E  
                                    __ptext95 4970                                      __ptext87 8342  
                                    __ptext79 6E14                                      __ptext96 8C94  
                                    __ptext88 83F0                                      __ptext97 34DE  
                                    __ptext89 6C5C                                      __ptext98 5648  
                                    __ptext99 837C                              __size_of_isupper 0034  
                          ?_set_hop_table_ttl 0076                   __size_of_nwkRxIndicateFrame 0200  
                                 appDataInd@i 00BA                    __size_of_nwkRoutePrepareTx 010E  
                        set_hop_table_ttl@cmd 0076                __size_of_UART1_SetErrorHandler 000E  
                                    _get_rssi 86CC                                      _fhssList FCC9  
               __end_of_UART1_SetErrorHandler 8CF6                         __size_of_nwkRouteInit 004E  
                 DATAEE_WriteByte@GIEBitValue 0005                                 nwkRouteInit@i 0002  
                            __size_of_strcspn 0060                              __size_of_strncmp 0120  
                            __size_of_toupper 0052                      nwkTxBroadcastFrame@frame 0024  
                                 ??_cmdGetCAD 005E                              __size_of_strtoul 0046  
                                    _ledtimer 01DD                                      _ledqueue 0400  
                                 ??_cmdGetTTL 0002                                   ??___strtoxl 0017  
                              ?_nwkRouteFrame 0033                       __end_of_print_hop_table 8C5C  
                                _nwkGroupInit 87C2                               cmdSetCADRSSI@p1 0078  
                             cmdSetCADRSSI@p2 007D                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 7352                                 __size_of_idle 000C  
                               __size_of_atoi 0170                                 __size_of_main 0028  
                               __size_of_dtoa 02B0                           ??_set_hop_table_ttl 005E  
                               __size_of_rand 010E                                   ??_cmdSetAES 0078  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005E  
                               __size_of_stoa 0146                                 __size_of_utoa 0214  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 0280                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 005E                               cmdSetAES@AESstr 007A  
        __end_of_TMR0_DefaultInterruptHandler 8D76         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 8D74                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 7966                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDD5                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDD4                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 7A20                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                    nwkRouteFrameReceived@frame 000B  
                         sendOKMessage@F16637 01F5                     _UART1_OverrunErrorHandler 01E1  
                         __end_of_NWK_SetAddr 8A3E                            __end_of_placeTimer 3A50  
                                ??_set_parity 0002                              _NWK_RouteNextHop 7DFA  
                                   stoa@F1139 01EE  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                                ?_cmdGetRxCnt 0002                                   ??_enableCrc 0011  
                                _PHY_DataConf 8342                                  _nwkRxSendAck 5366  
                                _nwkTxConfirm 87E8                  __end_of_SYS_TimerTaskHandler 5048  
                   __size_of_SYS_TimerStarted 0044                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 003A  
                                  strtol@base 0036                 __size_of_nwkRxRejectDuplicate 0232  
                                    _vfprintf 7728                                     printf@fmt 0055  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 8C78  
                       cmdSetParity@atCommand 0076                                      _syncList 02CA  
               nwkTxAckWaitTimerHandler@timer 0012                           setFrequency@num_mod 0027  
                                 _UART1_Write 7F58              __end_of_DATAEE_ReadByte_Platform 5648  
                            ___aomod@dividend 0002                     __end_of_set_hop_table_ttl 8C4E  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 8854  
                              _vfpfcnvrt$7242 006C                                  _nwkRouteInit 7D14  
                                ?_cmdSetNaddr 0076                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00E9  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00E7  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0340  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00E8  
                                    memcpy@d1 0008                            __end_of_setTxPower 874A  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 8A92                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                                  ?_appDataConf 0007  
                                    isalpha@c 0002                                      isdigit@c 0002  
                      ??_INTERRUPT_Initialize 0002                           DIO0_Receive_ISR@ind 0046  
                         ??_UART1_is_rx_ready 0002                                  _PHY_SetPanId 8D70  
                                  _SX1276Read 8BB4                            __end_of_nwkTxFrame 3D5A  
                          __end_of_set_parity 78AA                      __end_of_nwkDataReqTxConf 69EC  
                                    intlevel1 0000                                      intlevel2 0000  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _get_timer0base 86A0                     __size_of_nwkTxTaskHandler 01F0  
                      NWK_RouteNewEntry@entry 0009                       __end_of_NWK_TaskHandler 8CA2  
                                    islower@c 0002                              ??_set_timer0base 0006  
                                    isspace@c 0002                   __end_of_nwkFrameCommandInit 80A2  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 00C8                                   _setSyncWord 8C02  
                           __CFG_CLKOUTEN$OFF 000000                         __size_of_NWK_SetPanId 001E  
                                    isupper@c 0002                                     strncmp@_l 0002  
                                   strncmp@_r 0004                              _executeATCommand 00B2  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 0076                            set_timer0base@tval 0004  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 0128  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkTxDelayTimer 0195  
                           _setPreambleLength 8AC6                                   _PHY_DataInd 4970  
                                 _PHY_DataReq 79C4                          PHY_SetShortAddr@addr 0002  
                __size_of_bootLoadApplication 0272                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                                     strtok@sep 0011  
                                    printf@ap 005D                     __end_of_UART1_is_rx_ready 8C86  
                                  _UART1_Read 7E8A  UART1_SetFramingErrorHandler@interruptHandler 0002  
                          ?_setPreambleLength 0011             __end_of_UART1_DefaultErrorHandler 8D62  
                             ___aomod@divisor 000A                      nwkRouteErrorReceived@ind 000D  
                                 ??_vfpfcnvrt 004A                                      stoa@nuls 0011  
                             ___aomod@counter 0012                           SPI1_WriteBlock@data 0007  
                     ??_nwkTxConvertPhyStatus 0002                       __size_of_free_tx_buffer 004E  
                     ??_nwkRouteFrameReceived 000D                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_4705 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 00E4                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                                   _uart_parity 0172  
                             _TMR0_Initialize 8218                               ??_set_uart_baud 0002  
                                    strcspn@c 000A                                      strcspn@i 000D  
                                    strcspn@s 0008                             _current_baud_rate 0152  
                  __end_of_get_free_tx_buffer 7728                                      strncmp@l 0009  
                                    strncmp@n 0006                    __end_of_getSpreadingFactor 8AC6  
                                    strncmp@r 000B                                      toupper@c 0008  
                  __end_of_setSpreadingFactor 5366                     __size_of_UART1_Initialize 00AA  
                    DIO0_Receive_ISR@irqFlags 0045                               _SYS_TaskHandler 8C86  
                                 _NWK_DataReq 72D2                                      strstr@nl 0011  
                     __size_of_nwkDataReqInit 000C                                      strtoul@s 0034  
                     _CRC_CalculatedResultGet 5E1A                      _UART1_TxInterruptHandler 01E9  
                 __end_of_nwkTxBroadcastFrame 483C                                 _queueLedEvent 82CE  
                                _NWK_SetPanId 8A02                        __end_of_get_timer0base 86CC  
                               ___fladd@signs 0035                           __end_of_Default_ISR 8D7A  
                             ??_nwkRouteFrame 0035                               cmdSetRFCH@CHstr 007A  
                   __size_of_processATCommand 017A                                  ___aodiv@sign 0013  
                            _nwkRxTaskHandler 668E                __end_of_PIN_MANAGER_Initialize 70C6  
                     SPI1_ReadBlock@blockSize 0005                         NWK_RouteFindEntry@dst 0002  
                                ___fladd@aexp 0036                                  ___fladd@bexp 0037  
                                 _NWK_SetAddr 8A20                                cmdBcast@buf_id 007C  
                            ?_print_hop_table 0076           __end_ofnwkFrame@nwkFramePayloadSize 8720  
                 nwkFrame@nwkFramePayloadSize 86F6                      __end_of_nwkTxAckReceived 6466  
                ?_UART1_SetTxInterruptHandler 0002                        ?_nwkRouteErrorReceived 000D  
                          _eeprom_write_flags 015F                              ??_PHY_SetChannel 002F  
                   __end_of_setPreambleLength 8AE0                                  ___aomod@sign 0013  
                         NWK_RouteFindEntry@i 0007                      get_free_tx_buffer@buf_id 0002  
                  __end_of_spi1_configuration FDD3                    nwkRxRejectDuplicate@header 0012  
              CRC_CalculatedResultGet@reverse 0010                 CRC_CalculatedResultGet@result 0011  
                       __end_of_cmdSetCADRSSI 689A  
